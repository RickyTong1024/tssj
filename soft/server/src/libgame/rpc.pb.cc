// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

#include "rpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_rpc_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_error;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_request;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_activity_reward;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_fight_equip;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_fight_pet;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_fight_role;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_fight_treasure;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_guild_fight_info;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_huodong;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_guild_look_bushu;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_pvp_match;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_response;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_tmsg_activity;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_rpc_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_tmsg_player_fight_player;
}  // namespace protobuf_rpc_2eproto
namespace rpcproto {
class rpcDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<rpc>
      _instance;
} _rpc_default_instance_;
class requestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<request>
      _instance;
} _request_default_instance_;
class errorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<error>
      _instance;
} _error_default_instance_;
class responseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<response>
      _instance;
} _response_default_instance_;
class tmsg_req_libaoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_libao>
      _instance;
} _tmsg_req_libao_default_instance_;
class tmsg_rep_libaoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_libao>
      _instance;
} _tmsg_rep_libao_default_instance_;
class tmsg_gonggaoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_gonggao>
      _instance;
} _tmsg_gonggao_default_instance_;
class tmsg_req_login_heitaoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_login_heitao>
      _instance;
} _tmsg_req_login_heitao_default_instance_;
class tmsg_rep_login_heitaoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_login_heitao>
      _instance;
} _tmsg_rep_login_heitao_default_instance_;
class tmsg_req_recharge_heitaoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_recharge_heitao>
      _instance;
} _tmsg_req_recharge_heitao_default_instance_;
class tmsg_player_voteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_player_vote>
      _instance;
} _tmsg_player_vote_default_instance_;
class tmsg_req_new_huodongDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_new_huodong>
      _instance;
} _tmsg_req_new_huodong_default_instance_;
class tmsg_huodongDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_huodong>
      _instance;
} _tmsg_huodong_default_instance_;
class tmsg_rep_new_huodongDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_new_huodong>
      _instance;
} _tmsg_rep_new_huodong_default_instance_;
class tmsg_kickDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_kick>
      _instance;
} _tmsg_kick_default_instance_;
class tmsg_activity_rewardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_activity_reward>
      _instance;
} _tmsg_activity_reward_default_instance_;
class tmsg_activityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_activity>
      _instance;
} _tmsg_activity_default_instance_;
class tmsg_activity_groupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_activity_group>
      _instance;
} _tmsg_activity_group_default_instance_;
class tmsg_req_recharge_appleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_recharge_apple>
      _instance;
} _tmsg_req_recharge_apple_default_instance_;
class tmsg_rep_recharge_appleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_recharge_apple>
      _instance;
} _tmsg_rep_recharge_apple_default_instance_;
class tmsg_fight_equipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_fight_equip>
      _instance;
} _tmsg_fight_equip_default_instance_;
class tmsg_fight_treasureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_fight_treasure>
      _instance;
} _tmsg_fight_treasure_default_instance_;
class tmsg_fight_roleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_fight_role>
      _instance;
} _tmsg_fight_role_default_instance_;
class tmsg_fight_petDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_fight_pet>
      _instance;
} _tmsg_fight_pet_default_instance_;
class tmsg_player_fight_playerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_player_fight_player>
      _instance;
} _tmsg_player_fight_player_default_instance_;
class tmsg_player_fight_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_player_fight_info>
      _instance;
} _tmsg_player_fight_info_default_instance_;
class tmsg_req_pvp_matchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_pvp_match>
      _instance;
} _tmsg_req_pvp_match_default_instance_;
class tmsg_rep_pvp_matchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_pvp_match>
      _instance;
} _tmsg_rep_pvp_match_default_instance_;
class tmsg_req_pvp_fightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_pvp_fight>
      _instance;
} _tmsg_req_pvp_fight_default_instance_;
class tmsg_rep_pvp_fightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_pvp_fight>
      _instance;
} _tmsg_rep_pvp_fight_default_instance_;
class tmsg_req_pvp_rewardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_pvp_reward>
      _instance;
} _tmsg_req_pvp_reward_default_instance_;
class tmsg_rep_pvp_rewardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_pvp_reward>
      _instance;
} _tmsg_rep_pvp_reward_default_instance_;
class tmsg_req_team_loginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_team_login>
      _instance;
} _tmsg_req_team_login_default_instance_;
class tmsg_rep_team_loginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_team_login>
      _instance;
} _tmsg_rep_team_login_default_instance_;
class tmsg_req_team_pullDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_team_pull>
      _instance;
} _tmsg_req_team_pull_default_instance_;
class tmsg_rep_team_pushDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_team_push>
      _instance;
} _tmsg_rep_team_push_default_instance_;
class tmsg_team_inviteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_team_invite>
      _instance;
} _tmsg_team_invite_default_instance_;
class tmsg_req_bingyuan_buyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_bingyuan_buy>
      _instance;
} _tmsg_req_bingyuan_buy_default_instance_;
class tmsg_req_bingyuan_fightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_bingyuan_fight>
      _instance;
} _tmsg_req_bingyuan_fight_default_instance_;
class tmsg_rep_bingyuan_fightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_bingyuan_fight>
      _instance;
} _tmsg_rep_bingyuan_fight_default_instance_;
class tmsg_req_ds_fightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_ds_fight>
      _instance;
} _tmsg_req_ds_fight_default_instance_;
class tmsg_rep_ds_fightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_ds_fight>
      _instance;
} _tmsg_rep_ds_fight_default_instance_;
class tmsg_req_mofang_pointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_mofang_point>
      _instance;
} _tmsg_req_mofang_point_default_instance_;
class tmsg_rep_mofang_pointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_mofang_point>
      _instance;
} _tmsg_rep_mofang_point_default_instance_;
class tmsg_req_invite_codeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_invite_code>
      _instance;
} _tmsg_req_invite_code_default_instance_;
class tmsg_rep_invite_codeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_invite_code>
      _instance;
} _tmsg_rep_invite_code_default_instance_;
class tmsg_req_invite_code_inputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_invite_code_input>
      _instance;
} _tmsg_req_invite_code_input_default_instance_;
class tmsg_rep_invite_levelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_invite_level>
      _instance;
} _tmsg_rep_invite_level_default_instance_;
class tmsg_req_guild_pvp_baomingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_guild_pvp_baoming>
      _instance;
} _tmsg_req_guild_pvp_baoming_default_instance_;
class tmsg_rep_guild_pvp_baomingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_guild_pvp_baoming>
      _instance;
} _tmsg_rep_guild_pvp_baoming_default_instance_;
class tmsg_req_guild_pvp_bushuDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_guild_pvp_bushu>
      _instance;
} _tmsg_req_guild_pvp_bushu_default_instance_;
class tmsg_rep_guild_pvp_bushuDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_guild_pvp_bushu>
      _instance;
} _tmsg_rep_guild_pvp_bushu_default_instance_;
class tmsg_rep_guild_look_bushuDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_guild_look_bushu>
      _instance;
} _tmsg_rep_guild_look_bushu_default_instance_;
class tmsg_rep_guild_jinrizhanjiDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_guild_jinrizhanji>
      _instance;
} _tmsg_rep_guild_jinrizhanji_default_instance_;
class tmsg_req_guild_fightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_guild_fight>
      _instance;
} _tmsg_req_guild_fight_default_instance_;
class tmsg_rep_guild_fightDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_guild_fight>
      _instance;
} _tmsg_rep_guild_fight_default_instance_;
class tmsg_req_guild_lookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_guild_look>
      _instance;
} _tmsg_req_guild_look_default_instance_;
class tmsg_guild_fight_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_guild_fight_info>
      _instance;
} _tmsg_guild_fight_info_default_instance_;
class tmsg_rep_guild_fight_infoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_guild_fight_info>
      _instance;
} _tmsg_rep_guild_fight_info_default_instance_;
class tmsg_rep_guild_gongpo_rewardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_guild_gongpo_reward>
      _instance;
} _tmsg_rep_guild_gongpo_reward_default_instance_;
class tmsg_push_guild_matchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_push_guild_match>
      _instance;
} _tmsg_push_guild_match_default_instance_;
class tmsg_rep_guild_fight_rewardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_guild_fight_reward>
      _instance;
} _tmsg_rep_guild_fight_reward_default_instance_;
class tmsg_req_guild_target_rewardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_guild_target_reward>
      _instance;
} _tmsg_req_guild_target_reward_default_instance_;
class tmsg_rep_guild_target_rewardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_rep_guild_target_reward>
      _instance;
} _tmsg_rep_guild_target_reward_default_instance_;
class tmsg_req_libao_exchangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<tmsg_req_libao_exchange>
      _instance;
} _tmsg_req_libao_exchange_default_instance_;
}  // namespace rpcproto
namespace protobuf_rpc_2eproto {
static void InitDefaultsrpc() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_rpc_default_instance_;
    new (ptr) ::rpcproto::rpc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::rpc::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_rpc =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsrpc}, {
      &protobuf_rpc_2eproto::scc_info_request.base,
      &protobuf_rpc_2eproto::scc_info_response.base,}};

static void InitDefaultsrequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_request_default_instance_;
    new (ptr) ::rpcproto::request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsrequest}, {}};

static void InitDefaultserror() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_error_default_instance_;
    new (ptr) ::rpcproto::error();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::error::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_error =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultserror}, {}};

static void InitDefaultsresponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_response_default_instance_;
    new (ptr) ::rpcproto::response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsresponse}, {
      &protobuf_rpc_2eproto::scc_info_error.base,}};

static void InitDefaultstmsg_req_libao() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_libao_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_libao();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_libao::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_libao =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_libao}, {}};

static void InitDefaultstmsg_rep_libao() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_libao_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_libao();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_libao::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_libao =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_libao}, {}};

static void InitDefaultstmsg_gonggao() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_gonggao_default_instance_;
    new (ptr) ::rpcproto::tmsg_gonggao();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_gonggao::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_gonggao =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_gonggao}, {}};

static void InitDefaultstmsg_req_login_heitao() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_login_heitao_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_login_heitao();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_login_heitao::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_login_heitao =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_login_heitao}, {}};

static void InitDefaultstmsg_rep_login_heitao() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_login_heitao_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_login_heitao();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_login_heitao::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_login_heitao =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_login_heitao}, {}};

static void InitDefaultstmsg_req_recharge_heitao() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_recharge_heitao_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_recharge_heitao();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_recharge_heitao::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_recharge_heitao =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_recharge_heitao}, {}};

static void InitDefaultstmsg_player_vote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_player_vote_default_instance_;
    new (ptr) ::rpcproto::tmsg_player_vote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_player_vote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_player_vote =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_player_vote}, {}};

static void InitDefaultstmsg_req_new_huodong() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_new_huodong_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_new_huodong();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_new_huodong::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_new_huodong =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_new_huodong}, {}};

static void InitDefaultstmsg_huodong() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_huodong_default_instance_;
    new (ptr) ::rpcproto::tmsg_huodong();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_huodong::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_huodong =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_huodong}, {}};

static void InitDefaultstmsg_rep_new_huodong() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_new_huodong_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_new_huodong();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_new_huodong::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_tmsg_rep_new_huodong =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultstmsg_rep_new_huodong}, {
      &protobuf_rpc_2eproto::scc_info_tmsg_huodong.base,}};

static void InitDefaultstmsg_kick() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_kick_default_instance_;
    new (ptr) ::rpcproto::tmsg_kick();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_kick::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_kick =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_kick}, {}};

static void InitDefaultstmsg_activity_reward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_activity_reward_default_instance_;
    new (ptr) ::rpcproto::tmsg_activity_reward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_activity_reward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_activity_reward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_activity_reward}, {}};

static void InitDefaultstmsg_activity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_activity_default_instance_;
    new (ptr) ::rpcproto::tmsg_activity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_activity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_tmsg_activity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultstmsg_activity}, {
      &protobuf_rpc_2eproto::scc_info_tmsg_activity_reward.base,}};

static void InitDefaultstmsg_activity_group() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_activity_group_default_instance_;
    new (ptr) ::rpcproto::tmsg_activity_group();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_activity_group::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_tmsg_activity_group =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultstmsg_activity_group}, {
      &protobuf_rpc_2eproto::scc_info_tmsg_activity.base,}};

static void InitDefaultstmsg_req_recharge_apple() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_recharge_apple_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_recharge_apple();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_recharge_apple::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_recharge_apple =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_recharge_apple}, {}};

static void InitDefaultstmsg_rep_recharge_apple() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_recharge_apple_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_recharge_apple();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_recharge_apple::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_recharge_apple =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_recharge_apple}, {}};

static void InitDefaultstmsg_fight_equip() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_fight_equip_default_instance_;
    new (ptr) ::rpcproto::tmsg_fight_equip();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_fight_equip::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_fight_equip =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_fight_equip}, {}};

static void InitDefaultstmsg_fight_treasure() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_fight_treasure_default_instance_;
    new (ptr) ::rpcproto::tmsg_fight_treasure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_fight_treasure::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_fight_treasure =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_fight_treasure}, {}};

static void InitDefaultstmsg_fight_role() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_fight_role_default_instance_;
    new (ptr) ::rpcproto::tmsg_fight_role();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_fight_role::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_fight_role =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_fight_role}, {}};

static void InitDefaultstmsg_fight_pet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_fight_pet_default_instance_;
    new (ptr) ::rpcproto::tmsg_fight_pet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_fight_pet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_fight_pet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_fight_pet}, {}};

static void InitDefaultstmsg_player_fight_player() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_player_fight_player_default_instance_;
    new (ptr) ::rpcproto::tmsg_player_fight_player();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_player_fight_player::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_tmsg_player_fight_player =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultstmsg_player_fight_player}, {
      &protobuf_rpc_2eproto::scc_info_tmsg_fight_role.base,
      &protobuf_rpc_2eproto::scc_info_tmsg_fight_equip.base,
      &protobuf_rpc_2eproto::scc_info_tmsg_fight_treasure.base,
      &protobuf_rpc_2eproto::scc_info_tmsg_fight_pet.base,}};

static void InitDefaultstmsg_player_fight_info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_player_fight_info_default_instance_;
    new (ptr) ::rpcproto::tmsg_player_fight_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_player_fight_info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_tmsg_player_fight_info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultstmsg_player_fight_info}, {
      &protobuf_rpc_2eproto::scc_info_tmsg_player_fight_player.base,}};

static void InitDefaultstmsg_req_pvp_match() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_pvp_match_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_pvp_match();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_pvp_match::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_pvp_match =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_pvp_match}, {}};

static void InitDefaultstmsg_rep_pvp_match() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_pvp_match_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_pvp_match();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_pvp_match::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_pvp_match =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_pvp_match}, {}};

static void InitDefaultstmsg_req_pvp_fight() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_pvp_fight_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_pvp_fight();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_pvp_fight::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_tmsg_req_pvp_fight =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultstmsg_req_pvp_fight}, {
      &protobuf_rpc_2eproto::scc_info_tmsg_player_fight_player.base,}};

static void InitDefaultstmsg_rep_pvp_fight() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_pvp_fight_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_pvp_fight();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_pvp_fight::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_pvp_fight =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_pvp_fight}, {}};

static void InitDefaultstmsg_req_pvp_reward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_pvp_reward_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_pvp_reward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_pvp_reward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_pvp_reward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_pvp_reward}, {}};

static void InitDefaultstmsg_rep_pvp_reward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_pvp_reward_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_pvp_reward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_pvp_reward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_tmsg_rep_pvp_reward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultstmsg_rep_pvp_reward}, {
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_pvp_match.base,}};

static void InitDefaultstmsg_req_team_login() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_team_login_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_team_login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_team_login::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_tmsg_req_team_login =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultstmsg_req_team_login}, {
      &protobuf_rpc_2eproto::scc_info_tmsg_player_fight_player.base,}};

static void InitDefaultstmsg_rep_team_login() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_team_login_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_team_login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_team_login::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_team_login =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_team_login}, {}};

static void InitDefaultstmsg_req_team_pull() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_team_pull_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_team_pull();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_team_pull::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_team_pull =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_team_pull}, {}};

static void InitDefaultstmsg_rep_team_push() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_team_push_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_team_push();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_team_push::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_team_push =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_team_push}, {}};

static void InitDefaultstmsg_team_invite() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_team_invite_default_instance_;
    new (ptr) ::rpcproto::tmsg_team_invite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_team_invite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_team_invite =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_team_invite}, {}};

static void InitDefaultstmsg_req_bingyuan_buy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_bingyuan_buy_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_bingyuan_buy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_bingyuan_buy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_bingyuan_buy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_bingyuan_buy}, {}};

static void InitDefaultstmsg_req_bingyuan_fight() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_bingyuan_fight_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_bingyuan_fight();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_bingyuan_fight::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_bingyuan_fight =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_bingyuan_fight}, {}};

static void InitDefaultstmsg_rep_bingyuan_fight() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_bingyuan_fight_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_bingyuan_fight();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_bingyuan_fight::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_bingyuan_fight =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_bingyuan_fight}, {}};

static void InitDefaultstmsg_req_ds_fight() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_ds_fight_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_ds_fight();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_ds_fight::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_ds_fight =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_ds_fight}, {}};

static void InitDefaultstmsg_rep_ds_fight() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_ds_fight_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_ds_fight();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_ds_fight::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_ds_fight =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_ds_fight}, {}};

static void InitDefaultstmsg_req_mofang_point() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_mofang_point_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_mofang_point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_mofang_point::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_mofang_point =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_mofang_point}, {}};

static void InitDefaultstmsg_rep_mofang_point() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_mofang_point_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_mofang_point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_mofang_point::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_mofang_point =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_mofang_point}, {}};

static void InitDefaultstmsg_req_invite_code() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_invite_code_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_invite_code();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_invite_code::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_invite_code =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_invite_code}, {}};

static void InitDefaultstmsg_rep_invite_code() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_invite_code_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_invite_code();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_invite_code::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_invite_code =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_invite_code}, {}};

static void InitDefaultstmsg_req_invite_code_input() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_invite_code_input_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_invite_code_input();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_invite_code_input::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_invite_code_input =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_invite_code_input}, {}};

static void InitDefaultstmsg_rep_invite_level() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_invite_level_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_invite_level();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_invite_level::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_invite_level =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_invite_level}, {}};

static void InitDefaultstmsg_req_guild_pvp_baoming() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_guild_pvp_baoming_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_guild_pvp_baoming();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_guild_pvp_baoming::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_guild_pvp_baoming =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_guild_pvp_baoming}, {}};

static void InitDefaultstmsg_rep_guild_pvp_baoming() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_guild_pvp_baoming_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_guild_pvp_baoming();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_guild_pvp_baoming::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_guild_pvp_baoming =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_guild_pvp_baoming}, {}};

static void InitDefaultstmsg_req_guild_pvp_bushu() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_guild_pvp_bushu_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_guild_pvp_bushu();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_guild_pvp_bushu::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_guild_pvp_bushu =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_guild_pvp_bushu}, {}};

static void InitDefaultstmsg_rep_guild_pvp_bushu() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_guild_pvp_bushu_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_guild_pvp_bushu();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_guild_pvp_bushu::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_guild_pvp_bushu =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_guild_pvp_bushu}, {}};

static void InitDefaultstmsg_rep_guild_look_bushu() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_guild_look_bushu_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_guild_look_bushu();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_guild_look_bushu::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_guild_look_bushu =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_guild_look_bushu}, {}};

static void InitDefaultstmsg_rep_guild_jinrizhanji() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_guild_jinrizhanji_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_guild_jinrizhanji();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_guild_jinrizhanji::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_tmsg_rep_guild_jinrizhanji =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultstmsg_rep_guild_jinrizhanji}, {
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_look_bushu.base,}};

static void InitDefaultstmsg_req_guild_fight() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_guild_fight_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_guild_fight();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_guild_fight::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_tmsg_req_guild_fight =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultstmsg_req_guild_fight}, {
      &protobuf_rpc_2eproto::scc_info_tmsg_player_fight_player.base,}};

static void InitDefaultstmsg_rep_guild_fight() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_guild_fight_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_guild_fight();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_guild_fight::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_guild_fight =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_guild_fight}, {}};

static void InitDefaultstmsg_req_guild_look() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_guild_look_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_guild_look();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_guild_look::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_guild_look =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_guild_look}, {}};

static void InitDefaultstmsg_guild_fight_info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_guild_fight_info_default_instance_;
    new (ptr) ::rpcproto::tmsg_guild_fight_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_guild_fight_info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_guild_fight_info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_guild_fight_info}, {}};

static void InitDefaultstmsg_rep_guild_fight_info() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_guild_fight_info_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_guild_fight_info();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_guild_fight_info::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_tmsg_rep_guild_fight_info =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultstmsg_rep_guild_fight_info}, {
      &protobuf_rpc_2eproto::scc_info_tmsg_guild_fight_info.base,}};

static void InitDefaultstmsg_rep_guild_gongpo_reward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_guild_gongpo_reward_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_guild_gongpo_reward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_guild_gongpo_reward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_guild_gongpo_reward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_guild_gongpo_reward}, {}};

static void InitDefaultstmsg_push_guild_match() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_push_guild_match_default_instance_;
    new (ptr) ::rpcproto::tmsg_push_guild_match();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_push_guild_match::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_push_guild_match =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_push_guild_match}, {}};

static void InitDefaultstmsg_rep_guild_fight_reward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_guild_fight_reward_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_guild_fight_reward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_guild_fight_reward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_guild_fight_reward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_guild_fight_reward}, {}};

static void InitDefaultstmsg_req_guild_target_reward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_guild_target_reward_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_guild_target_reward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_guild_target_reward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_guild_target_reward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_guild_target_reward}, {}};

static void InitDefaultstmsg_rep_guild_target_reward() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_rep_guild_target_reward_default_instance_;
    new (ptr) ::rpcproto::tmsg_rep_guild_target_reward();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_rep_guild_target_reward::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_rep_guild_target_reward =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_rep_guild_target_reward}, {}};

static void InitDefaultstmsg_req_libao_exchange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpcproto::_tmsg_req_libao_exchange_default_instance_;
    new (ptr) ::rpcproto::tmsg_req_libao_exchange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpcproto::tmsg_req_libao_exchange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_tmsg_req_libao_exchange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstmsg_req_libao_exchange}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_rpc.base);
  ::google::protobuf::internal::InitSCC(&scc_info_request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_error.base);
  ::google::protobuf::internal::InitSCC(&scc_info_response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_libao.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_libao.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_gonggao.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_login_heitao.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_login_heitao.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_recharge_heitao.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_player_vote.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_new_huodong.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_huodong.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_new_huodong.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_kick.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_activity_reward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_activity.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_activity_group.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_recharge_apple.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_recharge_apple.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_fight_equip.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_fight_treasure.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_fight_role.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_fight_pet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_player_fight_player.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_player_fight_info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_pvp_match.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_pvp_match.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_pvp_fight.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_pvp_fight.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_pvp_reward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_pvp_reward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_team_login.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_team_login.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_team_pull.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_team_push.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_team_invite.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_bingyuan_buy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_bingyuan_fight.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_bingyuan_fight.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_ds_fight.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_ds_fight.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_mofang_point.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_mofang_point.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_invite_code.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_invite_code.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_invite_code_input.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_invite_level.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_guild_pvp_baoming.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_guild_pvp_baoming.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_guild_pvp_bushu.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_guild_pvp_bushu.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_guild_look_bushu.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_guild_jinrizhanji.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_guild_fight.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_guild_fight.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_guild_look.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_guild_fight_info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_guild_fight_info.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_guild_gongpo_reward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_push_guild_match.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_guild_fight_reward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_guild_target_reward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_rep_guild_target_reward.base);
  ::google::protobuf::internal::InitSCC(&scc_info_tmsg_req_libao_exchange.base);
}

::google::protobuf::Metadata file_level_metadata[65];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::rpc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::rpc, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::rpc, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::rpc, rep_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::request, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::request, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::request, opcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::request, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::error, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::error, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::response, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::response, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::response, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::response, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_libao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_libao, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_libao, pt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_libao, use_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_libao, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_libao, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_libao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_libao, res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_libao, pc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_libao, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_libao, value1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_libao, value2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_libao, value3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_libao, chongzi_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_gonggao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_gonggao, gonggao_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_gonggao, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_login_heitao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_login_heitao, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_login_heitao, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_login_heitao, pt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_login_heitao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_login_heitao, errres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_login_heitao, errmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_recharge_heitao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_recharge_heitao, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_recharge_heitao, sid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_recharge_heitao, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_recharge_heitao, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_recharge_heitao, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_recharge_heitao, huodong_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_recharge_heitao, entry_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_vote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_vote, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_vote, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_vote, server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_vote, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_vote, renqi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_vote, acc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_new_huodong, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_new_huodong, server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_new_huodong, pt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_huodong, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_huodong, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_huodong, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_huodong, end_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_new_huodong, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_new_huodong, huodong_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_kick, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_kick, guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, arg1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, arg2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, arg3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, arg4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, arg5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, arg6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, arg7_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, arg8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, value1s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, value2s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, value3s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_reward, show_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity, kaifu_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity, kaifu_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity, subtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity, show_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity, noshow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity, kaikai_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity, rewards_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_group, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_group, activitys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_group, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_group, isjieri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_group, item_name1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_group, item_name2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_group, item_des1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_activity_group, item_des2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_recharge_apple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_recharge_apple, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_recharge_apple, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_recharge_apple, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_recharge_apple, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_recharge_apple, rid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_recharge_apple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_recharge_apple, res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_recharge_apple, orderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_recharge_apple, product_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_equip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_equip, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_equip, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_equip, template_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_equip, role_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_equip, enhance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_equip, rand_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_equip, rand_values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_equip, stone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_equip, jilian_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_equip, star_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_treasure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_treasure, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_treasure, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_treasure, template_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_treasure, role_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_treasure, enhance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_treasure, jilian_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_treasure, star_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_treasure, star_exp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_role, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_role, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_role, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_role, template_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_role, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_role, jlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_role, glevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_role, pinzhi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_role, jskill_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_role, dress_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_role, zhuangbeis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_role, treasures_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_role, dress_on_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_role, bskill_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_role, pet_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_pet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_pet, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_pet, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_pet, template_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_pet, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_pet, jinjie_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_pet, star_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_pet, jinjie_slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_fight_pet, role_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, roles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, equips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, treasures_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, pets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, template_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, bf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, zhenxing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, guild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, guild_skill_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, guild_skill_levels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, dress_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, dress_achieves_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, pvp_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, duixing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, duixing_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, huiyi_jihuos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, vip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, duixing_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, houyuan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, guild_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, guanghuan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, guanghuan_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, guanghuan_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, template_dress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, chenghao_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, huiyi_shoujidu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, chenghao_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, pet_on_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, huiyi_jihuo_starts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_player, nalflag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_player_fight_info, players_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_pvp_match, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_pvp_match, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_pvp_match, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_pvp_match, bf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_match, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_match, player_guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_match, player_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_match, player_templates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_match, player_servers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_match, player_bfs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_match, player_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_match, player_vips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_match, player_achieves_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_match, player_guanghuans_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_match, player_dress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_match, player_nalflag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_pvp_fight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_pvp_fight, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_pvp_fight, player_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_fight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_fight, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_fight, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_pvp_reward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_pvp_reward, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_reward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_reward, guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_reward, ranks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_pvp_reward, res_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_team_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_team_login, players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_team_login, sig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_team_login, friends_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_team_login, by_reward_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_team_login, srank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_team_login, ds_reward_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_team_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_team_login, res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_team_login, chenghao_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_team_login, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_team_login, duanwei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_team_login, dspoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_team_login, ds_cd_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_team_pull, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_team_pull, guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_team_push, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_team_push, chenghao_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_team_invite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_team_invite, friends_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_team_invite, whois_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_bingyuan_buy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_bingyuan_buy, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_bingyuan_buy, num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_bingyuan_fight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_bingyuan_fight, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_bingyuan_fight, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_bingyuan_fight, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_bingyuan_fight, point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_bingyuan_fight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_bingyuan_fight, bingjing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_bingyuan_fight, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_bingyuan_fight, chenghao_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_bingyuan_fight, res_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_ds_fight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_ds_fight, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_ds_fight, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_ds_fight, reward_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_ds_fight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_ds_fight, xinpian_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_ds_fight, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_ds_fight, ciliao_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_ds_fight, duanwei_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_ds_fight, grank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_ds_fight, res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_ds_fight, cd_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_mofang_point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_mofang_point, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_mofang_point, huodong_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_mofang_point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_mofang_point, point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_invite_code, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_invite_code, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_invite_code, social_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_invite_code, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_invite_code, player_guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_invite_code, levels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_invite_code, ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_invite_code, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_invite_code, res_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_invite_code_input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_invite_code_input, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_invite_code_input, player_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_invite_code_input, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_invite_level, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_invite_level, player_guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_invite_level, levels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_invite_level, res_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_baoming, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_baoming, guild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_baoming, guild_server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_baoming, guild_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_baoming, guild_icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_baoming, guild_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_baoming, player_guids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_pvp_baoming, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_pvp_baoming, res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_pvp_baoming, player_guids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_bushu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_bushu, guild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_bushu, guild_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_bushu, guild_icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_bushu, guild_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_bushu, player_guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_bushu, player_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_bushu, player_template_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_bushu, player_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_bushu, player_bat_eff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_bushu, player_vips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_bushu, player_achieves_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_pvp_bushu, player_map_star_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_pvp_bushu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_pvp_bushu, res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_pvp_bushu, player_guids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_look_bushu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_look_bushu, player_guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_look_bushu, player_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_look_bushu, player_template_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_look_bushu, player_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_look_bushu, player_bat_eff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_look_bushu, player_vips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_look_bushu, player_achieves_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_look_bushu, res_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_jinrizhanji, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_jinrizhanji, guild_zhanji_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_jinrizhanji, guild_total_zhanji_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_jinrizhanji, guild_exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_jinrizhanji, player_zhanji_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_jinrizhanji, player_total_zhanji_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_jinrizhanji, bushu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_jinrizhanji, judian_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_jinrizhanji, jidi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_jinrizhanji, perfect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_jinrizhanji, res_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_fight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_fight, player_guild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_fight, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_fight, target_guild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_fight, target_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_fight, player_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight, guard_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight, gongxian_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight, zhanji_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight, judian_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight, jidi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight, perfect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight, res_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_look, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_look, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_look, player_guild_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, guild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, guild_server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, guild_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, guild_icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, guild_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, target_guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, target_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, target_templates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, target_levels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, target_bat_effs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, target_vips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, target_achieves_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, target_defense_nums_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, guard_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_guild_fight_info, guard_gongpo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight_info, guild_fight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight_info, guild_zhanji_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight_info, zhanji_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight_info, total_zhanji_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight_info, judian_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight_info, jidi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight_info, perfect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight_info, res_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_gongpo_reward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_gongpo_reward, guild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_gongpo_reward, judian_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_gongpo_reward, jidi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_gongpo_reward, perfect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_gongpo_reward, res_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_push_guild_match, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_push_guild_match, week_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_push_guild_match, hour_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight_reward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight_reward, player_rewards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight_reward, guild_rewards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight_reward, zhou_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_fight_reward, stype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_target_reward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_guild_target_reward, pvp_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_target_reward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_target_reward, judian_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_target_reward, jidi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_target_reward, perfect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_rep_guild_target_reward, res_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_libao_exchange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_libao_exchange, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_libao_exchange, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpcproto::tmsg_req_libao_exchange, serverid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::rpcproto::rpc)},
  { 8, -1, sizeof(::rpcproto::request)},
  { 17, -1, sizeof(::rpcproto::error)},
  { 24, -1, sizeof(::rpcproto::response)},
  { 33, -1, sizeof(::rpcproto::tmsg_req_libao)},
  { 43, -1, sizeof(::rpcproto::tmsg_rep_libao)},
  { 55, -1, sizeof(::rpcproto::tmsg_gonggao)},
  { 62, -1, sizeof(::rpcproto::tmsg_req_login_heitao)},
  { 70, -1, sizeof(::rpcproto::tmsg_rep_login_heitao)},
  { 77, -1, sizeof(::rpcproto::tmsg_req_recharge_heitao)},
  { 89, -1, sizeof(::rpcproto::tmsg_player_vote)},
  { 100, -1, sizeof(::rpcproto::tmsg_req_new_huodong)},
  { 107, -1, sizeof(::rpcproto::tmsg_huodong)},
  { 115, -1, sizeof(::rpcproto::tmsg_rep_new_huodong)},
  { 121, -1, sizeof(::rpcproto::tmsg_kick)},
  { 127, -1, sizeof(::rpcproto::tmsg_activity_reward)},
  { 147, -1, sizeof(::rpcproto::tmsg_activity)},
  { 164, -1, sizeof(::rpcproto::tmsg_activity_group)},
  { 176, -1, sizeof(::rpcproto::tmsg_req_recharge_apple)},
  { 186, -1, sizeof(::rpcproto::tmsg_rep_recharge_apple)},
  { 194, -1, sizeof(::rpcproto::tmsg_fight_equip)},
  { 209, -1, sizeof(::rpcproto::tmsg_fight_treasure)},
  { 222, -1, sizeof(::rpcproto::tmsg_fight_role)},
  { 241, -1, sizeof(::rpcproto::tmsg_fight_pet)},
  { 254, -1, sizeof(::rpcproto::tmsg_player_fight_player)},
  { 293, -1, sizeof(::rpcproto::tmsg_player_fight_info)},
  { 299, -1, sizeof(::rpcproto::tmsg_req_pvp_match)},
  { 307, -1, sizeof(::rpcproto::tmsg_rep_pvp_match)},
  { 323, -1, sizeof(::rpcproto::tmsg_req_pvp_fight)},
  { 330, -1, sizeof(::rpcproto::tmsg_rep_pvp_fight)},
  { 337, -1, sizeof(::rpcproto::tmsg_req_pvp_reward)},
  { 343, -1, sizeof(::rpcproto::tmsg_rep_pvp_reward)},
  { 351, -1, sizeof(::rpcproto::tmsg_req_team_login)},
  { 362, -1, sizeof(::rpcproto::tmsg_rep_team_login)},
  { 373, -1, sizeof(::rpcproto::tmsg_req_team_pull)},
  { 379, -1, sizeof(::rpcproto::tmsg_rep_team_push)},
  { 385, -1, sizeof(::rpcproto::tmsg_team_invite)},
  { 392, -1, sizeof(::rpcproto::tmsg_req_bingyuan_buy)},
  { 399, -1, sizeof(::rpcproto::tmsg_req_bingyuan_fight)},
  { 408, -1, sizeof(::rpcproto::tmsg_rep_bingyuan_fight)},
  { 417, -1, sizeof(::rpcproto::tmsg_req_ds_fight)},
  { 425, -1, sizeof(::rpcproto::tmsg_rep_ds_fight)},
  { 437, -1, sizeof(::rpcproto::tmsg_req_mofang_point)},
  { 444, -1, sizeof(::rpcproto::tmsg_rep_mofang_point)},
  { 450, -1, sizeof(::rpcproto::tmsg_req_invite_code)},
  { 461, -1, sizeof(::rpcproto::tmsg_rep_invite_code)},
  { 467, -1, sizeof(::rpcproto::tmsg_req_invite_code_input)},
  { 475, -1, sizeof(::rpcproto::tmsg_rep_invite_level)},
  { 483, -1, sizeof(::rpcproto::tmsg_req_guild_pvp_baoming)},
  { 494, -1, sizeof(::rpcproto::tmsg_rep_guild_pvp_baoming)},
  { 501, -1, sizeof(::rpcproto::tmsg_req_guild_pvp_bushu)},
  { 518, -1, sizeof(::rpcproto::tmsg_rep_guild_pvp_bushu)},
  { 525, -1, sizeof(::rpcproto::tmsg_rep_guild_look_bushu)},
  { 538, -1, sizeof(::rpcproto::tmsg_rep_guild_jinrizhanji)},
  { 553, -1, sizeof(::rpcproto::tmsg_req_guild_fight)},
  { 563, -1, sizeof(::rpcproto::tmsg_rep_guild_fight)},
  { 578, -1, sizeof(::rpcproto::tmsg_req_guild_look)},
  { 585, -1, sizeof(::rpcproto::tmsg_guild_fight_info)},
  { 605, -1, sizeof(::rpcproto::tmsg_rep_guild_fight_info)},
  { 618, -1, sizeof(::rpcproto::tmsg_rep_guild_gongpo_reward)},
  { 628, -1, sizeof(::rpcproto::tmsg_push_guild_match)},
  { 635, -1, sizeof(::rpcproto::tmsg_rep_guild_fight_reward)},
  { 644, -1, sizeof(::rpcproto::tmsg_req_guild_target_reward)},
  { 650, -1, sizeof(::rpcproto::tmsg_rep_guild_target_reward)},
  { 659, -1, sizeof(::rpcproto::tmsg_req_libao_exchange)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_rpc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_error_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_libao_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_libao_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_gonggao_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_login_heitao_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_login_heitao_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_recharge_heitao_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_player_vote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_new_huodong_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_huodong_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_new_huodong_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_kick_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_activity_reward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_activity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_activity_group_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_recharge_apple_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_recharge_apple_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_fight_equip_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_fight_treasure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_fight_role_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_fight_pet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_player_fight_player_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_player_fight_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_pvp_match_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_pvp_match_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_pvp_fight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_pvp_fight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_pvp_reward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_pvp_reward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_team_login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_team_login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_team_pull_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_team_push_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_team_invite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_bingyuan_buy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_bingyuan_fight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_bingyuan_fight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_ds_fight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_ds_fight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_mofang_point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_mofang_point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_invite_code_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_invite_code_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_invite_code_input_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_invite_level_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_guild_pvp_baoming_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_guild_pvp_baoming_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_guild_pvp_bushu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_guild_pvp_bushu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_guild_look_bushu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_guild_jinrizhanji_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_guild_fight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_guild_fight_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_guild_look_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_guild_fight_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_guild_fight_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_guild_gongpo_reward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_push_guild_match_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_guild_fight_reward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_guild_target_reward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_rep_guild_target_reward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpcproto::_tmsg_req_libao_exchange_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "rpc.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 65);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\trpc.proto\022\010rpcproto\"d\n\003rpc\022\034\n\004type\030\001 \001"
      "(\0162\016.rpcproto.erpc\022\036\n\003req\030\002 \001(\0132\021.rpcpro"
      "to.request\022\037\n\003rep\030\003 \001(\0132\022.rpcproto.respo"
      "nse\"@\n\007request\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030\002 \001(\005"
      "\022\016\n\006opcode\030\003 \001(\005\022\013\n\003msg\030\004 \001(\014\"#\n\005error\022\014"
      "\n\004code\030\001 \001(\005\022\014\n\004text\030\002 \001(\t\"Q\n\010response\022\014"
      "\n\004name\030\001 \001(\t\022\n\n\002id\030\002 \001(\005\022\013\n\003msg\030\003 \001(\014\022\036\n"
      "\005error\030\004 \001(\0132\017.rpcproto.error\"[\n\016tmsg_re"
      "q_libao\022\014\n\004code\030\001 \001(\t\022\n\n\002pt\030\002 \001(\t\022\013\n\003use"
      "\030\003 \001(\t\022\020\n\010username\030\004 \001(\004\022\020\n\010serverid\030\005 \001"
      "(\t\"y\n\016tmsg_rep_libao\022\013\n\003res\030\001 \001(\005\022\n\n\002pc\030"
      "\002 \001(\005\022\r\n\005types\030\003 \003(\005\022\016\n\006value1\030\004 \003(\005\022\016\n\006"
      "value2\030\005 \003(\005\022\016\n\006value3\030\006 \003(\005\022\017\n\007chongzi\030"
      "\007 \001(\005\"1\n\014tmsg_gonggao\022\017\n\007gonggao\030\001 \001(\t\022\020"
      "\n\010serverid\030\002 \001(\t\"\?\n\025tmsg_req_login_heita"
      "o\022\013\n\003uid\030\001 \001(\t\022\r\n\005token\030\002 \001(\t\022\n\n\002pt\030\003 \001("
      "\t\"7\n\025tmsg_rep_login_heitao\022\016\n\006errres\030\001 \001"
      "(\005\022\016\n\006errmsg\030\002 \001(\t\"\205\001\n\030tmsg_req_recharge"
      "_heitao\022\013\n\003uid\030\001 \001(\t\022\013\n\003sid\030\002 \001(\t\022\r\n\005ord"
      "er\030\003 \001(\t\022\013\n\003pid\030\004 \001(\005\022\r\n\005count\030\005 \001(\005\022\022\n\n"
      "huodong_id\030\006 \001(\005\022\020\n\010entry_id\030\007 \001(\005\"f\n\020tm"
      "sg_player_vote\022\014\n\004guid\030\001 \001(\004\022\014\n\004name\030\002 \001"
      "(\t\022\016\n\006server\030\003 \001(\005\022\n\n\002id\030\004 \001(\005\022\r\n\005renqi\030"
      "\005 \001(\005\022\013\n\003acc\030\006 \001(\t\"2\n\024tmsg_req_new_huodo"
      "ng\022\016\n\006server\030\001 \001(\t\022\n\n\002pt\030\002 \001(\t\"@\n\014tmsg_h"
      "uodong\022\n\n\002id\030\001 \001(\005\022\022\n\nstart_time\030\002 \001(\004\022\020"
      "\n\010end_time\030\003 \001(\004\"\?\n\024tmsg_rep_new_huodong"
      "\022\'\n\007huodong\030\001 \003(\0132\026.rpcproto.tmsg_huodon"
      "g\"\031\n\ttmsg_kick\022\014\n\004guid\030\001 \001(\004\"\372\001\n\024tmsg_ac"
      "tivity_reward\022\n\n\002id\030\001 \001(\005\022\021\n\tcondition\030\002"
      " \001(\005\022\014\n\004arg1\030\003 \001(\005\022\014\n\004arg2\030\004 \001(\005\022\014\n\004arg3"
      "\030\005 \001(\005\022\014\n\004arg4\030\006 \001(\005\022\014\n\004arg5\030\007 \001(\005\022\014\n\004ar"
      "g6\030\010 \003(\005\022\014\n\004arg7\030\t \003(\005\022\014\n\004arg8\030\n \003(\005\022\r\n\005"
      "types\030\013 \003(\005\022\017\n\007value1s\030\014 \003(\005\022\017\n\007value2s\030"
      "\r \003(\005\022\017\n\007value3s\030\016 \003(\005\022\021\n\tshow_time\030\017 \001("
      "\004\"\361\001\n\rtmsg_activity\022\n\n\002id\030\001 \001(\005\022\r\n\005start"
      "\030\002 \001(\004\022\013\n\003end\030\003 \001(\004\022\023\n\013kaifu_start\030\004 \001(\005"
      "\022\021\n\tkaifu_end\030\005 \001(\005\022\014\n\004name\030\006 \001(\t\022\014\n\004typ"
      "e\030\007 \001(\005\022\017\n\007subtype\030\010 \001(\005\022\014\n\004show\030\t \001(\004\022\016"
      "\n\006noshow\030\n \001(\004\022\024\n\014kaikai_start\030\013 \001(\005\022/\n\007"
      "rewards\030\014 \003(\0132\036.rpcproto.tmsg_activity_r"
      "eward\"\256\001\n\023tmsg_activity_group\022*\n\tactivit"
      "ys\030\001 \003(\0132\027.rpcproto.tmsg_activity\022\014\n\004nam"
      "e\030\002 \001(\t\022\017\n\007isjieri\030\003 \001(\005\022\022\n\nitem_name1\030\004"
      " \001(\t\022\022\n\nitem_name2\030\005 \001(\t\022\021\n\titem_des1\030\006 "
      "\001(\t\022\021\n\titem_des2\030\007 \001(\t\"f\n\027tmsg_req_recha"
      "rge_apple\022\014\n\004code\030\001 \001(\t\022\014\n\004guid\030\002 \001(\004\022\020\n"
      "\010username\030\003 \001(\t\022\020\n\010serverid\030\004 \001(\t\022\013\n\003rid"
      "\030\005 \001(\005\"K\n\027tmsg_rep_recharge_apple\022\013\n\003res"
      "\030\001 \001(\005\022\017\n\007orderid\030\002 \001(\t\022\022\n\nproduct_id\030\003 "
      "\001(\t\"\302\001\n\020tmsg_fight_equip\022\014\n\004guid\030\001 \001(\004\022\023"
      "\n\013player_guid\030\002 \001(\004\022\023\n\013template_id\030\003 \001(\005"
      "\022\021\n\trole_guid\030\004 \001(\004\022\017\n\007enhance\030\005 \001(\005\022\020\n\010"
      "rand_ids\030\007 \003(\005\022\023\n\013rand_values\030\010 \003(\005\022\r\n\005s"
      "tone\030\t \003(\005\022\016\n\006jilian\030\n \001(\005\022\014\n\004star\030\013 \001(\005"
      "\"\241\001\n\023tmsg_fight_treasure\022\014\n\004guid\030\001 \001(\004\022\023"
      "\n\013player_guid\030\002 \001(\004\022\023\n\013template_id\030\003 \001(\005"
      "\022\021\n\trole_guid\030\004 \001(\004\022\017\n\007enhance\030\005 \001(\005\022\016\n\006"
      "jilian\030\007 \001(\005\022\014\n\004star\030\010 \001(\005\022\020\n\010star_exp\030\t"
      " \001(\005\"\220\002\n\017tmsg_fight_role\022\014\n\004guid\030\001 \001(\004\022\023"
      "\n\013player_guid\030\002 \001(\004\022\023\n\013template_id\030\003 \001(\005"
      "\022\r\n\005level\030\004 \001(\005\022\016\n\006jlevel\030\007 \001(\005\022\016\n\006gleve"
      "l\030\010 \001(\005\022\016\n\006pinzhi\030\t \001(\005\022\024\n\014jskill_level\030"
      "\n \003(\005\022\021\n\tdress_ids\030\013 \003(\005\022\022\n\nzhuangbeis\030\r"
      " \003(\004\022\021\n\ttreasures\030\016 \003(\004\022\023\n\013dress_on_id\030\017"
      " \001(\005\022\024\n\014bskill_level\030\020 \001(\005\022\013\n\003pet\030\021 \001(\004\""
      "\235\001\n\016tmsg_fight_pet\022\014\n\004guid\030\001 \001(\004\022\023\n\013play"
      "er_guid\030\002 \001(\004\022\023\n\013template_id\030\003 \001(\005\022\r\n\005le"
      "vel\030\004 \001(\005\022\016\n\006jinjie\030\005 \001(\005\022\014\n\004star\030\006 \001(\005\022"
      "\023\n\013jinjie_slot\030\007 \003(\005\022\021\n\trole_guid\030\010 \001(\004\""
      "\226\006\n\030tmsg_player_fight_player\022(\n\005roles\030\001 "
      "\003(\0132\031.rpcproto.tmsg_fight_role\022*\n\006equips"
      "\030\002 \003(\0132\032.rpcproto.tmsg_fight_equip\0220\n\ttr"
      "easures\030\003 \003(\0132\035.rpcproto.tmsg_fight_trea"
      "sure\022&\n\004pets\030\004 \003(\0132\030.rpcproto.tmsg_fight"
      "_pet\022\014\n\004guid\030\005 \001(\004\022\020\n\010serverid\030\006 \001(\t\022\014\n\004"
      "name\030\007 \001(\t\022\023\n\013template_id\030\010 \001(\r\022\r\n\005level"
      "\030\t \001(\005\022\n\n\002bf\030\n \001(\005\022\020\n\010zhenxing\030\013 \003(\004\022\r\n\005"
      "guild\030\014 \001(\004\022\027\n\017guild_skill_ids\030\r \003(\005\022\032\n\022"
      "guild_skill_levels\030\016 \003(\005\022\021\n\tdress_ids\030\017 "
      "\003(\005\022\026\n\016dress_achieves\030\020 \003(\005\022\021\n\tpvp_total"
      "\030\021 \001(\005\022\017\n\007duixing\030\022 \003(\005\022\022\n\nduixing_id\030\023 "
      "\001(\005\022\024\n\014huiyi_jihuos\030\024 \003(\005\022\013\n\003vip\030\025 \001(\005\022\025"
      "\n\rduixing_level\030\026 \001(\005\022\017\n\007houyuan\030\027 \003(\004\022\022"
      "\n\nguild_name\030\030 \001(\t\022\021\n\tguanghuan\030\031 \003(\005\022\027\n"
      "\017guanghuan_level\030\032 \003(\005\022\024\n\014guanghuan_id\030\033"
      " \001(\005\022\026\n\016template_dress\030\034 \001(\005\022\023\n\013chenghao"
      "_on\030\035 \001(\005\022\026\n\016huiyi_shoujidu\030\036 \001(\005\022\020\n\010che"
      "nghao\030\037 \003(\005\022\016\n\006pet_on\030  \001(\004\022\032\n\022huiyi_jih"
      "uo_starts\030! \003(\005\022\017\n\007nalflag\030\" \001(\005\"M\n\026tmsg"
      "_player_fight_info\0223\n\007players\030\001 \001(\0132\".rp"
      "cproto.tmsg_player_fight_player\"@\n\022tmsg_"
      "req_pvp_match\022\014\n\004guid\030\001 \001(\004\022\020\n\010serverid\030"
      "\002 \001(\t\022\n\n\002bf\030\003 \001(\005\"\224\002\n\022tmsg_rep_pvp_match"
      "\022\024\n\014player_guids\030\001 \003(\004\022\024\n\014player_names\030\002"
      " \003(\t\022\030\n\020player_templates\030\003 \003(\005\022\026\n\016player"
      "_servers\030\004 \003(\005\022\022\n\nplayer_bfs\030\005 \003(\005\022\025\n\rpl"
      "ayer_points\030\006 \003(\005\022\023\n\013player_vips\030\007 \003(\005\022\027"
      "\n\017player_achieves\030\010 \003(\005\022\031\n\021player_guangh"
      "uans\030\t \003(\005\022\024\n\014player_dress\030\n \003(\005\022\026\n\016play"
      "er_nalflag\030\013 \003(\005\"V\n\022tmsg_req_pvp_fight\022\014"
      "\n\004guid\030\001 \001(\004\0222\n\006player\030\002 \001(\0132\".rpcproto."
      "tmsg_player_fight_player\"2\n\022tmsg_rep_pvp"
      "_fight\022\014\n\004text\030\001 \001(\014\022\016\n\006result\030\002 \001(\005\"\'\n\023"
      "tmsg_req_pvp_reward\022\020\n\010serverid\030\001 \001(\t\"^\n"
      "\023tmsg_rep_pvp_reward\022\r\n\005guids\030\001 \003(\004\022+\n\005r"
      "anks\030\002 \001(\0132\034.rpcproto.tmsg_rep_pvp_match"
      "\022\013\n\003res\030\003 \001(\005\"\245\001\n\023tmsg_req_team_login\0223\n"
      "\007players\030\001 \001(\0132\".rpcproto.tmsg_player_fi"
      "ght_player\022\013\n\003sig\030\002 \001(\t\022\017\n\007friends\030\003 \003(\004"
      "\022\025\n\rby_reward_num\030\004 \001(\005\022\r\n\005srank\030\005 \001(\005\022\025"
      "\n\rds_reward_num\030\006 \001(\005\"y\n\023tmsg_rep_team_l"
      "ogin\022\013\n\003res\030\001 \001(\005\022\020\n\010chenghao\030\002 \001(\005\022\r\n\005p"
      "oint\030\003 \001(\005\022\017\n\007duanwei\030\004 \001(\005\022\017\n\007dspoint\030\005"
      " \001(\005\022\022\n\nds_cd_time\030\006 \001(\004\"\"\n\022tmsg_req_tea"
      "m_pull\022\014\n\004guid\030\001 \001(\004\"&\n\022tmsg_rep_team_pu"
      "sh\022\020\n\010chenghao\030\001 \001(\005\"2\n\020tmsg_team_invite"
      "\022\017\n\007friends\030\001 \001(\004\022\r\n\005whois\030\002 \001(\004\"2\n\025tmsg"
      "_req_bingyuan_buy\022\014\n\004guid\030\001 \001(\004\022\013\n\003num\030\002"
      " \001(\005\"O\n\027tmsg_req_bingyuan_fight\022\n\n\002id\030\001 "
      "\001(\004\022\014\n\004guid\030\002 \001(\004\022\013\n\003num\030\003 \001(\005\022\r\n\005point\030"
      "\004 \001(\005\"Y\n\027tmsg_rep_bingyuan_fight\022\020\n\010bing"
      "jing\030\001 \001(\005\022\r\n\005point\030\002 \001(\005\022\020\n\010chenghao\030\003 "
      "\001(\005\022\013\n\003res\030\004 \001(\010\"A\n\021tmsg_req_ds_fight\022\n\n"
      "\002id\030\001 \001(\004\022\014\n\004guid\030\002 \001(\004\022\022\n\nreward_num\030\003 "
      "\001(\005\"\201\001\n\021tmsg_rep_ds_fight\022\017\n\007xinpian\030\001 \001"
      "(\005\022\r\n\005point\030\002 \001(\005\022\016\n\006ciliao\030\003 \001(\005\022\017\n\007dua"
      "nwei\030\004 \001(\005\022\r\n\005grank\030\005 \001(\005\022\013\n\003res\030\006 \001(\010\022\017"
      "\n\007cd_time\030\007 \001(\004\"<\n\025tmsg_req_mofang_point"
      "\022\r\n\005point\030\001 \001(\005\022\024\n\014huodong_time\030\002 \001(\004\"&\n"
      "\025tmsg_rep_mofang_point\022\r\n\005point\030\001 \001(\005\"\201\001"
      "\n\024tmsg_req_invite_code\022\023\n\013player_guid\030\001 "
      "\001(\004\022\023\n\013social_guid\030\002 \001(\004\022\014\n\004code\030\003 \001(\t\022\024"
      "\n\014player_guids\030\004 \003(\004\022\016\n\006levels\030\005 \003(\005\022\013\n\003"
      "ids\030\006 \003(\005\"#\n\024tmsg_rep_invite_code\022\013\n\003res"
      "\030\001 \001(\005\"U\n\032tmsg_req_invite_code_input\022\023\n\013"
      "player_guid\030\001 \001(\004\022\024\n\014player_level\030\002 \001(\005\022"
      "\014\n\004code\030\003 \001(\t\"J\n\025tmsg_rep_invite_level\022\024"
      "\n\014player_guids\030\001 \003(\004\022\016\n\006levels\030\002 \003(\005\022\013\n\003"
      "res\030\003 \001(\010\"\224\001\n\032tmsg_req_guild_pvp_baoming"
      "\022\r\n\005guild\030\001 \001(\004\022\024\n\014guild_server\030\002 \001(\005\022\022\n"
      "\nguild_name\030\003 \001(\t\022\022\n\nguild_icon\030\004 \001(\005\022\023\n"
      "\013guild_level\030\005 \001(\005\022\024\n\014player_guids\030\006 \003(\004"
      "\"\?\n\032tmsg_rep_guild_pvp_baoming\022\013\n\003res\030\001 "
      "\001(\010\022\024\n\014player_guids\030\002 \003(\004\"\240\002\n\030tmsg_req_g"
      "uild_pvp_bushu\022\r\n\005guild\030\001 \001(\004\022\022\n\nguild_n"
      "ame\030\002 \001(\t\022\022\n\nguild_icon\030\003 \001(\005\022\023\n\013guild_l"
      "evel\030\004 \001(\005\022\024\n\014player_guids\030\005 \003(\004\022\024\n\014play"
      "er_names\030\006 \003(\t\022\027\n\017player_template\030\007 \003(\005\022"
      "\024\n\014player_level\030\010 \003(\005\022\026\n\016player_bat_eff\030"
      "\t \003(\005\022\023\n\013player_vips\030\n \003(\005\022\027\n\017player_ach"
      "ieves\030\013 \003(\005\022\027\n\017player_map_star\030\014 \003(\005\"=\n\030"
      "tmsg_rep_guild_pvp_bushu\022\013\n\003res\030\001 \001(\010\022\024\n"
      "\014player_guids\030\002 \003(\004\"\311\001\n\031tmsg_rep_guild_l"
      "ook_bushu\022\024\n\014player_guids\030\001 \003(\004\022\024\n\014playe"
      "r_names\030\002 \003(\t\022\027\n\017player_template\030\003 \003(\005\022\024"
      "\n\014player_level\030\004 \003(\005\022\026\n\016player_bat_eff\030\005"
      " \003(\005\022\023\n\013player_vips\030\006 \003(\005\022\027\n\017player_achi"
      "eves\030\007 \003(\005\022\013\n\003res\030\010 \001(\010\"\205\002\n\032tmsg_rep_gui"
      "ld_jinrizhanji\022\024\n\014guild_zhanji\030\001 \001(\005\022\032\n\022"
      "guild_total_zhanji\030\002 \001(\005\022\021\n\tguild_exp\030\003 "
      "\001(\005\022\025\n\rplayer_zhanji\030\004 \001(\005\022\033\n\023player_tot"
      "al_zhanji\030\005 \001(\005\0222\n\005bushu\030\006 \001(\0132#.rpcprot"
      "o.tmsg_rep_guild_look_bushu\022\016\n\006judian\030\007 "
      "\001(\005\022\014\n\004jidi\030\010 \001(\005\022\017\n\007perfect\030\t \001(\005\022\013\n\003re"
      "s\030\n \001(\010\"\241\001\n\024tmsg_req_guild_fight\022\024\n\014play"
      "er_guild\030\001 \001(\004\022\023\n\013player_guid\030\002 \001(\004\022\024\n\014t"
      "arget_guild\030\003 \001(\004\022\024\n\014target_index\030\004 \001(\005\022"
      "2\n\006player\030\005 \001(\0132\".rpcproto.tmsg_player_f"
      "ight_player\"\264\001\n\024tmsg_rep_guild_fight\022\014\n\004"
      "text\030\001 \001(\014\022\016\n\006result\030\002 \001(\005\022\023\n\013guard_poin"
      "t\030\003 \001(\005\022\020\n\010gongxian\030\004 \001(\005\022\016\n\006zhanji\030\005 \001("
      "\005\022\013\n\003exp\030\006 \001(\005\022\016\n\006judian\030\007 \001(\005\022\014\n\004jidi\030\010"
      " \001(\005\022\017\n\007perfect\030\t \001(\005\022\013\n\003res\030\n \001(\005\"@\n\023tm"
      "sg_req_guild_look\022\023\n\013player_guid\030\001 \001(\004\022\024"
      "\n\014player_guild\030\002 \001(\004\"\346\002\n\025tmsg_guild_figh"
      "t_info\022\r\n\005guild\030\001 \001(\004\022\024\n\014guild_server\030\002 "
      "\001(\005\022\022\n\nguild_name\030\003 \001(\t\022\022\n\nguild_icon\030\004 "
      "\001(\005\022\023\n\013guild_level\030\005 \001(\005\022\024\n\014target_guids"
      "\030\006 \003(\004\022\024\n\014target_names\030\007 \003(\t\022\030\n\020target_t"
      "emplates\030\010 \003(\005\022\025\n\rtarget_levels\030\t \003(\005\022\027\n"
      "\017target_bat_effs\030\n \003(\005\022\023\n\013target_vips\030\013 "
      "\003(\005\022\027\n\017target_achieves\030\014 \003(\005\022\033\n\023target_d"
      "efense_nums\030\r \003(\005\022\024\n\014guard_points\030\016 \003(\005\022"
      "\024\n\014guard_gongpo\030\017 \003(\005\"\311\001\n\031tmsg_rep_guild"
      "_fight_info\0224\n\013guild_fight\030\001 \003(\0132\037.rpcpr"
      "oto.tmsg_guild_fight_info\022\024\n\014guild_zhanj"
      "i\030\002 \001(\005\022\016\n\006zhanji\030\003 \001(\005\022\024\n\014total_zhanji\030"
      "\004 \001(\005\022\016\n\006judian\030\005 \001(\005\022\014\n\004jidi\030\006 \001(\005\022\017\n\007p"
      "erfect\030\007 \001(\005\022\013\n\003res\030\010 \001(\010\"i\n\034tmsg_rep_gu"
      "ild_gongpo_reward\022\r\n\005guild\030\001 \001(\004\022\016\n\006judi"
      "an\030\002 \001(\005\022\014\n\004jidi\030\003 \001(\005\022\017\n\007perfect\030\004 \001(\005\022"
      "\013\n\003res\030\005 \001(\010\"3\n\025tmsg_push_guild_match\022\014\n"
      "\004week\030\001 \001(\005\022\014\n\004hour\030\002 \001(\005\"i\n\033tmsg_rep_gu"
      "ild_fight_reward\022\026\n\016player_rewards\030\001 \003(\004"
      "\022\025\n\rguild_rewards\030\002 \003(\004\022\014\n\004zhou\030\003 \001(\005\022\r\n"
      "\005stype\030\004 \001(\005\"0\n\034tmsg_req_guild_target_re"
      "ward\022\020\n\010pvp_guid\030\001 \001(\004\"Z\n\034tmsg_rep_guild"
      "_target_reward\022\016\n\006judian\030\001 \001(\005\022\014\n\004jidi\030\002"
      " \001(\005\022\017\n\007perfect\030\003 \001(\005\022\013\n\003res\030\004 \001(\010\"K\n\027tm"
      "sg_req_libao_exchange\022\014\n\004code\030\001 \001(\t\022\020\n\010u"
      "sername\030\002 \001(\t\022\020\n\010serverid\030\003 \001(\t*,\n\004erpc\022"
      "\014\n\010REQUESST\020\000\022\010\n\004PUSH\020\001\022\014\n\010RESPONSE\020\002b\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 8125);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rpc.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_rpc_2eproto
namespace rpcproto {
const ::google::protobuf::EnumDescriptor* erpc_descriptor() {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_2eproto::file_level_enum_descriptors[0];
}
bool erpc_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void rpc::InitAsDefaultInstance() {
  ::rpcproto::_rpc_default_instance_._instance.get_mutable()->req_ = const_cast< ::rpcproto::request*>(
      ::rpcproto::request::internal_default_instance());
  ::rpcproto::_rpc_default_instance_._instance.get_mutable()->rep_ = const_cast< ::rpcproto::response*>(
      ::rpcproto::response::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int rpc::kTypeFieldNumber;
const int rpc::kReqFieldNumber;
const int rpc::kRepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

rpc::rpc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_rpc.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.rpc)
}
rpc::rpc(const rpc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::rpcproto::request(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_rep()) {
    rep_ = new ::rpcproto::response(*from.rep_);
  } else {
    rep_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.rpc)
}

void rpc::SharedCtor() {
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&req_)) + sizeof(type_));
}

rpc::~rpc() {
  // @@protoc_insertion_point(destructor:rpcproto.rpc)
  SharedDtor();
}

void rpc::SharedDtor() {
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete rep_;
}

void rpc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* rpc::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const rpc& rpc::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_rpc.base);
  return *internal_default_instance();
}


void rpc::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.rpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && req_ != NULL) {
    delete req_;
  }
  req_ = NULL;
  if (GetArenaNoVirtual() == NULL && rep_ != NULL) {
    delete rep_;
  }
  rep_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool rpc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.rpc)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .rpcproto.erpc type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::rpcproto::erpc >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rpcproto.request req = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rpcproto.response rep = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rep()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.rpc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.rpc)
  return false;
#undef DO_
}

void rpc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.rpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rpcproto.erpc type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .rpcproto.request req = 2;
  if (this->has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_req(), output);
  }

  // .rpcproto.response rep = 3;
  if (this->has_rep()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_rep(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.rpc)
}

::google::protobuf::uint8* rpc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.rpc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rpcproto.erpc type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .rpcproto.request req = 2;
  if (this->has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_req(), deterministic, target);
  }

  // .rpcproto.response rep = 3;
  if (this->has_rep()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_rep(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.rpc)
  return target;
}

size_t rpc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.rpc)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .rpcproto.request req = 2;
  if (this->has_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // .rpcproto.response rep = 3;
  if (this->has_rep()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rep_);
  }

  // .rpcproto.erpc type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void rpc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.rpc)
  GOOGLE_DCHECK_NE(&from, this);
  const rpc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const rpc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.rpc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.rpc)
    MergeFrom(*source);
  }
}

void rpc::MergeFrom(const rpc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.rpc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    mutable_req()->::rpcproto::request::MergeFrom(from.req());
  }
  if (from.has_rep()) {
    mutable_rep()->::rpcproto::response::MergeFrom(from.rep());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void rpc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.rpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void rpc::CopyFrom(const rpc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.rpc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool rpc::IsInitialized() const {
  return true;
}

void rpc::Swap(rpc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void rpc::InternalSwap(rpc* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(rep_, other->rep_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata rpc::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int request::kNameFieldNumber;
const int request::kIdFieldNumber;
const int request::kOpcodeFieldNumber;
const int request::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

request::request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.request)
}
request::request(const request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&opcode_) -
    reinterpret_cast<char*>(&id_)) + sizeof(opcode_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.request)
}

void request::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opcode_) -
      reinterpret_cast<char*>(&id_)) + sizeof(opcode_));
}

request::~request() {
  // @@protoc_insertion_point(destructor:rpcproto.request)
  SharedDtor();
}

void request::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* request::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const request& request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_request.base);
  return *internal_default_instance();
}


void request::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opcode_) -
      reinterpret_cast<char*>(&id_)) + sizeof(opcode_));
  _internal_metadata_.Clear();
}

bool request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.request.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 opcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.request)
  return false;
#undef DO_
}

void request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.request.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // int32 opcode = 3;
  if (this->opcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->opcode(), output);
  }

  // bytes msg = 4;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.request)
}

::google::protobuf::uint8* request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.request.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // int32 opcode = 3;
  if (this->opcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->opcode(), target);
  }

  // bytes msg = 4;
  if (this->msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.request)
  return target;
}

size_t request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes msg = 4;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 opcode = 3;
  if (this->opcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->opcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.request)
  GOOGLE_DCHECK_NE(&from, this);
  const request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.request)
    MergeFrom(*source);
  }
}

void request::MergeFrom(const request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.opcode() != 0) {
    set_opcode(from.opcode());
  }
}

void request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void request::CopyFrom(const request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool request::IsInitialized() const {
  return true;
}

void request::Swap(request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void request::InternalSwap(request* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(opcode_, other->opcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata request::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void error::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int error::kCodeFieldNumber;
const int error::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

error::error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_error.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.error)
}
error::error(const error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.error)
}

void error::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

error::~error() {
  // @@protoc_insertion_point(destructor:rpcproto.error)
  SharedDtor();
}

void error::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void error::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* error::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const error& error::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_error.base);
  return *internal_default_instance();
}


void error::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  code_ = 0;
  _internal_metadata_.Clear();
}

bool error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.error)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.error.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.error)
  return false;
#undef DO_
}

void error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.error.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.error)
}

::google::protobuf::uint8* error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.error.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.error)
  return target;
}

size_t error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.error)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 2;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.error)
  GOOGLE_DCHECK_NE(&from, this);
  const error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.error)
    MergeFrom(*source);
  }
}

void error::MergeFrom(const error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void error::CopyFrom(const error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool error::IsInitialized() const {
  return true;
}

void error::Swap(error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void error::InternalSwap(error* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata error::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void response::InitAsDefaultInstance() {
  ::rpcproto::_response_default_instance_._instance.get_mutable()->error_ = const_cast< ::rpcproto::error*>(
      ::rpcproto::error::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int response::kNameFieldNumber;
const int response::kIdFieldNumber;
const int response::kMsgFieldNumber;
const int response::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

response::response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.response)
}
response::response(const response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_error()) {
    error_ = new ::rpcproto::error(*from.error_);
  } else {
    error_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.response)
}

void response::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&error_)) + sizeof(id_));
}

response::~response() {
  // @@protoc_insertion_point(destructor:rpcproto.response)
  SharedDtor();
}

void response::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* response::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const response& response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_response.base);
  return *internal_default_instance();
}


void response::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  set_changed();
  id_ = 0;
  _internal_metadata_.Clear();
}

bool response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.response.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rpcproto.error error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.response)
  return false;
#undef DO_
}

void response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.response.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // bytes msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->msg(), output);
  }

  // .rpcproto.error error = 4;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.response)
}

::google::protobuf::uint8* response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.response.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // bytes msg = 3;
  if (this->msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msg(), target);
  }

  // .rpcproto.error error = 4;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_error(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.response)
  return target;
}

size_t response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg());
  }

  // .rpcproto.error error = 4;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.response)
  GOOGLE_DCHECK_NE(&from, this);
  const response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.response)
    MergeFrom(*source);
  }
}

void response::MergeFrom(const response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_error()) {
    mutable_error()->::rpcproto::error::MergeFrom(from.error());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void response::CopyFrom(const response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool response::IsInitialized() const {
  return true;
}

void response::Swap(response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void response::InternalSwap(response* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata response::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_libao::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_libao::kCodeFieldNumber;
const int tmsg_req_libao::kPtFieldNumber;
const int tmsg_req_libao::kUseFieldNumber;
const int tmsg_req_libao::kUsernameFieldNumber;
const int tmsg_req_libao::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_libao::tmsg_req_libao()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_libao.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_libao)
}
tmsg_req_libao::tmsg_req_libao(const tmsg_req_libao& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  pt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pt().size() > 0) {
    pt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pt_);
  }
  use_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.use().size() > 0) {
    use_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.use_);
  }
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serverid().size() > 0) {
    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
  username_ = from.username_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_libao)
}

void tmsg_req_libao::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  use_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_ = GOOGLE_ULONGLONG(0);
}

tmsg_req_libao::~tmsg_req_libao() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_libao)
  SharedDtor();
}

void tmsg_req_libao::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  use_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_req_libao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_libao::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_libao& tmsg_req_libao::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_libao.base);
  return *internal_default_instance();
}


void tmsg_req_libao::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_libao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  pt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  use_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  username_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool tmsg_req_libao::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_libao)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_libao.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pt().data(), static_cast<int>(this->pt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_libao.pt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string use = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_use()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->use().data(), static_cast<int>(this->use().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_libao.use"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 username = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &username_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serverid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverid().data(), static_cast<int>(this->serverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_libao.serverid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_libao)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_libao)
  return false;
#undef DO_
}

void tmsg_req_libao::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_libao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_libao.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // string pt = 2;
  if (this->pt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pt().data(), static_cast<int>(this->pt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_libao.pt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pt(), output);
  }

  // string use = 3;
  if (this->use().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->use().data(), static_cast<int>(this->use().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_libao.use");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->use(), output);
  }

  // uint64 username = 4;
  if (this->username() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->username(), output);
  }

  // string serverid = 5;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_libao.serverid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_libao)
}

::google::protobuf::uint8* tmsg_req_libao::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_libao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_libao.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // string pt = 2;
  if (this->pt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pt().data(), static_cast<int>(this->pt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_libao.pt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pt(), target);
  }

  // string use = 3;
  if (this->use().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->use().data(), static_cast<int>(this->use().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_libao.use");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->use(), target);
  }

  // uint64 username = 4;
  if (this->username() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->username(), target);
  }

  // string serverid = 5;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_libao.serverid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_libao)
  return target;
}

size_t tmsg_req_libao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_libao)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string pt = 2;
  if (this->pt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pt());
  }

  // string use = 3;
  if (this->use().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->use());
  }

  // string serverid = 5;
  if (this->serverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverid());
  }

  // uint64 username = 4;
  if (this->username() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_libao::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_libao)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_libao* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_libao>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_libao)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_libao)
    MergeFrom(*source);
  }
}

void tmsg_req_libao::MergeFrom(const tmsg_req_libao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_libao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.pt().size() > 0) {

    pt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pt_);
  }
  if (from.use().size() > 0) {

    use_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.use_);
  }
  if (from.serverid().size() > 0) {

    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
  if (from.username() != 0) {
    set_username(from.username());
  }
}

void tmsg_req_libao::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_libao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_libao::CopyFrom(const tmsg_req_libao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_libao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_libao::IsInitialized() const {
  return true;
}

void tmsg_req_libao::Swap(tmsg_req_libao* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_libao::InternalSwap(tmsg_req_libao* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pt_.Swap(&other->pt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  use_.Swap(&other->use_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  serverid_.Swap(&other->serverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(username_, other->username_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_libao::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_libao::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_libao::kResFieldNumber;
const int tmsg_rep_libao::kPcFieldNumber;
const int tmsg_rep_libao::kTypesFieldNumber;
const int tmsg_rep_libao::kValue1FieldNumber;
const int tmsg_rep_libao::kValue2FieldNumber;
const int tmsg_rep_libao::kValue3FieldNumber;
const int tmsg_rep_libao::kChongziFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_libao::tmsg_rep_libao()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_libao.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_libao)
}
tmsg_rep_libao::tmsg_rep_libao(const tmsg_rep_libao& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      types_(from.types_),
      value1_(from.value1_),
      value2_(from.value2_),
      value3_(from.value3_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&res_, &from.res_,
    static_cast<size_t>(reinterpret_cast<char*>(&chongzi_) -
    reinterpret_cast<char*>(&res_)) + sizeof(chongzi_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_libao)
}

void tmsg_rep_libao::SharedCtor() {
  ::memset(&res_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chongzi_) -
      reinterpret_cast<char*>(&res_)) + sizeof(chongzi_));
}

tmsg_rep_libao::~tmsg_rep_libao() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_libao)
  SharedDtor();
}

void tmsg_rep_libao::SharedDtor() {
}

void tmsg_rep_libao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_libao::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_libao& tmsg_rep_libao::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_libao.base);
  return *internal_default_instance();
}


void tmsg_rep_libao::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_libao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  types_.Clear();
  set_changed();
  value1_.Clear();
  set_changed();
  value2_.Clear();
  set_changed();
  value3_.Clear();
  ::memset(&res_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chongzi_) -
      reinterpret_cast<char*>(&res_)) + sizeof(chongzi_));
  _internal_metadata_.Clear();
}

bool tmsg_rep_libao::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_libao)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 res = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 types = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_types())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_types())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value1())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_value1())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value2())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_value2())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value3 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value3())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_value3())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 chongzi = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chongzi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_libao)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_libao)
  return false;
#undef DO_
}

void tmsg_rep_libao::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_libao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 res = 1;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->res(), output);
  }

  // int32 pc = 2;
  if (this->pc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pc(), output);
  }

  // repeated int32 types = 3;
  if (this->types_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _types_cached_byte_size_));
  }
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->types(i), output);
  }

  // repeated int32 value1 = 4;
  if (this->value1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value1_cached_byte_size_));
  }
  for (int i = 0, n = this->value1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->value1(i), output);
  }

  // repeated int32 value2 = 5;
  if (this->value2_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value2_cached_byte_size_));
  }
  for (int i = 0, n = this->value2_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->value2(i), output);
  }

  // repeated int32 value3 = 6;
  if (this->value3_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value3_cached_byte_size_));
  }
  for (int i = 0, n = this->value3_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->value3(i), output);
  }

  // int32 chongzi = 7;
  if (this->chongzi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->chongzi(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_libao)
}

::google::protobuf::uint8* tmsg_rep_libao::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_libao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 res = 1;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->res(), target);
  }

  // int32 pc = 2;
  if (this->pc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pc(), target);
  }

  // repeated int32 types = 3;
  if (this->types_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _types_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->types_, target);
  }

  // repeated int32 value1 = 4;
  if (this->value1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _value1_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->value1_, target);
  }

  // repeated int32 value2 = 5;
  if (this->value2_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _value2_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->value2_, target);
  }

  // repeated int32 value3 = 6;
  if (this->value3_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _value3_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->value3_, target);
  }

  // int32 chongzi = 7;
  if (this->chongzi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->chongzi(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_libao)
  return target;
}

size_t tmsg_rep_libao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_libao)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 types = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->types_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _types_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 value1 = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value1_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value1_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 value2 = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value2_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value2_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 value3 = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value3_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value3_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->res());
  }

  // int32 pc = 2;
  if (this->pc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pc());
  }

  // int32 chongzi = 7;
  if (this->chongzi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chongzi());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_libao::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_libao)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_libao* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_libao>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_libao)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_libao)
    MergeFrom(*source);
  }
}

void tmsg_rep_libao::MergeFrom(const tmsg_rep_libao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_libao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  types_.MergeFrom(from.types_);
  value1_.MergeFrom(from.value1_);
  value2_.MergeFrom(from.value2_);
  value3_.MergeFrom(from.value3_);
  if (from.res() != 0) {
    set_res(from.res());
  }
  if (from.pc() != 0) {
    set_pc(from.pc());
  }
  if (from.chongzi() != 0) {
    set_chongzi(from.chongzi());
  }
}

void tmsg_rep_libao::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_libao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_libao::CopyFrom(const tmsg_rep_libao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_libao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_libao::IsInitialized() const {
  return true;
}

void tmsg_rep_libao::Swap(tmsg_rep_libao* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_libao::InternalSwap(tmsg_rep_libao* other) {
  using std::swap;
  types_.InternalSwap(&other->types_);
  value1_.InternalSwap(&other->value1_);
  value2_.InternalSwap(&other->value2_);
  value3_.InternalSwap(&other->value3_);
  swap(res_, other->res_);
  swap(pc_, other->pc_);
  swap(chongzi_, other->chongzi_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_libao::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_gonggao::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_gonggao::kGonggaoFieldNumber;
const int tmsg_gonggao::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_gonggao::tmsg_gonggao()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_gonggao.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_gonggao)
}
tmsg_gonggao::tmsg_gonggao(const tmsg_gonggao& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gonggao_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gonggao().size() > 0) {
    gonggao_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gonggao_);
  }
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serverid().size() > 0) {
    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_gonggao)
}

void tmsg_gonggao::SharedCtor() {
  gonggao_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

tmsg_gonggao::~tmsg_gonggao() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_gonggao)
  SharedDtor();
}

void tmsg_gonggao::SharedDtor() {
  gonggao_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_gonggao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_gonggao::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_gonggao& tmsg_gonggao::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_gonggao.base);
  return *internal_default_instance();
}


void tmsg_gonggao::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_gonggao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  gonggao_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool tmsg_gonggao::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_gonggao)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string gonggao = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gonggao()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gonggao().data(), static_cast<int>(this->gonggao().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_gonggao.gonggao"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serverid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverid().data(), static_cast<int>(this->serverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_gonggao.serverid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_gonggao)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_gonggao)
  return false;
#undef DO_
}

void tmsg_gonggao::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_gonggao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gonggao = 1;
  if (this->gonggao().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gonggao().data(), static_cast<int>(this->gonggao().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_gonggao.gonggao");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gonggao(), output);
  }

  // string serverid = 2;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_gonggao.serverid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_gonggao)
}

::google::protobuf::uint8* tmsg_gonggao::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_gonggao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gonggao = 1;
  if (this->gonggao().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gonggao().data(), static_cast<int>(this->gonggao().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_gonggao.gonggao");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gonggao(), target);
  }

  // string serverid = 2;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_gonggao.serverid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_gonggao)
  return target;
}

size_t tmsg_gonggao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_gonggao)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string gonggao = 1;
  if (this->gonggao().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gonggao());
  }

  // string serverid = 2;
  if (this->serverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_gonggao::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_gonggao)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_gonggao* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_gonggao>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_gonggao)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_gonggao)
    MergeFrom(*source);
  }
}

void tmsg_gonggao::MergeFrom(const tmsg_gonggao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_gonggao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gonggao().size() > 0) {

    gonggao_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gonggao_);
  }
  if (from.serverid().size() > 0) {

    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
}

void tmsg_gonggao::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_gonggao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_gonggao::CopyFrom(const tmsg_gonggao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_gonggao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_gonggao::IsInitialized() const {
  return true;
}

void tmsg_gonggao::Swap(tmsg_gonggao* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_gonggao::InternalSwap(tmsg_gonggao* other) {
  using std::swap;
  gonggao_.Swap(&other->gonggao_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  serverid_.Swap(&other->serverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_gonggao::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_login_heitao::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_login_heitao::kUidFieldNumber;
const int tmsg_req_login_heitao::kTokenFieldNumber;
const int tmsg_req_login_heitao::kPtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_login_heitao::tmsg_req_login_heitao()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_login_heitao.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_login_heitao)
}
tmsg_req_login_heitao::tmsg_req_login_heitao(const tmsg_req_login_heitao& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uid().size() > 0) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  pt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pt().size() > 0) {
    pt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pt_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_login_heitao)
}

void tmsg_req_login_heitao::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

tmsg_req_login_heitao::~tmsg_req_login_heitao() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_login_heitao)
  SharedDtor();
}

void tmsg_req_login_heitao::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_req_login_heitao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_login_heitao::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_login_heitao& tmsg_req_login_heitao::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_login_heitao.base);
  return *internal_default_instance();
}


void tmsg_req_login_heitao::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_login_heitao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  pt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool tmsg_req_login_heitao::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_login_heitao)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_login_heitao.uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_login_heitao.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pt().data(), static_cast<int>(this->pt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_login_heitao.pt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_login_heitao)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_login_heitao)
  return false;
#undef DO_
}

void tmsg_req_login_heitao::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_login_heitao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_login_heitao.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_login_heitao.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  // string pt = 3;
  if (this->pt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pt().data(), static_cast<int>(this->pt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_login_heitao.pt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_login_heitao)
}

::google::protobuf::uint8* tmsg_req_login_heitao::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_login_heitao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_login_heitao.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_login_heitao.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  // string pt = 3;
  if (this->pt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pt().data(), static_cast<int>(this->pt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_login_heitao.pt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_login_heitao)
  return target;
}

size_t tmsg_req_login_heitao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_login_heitao)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string pt = 3;
  if (this->pt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_login_heitao::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_login_heitao)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_login_heitao* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_login_heitao>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_login_heitao)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_login_heitao)
    MergeFrom(*source);
  }
}

void tmsg_req_login_heitao::MergeFrom(const tmsg_req_login_heitao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_login_heitao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.pt().size() > 0) {

    pt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pt_);
  }
}

void tmsg_req_login_heitao::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_login_heitao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_login_heitao::CopyFrom(const tmsg_req_login_heitao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_login_heitao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_login_heitao::IsInitialized() const {
  return true;
}

void tmsg_req_login_heitao::Swap(tmsg_req_login_heitao* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_login_heitao::InternalSwap(tmsg_req_login_heitao* other) {
  using std::swap;
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pt_.Swap(&other->pt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_login_heitao::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_login_heitao::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_login_heitao::kErrresFieldNumber;
const int tmsg_rep_login_heitao::kErrmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_login_heitao::tmsg_rep_login_heitao()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_login_heitao.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_login_heitao)
}
tmsg_rep_login_heitao::tmsg_rep_login_heitao(const tmsg_rep_login_heitao& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  errres_ = from.errres_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_login_heitao)
}

void tmsg_rep_login_heitao::SharedCtor() {
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errres_ = 0;
}

tmsg_rep_login_heitao::~tmsg_rep_login_heitao() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_login_heitao)
  SharedDtor();
}

void tmsg_rep_login_heitao::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_rep_login_heitao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_login_heitao::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_login_heitao& tmsg_rep_login_heitao::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_login_heitao.base);
  return *internal_default_instance();
}


void tmsg_rep_login_heitao::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_login_heitao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  errres_ = 0;
  _internal_metadata_.Clear();
}

bool tmsg_rep_login_heitao::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_login_heitao)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 errres = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errres_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_rep_login_heitao.errmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_login_heitao)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_login_heitao)
  return false;
#undef DO_
}

void tmsg_rep_login_heitao::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_login_heitao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 errres = 1;
  if (this->errres() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errres(), output);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_rep_login_heitao.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_login_heitao)
}

::google::protobuf::uint8* tmsg_rep_login_heitao::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_login_heitao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 errres = 1;
  if (this->errres() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errres(), target);
  }

  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_rep_login_heitao.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_login_heitao)
  return target;
}

size_t tmsg_rep_login_heitao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_login_heitao)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string errmsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // int32 errres = 1;
  if (this->errres() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errres());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_login_heitao::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_login_heitao)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_login_heitao* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_login_heitao>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_login_heitao)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_login_heitao)
    MergeFrom(*source);
  }
}

void tmsg_rep_login_heitao::MergeFrom(const tmsg_rep_login_heitao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_login_heitao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.errres() != 0) {
    set_errres(from.errres());
  }
}

void tmsg_rep_login_heitao::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_login_heitao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_login_heitao::CopyFrom(const tmsg_rep_login_heitao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_login_heitao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_login_heitao::IsInitialized() const {
  return true;
}

void tmsg_rep_login_heitao::Swap(tmsg_rep_login_heitao* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_login_heitao::InternalSwap(tmsg_rep_login_heitao* other) {
  using std::swap;
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errres_, other->errres_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_login_heitao::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_recharge_heitao::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_recharge_heitao::kUidFieldNumber;
const int tmsg_req_recharge_heitao::kSidFieldNumber;
const int tmsg_req_recharge_heitao::kOrderFieldNumber;
const int tmsg_req_recharge_heitao::kPidFieldNumber;
const int tmsg_req_recharge_heitao::kCountFieldNumber;
const int tmsg_req_recharge_heitao::kHuodongIdFieldNumber;
const int tmsg_req_recharge_heitao::kEntryIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_recharge_heitao::tmsg_req_recharge_heitao()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_recharge_heitao.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_recharge_heitao)
}
tmsg_req_recharge_heitao::tmsg_req_recharge_heitao(const tmsg_req_recharge_heitao& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uid().size() > 0) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  sid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sid().size() > 0) {
    sid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sid_);
  }
  order_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order().size() > 0) {
    order_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_);
  }
  ::memcpy(&pid_, &from.pid_,
    static_cast<size_t>(reinterpret_cast<char*>(&entry_id_) -
    reinterpret_cast<char*>(&pid_)) + sizeof(entry_id_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_recharge_heitao)
}

void tmsg_req_recharge_heitao::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entry_id_) -
      reinterpret_cast<char*>(&pid_)) + sizeof(entry_id_));
}

tmsg_req_recharge_heitao::~tmsg_req_recharge_heitao() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_recharge_heitao)
  SharedDtor();
}

void tmsg_req_recharge_heitao::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_req_recharge_heitao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_recharge_heitao::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_recharge_heitao& tmsg_req_recharge_heitao::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_recharge_heitao.base);
  return *internal_default_instance();
}


void tmsg_req_recharge_heitao::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_recharge_heitao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  sid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  order_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entry_id_) -
      reinterpret_cast<char*>(&pid_)) + sizeof(entry_id_));
  _internal_metadata_.Clear();
}

bool tmsg_req_recharge_heitao::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_recharge_heitao)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_recharge_heitao.uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sid().data(), static_cast<int>(this->sid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_recharge_heitao.sid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string order = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order().data(), static_cast<int>(this->order().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_recharge_heitao.order"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 huodong_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &huodong_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 entry_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entry_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_recharge_heitao)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_recharge_heitao)
  return false;
#undef DO_
}

void tmsg_req_recharge_heitao::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_recharge_heitao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_recharge_heitao.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // string sid = 2;
  if (this->sid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sid().data(), static_cast<int>(this->sid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_recharge_heitao.sid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sid(), output);
  }

  // string order = 3;
  if (this->order().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order().data(), static_cast<int>(this->order().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_recharge_heitao.order");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->order(), output);
  }

  // int32 pid = 4;
  if (this->pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pid(), output);
  }

  // int32 count = 5;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->count(), output);
  }

  // int32 huodong_id = 6;
  if (this->huodong_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->huodong_id(), output);
  }

  // int32 entry_id = 7;
  if (this->entry_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->entry_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_recharge_heitao)
}

::google::protobuf::uint8* tmsg_req_recharge_heitao::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_recharge_heitao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_recharge_heitao.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // string sid = 2;
  if (this->sid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sid().data(), static_cast<int>(this->sid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_recharge_heitao.sid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sid(), target);
  }

  // string order = 3;
  if (this->order().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order().data(), static_cast<int>(this->order().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_recharge_heitao.order");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->order(), target);
  }

  // int32 pid = 4;
  if (this->pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pid(), target);
  }

  // int32 count = 5;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->count(), target);
  }

  // int32 huodong_id = 6;
  if (this->huodong_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->huodong_id(), target);
  }

  // int32 entry_id = 7;
  if (this->entry_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->entry_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_recharge_heitao)
  return target;
}

size_t tmsg_req_recharge_heitao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_recharge_heitao)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // string sid = 2;
  if (this->sid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sid());
  }

  // string order = 3;
  if (this->order().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order());
  }

  // int32 pid = 4;
  if (this->pid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pid());
  }

  // int32 count = 5;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  // int32 huodong_id = 6;
  if (this->huodong_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->huodong_id());
  }

  // int32 entry_id = 7;
  if (this->entry_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entry_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_recharge_heitao::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_recharge_heitao)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_recharge_heitao* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_recharge_heitao>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_recharge_heitao)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_recharge_heitao)
    MergeFrom(*source);
  }
}

void tmsg_req_recharge_heitao::MergeFrom(const tmsg_req_recharge_heitao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_recharge_heitao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  if (from.sid().size() > 0) {

    sid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sid_);
  }
  if (from.order().size() > 0) {

    order_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_);
  }
  if (from.pid() != 0) {
    set_pid(from.pid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.huodong_id() != 0) {
    set_huodong_id(from.huodong_id());
  }
  if (from.entry_id() != 0) {
    set_entry_id(from.entry_id());
  }
}

void tmsg_req_recharge_heitao::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_recharge_heitao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_recharge_heitao::CopyFrom(const tmsg_req_recharge_heitao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_recharge_heitao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_recharge_heitao::IsInitialized() const {
  return true;
}

void tmsg_req_recharge_heitao::Swap(tmsg_req_recharge_heitao* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_recharge_heitao::InternalSwap(tmsg_req_recharge_heitao* other) {
  using std::swap;
  uid_.Swap(&other->uid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sid_.Swap(&other->sid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  order_.Swap(&other->order_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pid_, other->pid_);
  swap(count_, other->count_);
  swap(huodong_id_, other->huodong_id_);
  swap(entry_id_, other->entry_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_recharge_heitao::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_player_vote::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_player_vote::kGuidFieldNumber;
const int tmsg_player_vote::kNameFieldNumber;
const int tmsg_player_vote::kServerFieldNumber;
const int tmsg_player_vote::kIdFieldNumber;
const int tmsg_player_vote::kRenqiFieldNumber;
const int tmsg_player_vote::kAccFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_player_vote::tmsg_player_vote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_player_vote.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_player_vote)
}
tmsg_player_vote::tmsg_player_vote(const tmsg_player_vote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  acc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.acc().size() > 0) {
    acc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acc_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&renqi_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(renqi_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_player_vote)
}

void tmsg_player_vote::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  acc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&renqi_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(renqi_));
}

tmsg_player_vote::~tmsg_player_vote() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_player_vote)
  SharedDtor();
}

void tmsg_player_vote::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  acc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_player_vote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_player_vote::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_player_vote& tmsg_player_vote::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_player_vote.base);
  return *internal_default_instance();
}


void tmsg_player_vote::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_player_vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  acc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&renqi_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(renqi_));
  _internal_metadata_.Clear();
}

bool tmsg_player_vote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_player_vote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_player_vote.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 server = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 renqi = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &renqi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string acc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->acc().data(), static_cast<int>(this->acc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_player_vote.acc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_player_vote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_player_vote)
  return false;
#undef DO_
}

void tmsg_player_vote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_player_vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_player_vote.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 server = 3;
  if (this->server() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->server(), output);
  }

  // int32 id = 4;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->id(), output);
  }

  // int32 renqi = 5;
  if (this->renqi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->renqi(), output);
  }

  // string acc = 6;
  if (this->acc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->acc().data(), static_cast<int>(this->acc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_player_vote.acc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->acc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_player_vote)
}

::google::protobuf::uint8* tmsg_player_vote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_player_vote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_player_vote.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 server = 3;
  if (this->server() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->server(), target);
  }

  // int32 id = 4;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->id(), target);
  }

  // int32 renqi = 5;
  if (this->renqi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->renqi(), target);
  }

  // string acc = 6;
  if (this->acc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->acc().data(), static_cast<int>(this->acc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_player_vote.acc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->acc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_player_vote)
  return target;
}

size_t tmsg_player_vote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_player_vote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string acc = 6;
  if (this->acc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->acc());
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // int32 server = 3;
  if (this->server() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->server());
  }

  // int32 id = 4;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 renqi = 5;
  if (this->renqi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->renqi());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_player_vote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_player_vote)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_player_vote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_player_vote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_player_vote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_player_vote)
    MergeFrom(*source);
  }
}

void tmsg_player_vote::MergeFrom(const tmsg_player_vote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_player_vote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.acc().size() > 0) {

    acc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acc_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.server() != 0) {
    set_server(from.server());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.renqi() != 0) {
    set_renqi(from.renqi());
  }
}

void tmsg_player_vote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_player_vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_player_vote::CopyFrom(const tmsg_player_vote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_player_vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_player_vote::IsInitialized() const {
  return true;
}

void tmsg_player_vote::Swap(tmsg_player_vote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_player_vote::InternalSwap(tmsg_player_vote* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  acc_.Swap(&other->acc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(server_, other->server_);
  swap(id_, other->id_);
  swap(renqi_, other->renqi_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_player_vote::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_new_huodong::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_new_huodong::kServerFieldNumber;
const int tmsg_req_new_huodong::kPtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_new_huodong::tmsg_req_new_huodong()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_new_huodong.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_new_huodong)
}
tmsg_req_new_huodong::tmsg_req_new_huodong(const tmsg_req_new_huodong& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server().size() > 0) {
    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  pt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pt().size() > 0) {
    pt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pt_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_new_huodong)
}

void tmsg_req_new_huodong::SharedCtor() {
  server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

tmsg_req_new_huodong::~tmsg_req_new_huodong() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_new_huodong)
  SharedDtor();
}

void tmsg_req_new_huodong::SharedDtor() {
  server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_req_new_huodong::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_new_huodong::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_new_huodong& tmsg_req_new_huodong::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_new_huodong.base);
  return *internal_default_instance();
}


void tmsg_req_new_huodong::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_new_huodong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  pt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool tmsg_req_new_huodong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_new_huodong)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server().data(), static_cast<int>(this->server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_new_huodong.server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pt().data(), static_cast<int>(this->pt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_new_huodong.pt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_new_huodong)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_new_huodong)
  return false;
#undef DO_
}

void tmsg_req_new_huodong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_new_huodong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_new_huodong.server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server(), output);
  }

  // string pt = 2;
  if (this->pt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pt().data(), static_cast<int>(this->pt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_new_huodong.pt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_new_huodong)
}

::google::protobuf::uint8* tmsg_req_new_huodong::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_new_huodong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server = 1;
  if (this->server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server().data(), static_cast<int>(this->server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_new_huodong.server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server(), target);
  }

  // string pt = 2;
  if (this->pt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pt().data(), static_cast<int>(this->pt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_new_huodong.pt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_new_huodong)
  return target;
}

size_t tmsg_req_new_huodong::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_new_huodong)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server = 1;
  if (this->server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server());
  }

  // string pt = 2;
  if (this->pt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_new_huodong::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_new_huodong)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_new_huodong* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_new_huodong>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_new_huodong)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_new_huodong)
    MergeFrom(*source);
  }
}

void tmsg_req_new_huodong::MergeFrom(const tmsg_req_new_huodong& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_new_huodong)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server().size() > 0) {

    server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_);
  }
  if (from.pt().size() > 0) {

    pt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pt_);
  }
}

void tmsg_req_new_huodong::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_new_huodong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_new_huodong::CopyFrom(const tmsg_req_new_huodong& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_new_huodong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_new_huodong::IsInitialized() const {
  return true;
}

void tmsg_req_new_huodong::Swap(tmsg_req_new_huodong* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_new_huodong::InternalSwap(tmsg_req_new_huodong* other) {
  using std::swap;
  server_.Swap(&other->server_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pt_.Swap(&other->pt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_new_huodong::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_huodong::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_huodong::kIdFieldNumber;
const int tmsg_huodong::kStartTimeFieldNumber;
const int tmsg_huodong::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_huodong::tmsg_huodong()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_huodong.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_huodong)
}
tmsg_huodong::tmsg_huodong(const tmsg_huodong& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_time_, &from.start_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&start_time_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_huodong)
}

void tmsg_huodong::SharedCtor() {
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(id_));
}

tmsg_huodong::~tmsg_huodong() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_huodong)
  SharedDtor();
}

void tmsg_huodong::SharedDtor() {
}

void tmsg_huodong::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_huodong::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_huodong& tmsg_huodong::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_huodong.base);
  return *internal_default_instance();
}


void tmsg_huodong::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_huodong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool tmsg_huodong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_huodong)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 end_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_huodong)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_huodong)
  return false;
#undef DO_
}

void tmsg_huodong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_huodong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // uint64 start_time = 2;
  if (this->start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->start_time(), output);
  }

  // uint64 end_time = 3;
  if (this->end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->end_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_huodong)
}

::google::protobuf::uint8* tmsg_huodong::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_huodong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // uint64 start_time = 2;
  if (this->start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->start_time(), target);
  }

  // uint64 end_time = 3;
  if (this->end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->end_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_huodong)
  return target;
}

size_t tmsg_huodong::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_huodong)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 start_time = 2;
  if (this->start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_time());
  }

  // uint64 end_time = 3;
  if (this->end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->end_time());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_huodong::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_huodong)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_huodong* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_huodong>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_huodong)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_huodong)
    MergeFrom(*source);
  }
}

void tmsg_huodong::MergeFrom(const tmsg_huodong& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_huodong)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_time() != 0) {
    set_start_time(from.start_time());
  }
  if (from.end_time() != 0) {
    set_end_time(from.end_time());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void tmsg_huodong::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_huodong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_huodong::CopyFrom(const tmsg_huodong& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_huodong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_huodong::IsInitialized() const {
  return true;
}

void tmsg_huodong::Swap(tmsg_huodong* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_huodong::InternalSwap(tmsg_huodong* other) {
  using std::swap;
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_huodong::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_new_huodong::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_new_huodong::kHuodongFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_new_huodong::tmsg_rep_new_huodong()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_new_huodong.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_new_huodong)
}
tmsg_rep_new_huodong::tmsg_rep_new_huodong(const tmsg_rep_new_huodong& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      huodong_(from.huodong_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_new_huodong)
}

void tmsg_rep_new_huodong::SharedCtor() {
}

tmsg_rep_new_huodong::~tmsg_rep_new_huodong() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_new_huodong)
  SharedDtor();
}

void tmsg_rep_new_huodong::SharedDtor() {
}

void tmsg_rep_new_huodong::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_new_huodong::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_new_huodong& tmsg_rep_new_huodong::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_new_huodong.base);
  return *internal_default_instance();
}


void tmsg_rep_new_huodong::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_new_huodong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  huodong_.Clear();
  _internal_metadata_.Clear();
}

bool tmsg_rep_new_huodong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_new_huodong)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .rpcproto.tmsg_huodong huodong = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_huodong()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_new_huodong)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_new_huodong)
  return false;
#undef DO_
}

void tmsg_rep_new_huodong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_new_huodong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rpcproto.tmsg_huodong huodong = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->huodong_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->huodong(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_new_huodong)
}

::google::protobuf::uint8* tmsg_rep_new_huodong::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_new_huodong)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rpcproto.tmsg_huodong huodong = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->huodong_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->huodong(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_new_huodong)
  return target;
}

size_t tmsg_rep_new_huodong::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_new_huodong)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rpcproto.tmsg_huodong huodong = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->huodong_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->huodong(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_new_huodong::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_new_huodong)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_new_huodong* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_new_huodong>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_new_huodong)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_new_huodong)
    MergeFrom(*source);
  }
}

void tmsg_rep_new_huodong::MergeFrom(const tmsg_rep_new_huodong& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_new_huodong)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  huodong_.MergeFrom(from.huodong_);
}

void tmsg_rep_new_huodong::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_new_huodong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_new_huodong::CopyFrom(const tmsg_rep_new_huodong& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_new_huodong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_new_huodong::IsInitialized() const {
  return true;
}

void tmsg_rep_new_huodong::Swap(tmsg_rep_new_huodong* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_new_huodong::InternalSwap(tmsg_rep_new_huodong* other) {
  using std::swap;
  CastToBase(&huodong_)->InternalSwap(CastToBase(&other->huodong_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_new_huodong::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_kick::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_kick::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_kick::tmsg_kick()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_kick.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_kick)
}
tmsg_kick::tmsg_kick(const tmsg_kick& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_kick)
}

void tmsg_kick::SharedCtor() {
  guid_ = GOOGLE_ULONGLONG(0);
}

tmsg_kick::~tmsg_kick() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_kick)
  SharedDtor();
}

void tmsg_kick::SharedDtor() {
}

void tmsg_kick::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_kick::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_kick& tmsg_kick::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_kick.base);
  return *internal_default_instance();
}


void tmsg_kick::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_kick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool tmsg_kick::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_kick)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_kick)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_kick)
  return false;
#undef DO_
}

void tmsg_kick::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_kick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_kick)
}

::google::protobuf::uint8* tmsg_kick::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_kick)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_kick)
  return target;
}

size_t tmsg_kick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_kick)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_kick::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_kick)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_kick* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_kick>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_kick)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_kick)
    MergeFrom(*source);
  }
}

void tmsg_kick::MergeFrom(const tmsg_kick& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_kick)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void tmsg_kick::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_kick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_kick::CopyFrom(const tmsg_kick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_kick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_kick::IsInitialized() const {
  return true;
}

void tmsg_kick::Swap(tmsg_kick* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_kick::InternalSwap(tmsg_kick* other) {
  using std::swap;
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_kick::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_activity_reward::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_activity_reward::kIdFieldNumber;
const int tmsg_activity_reward::kConditionFieldNumber;
const int tmsg_activity_reward::kArg1FieldNumber;
const int tmsg_activity_reward::kArg2FieldNumber;
const int tmsg_activity_reward::kArg3FieldNumber;
const int tmsg_activity_reward::kArg4FieldNumber;
const int tmsg_activity_reward::kArg5FieldNumber;
const int tmsg_activity_reward::kArg6FieldNumber;
const int tmsg_activity_reward::kArg7FieldNumber;
const int tmsg_activity_reward::kArg8FieldNumber;
const int tmsg_activity_reward::kTypesFieldNumber;
const int tmsg_activity_reward::kValue1SFieldNumber;
const int tmsg_activity_reward::kValue2SFieldNumber;
const int tmsg_activity_reward::kValue3SFieldNumber;
const int tmsg_activity_reward::kShowTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_activity_reward::tmsg_activity_reward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_activity_reward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_activity_reward)
}
tmsg_activity_reward::tmsg_activity_reward(const tmsg_activity_reward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      arg6_(from.arg6_),
      arg7_(from.arg7_),
      arg8_(from.arg8_),
      types_(from.types_),
      value1s_(from.value1s_),
      value2s_(from.value2s_),
      value3s_(from.value3s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&arg5_) -
    reinterpret_cast<char*>(&id_)) + sizeof(arg5_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_activity_reward)
}

void tmsg_activity_reward::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&arg5_) -
      reinterpret_cast<char*>(&id_)) + sizeof(arg5_));
}

tmsg_activity_reward::~tmsg_activity_reward() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_activity_reward)
  SharedDtor();
}

void tmsg_activity_reward::SharedDtor() {
}

void tmsg_activity_reward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_activity_reward::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_activity_reward& tmsg_activity_reward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_activity_reward.base);
  return *internal_default_instance();
}


void tmsg_activity_reward::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_activity_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  arg6_.Clear();
  set_changed();
  arg7_.Clear();
  set_changed();
  arg8_.Clear();
  set_changed();
  types_.Clear();
  set_changed();
  value1s_.Clear();
  set_changed();
  value2s_.Clear();
  set_changed();
  value3s_.Clear();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&arg5_) -
      reinterpret_cast<char*>(&id_)) + sizeof(arg5_));
  _internal_metadata_.Clear();
}

bool tmsg_activity_reward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_activity_reward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 condition = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &condition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 arg1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arg1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 arg2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arg2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 arg3 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arg3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 arg4 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arg4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 arg5 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arg5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 arg6 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_arg6())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_arg6())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 arg7 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_arg7())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_arg7())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 arg8 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_arg8())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 82u, input, this->mutable_arg8())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 types = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_types())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 90u, input, this->mutable_types())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value1s = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value1s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 98u, input, this->mutable_value1s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value2s = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value2s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 106u, input, this->mutable_value2s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 value3s = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value3s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 114u, input, this->mutable_value3s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 show_time = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &show_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_activity_reward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_activity_reward)
  return false;
#undef DO_
}

void tmsg_activity_reward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_activity_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 condition = 2;
  if (this->condition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->condition(), output);
  }

  // int32 arg1 = 3;
  if (this->arg1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->arg1(), output);
  }

  // int32 arg2 = 4;
  if (this->arg2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->arg2(), output);
  }

  // int32 arg3 = 5;
  if (this->arg3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->arg3(), output);
  }

  // int32 arg4 = 6;
  if (this->arg4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->arg4(), output);
  }

  // int32 arg5 = 7;
  if (this->arg5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->arg5(), output);
  }

  // repeated int32 arg6 = 8;
  if (this->arg6_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _arg6_cached_byte_size_));
  }
  for (int i = 0, n = this->arg6_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->arg6(i), output);
  }

  // repeated int32 arg7 = 9;
  if (this->arg7_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _arg7_cached_byte_size_));
  }
  for (int i = 0, n = this->arg7_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->arg7(i), output);
  }

  // repeated int32 arg8 = 10;
  if (this->arg8_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _arg8_cached_byte_size_));
  }
  for (int i = 0, n = this->arg8_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->arg8(i), output);
  }

  // repeated int32 types = 11;
  if (this->types_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _types_cached_byte_size_));
  }
  for (int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->types(i), output);
  }

  // repeated int32 value1s = 12;
  if (this->value1s_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value1s_cached_byte_size_));
  }
  for (int i = 0, n = this->value1s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->value1s(i), output);
  }

  // repeated int32 value2s = 13;
  if (this->value2s_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value2s_cached_byte_size_));
  }
  for (int i = 0, n = this->value2s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->value2s(i), output);
  }

  // repeated int32 value3s = 14;
  if (this->value3s_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _value3s_cached_byte_size_));
  }
  for (int i = 0, n = this->value3s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->value3s(i), output);
  }

  // uint64 show_time = 15;
  if (this->show_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->show_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_activity_reward)
}

::google::protobuf::uint8* tmsg_activity_reward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_activity_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 condition = 2;
  if (this->condition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->condition(), target);
  }

  // int32 arg1 = 3;
  if (this->arg1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->arg1(), target);
  }

  // int32 arg2 = 4;
  if (this->arg2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->arg2(), target);
  }

  // int32 arg3 = 5;
  if (this->arg3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->arg3(), target);
  }

  // int32 arg4 = 6;
  if (this->arg4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->arg4(), target);
  }

  // int32 arg5 = 7;
  if (this->arg5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->arg5(), target);
  }

  // repeated int32 arg6 = 8;
  if (this->arg6_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _arg6_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->arg6_, target);
  }

  // repeated int32 arg7 = 9;
  if (this->arg7_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _arg7_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->arg7_, target);
  }

  // repeated int32 arg8 = 10;
  if (this->arg8_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _arg8_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->arg8_, target);
  }

  // repeated int32 types = 11;
  if (this->types_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _types_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->types_, target);
  }

  // repeated int32 value1s = 12;
  if (this->value1s_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _value1s_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->value1s_, target);
  }

  // repeated int32 value2s = 13;
  if (this->value2s_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _value2s_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->value2s_, target);
  }

  // repeated int32 value3s = 14;
  if (this->value3s_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _value3s_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->value3s_, target);
  }

  // uint64 show_time = 15;
  if (this->show_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->show_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_activity_reward)
  return target;
}

size_t tmsg_activity_reward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_activity_reward)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 arg6 = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->arg6_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _arg6_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 arg7 = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->arg7_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _arg7_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 arg8 = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->arg8_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _arg8_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 types = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->types_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _types_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 value1s = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value1s_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value1s_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 value2s = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value2s_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value2s_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 value3s = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->value3s_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _value3s_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 condition = 2;
  if (this->condition() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->condition());
  }

  // int32 arg1 = 3;
  if (this->arg1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->arg1());
  }

  // int32 arg2 = 4;
  if (this->arg2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->arg2());
  }

  // int32 arg3 = 5;
  if (this->arg3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->arg3());
  }

  // int32 arg4 = 6;
  if (this->arg4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->arg4());
  }

  // uint64 show_time = 15;
  if (this->show_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->show_time());
  }

  // int32 arg5 = 7;
  if (this->arg5() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->arg5());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_activity_reward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_activity_reward)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_activity_reward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_activity_reward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_activity_reward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_activity_reward)
    MergeFrom(*source);
  }
}

void tmsg_activity_reward::MergeFrom(const tmsg_activity_reward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_activity_reward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arg6_.MergeFrom(from.arg6_);
  arg7_.MergeFrom(from.arg7_);
  arg8_.MergeFrom(from.arg8_);
  types_.MergeFrom(from.types_);
  value1s_.MergeFrom(from.value1s_);
  value2s_.MergeFrom(from.value2s_);
  value3s_.MergeFrom(from.value3s_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.condition() != 0) {
    set_condition(from.condition());
  }
  if (from.arg1() != 0) {
    set_arg1(from.arg1());
  }
  if (from.arg2() != 0) {
    set_arg2(from.arg2());
  }
  if (from.arg3() != 0) {
    set_arg3(from.arg3());
  }
  if (from.arg4() != 0) {
    set_arg4(from.arg4());
  }
  if (from.show_time() != 0) {
    set_show_time(from.show_time());
  }
  if (from.arg5() != 0) {
    set_arg5(from.arg5());
  }
}

void tmsg_activity_reward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_activity_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_activity_reward::CopyFrom(const tmsg_activity_reward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_activity_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_activity_reward::IsInitialized() const {
  return true;
}

void tmsg_activity_reward::Swap(tmsg_activity_reward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_activity_reward::InternalSwap(tmsg_activity_reward* other) {
  using std::swap;
  arg6_.InternalSwap(&other->arg6_);
  arg7_.InternalSwap(&other->arg7_);
  arg8_.InternalSwap(&other->arg8_);
  types_.InternalSwap(&other->types_);
  value1s_.InternalSwap(&other->value1s_);
  value2s_.InternalSwap(&other->value2s_);
  value3s_.InternalSwap(&other->value3s_);
  swap(id_, other->id_);
  swap(condition_, other->condition_);
  swap(arg1_, other->arg1_);
  swap(arg2_, other->arg2_);
  swap(arg3_, other->arg3_);
  swap(arg4_, other->arg4_);
  swap(show_time_, other->show_time_);
  swap(arg5_, other->arg5_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_activity_reward::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_activity::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_activity::kIdFieldNumber;
const int tmsg_activity::kStartFieldNumber;
const int tmsg_activity::kEndFieldNumber;
const int tmsg_activity::kKaifuStartFieldNumber;
const int tmsg_activity::kKaifuEndFieldNumber;
const int tmsg_activity::kNameFieldNumber;
const int tmsg_activity::kTypeFieldNumber;
const int tmsg_activity::kSubtypeFieldNumber;
const int tmsg_activity::kShowFieldNumber;
const int tmsg_activity::kNoshowFieldNumber;
const int tmsg_activity::kKaikaiStartFieldNumber;
const int tmsg_activity::kRewardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_activity::tmsg_activity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_activity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_activity)
}
tmsg_activity::tmsg_activity(const tmsg_activity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rewards_(from.rewards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&noshow_) -
    reinterpret_cast<char*>(&start_)) + sizeof(noshow_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_activity)
}

void tmsg_activity::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&noshow_) -
      reinterpret_cast<char*>(&start_)) + sizeof(noshow_));
}

tmsg_activity::~tmsg_activity() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_activity)
  SharedDtor();
}

void tmsg_activity::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_activity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_activity::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_activity& tmsg_activity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_activity.base);
  return *internal_default_instance();
}


void tmsg_activity::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_activity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rewards_.Clear();
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&noshow_) -
      reinterpret_cast<char*>(&start_)) + sizeof(noshow_));
  _internal_metadata_.Clear();
}

bool tmsg_activity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_activity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 end = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 kaifu_start = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kaifu_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 kaifu_end = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kaifu_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_activity.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 subtype = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &subtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 show = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &show_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 noshow = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &noshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 kaikai_start = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kaikai_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rpcproto.tmsg_activity_reward rewards = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rewards()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_activity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_activity)
  return false;
#undef DO_
}

void tmsg_activity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_activity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // uint64 start = 2;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->start(), output);
  }

  // uint64 end = 3;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->end(), output);
  }

  // int32 kaifu_start = 4;
  if (this->kaifu_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->kaifu_start(), output);
  }

  // int32 kaifu_end = 5;
  if (this->kaifu_end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->kaifu_end(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_activity.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // int32 type = 7;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->type(), output);
  }

  // int32 subtype = 8;
  if (this->subtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->subtype(), output);
  }

  // uint64 show = 9;
  if (this->show() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->show(), output);
  }

  // uint64 noshow = 10;
  if (this->noshow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->noshow(), output);
  }

  // int32 kaikai_start = 11;
  if (this->kaikai_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->kaikai_start(), output);
  }

  // repeated .rpcproto.tmsg_activity_reward rewards = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rewards_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->rewards(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_activity)
}

::google::protobuf::uint8* tmsg_activity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_activity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // uint64 start = 2;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->start(), target);
  }

  // uint64 end = 3;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->end(), target);
  }

  // int32 kaifu_start = 4;
  if (this->kaifu_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->kaifu_start(), target);
  }

  // int32 kaifu_end = 5;
  if (this->kaifu_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->kaifu_end(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_activity.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // int32 type = 7;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->type(), target);
  }

  // int32 subtype = 8;
  if (this->subtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->subtype(), target);
  }

  // uint64 show = 9;
  if (this->show() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->show(), target);
  }

  // uint64 noshow = 10;
  if (this->noshow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->noshow(), target);
  }

  // int32 kaikai_start = 11;
  if (this->kaikai_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->kaikai_start(), target);
  }

  // repeated .rpcproto.tmsg_activity_reward rewards = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rewards_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->rewards(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_activity)
  return target;
}

size_t tmsg_activity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_activity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rpcproto.tmsg_activity_reward rewards = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->rewards_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rewards(static_cast<int>(i)));
    }
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 start = 2;
  if (this->start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 kaifu_start = 4;
  if (this->kaifu_start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kaifu_start());
  }

  // uint64 end = 3;
  if (this->end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->end());
  }

  // int32 kaifu_end = 5;
  if (this->kaifu_end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kaifu_end());
  }

  // int32 type = 7;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // uint64 show = 9;
  if (this->show() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->show());
  }

  // int32 subtype = 8;
  if (this->subtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->subtype());
  }

  // int32 kaikai_start = 11;
  if (this->kaikai_start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kaikai_start());
  }

  // uint64 noshow = 10;
  if (this->noshow() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->noshow());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_activity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_activity)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_activity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_activity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_activity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_activity)
    MergeFrom(*source);
  }
}

void tmsg_activity::MergeFrom(const tmsg_activity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_activity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rewards_.MergeFrom(from.rewards_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.kaifu_start() != 0) {
    set_kaifu_start(from.kaifu_start());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
  if (from.kaifu_end() != 0) {
    set_kaifu_end(from.kaifu_end());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.show() != 0) {
    set_show(from.show());
  }
  if (from.subtype() != 0) {
    set_subtype(from.subtype());
  }
  if (from.kaikai_start() != 0) {
    set_kaikai_start(from.kaikai_start());
  }
  if (from.noshow() != 0) {
    set_noshow(from.noshow());
  }
}

void tmsg_activity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_activity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_activity::CopyFrom(const tmsg_activity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_activity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_activity::IsInitialized() const {
  return true;
}

void tmsg_activity::Swap(tmsg_activity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_activity::InternalSwap(tmsg_activity* other) {
  using std::swap;
  CastToBase(&rewards_)->InternalSwap(CastToBase(&other->rewards_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_, other->start_);
  swap(id_, other->id_);
  swap(kaifu_start_, other->kaifu_start_);
  swap(end_, other->end_);
  swap(kaifu_end_, other->kaifu_end_);
  swap(type_, other->type_);
  swap(show_, other->show_);
  swap(subtype_, other->subtype_);
  swap(kaikai_start_, other->kaikai_start_);
  swap(noshow_, other->noshow_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_activity::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_activity_group::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_activity_group::kActivitysFieldNumber;
const int tmsg_activity_group::kNameFieldNumber;
const int tmsg_activity_group::kIsjieriFieldNumber;
const int tmsg_activity_group::kItemName1FieldNumber;
const int tmsg_activity_group::kItemName2FieldNumber;
const int tmsg_activity_group::kItemDes1FieldNumber;
const int tmsg_activity_group::kItemDes2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_activity_group::tmsg_activity_group()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_activity_group.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_activity_group)
}
tmsg_activity_group::tmsg_activity_group(const tmsg_activity_group& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      activitys_(from.activitys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  item_name1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.item_name1().size() > 0) {
    item_name1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_name1_);
  }
  item_name2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.item_name2().size() > 0) {
    item_name2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_name2_);
  }
  item_des1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.item_des1().size() > 0) {
    item_des1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_des1_);
  }
  item_des2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.item_des2().size() > 0) {
    item_des2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_des2_);
  }
  isjieri_ = from.isjieri_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_activity_group)
}

void tmsg_activity_group::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_name1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_name2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_des1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_des2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isjieri_ = 0;
}

tmsg_activity_group::~tmsg_activity_group() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_activity_group)
  SharedDtor();
}

void tmsg_activity_group::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_name1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_name2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_des1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_des2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_activity_group::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_activity_group::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_activity_group& tmsg_activity_group::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_activity_group.base);
  return *internal_default_instance();
}


void tmsg_activity_group::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_activity_group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  activitys_.Clear();
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  item_name1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  item_name2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  item_des1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  item_des2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  isjieri_ = 0;
  _internal_metadata_.Clear();
}

bool tmsg_activity_group::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_activity_group)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .rpcproto.tmsg_activity activitys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_activitys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_activity_group.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isjieri = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isjieri_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string item_name1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_name1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item_name1().data(), static_cast<int>(this->item_name1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_activity_group.item_name1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string item_name2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_name2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item_name2().data(), static_cast<int>(this->item_name2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_activity_group.item_name2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string item_des1 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_des1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item_des1().data(), static_cast<int>(this->item_des1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_activity_group.item_des1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string item_des2 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_des2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item_des2().data(), static_cast<int>(this->item_des2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_activity_group.item_des2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_activity_group)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_activity_group)
  return false;
#undef DO_
}

void tmsg_activity_group::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_activity_group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rpcproto.tmsg_activity activitys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activitys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->activitys(static_cast<int>(i)),
      output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_activity_group.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 isjieri = 3;
  if (this->isjieri() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->isjieri(), output);
  }

  // string item_name1 = 4;
  if (this->item_name1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_name1().data(), static_cast<int>(this->item_name1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_activity_group.item_name1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_name1(), output);
  }

  // string item_name2 = 5;
  if (this->item_name2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_name2().data(), static_cast<int>(this->item_name2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_activity_group.item_name2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->item_name2(), output);
  }

  // string item_des1 = 6;
  if (this->item_des1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_des1().data(), static_cast<int>(this->item_des1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_activity_group.item_des1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->item_des1(), output);
  }

  // string item_des2 = 7;
  if (this->item_des2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_des2().data(), static_cast<int>(this->item_des2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_activity_group.item_des2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->item_des2(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_activity_group)
}

::google::protobuf::uint8* tmsg_activity_group::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_activity_group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rpcproto.tmsg_activity activitys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->activitys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->activitys(static_cast<int>(i)), deterministic, target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_activity_group.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 isjieri = 3;
  if (this->isjieri() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->isjieri(), target);
  }

  // string item_name1 = 4;
  if (this->item_name1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_name1().data(), static_cast<int>(this->item_name1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_activity_group.item_name1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_name1(), target);
  }

  // string item_name2 = 5;
  if (this->item_name2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_name2().data(), static_cast<int>(this->item_name2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_activity_group.item_name2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->item_name2(), target);
  }

  // string item_des1 = 6;
  if (this->item_des1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_des1().data(), static_cast<int>(this->item_des1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_activity_group.item_des1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->item_des1(), target);
  }

  // string item_des2 = 7;
  if (this->item_des2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_des2().data(), static_cast<int>(this->item_des2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_activity_group.item_des2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->item_des2(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_activity_group)
  return target;
}

size_t tmsg_activity_group::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_activity_group)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rpcproto.tmsg_activity activitys = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->activitys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->activitys(static_cast<int>(i)));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string item_name1 = 4;
  if (this->item_name1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item_name1());
  }

  // string item_name2 = 5;
  if (this->item_name2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item_name2());
  }

  // string item_des1 = 6;
  if (this->item_des1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item_des1());
  }

  // string item_des2 = 7;
  if (this->item_des2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item_des2());
  }

  // int32 isjieri = 3;
  if (this->isjieri() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isjieri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_activity_group::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_activity_group)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_activity_group* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_activity_group>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_activity_group)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_activity_group)
    MergeFrom(*source);
  }
}

void tmsg_activity_group::MergeFrom(const tmsg_activity_group& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_activity_group)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  activitys_.MergeFrom(from.activitys_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.item_name1().size() > 0) {

    item_name1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_name1_);
  }
  if (from.item_name2().size() > 0) {

    item_name2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_name2_);
  }
  if (from.item_des1().size() > 0) {

    item_des1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_des1_);
  }
  if (from.item_des2().size() > 0) {

    item_des2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_des2_);
  }
  if (from.isjieri() != 0) {
    set_isjieri(from.isjieri());
  }
}

void tmsg_activity_group::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_activity_group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_activity_group::CopyFrom(const tmsg_activity_group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_activity_group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_activity_group::IsInitialized() const {
  return true;
}

void tmsg_activity_group::Swap(tmsg_activity_group* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_activity_group::InternalSwap(tmsg_activity_group* other) {
  using std::swap;
  CastToBase(&activitys_)->InternalSwap(CastToBase(&other->activitys_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  item_name1_.Swap(&other->item_name1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  item_name2_.Swap(&other->item_name2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  item_des1_.Swap(&other->item_des1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  item_des2_.Swap(&other->item_des2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(isjieri_, other->isjieri_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_activity_group::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_recharge_apple::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_recharge_apple::kCodeFieldNumber;
const int tmsg_req_recharge_apple::kGuidFieldNumber;
const int tmsg_req_recharge_apple::kUsernameFieldNumber;
const int tmsg_req_recharge_apple::kServeridFieldNumber;
const int tmsg_req_recharge_apple::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_recharge_apple::tmsg_req_recharge_apple()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_recharge_apple.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_recharge_apple)
}
tmsg_req_recharge_apple::tmsg_req_recharge_apple(const tmsg_req_recharge_apple& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serverid().size() > 0) {
    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rid_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(rid_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_recharge_apple)
}

void tmsg_req_recharge_apple::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rid_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(rid_));
}

tmsg_req_recharge_apple::~tmsg_req_recharge_apple() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_recharge_apple)
  SharedDtor();
}

void tmsg_req_recharge_apple::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_req_recharge_apple::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_recharge_apple::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_recharge_apple& tmsg_req_recharge_apple::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_recharge_apple.base);
  return *internal_default_instance();
}


void tmsg_req_recharge_apple::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_recharge_apple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rid_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(rid_));
  _internal_metadata_.Clear();
}

bool tmsg_req_recharge_apple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_recharge_apple)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_recharge_apple.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_recharge_apple.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serverid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverid().data(), static_cast<int>(this->serverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_recharge_apple.serverid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_recharge_apple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_recharge_apple)
  return false;
#undef DO_
}

void tmsg_req_recharge_apple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_recharge_apple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_recharge_apple.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_recharge_apple.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // string serverid = 4;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_recharge_apple.serverid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->serverid(), output);
  }

  // int32 rid = 5;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->rid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_recharge_apple)
}

::google::protobuf::uint8* tmsg_req_recharge_apple::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_recharge_apple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_recharge_apple.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // string username = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_recharge_apple.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // string serverid = 4;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_recharge_apple.serverid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->serverid(), target);
  }

  // int32 rid = 5;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->rid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_recharge_apple)
  return target;
}

size_t tmsg_req_recharge_apple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_recharge_apple)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string username = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string serverid = 4;
  if (this->serverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverid());
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // int32 rid = 5;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_recharge_apple::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_recharge_apple)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_recharge_apple* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_recharge_apple>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_recharge_apple)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_recharge_apple)
    MergeFrom(*source);
  }
}

void tmsg_req_recharge_apple::MergeFrom(const tmsg_req_recharge_apple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_recharge_apple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.serverid().size() > 0) {

    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void tmsg_req_recharge_apple::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_recharge_apple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_recharge_apple::CopyFrom(const tmsg_req_recharge_apple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_recharge_apple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_recharge_apple::IsInitialized() const {
  return true;
}

void tmsg_req_recharge_apple::Swap(tmsg_req_recharge_apple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_recharge_apple::InternalSwap(tmsg_req_recharge_apple* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  serverid_.Swap(&other->serverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(rid_, other->rid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_recharge_apple::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_recharge_apple::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_recharge_apple::kResFieldNumber;
const int tmsg_rep_recharge_apple::kOrderidFieldNumber;
const int tmsg_rep_recharge_apple::kProductIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_recharge_apple::tmsg_rep_recharge_apple()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_recharge_apple.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_recharge_apple)
}
tmsg_rep_recharge_apple::tmsg_rep_recharge_apple(const tmsg_rep_recharge_apple& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  orderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.orderid().size() > 0) {
    orderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orderid_);
  }
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_recharge_apple)
}

void tmsg_rep_recharge_apple::SharedCtor() {
  orderid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  res_ = 0;
}

tmsg_rep_recharge_apple::~tmsg_rep_recharge_apple() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_recharge_apple)
  SharedDtor();
}

void tmsg_rep_recharge_apple::SharedDtor() {
  orderid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_rep_recharge_apple::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_recharge_apple::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_recharge_apple& tmsg_rep_recharge_apple::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_recharge_apple.base);
  return *internal_default_instance();
}


void tmsg_rep_recharge_apple::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_recharge_apple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  orderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  res_ = 0;
  _internal_metadata_.Clear();
}

bool tmsg_rep_recharge_apple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_recharge_apple)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 res = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string orderid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orderid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->orderid().data(), static_cast<int>(this->orderid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_rep_recharge_apple.orderid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_rep_recharge_apple.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_recharge_apple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_recharge_apple)
  return false;
#undef DO_
}

void tmsg_rep_recharge_apple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_recharge_apple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 res = 1;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->res(), output);
  }

  // string orderid = 2;
  if (this->orderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->orderid().data(), static_cast<int>(this->orderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_rep_recharge_apple.orderid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->orderid(), output);
  }

  // string product_id = 3;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_rep_recharge_apple.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->product_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_recharge_apple)
}

::google::protobuf::uint8* tmsg_rep_recharge_apple::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_recharge_apple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 res = 1;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->res(), target);
  }

  // string orderid = 2;
  if (this->orderid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->orderid().data(), static_cast<int>(this->orderid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_rep_recharge_apple.orderid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->orderid(), target);
  }

  // string product_id = 3;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_rep_recharge_apple.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->product_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_recharge_apple)
  return target;
}

size_t tmsg_rep_recharge_apple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_recharge_apple)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string orderid = 2;
  if (this->orderid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->orderid());
  }

  // string product_id = 3;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  // int32 res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->res());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_recharge_apple::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_recharge_apple)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_recharge_apple* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_recharge_apple>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_recharge_apple)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_recharge_apple)
    MergeFrom(*source);
  }
}

void tmsg_rep_recharge_apple::MergeFrom(const tmsg_rep_recharge_apple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_recharge_apple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.orderid().size() > 0) {

    orderid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orderid_);
  }
  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  if (from.res() != 0) {
    set_res(from.res());
  }
}

void tmsg_rep_recharge_apple::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_recharge_apple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_recharge_apple::CopyFrom(const tmsg_rep_recharge_apple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_recharge_apple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_recharge_apple::IsInitialized() const {
  return true;
}

void tmsg_rep_recharge_apple::Swap(tmsg_rep_recharge_apple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_recharge_apple::InternalSwap(tmsg_rep_recharge_apple* other) {
  using std::swap;
  orderid_.Swap(&other->orderid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  product_id_.Swap(&other->product_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(res_, other->res_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_recharge_apple::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_fight_equip::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_fight_equip::kGuidFieldNumber;
const int tmsg_fight_equip::kPlayerGuidFieldNumber;
const int tmsg_fight_equip::kTemplateIdFieldNumber;
const int tmsg_fight_equip::kRoleGuidFieldNumber;
const int tmsg_fight_equip::kEnhanceFieldNumber;
const int tmsg_fight_equip::kRandIdsFieldNumber;
const int tmsg_fight_equip::kRandValuesFieldNumber;
const int tmsg_fight_equip::kStoneFieldNumber;
const int tmsg_fight_equip::kJilianFieldNumber;
const int tmsg_fight_equip::kStarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_fight_equip::tmsg_fight_equip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_fight_equip.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_fight_equip)
}
tmsg_fight_equip::tmsg_fight_equip(const tmsg_fight_equip& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rand_ids_(from.rand_ids_),
      rand_values_(from.rand_values_),
      stone_(from.stone_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&star_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(star_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_fight_equip)
}

void tmsg_fight_equip::SharedCtor() {
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&star_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(star_));
}

tmsg_fight_equip::~tmsg_fight_equip() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_fight_equip)
  SharedDtor();
}

void tmsg_fight_equip::SharedDtor() {
}

void tmsg_fight_equip::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_fight_equip::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_fight_equip& tmsg_fight_equip::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_fight_equip.base);
  return *internal_default_instance();
}


void tmsg_fight_equip::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_fight_equip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  rand_ids_.Clear();
  set_changed();
  rand_values_.Clear();
  set_changed();
  stone_.Clear();
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&star_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(star_));
  _internal_metadata_.Clear();
}

bool tmsg_fight_equip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_fight_equip)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 template_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &template_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 role_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &role_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 enhance = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enhance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 rand_ids = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_rand_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_rand_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 rand_values = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_rand_values())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_rand_values())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 stone = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_stone())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_stone())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 jilian = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jilian_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 star = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &star_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_fight_equip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_fight_equip)
  return false;
#undef DO_
}

void tmsg_fight_equip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_fight_equip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_guid(), output);
  }

  // int32 template_id = 3;
  if (this->template_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->template_id(), output);
  }

  // uint64 role_guid = 4;
  if (this->role_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->role_guid(), output);
  }

  // int32 enhance = 5;
  if (this->enhance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->enhance(), output);
  }

  // repeated int32 rand_ids = 7;
  if (this->rand_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rand_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->rand_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->rand_ids(i), output);
  }

  // repeated int32 rand_values = 8;
  if (this->rand_values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rand_values_cached_byte_size_));
  }
  for (int i = 0, n = this->rand_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->rand_values(i), output);
  }

  // repeated int32 stone = 9;
  if (this->stone_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _stone_cached_byte_size_));
  }
  for (int i = 0, n = this->stone_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->stone(i), output);
  }

  // int32 jilian = 10;
  if (this->jilian() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->jilian(), output);
  }

  // int32 star = 11;
  if (this->star() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->star(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_fight_equip)
}

::google::protobuf::uint8* tmsg_fight_equip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_fight_equip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_guid(), target);
  }

  // int32 template_id = 3;
  if (this->template_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->template_id(), target);
  }

  // uint64 role_guid = 4;
  if (this->role_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->role_guid(), target);
  }

  // int32 enhance = 5;
  if (this->enhance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->enhance(), target);
  }

  // repeated int32 rand_ids = 7;
  if (this->rand_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rand_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->rand_ids_, target);
  }

  // repeated int32 rand_values = 8;
  if (this->rand_values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rand_values_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->rand_values_, target);
  }

  // repeated int32 stone = 9;
  if (this->stone_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _stone_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->stone_, target);
  }

  // int32 jilian = 10;
  if (this->jilian() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->jilian(), target);
  }

  // int32 star = 11;
  if (this->star() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->star(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_fight_equip)
  return target;
}

size_t tmsg_fight_equip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_fight_equip)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 rand_ids = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->rand_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rand_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 rand_values = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->rand_values_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rand_values_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 stone = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->stone_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _stone_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  // uint64 role_guid = 4;
  if (this->role_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->role_guid());
  }

  // int32 template_id = 3;
  if (this->template_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->template_id());
  }

  // int32 enhance = 5;
  if (this->enhance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->enhance());
  }

  // int32 jilian = 10;
  if (this->jilian() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jilian());
  }

  // int32 star = 11;
  if (this->star() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->star());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_fight_equip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_fight_equip)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_fight_equip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_fight_equip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_fight_equip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_fight_equip)
    MergeFrom(*source);
  }
}

void tmsg_fight_equip::MergeFrom(const tmsg_fight_equip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_fight_equip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rand_ids_.MergeFrom(from.rand_ids_);
  rand_values_.MergeFrom(from.rand_values_);
  stone_.MergeFrom(from.stone_);
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.player_guid() != 0) {
    set_player_guid(from.player_guid());
  }
  if (from.role_guid() != 0) {
    set_role_guid(from.role_guid());
  }
  if (from.template_id() != 0) {
    set_template_id(from.template_id());
  }
  if (from.enhance() != 0) {
    set_enhance(from.enhance());
  }
  if (from.jilian() != 0) {
    set_jilian(from.jilian());
  }
  if (from.star() != 0) {
    set_star(from.star());
  }
}

void tmsg_fight_equip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_fight_equip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_fight_equip::CopyFrom(const tmsg_fight_equip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_fight_equip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_fight_equip::IsInitialized() const {
  return true;
}

void tmsg_fight_equip::Swap(tmsg_fight_equip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_fight_equip::InternalSwap(tmsg_fight_equip* other) {
  using std::swap;
  rand_ids_.InternalSwap(&other->rand_ids_);
  rand_values_.InternalSwap(&other->rand_values_);
  stone_.InternalSwap(&other->stone_);
  swap(guid_, other->guid_);
  swap(player_guid_, other->player_guid_);
  swap(role_guid_, other->role_guid_);
  swap(template_id_, other->template_id_);
  swap(enhance_, other->enhance_);
  swap(jilian_, other->jilian_);
  swap(star_, other->star_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_fight_equip::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_fight_treasure::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_fight_treasure::kGuidFieldNumber;
const int tmsg_fight_treasure::kPlayerGuidFieldNumber;
const int tmsg_fight_treasure::kTemplateIdFieldNumber;
const int tmsg_fight_treasure::kRoleGuidFieldNumber;
const int tmsg_fight_treasure::kEnhanceFieldNumber;
const int tmsg_fight_treasure::kJilianFieldNumber;
const int tmsg_fight_treasure::kStarFieldNumber;
const int tmsg_fight_treasure::kStarExpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_fight_treasure::tmsg_fight_treasure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_fight_treasure.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_fight_treasure)
}
tmsg_fight_treasure::tmsg_fight_treasure(const tmsg_fight_treasure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&star_exp_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(star_exp_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_fight_treasure)
}

void tmsg_fight_treasure::SharedCtor() {
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&star_exp_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(star_exp_));
}

tmsg_fight_treasure::~tmsg_fight_treasure() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_fight_treasure)
  SharedDtor();
}

void tmsg_fight_treasure::SharedDtor() {
}

void tmsg_fight_treasure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_fight_treasure::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_fight_treasure& tmsg_fight_treasure::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_fight_treasure.base);
  return *internal_default_instance();
}


void tmsg_fight_treasure::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_fight_treasure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&star_exp_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(star_exp_));
  _internal_metadata_.Clear();
}

bool tmsg_fight_treasure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_fight_treasure)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 template_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &template_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 role_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &role_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 enhance = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enhance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 jilian = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jilian_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 star = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &star_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 star_exp = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &star_exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_fight_treasure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_fight_treasure)
  return false;
#undef DO_
}

void tmsg_fight_treasure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_fight_treasure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_guid(), output);
  }

  // int32 template_id = 3;
  if (this->template_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->template_id(), output);
  }

  // uint64 role_guid = 4;
  if (this->role_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->role_guid(), output);
  }

  // int32 enhance = 5;
  if (this->enhance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->enhance(), output);
  }

  // int32 jilian = 7;
  if (this->jilian() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->jilian(), output);
  }

  // int32 star = 8;
  if (this->star() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->star(), output);
  }

  // int32 star_exp = 9;
  if (this->star_exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->star_exp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_fight_treasure)
}

::google::protobuf::uint8* tmsg_fight_treasure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_fight_treasure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_guid(), target);
  }

  // int32 template_id = 3;
  if (this->template_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->template_id(), target);
  }

  // uint64 role_guid = 4;
  if (this->role_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->role_guid(), target);
  }

  // int32 enhance = 5;
  if (this->enhance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->enhance(), target);
  }

  // int32 jilian = 7;
  if (this->jilian() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->jilian(), target);
  }

  // int32 star = 8;
  if (this->star() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->star(), target);
  }

  // int32 star_exp = 9;
  if (this->star_exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->star_exp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_fight_treasure)
  return target;
}

size_t tmsg_fight_treasure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_fight_treasure)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  // uint64 role_guid = 4;
  if (this->role_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->role_guid());
  }

  // int32 template_id = 3;
  if (this->template_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->template_id());
  }

  // int32 enhance = 5;
  if (this->enhance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->enhance());
  }

  // int32 jilian = 7;
  if (this->jilian() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jilian());
  }

  // int32 star = 8;
  if (this->star() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->star());
  }

  // int32 star_exp = 9;
  if (this->star_exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->star_exp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_fight_treasure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_fight_treasure)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_fight_treasure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_fight_treasure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_fight_treasure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_fight_treasure)
    MergeFrom(*source);
  }
}

void tmsg_fight_treasure::MergeFrom(const tmsg_fight_treasure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_fight_treasure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.player_guid() != 0) {
    set_player_guid(from.player_guid());
  }
  if (from.role_guid() != 0) {
    set_role_guid(from.role_guid());
  }
  if (from.template_id() != 0) {
    set_template_id(from.template_id());
  }
  if (from.enhance() != 0) {
    set_enhance(from.enhance());
  }
  if (from.jilian() != 0) {
    set_jilian(from.jilian());
  }
  if (from.star() != 0) {
    set_star(from.star());
  }
  if (from.star_exp() != 0) {
    set_star_exp(from.star_exp());
  }
}

void tmsg_fight_treasure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_fight_treasure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_fight_treasure::CopyFrom(const tmsg_fight_treasure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_fight_treasure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_fight_treasure::IsInitialized() const {
  return true;
}

void tmsg_fight_treasure::Swap(tmsg_fight_treasure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_fight_treasure::InternalSwap(tmsg_fight_treasure* other) {
  using std::swap;
  swap(guid_, other->guid_);
  swap(player_guid_, other->player_guid_);
  swap(role_guid_, other->role_guid_);
  swap(template_id_, other->template_id_);
  swap(enhance_, other->enhance_);
  swap(jilian_, other->jilian_);
  swap(star_, other->star_);
  swap(star_exp_, other->star_exp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_fight_treasure::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_fight_role::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_fight_role::kGuidFieldNumber;
const int tmsg_fight_role::kPlayerGuidFieldNumber;
const int tmsg_fight_role::kTemplateIdFieldNumber;
const int tmsg_fight_role::kLevelFieldNumber;
const int tmsg_fight_role::kJlevelFieldNumber;
const int tmsg_fight_role::kGlevelFieldNumber;
const int tmsg_fight_role::kPinzhiFieldNumber;
const int tmsg_fight_role::kJskillLevelFieldNumber;
const int tmsg_fight_role::kDressIdsFieldNumber;
const int tmsg_fight_role::kZhuangbeisFieldNumber;
const int tmsg_fight_role::kTreasuresFieldNumber;
const int tmsg_fight_role::kDressOnIdFieldNumber;
const int tmsg_fight_role::kBskillLevelFieldNumber;
const int tmsg_fight_role::kPetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_fight_role::tmsg_fight_role()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_fight_role.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_fight_role)
}
tmsg_fight_role::tmsg_fight_role(const tmsg_fight_role& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      jskill_level_(from.jskill_level_),
      dress_ids_(from.dress_ids_),
      zhuangbeis_(from.zhuangbeis_),
      treasures_(from.treasures_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pet_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(pet_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_fight_role)
}

void tmsg_fight_role::SharedCtor() {
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pet_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(pet_));
}

tmsg_fight_role::~tmsg_fight_role() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_fight_role)
  SharedDtor();
}

void tmsg_fight_role::SharedDtor() {
}

void tmsg_fight_role::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_fight_role::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_fight_role& tmsg_fight_role::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_fight_role.base);
  return *internal_default_instance();
}


void tmsg_fight_role::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_fight_role)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  jskill_level_.Clear();
  set_changed();
  dress_ids_.Clear();
  set_changed();
  zhuangbeis_.Clear();
  set_changed();
  treasures_.Clear();
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pet_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(pet_));
  _internal_metadata_.Clear();
}

bool tmsg_fight_role::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_fight_role)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 template_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &template_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 jlevel = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 glevel = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &glevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pinzhi = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pinzhi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 jskill_level = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_jskill_level())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 82u, input, this->mutable_jskill_level())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 dress_ids = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dress_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 90u, input, this->mutable_dress_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 zhuangbeis = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_zhuangbeis())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 106u, input, this->mutable_zhuangbeis())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 treasures = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_treasures())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 114u, input, this->mutable_treasures())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dress_on_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dress_on_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bskill_level = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bskill_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 pet = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pet_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_fight_role)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_fight_role)
  return false;
#undef DO_
}

void tmsg_fight_role::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_fight_role)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_guid(), output);
  }

  // int32 template_id = 3;
  if (this->template_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->template_id(), output);
  }

  // int32 level = 4;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  // int32 jlevel = 7;
  if (this->jlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->jlevel(), output);
  }

  // int32 glevel = 8;
  if (this->glevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->glevel(), output);
  }

  // int32 pinzhi = 9;
  if (this->pinzhi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->pinzhi(), output);
  }

  // repeated int32 jskill_level = 10;
  if (this->jskill_level_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _jskill_level_cached_byte_size_));
  }
  for (int i = 0, n = this->jskill_level_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->jskill_level(i), output);
  }

  // repeated int32 dress_ids = 11;
  if (this->dress_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dress_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->dress_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->dress_ids(i), output);
  }

  // repeated uint64 zhuangbeis = 13;
  if (this->zhuangbeis_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _zhuangbeis_cached_byte_size_));
  }
  for (int i = 0, n = this->zhuangbeis_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->zhuangbeis(i), output);
  }

  // repeated uint64 treasures = 14;
  if (this->treasures_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _treasures_cached_byte_size_));
  }
  for (int i = 0, n = this->treasures_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->treasures(i), output);
  }

  // int32 dress_on_id = 15;
  if (this->dress_on_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->dress_on_id(), output);
  }

  // int32 bskill_level = 16;
  if (this->bskill_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->bskill_level(), output);
  }

  // uint64 pet = 17;
  if (this->pet() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(17, this->pet(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_fight_role)
}

::google::protobuf::uint8* tmsg_fight_role::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_fight_role)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_guid(), target);
  }

  // int32 template_id = 3;
  if (this->template_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->template_id(), target);
  }

  // int32 level = 4;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  // int32 jlevel = 7;
  if (this->jlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->jlevel(), target);
  }

  // int32 glevel = 8;
  if (this->glevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->glevel(), target);
  }

  // int32 pinzhi = 9;
  if (this->pinzhi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->pinzhi(), target);
  }

  // repeated int32 jskill_level = 10;
  if (this->jskill_level_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _jskill_level_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->jskill_level_, target);
  }

  // repeated int32 dress_ids = 11;
  if (this->dress_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dress_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->dress_ids_, target);
  }

  // repeated uint64 zhuangbeis = 13;
  if (this->zhuangbeis_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _zhuangbeis_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->zhuangbeis_, target);
  }

  // repeated uint64 treasures = 14;
  if (this->treasures_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _treasures_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->treasures_, target);
  }

  // int32 dress_on_id = 15;
  if (this->dress_on_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->dress_on_id(), target);
  }

  // int32 bskill_level = 16;
  if (this->bskill_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->bskill_level(), target);
  }

  // uint64 pet = 17;
  if (this->pet() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(17, this->pet(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_fight_role)
  return target;
}

size_t tmsg_fight_role::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_fight_role)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 jskill_level = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->jskill_level_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _jskill_level_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 dress_ids = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->dress_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dress_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 zhuangbeis = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->zhuangbeis_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _zhuangbeis_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 treasures = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->treasures_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _treasures_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  // int32 template_id = 3;
  if (this->template_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->template_id());
  }

  // int32 level = 4;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int32 jlevel = 7;
  if (this->jlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jlevel());
  }

  // int32 glevel = 8;
  if (this->glevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->glevel());
  }

  // int32 pinzhi = 9;
  if (this->pinzhi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pinzhi());
  }

  // int32 dress_on_id = 15;
  if (this->dress_on_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dress_on_id());
  }

  // int32 bskill_level = 16;
  if (this->bskill_level() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bskill_level());
  }

  // uint64 pet = 17;
  if (this->pet() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pet());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_fight_role::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_fight_role)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_fight_role* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_fight_role>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_fight_role)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_fight_role)
    MergeFrom(*source);
  }
}

void tmsg_fight_role::MergeFrom(const tmsg_fight_role& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_fight_role)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  jskill_level_.MergeFrom(from.jskill_level_);
  dress_ids_.MergeFrom(from.dress_ids_);
  zhuangbeis_.MergeFrom(from.zhuangbeis_);
  treasures_.MergeFrom(from.treasures_);
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.player_guid() != 0) {
    set_player_guid(from.player_guid());
  }
  if (from.template_id() != 0) {
    set_template_id(from.template_id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.jlevel() != 0) {
    set_jlevel(from.jlevel());
  }
  if (from.glevel() != 0) {
    set_glevel(from.glevel());
  }
  if (from.pinzhi() != 0) {
    set_pinzhi(from.pinzhi());
  }
  if (from.dress_on_id() != 0) {
    set_dress_on_id(from.dress_on_id());
  }
  if (from.bskill_level() != 0) {
    set_bskill_level(from.bskill_level());
  }
  if (from.pet() != 0) {
    set_pet(from.pet());
  }
}

void tmsg_fight_role::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_fight_role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_fight_role::CopyFrom(const tmsg_fight_role& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_fight_role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_fight_role::IsInitialized() const {
  return true;
}

void tmsg_fight_role::Swap(tmsg_fight_role* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_fight_role::InternalSwap(tmsg_fight_role* other) {
  using std::swap;
  jskill_level_.InternalSwap(&other->jskill_level_);
  dress_ids_.InternalSwap(&other->dress_ids_);
  zhuangbeis_.InternalSwap(&other->zhuangbeis_);
  treasures_.InternalSwap(&other->treasures_);
  swap(guid_, other->guid_);
  swap(player_guid_, other->player_guid_);
  swap(template_id_, other->template_id_);
  swap(level_, other->level_);
  swap(jlevel_, other->jlevel_);
  swap(glevel_, other->glevel_);
  swap(pinzhi_, other->pinzhi_);
  swap(dress_on_id_, other->dress_on_id_);
  swap(bskill_level_, other->bskill_level_);
  swap(pet_, other->pet_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_fight_role::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_fight_pet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_fight_pet::kGuidFieldNumber;
const int tmsg_fight_pet::kPlayerGuidFieldNumber;
const int tmsg_fight_pet::kTemplateIdFieldNumber;
const int tmsg_fight_pet::kLevelFieldNumber;
const int tmsg_fight_pet::kJinjieFieldNumber;
const int tmsg_fight_pet::kStarFieldNumber;
const int tmsg_fight_pet::kJinjieSlotFieldNumber;
const int tmsg_fight_pet::kRoleGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_fight_pet::tmsg_fight_pet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_fight_pet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_fight_pet)
}
tmsg_fight_pet::tmsg_fight_pet(const tmsg_fight_pet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      jinjie_slot_(from.jinjie_slot_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&role_guid_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(role_guid_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_fight_pet)
}

void tmsg_fight_pet::SharedCtor() {
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&role_guid_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(role_guid_));
}

tmsg_fight_pet::~tmsg_fight_pet() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_fight_pet)
  SharedDtor();
}

void tmsg_fight_pet::SharedDtor() {
}

void tmsg_fight_pet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_fight_pet::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_fight_pet& tmsg_fight_pet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_fight_pet.base);
  return *internal_default_instance();
}


void tmsg_fight_pet::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_fight_pet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  jinjie_slot_.Clear();
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&role_guid_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(role_guid_));
  _internal_metadata_.Clear();
}

bool tmsg_fight_pet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_fight_pet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 template_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &template_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 jinjie = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jinjie_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 star = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &star_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 jinjie_slot = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_jinjie_slot())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_jinjie_slot())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 role_guid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &role_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_fight_pet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_fight_pet)
  return false;
#undef DO_
}

void tmsg_fight_pet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_fight_pet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_guid(), output);
  }

  // int32 template_id = 3;
  if (this->template_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->template_id(), output);
  }

  // int32 level = 4;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  // int32 jinjie = 5;
  if (this->jinjie() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->jinjie(), output);
  }

  // int32 star = 6;
  if (this->star() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->star(), output);
  }

  // repeated int32 jinjie_slot = 7;
  if (this->jinjie_slot_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _jinjie_slot_cached_byte_size_));
  }
  for (int i = 0, n = this->jinjie_slot_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->jinjie_slot(i), output);
  }

  // uint64 role_guid = 8;
  if (this->role_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->role_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_fight_pet)
}

::google::protobuf::uint8* tmsg_fight_pet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_fight_pet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_guid(), target);
  }

  // int32 template_id = 3;
  if (this->template_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->template_id(), target);
  }

  // int32 level = 4;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  // int32 jinjie = 5;
  if (this->jinjie() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->jinjie(), target);
  }

  // int32 star = 6;
  if (this->star() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->star(), target);
  }

  // repeated int32 jinjie_slot = 7;
  if (this->jinjie_slot_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _jinjie_slot_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->jinjie_slot_, target);
  }

  // uint64 role_guid = 8;
  if (this->role_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->role_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_fight_pet)
  return target;
}

size_t tmsg_fight_pet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_fight_pet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 jinjie_slot = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->jinjie_slot_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _jinjie_slot_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  // int32 template_id = 3;
  if (this->template_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->template_id());
  }

  // int32 level = 4;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int32 jinjie = 5;
  if (this->jinjie() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jinjie());
  }

  // int32 star = 6;
  if (this->star() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->star());
  }

  // uint64 role_guid = 8;
  if (this->role_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->role_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_fight_pet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_fight_pet)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_fight_pet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_fight_pet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_fight_pet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_fight_pet)
    MergeFrom(*source);
  }
}

void tmsg_fight_pet::MergeFrom(const tmsg_fight_pet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_fight_pet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  jinjie_slot_.MergeFrom(from.jinjie_slot_);
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.player_guid() != 0) {
    set_player_guid(from.player_guid());
  }
  if (from.template_id() != 0) {
    set_template_id(from.template_id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.jinjie() != 0) {
    set_jinjie(from.jinjie());
  }
  if (from.star() != 0) {
    set_star(from.star());
  }
  if (from.role_guid() != 0) {
    set_role_guid(from.role_guid());
  }
}

void tmsg_fight_pet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_fight_pet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_fight_pet::CopyFrom(const tmsg_fight_pet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_fight_pet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_fight_pet::IsInitialized() const {
  return true;
}

void tmsg_fight_pet::Swap(tmsg_fight_pet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_fight_pet::InternalSwap(tmsg_fight_pet* other) {
  using std::swap;
  jinjie_slot_.InternalSwap(&other->jinjie_slot_);
  swap(guid_, other->guid_);
  swap(player_guid_, other->player_guid_);
  swap(template_id_, other->template_id_);
  swap(level_, other->level_);
  swap(jinjie_, other->jinjie_);
  swap(star_, other->star_);
  swap(role_guid_, other->role_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_fight_pet::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_player_fight_player::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_player_fight_player::kRolesFieldNumber;
const int tmsg_player_fight_player::kEquipsFieldNumber;
const int tmsg_player_fight_player::kTreasuresFieldNumber;
const int tmsg_player_fight_player::kPetsFieldNumber;
const int tmsg_player_fight_player::kGuidFieldNumber;
const int tmsg_player_fight_player::kServeridFieldNumber;
const int tmsg_player_fight_player::kNameFieldNumber;
const int tmsg_player_fight_player::kTemplateIdFieldNumber;
const int tmsg_player_fight_player::kLevelFieldNumber;
const int tmsg_player_fight_player::kBfFieldNumber;
const int tmsg_player_fight_player::kZhenxingFieldNumber;
const int tmsg_player_fight_player::kGuildFieldNumber;
const int tmsg_player_fight_player::kGuildSkillIdsFieldNumber;
const int tmsg_player_fight_player::kGuildSkillLevelsFieldNumber;
const int tmsg_player_fight_player::kDressIdsFieldNumber;
const int tmsg_player_fight_player::kDressAchievesFieldNumber;
const int tmsg_player_fight_player::kPvpTotalFieldNumber;
const int tmsg_player_fight_player::kDuixingFieldNumber;
const int tmsg_player_fight_player::kDuixingIdFieldNumber;
const int tmsg_player_fight_player::kHuiyiJihuosFieldNumber;
const int tmsg_player_fight_player::kVipFieldNumber;
const int tmsg_player_fight_player::kDuixingLevelFieldNumber;
const int tmsg_player_fight_player::kHouyuanFieldNumber;
const int tmsg_player_fight_player::kGuildNameFieldNumber;
const int tmsg_player_fight_player::kGuanghuanFieldNumber;
const int tmsg_player_fight_player::kGuanghuanLevelFieldNumber;
const int tmsg_player_fight_player::kGuanghuanIdFieldNumber;
const int tmsg_player_fight_player::kTemplateDressFieldNumber;
const int tmsg_player_fight_player::kChenghaoOnFieldNumber;
const int tmsg_player_fight_player::kHuiyiShoujiduFieldNumber;
const int tmsg_player_fight_player::kChenghaoFieldNumber;
const int tmsg_player_fight_player::kPetOnFieldNumber;
const int tmsg_player_fight_player::kHuiyiJihuoStartsFieldNumber;
const int tmsg_player_fight_player::kNalflagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_player_fight_player::tmsg_player_fight_player()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_player_fight_player.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_player_fight_player)
}
tmsg_player_fight_player::tmsg_player_fight_player(const tmsg_player_fight_player& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      roles_(from.roles_),
      equips_(from.equips_),
      treasures_(from.treasures_),
      pets_(from.pets_),
      zhenxing_(from.zhenxing_),
      guild_skill_ids_(from.guild_skill_ids_),
      guild_skill_levels_(from.guild_skill_levels_),
      dress_ids_(from.dress_ids_),
      dress_achieves_(from.dress_achieves_),
      duixing_(from.duixing_),
      huiyi_jihuos_(from.huiyi_jihuos_),
      houyuan_(from.houyuan_),
      guanghuan_(from.guanghuan_),
      guanghuan_level_(from.guanghuan_level_),
      chenghao_(from.chenghao_),
      huiyi_jihuo_starts_(from.huiyi_jihuo_starts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serverid().size() > 0) {
    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  guild_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guild_name().size() > 0) {
    guild_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guild_name_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&nalflag_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(nalflag_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_player_fight_player)
}

void tmsg_player_fight_player::SharedCtor() {
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guild_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nalflag_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(nalflag_));
}

tmsg_player_fight_player::~tmsg_player_fight_player() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_player_fight_player)
  SharedDtor();
}

void tmsg_player_fight_player::SharedDtor() {
  serverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guild_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_player_fight_player::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_player_fight_player::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_player_fight_player& tmsg_player_fight_player::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_player_fight_player.base);
  return *internal_default_instance();
}


void tmsg_player_fight_player::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_player_fight_player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  equips_.Clear();
  treasures_.Clear();
  pets_.Clear();
  set_changed();
  zhenxing_.Clear();
  set_changed();
  guild_skill_ids_.Clear();
  set_changed();
  guild_skill_levels_.Clear();
  set_changed();
  dress_ids_.Clear();
  set_changed();
  dress_achieves_.Clear();
  set_changed();
  duixing_.Clear();
  set_changed();
  huiyi_jihuos_.Clear();
  set_changed();
  houyuan_.Clear();
  set_changed();
  guanghuan_.Clear();
  set_changed();
  guanghuan_level_.Clear();
  set_changed();
  chenghao_.Clear();
  set_changed();
  huiyi_jihuo_starts_.Clear();
  set_changed();
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  guild_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nalflag_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(nalflag_));
  _internal_metadata_.Clear();
}

bool tmsg_player_fight_player::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_player_fight_player)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .rpcproto.tmsg_fight_role roles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rpcproto.tmsg_fight_equip equips = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_equips()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rpcproto.tmsg_fight_treasure treasures = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_treasures()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rpcproto.tmsg_fight_pet pets = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serverid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverid().data(), static_cast<int>(this->serverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_player_fight_player.serverid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_player_fight_player.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 template_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &template_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bf = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 zhenxing = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_zhenxing())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 90u, input, this->mutable_zhenxing())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guild = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 guild_skill_ids = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_guild_skill_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 106u, input, this->mutable_guild_skill_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 guild_skill_levels = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_guild_skill_levels())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 114u, input, this->mutable_guild_skill_levels())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 dress_ids = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dress_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 122u, input, this->mutable_dress_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 dress_achieves = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dress_achieves())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 130u, input, this->mutable_dress_achieves())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pvp_total = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pvp_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 duixing = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_duixing())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 146u, input, this->mutable_duixing())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 duixing_id = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duixing_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 huiyi_jihuos = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_huiyi_jihuos())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 162u, input, this->mutable_huiyi_jihuos())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vip = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 duixing_level = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duixing_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 houyuan = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_houyuan())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 186u, input, this->mutable_houyuan())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string guild_name = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guild_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->guild_name().data(), static_cast<int>(this->guild_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_player_fight_player.guild_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 guanghuan = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_guanghuan())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 202u, input, this->mutable_guanghuan())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 guanghuan_level = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_guanghuan_level())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 210u, input, this->mutable_guanghuan_level())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guanghuan_id = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guanghuan_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 template_dress = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &template_dress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 chenghao_on = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chenghao_on_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 huiyi_shoujidu = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &huiyi_shoujidu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 chenghao = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_chenghao())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 250u, input, this->mutable_chenghao())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 pet_on = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pet_on_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 huiyi_jihuo_starts = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_huiyi_jihuo_starts())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 266u, input, this->mutable_huiyi_jihuo_starts())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nalflag = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nalflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_player_fight_player)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_player_fight_player)
  return false;
#undef DO_
}

void tmsg_player_fight_player::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_player_fight_player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rpcproto.tmsg_fight_role roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->roles(static_cast<int>(i)),
      output);
  }

  // repeated .rpcproto.tmsg_fight_equip equips = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->equips_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->equips(static_cast<int>(i)),
      output);
  }

  // repeated .rpcproto.tmsg_fight_treasure treasures = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->treasures_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->treasures(static_cast<int>(i)),
      output);
  }

  // repeated .rpcproto.tmsg_fight_pet pets = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->pets(static_cast<int>(i)),
      output);
  }

  // uint64 guid = 5;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->guid(), output);
  }

  // string serverid = 6;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_player_fight_player.serverid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->serverid(), output);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_player_fight_player.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  // uint32 template_id = 8;
  if (this->template_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->template_id(), output);
  }

  // int32 level = 9;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->level(), output);
  }

  // int32 bf = 10;
  if (this->bf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->bf(), output);
  }

  // repeated uint64 zhenxing = 11;
  if (this->zhenxing_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _zhenxing_cached_byte_size_));
  }
  for (int i = 0, n = this->zhenxing_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->zhenxing(i), output);
  }

  // uint64 guild = 12;
  if (this->guild() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->guild(), output);
  }

  // repeated int32 guild_skill_ids = 13;
  if (this->guild_skill_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _guild_skill_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->guild_skill_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->guild_skill_ids(i), output);
  }

  // repeated int32 guild_skill_levels = 14;
  if (this->guild_skill_levels_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _guild_skill_levels_cached_byte_size_));
  }
  for (int i = 0, n = this->guild_skill_levels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->guild_skill_levels(i), output);
  }

  // repeated int32 dress_ids = 15;
  if (this->dress_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dress_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->dress_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->dress_ids(i), output);
  }

  // repeated int32 dress_achieves = 16;
  if (this->dress_achieves_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(16, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dress_achieves_cached_byte_size_));
  }
  for (int i = 0, n = this->dress_achieves_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->dress_achieves(i), output);
  }

  // int32 pvp_total = 17;
  if (this->pvp_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->pvp_total(), output);
  }

  // repeated int32 duixing = 18;
  if (this->duixing_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(18, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _duixing_cached_byte_size_));
  }
  for (int i = 0, n = this->duixing_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->duixing(i), output);
  }

  // int32 duixing_id = 19;
  if (this->duixing_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->duixing_id(), output);
  }

  // repeated int32 huiyi_jihuos = 20;
  if (this->huiyi_jihuos_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(20, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _huiyi_jihuos_cached_byte_size_));
  }
  for (int i = 0, n = this->huiyi_jihuos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->huiyi_jihuos(i), output);
  }

  // int32 vip = 21;
  if (this->vip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->vip(), output);
  }

  // int32 duixing_level = 22;
  if (this->duixing_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->duixing_level(), output);
  }

  // repeated uint64 houyuan = 23;
  if (this->houyuan_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(23, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _houyuan_cached_byte_size_));
  }
  for (int i = 0, n = this->houyuan_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->houyuan(i), output);
  }

  // string guild_name = 24;
  if (this->guild_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guild_name().data(), static_cast<int>(this->guild_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_player_fight_player.guild_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->guild_name(), output);
  }

  // repeated int32 guanghuan = 25;
  if (this->guanghuan_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(25, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _guanghuan_cached_byte_size_));
  }
  for (int i = 0, n = this->guanghuan_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->guanghuan(i), output);
  }

  // repeated int32 guanghuan_level = 26;
  if (this->guanghuan_level_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(26, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _guanghuan_level_cached_byte_size_));
  }
  for (int i = 0, n = this->guanghuan_level_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->guanghuan_level(i), output);
  }

  // int32 guanghuan_id = 27;
  if (this->guanghuan_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->guanghuan_id(), output);
  }

  // int32 template_dress = 28;
  if (this->template_dress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->template_dress(), output);
  }

  // int32 chenghao_on = 29;
  if (this->chenghao_on() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->chenghao_on(), output);
  }

  // int32 huiyi_shoujidu = 30;
  if (this->huiyi_shoujidu() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->huiyi_shoujidu(), output);
  }

  // repeated int32 chenghao = 31;
  if (this->chenghao_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(31, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _chenghao_cached_byte_size_));
  }
  for (int i = 0, n = this->chenghao_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->chenghao(i), output);
  }

  // uint64 pet_on = 32;
  if (this->pet_on() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(32, this->pet_on(), output);
  }

  // repeated int32 huiyi_jihuo_starts = 33;
  if (this->huiyi_jihuo_starts_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(33, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _huiyi_jihuo_starts_cached_byte_size_));
  }
  for (int i = 0, n = this->huiyi_jihuo_starts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->huiyi_jihuo_starts(i), output);
  }

  // int32 nalflag = 34;
  if (this->nalflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->nalflag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_player_fight_player)
}

::google::protobuf::uint8* tmsg_player_fight_player::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_player_fight_player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rpcproto.tmsg_fight_role roles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->roles(static_cast<int>(i)), deterministic, target);
  }

  // repeated .rpcproto.tmsg_fight_equip equips = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->equips_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->equips(static_cast<int>(i)), deterministic, target);
  }

  // repeated .rpcproto.tmsg_fight_treasure treasures = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->treasures_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->treasures(static_cast<int>(i)), deterministic, target);
  }

  // repeated .rpcproto.tmsg_fight_pet pets = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->pets(static_cast<int>(i)), deterministic, target);
  }

  // uint64 guid = 5;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->guid(), target);
  }

  // string serverid = 6;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_player_fight_player.serverid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->serverid(), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_player_fight_player.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  // uint32 template_id = 8;
  if (this->template_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->template_id(), target);
  }

  // int32 level = 9;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->level(), target);
  }

  // int32 bf = 10;
  if (this->bf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->bf(), target);
  }

  // repeated uint64 zhenxing = 11;
  if (this->zhenxing_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _zhenxing_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->zhenxing_, target);
  }

  // uint64 guild = 12;
  if (this->guild() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->guild(), target);
  }

  // repeated int32 guild_skill_ids = 13;
  if (this->guild_skill_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _guild_skill_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->guild_skill_ids_, target);
  }

  // repeated int32 guild_skill_levels = 14;
  if (this->guild_skill_levels_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _guild_skill_levels_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->guild_skill_levels_, target);
  }

  // repeated int32 dress_ids = 15;
  if (this->dress_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dress_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->dress_ids_, target);
  }

  // repeated int32 dress_achieves = 16;
  if (this->dress_achieves_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      16,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dress_achieves_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->dress_achieves_, target);
  }

  // int32 pvp_total = 17;
  if (this->pvp_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->pvp_total(), target);
  }

  // repeated int32 duixing = 18;
  if (this->duixing_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      18,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _duixing_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->duixing_, target);
  }

  // int32 duixing_id = 19;
  if (this->duixing_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->duixing_id(), target);
  }

  // repeated int32 huiyi_jihuos = 20;
  if (this->huiyi_jihuos_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      20,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _huiyi_jihuos_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->huiyi_jihuos_, target);
  }

  // int32 vip = 21;
  if (this->vip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->vip(), target);
  }

  // int32 duixing_level = 22;
  if (this->duixing_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->duixing_level(), target);
  }

  // repeated uint64 houyuan = 23;
  if (this->houyuan_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      23,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _houyuan_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->houyuan_, target);
  }

  // string guild_name = 24;
  if (this->guild_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guild_name().data(), static_cast<int>(this->guild_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_player_fight_player.guild_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->guild_name(), target);
  }

  // repeated int32 guanghuan = 25;
  if (this->guanghuan_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      25,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _guanghuan_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->guanghuan_, target);
  }

  // repeated int32 guanghuan_level = 26;
  if (this->guanghuan_level_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      26,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _guanghuan_level_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->guanghuan_level_, target);
  }

  // int32 guanghuan_id = 27;
  if (this->guanghuan_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->guanghuan_id(), target);
  }

  // int32 template_dress = 28;
  if (this->template_dress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->template_dress(), target);
  }

  // int32 chenghao_on = 29;
  if (this->chenghao_on() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->chenghao_on(), target);
  }

  // int32 huiyi_shoujidu = 30;
  if (this->huiyi_shoujidu() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->huiyi_shoujidu(), target);
  }

  // repeated int32 chenghao = 31;
  if (this->chenghao_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      31,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _chenghao_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->chenghao_, target);
  }

  // uint64 pet_on = 32;
  if (this->pet_on() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(32, this->pet_on(), target);
  }

  // repeated int32 huiyi_jihuo_starts = 33;
  if (this->huiyi_jihuo_starts_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      33,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _huiyi_jihuo_starts_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->huiyi_jihuo_starts_, target);
  }

  // int32 nalflag = 34;
  if (this->nalflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->nalflag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_player_fight_player)
  return target;
}

size_t tmsg_player_fight_player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_player_fight_player)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rpcproto.tmsg_fight_role roles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->roles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roles(static_cast<int>(i)));
    }
  }

  // repeated .rpcproto.tmsg_fight_equip equips = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->equips_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->equips(static_cast<int>(i)));
    }
  }

  // repeated .rpcproto.tmsg_fight_treasure treasures = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->treasures_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->treasures(static_cast<int>(i)));
    }
  }

  // repeated .rpcproto.tmsg_fight_pet pets = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->pets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pets(static_cast<int>(i)));
    }
  }

  // repeated uint64 zhenxing = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->zhenxing_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _zhenxing_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 guild_skill_ids = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->guild_skill_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _guild_skill_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 guild_skill_levels = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->guild_skill_levels_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _guild_skill_levels_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 dress_ids = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->dress_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dress_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 dress_achieves = 16;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->dress_achieves_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dress_achieves_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 duixing = 18;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->duixing_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _duixing_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 huiyi_jihuos = 20;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->huiyi_jihuos_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _huiyi_jihuos_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 houyuan = 23;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->houyuan_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _houyuan_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 guanghuan = 25;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->guanghuan_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _guanghuan_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 guanghuan_level = 26;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->guanghuan_level_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _guanghuan_level_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 chenghao = 31;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->chenghao_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _chenghao_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 huiyi_jihuo_starts = 33;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->huiyi_jihuo_starts_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _huiyi_jihuo_starts_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string serverid = 6;
  if (this->serverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverid());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string guild_name = 24;
  if (this->guild_name().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guild_name());
  }

  // uint64 guid = 5;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint32 template_id = 8;
  if (this->template_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->template_id());
  }

  // int32 level = 9;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // uint64 guild = 12;
  if (this->guild() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guild());
  }

  // int32 bf = 10;
  if (this->bf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bf());
  }

  // int32 pvp_total = 17;
  if (this->pvp_total() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pvp_total());
  }

  // int32 duixing_id = 19;
  if (this->duixing_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duixing_id());
  }

  // int32 vip = 21;
  if (this->vip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vip());
  }

  // int32 duixing_level = 22;
  if (this->duixing_level() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duixing_level());
  }

  // int32 guanghuan_id = 27;
  if (this->guanghuan_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guanghuan_id());
  }

  // int32 template_dress = 28;
  if (this->template_dress() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->template_dress());
  }

  // int32 chenghao_on = 29;
  if (this->chenghao_on() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chenghao_on());
  }

  // uint64 pet_on = 32;
  if (this->pet_on() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pet_on());
  }

  // int32 huiyi_shoujidu = 30;
  if (this->huiyi_shoujidu() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->huiyi_shoujidu());
  }

  // int32 nalflag = 34;
  if (this->nalflag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nalflag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_player_fight_player::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_player_fight_player)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_player_fight_player* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_player_fight_player>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_player_fight_player)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_player_fight_player)
    MergeFrom(*source);
  }
}

void tmsg_player_fight_player::MergeFrom(const tmsg_player_fight_player& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_player_fight_player)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  equips_.MergeFrom(from.equips_);
  treasures_.MergeFrom(from.treasures_);
  pets_.MergeFrom(from.pets_);
  zhenxing_.MergeFrom(from.zhenxing_);
  guild_skill_ids_.MergeFrom(from.guild_skill_ids_);
  guild_skill_levels_.MergeFrom(from.guild_skill_levels_);
  dress_ids_.MergeFrom(from.dress_ids_);
  dress_achieves_.MergeFrom(from.dress_achieves_);
  duixing_.MergeFrom(from.duixing_);
  huiyi_jihuos_.MergeFrom(from.huiyi_jihuos_);
  houyuan_.MergeFrom(from.houyuan_);
  guanghuan_.MergeFrom(from.guanghuan_);
  guanghuan_level_.MergeFrom(from.guanghuan_level_);
  chenghao_.MergeFrom(from.chenghao_);
  huiyi_jihuo_starts_.MergeFrom(from.huiyi_jihuo_starts_);
  if (from.serverid().size() > 0) {

    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.guild_name().size() > 0) {

    guild_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guild_name_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.template_id() != 0) {
    set_template_id(from.template_id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.guild() != 0) {
    set_guild(from.guild());
  }
  if (from.bf() != 0) {
    set_bf(from.bf());
  }
  if (from.pvp_total() != 0) {
    set_pvp_total(from.pvp_total());
  }
  if (from.duixing_id() != 0) {
    set_duixing_id(from.duixing_id());
  }
  if (from.vip() != 0) {
    set_vip(from.vip());
  }
  if (from.duixing_level() != 0) {
    set_duixing_level(from.duixing_level());
  }
  if (from.guanghuan_id() != 0) {
    set_guanghuan_id(from.guanghuan_id());
  }
  if (from.template_dress() != 0) {
    set_template_dress(from.template_dress());
  }
  if (from.chenghao_on() != 0) {
    set_chenghao_on(from.chenghao_on());
  }
  if (from.pet_on() != 0) {
    set_pet_on(from.pet_on());
  }
  if (from.huiyi_shoujidu() != 0) {
    set_huiyi_shoujidu(from.huiyi_shoujidu());
  }
  if (from.nalflag() != 0) {
    set_nalflag(from.nalflag());
  }
}

void tmsg_player_fight_player::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_player_fight_player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_player_fight_player::CopyFrom(const tmsg_player_fight_player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_player_fight_player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_player_fight_player::IsInitialized() const {
  return true;
}

void tmsg_player_fight_player::Swap(tmsg_player_fight_player* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_player_fight_player::InternalSwap(tmsg_player_fight_player* other) {
  using std::swap;
  CastToBase(&roles_)->InternalSwap(CastToBase(&other->roles_));
  CastToBase(&equips_)->InternalSwap(CastToBase(&other->equips_));
  CastToBase(&treasures_)->InternalSwap(CastToBase(&other->treasures_));
  CastToBase(&pets_)->InternalSwap(CastToBase(&other->pets_));
  zhenxing_.InternalSwap(&other->zhenxing_);
  guild_skill_ids_.InternalSwap(&other->guild_skill_ids_);
  guild_skill_levels_.InternalSwap(&other->guild_skill_levels_);
  dress_ids_.InternalSwap(&other->dress_ids_);
  dress_achieves_.InternalSwap(&other->dress_achieves_);
  duixing_.InternalSwap(&other->duixing_);
  huiyi_jihuos_.InternalSwap(&other->huiyi_jihuos_);
  houyuan_.InternalSwap(&other->houyuan_);
  guanghuan_.InternalSwap(&other->guanghuan_);
  guanghuan_level_.InternalSwap(&other->guanghuan_level_);
  chenghao_.InternalSwap(&other->chenghao_);
  huiyi_jihuo_starts_.InternalSwap(&other->huiyi_jihuo_starts_);
  serverid_.Swap(&other->serverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  guild_name_.Swap(&other->guild_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(template_id_, other->template_id_);
  swap(level_, other->level_);
  swap(guild_, other->guild_);
  swap(bf_, other->bf_);
  swap(pvp_total_, other->pvp_total_);
  swap(duixing_id_, other->duixing_id_);
  swap(vip_, other->vip_);
  swap(duixing_level_, other->duixing_level_);
  swap(guanghuan_id_, other->guanghuan_id_);
  swap(template_dress_, other->template_dress_);
  swap(chenghao_on_, other->chenghao_on_);
  swap(pet_on_, other->pet_on_);
  swap(huiyi_shoujidu_, other->huiyi_shoujidu_);
  swap(nalflag_, other->nalflag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_player_fight_player::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_player_fight_info::InitAsDefaultInstance() {
  ::rpcproto::_tmsg_player_fight_info_default_instance_._instance.get_mutable()->players_ = const_cast< ::rpcproto::tmsg_player_fight_player*>(
      ::rpcproto::tmsg_player_fight_player::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_player_fight_info::kPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_player_fight_info::tmsg_player_fight_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_player_fight_info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_player_fight_info)
}
tmsg_player_fight_info::tmsg_player_fight_info(const tmsg_player_fight_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_players()) {
    players_ = new ::rpcproto::tmsg_player_fight_player(*from.players_);
  } else {
    players_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_player_fight_info)
}

void tmsg_player_fight_info::SharedCtor() {
  players_ = NULL;
}

tmsg_player_fight_info::~tmsg_player_fight_info() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_player_fight_info)
  SharedDtor();
}

void tmsg_player_fight_info::SharedDtor() {
  if (this != internal_default_instance()) delete players_;
}

void tmsg_player_fight_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_player_fight_info::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_player_fight_info& tmsg_player_fight_info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_player_fight_info.base);
  return *internal_default_instance();
}


void tmsg_player_fight_info::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_player_fight_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && players_ != NULL) {
    delete players_;
  }
  players_ = NULL;
  _internal_metadata_.Clear();
}

bool tmsg_player_fight_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_player_fight_info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .rpcproto.tmsg_player_fight_player players = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_player_fight_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_player_fight_info)
  return false;
#undef DO_
}

void tmsg_player_fight_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_player_fight_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rpcproto.tmsg_player_fight_player players = 1;
  if (this->has_players()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_players(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_player_fight_info)
}

::google::protobuf::uint8* tmsg_player_fight_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_player_fight_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rpcproto.tmsg_player_fight_player players = 1;
  if (this->has_players()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_players(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_player_fight_info)
  return target;
}

size_t tmsg_player_fight_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_player_fight_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .rpcproto.tmsg_player_fight_player players = 1;
  if (this->has_players()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *players_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_player_fight_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_player_fight_info)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_player_fight_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_player_fight_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_player_fight_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_player_fight_info)
    MergeFrom(*source);
  }
}

void tmsg_player_fight_info::MergeFrom(const tmsg_player_fight_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_player_fight_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_players()) {
    mutable_players()->::rpcproto::tmsg_player_fight_player::MergeFrom(from.players());
  }
}

void tmsg_player_fight_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_player_fight_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_player_fight_info::CopyFrom(const tmsg_player_fight_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_player_fight_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_player_fight_info::IsInitialized() const {
  return true;
}

void tmsg_player_fight_info::Swap(tmsg_player_fight_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_player_fight_info::InternalSwap(tmsg_player_fight_info* other) {
  using std::swap;
  swap(players_, other->players_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_player_fight_info::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_pvp_match::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_pvp_match::kGuidFieldNumber;
const int tmsg_req_pvp_match::kServeridFieldNumber;
const int tmsg_req_pvp_match::kBfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_pvp_match::tmsg_req_pvp_match()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_pvp_match.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_pvp_match)
}
tmsg_req_pvp_match::tmsg_req_pvp_match(const tmsg_req_pvp_match& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serverid().size() > 0) {
    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&bf_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(bf_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_pvp_match)
}

void tmsg_req_pvp_match::SharedCtor() {
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bf_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(bf_));
}

tmsg_req_pvp_match::~tmsg_req_pvp_match() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_pvp_match)
  SharedDtor();
}

void tmsg_req_pvp_match::SharedDtor() {
  serverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_req_pvp_match::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_pvp_match::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_pvp_match& tmsg_req_pvp_match::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_pvp_match.base);
  return *internal_default_instance();
}


void tmsg_req_pvp_match::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_pvp_match)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bf_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(bf_));
  _internal_metadata_.Clear();
}

bool tmsg_req_pvp_match::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_pvp_match)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serverid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverid().data(), static_cast<int>(this->serverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_pvp_match.serverid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_pvp_match)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_pvp_match)
  return false;
#undef DO_
}

void tmsg_req_pvp_match::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_pvp_match)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // string serverid = 2;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_pvp_match.serverid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->serverid(), output);
  }

  // int32 bf = 3;
  if (this->bf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_pvp_match)
}

::google::protobuf::uint8* tmsg_req_pvp_match::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_pvp_match)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // string serverid = 2;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_pvp_match.serverid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->serverid(), target);
  }

  // int32 bf = 3;
  if (this->bf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_pvp_match)
  return target;
}

size_t tmsg_req_pvp_match::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_pvp_match)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string serverid = 2;
  if (this->serverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverid());
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // int32 bf = 3;
  if (this->bf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bf());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_pvp_match::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_pvp_match)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_pvp_match* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_pvp_match>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_pvp_match)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_pvp_match)
    MergeFrom(*source);
  }
}

void tmsg_req_pvp_match::MergeFrom(const tmsg_req_pvp_match& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_pvp_match)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serverid().size() > 0) {

    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.bf() != 0) {
    set_bf(from.bf());
  }
}

void tmsg_req_pvp_match::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_pvp_match)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_pvp_match::CopyFrom(const tmsg_req_pvp_match& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_pvp_match)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_pvp_match::IsInitialized() const {
  return true;
}

void tmsg_req_pvp_match::Swap(tmsg_req_pvp_match* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_pvp_match::InternalSwap(tmsg_req_pvp_match* other) {
  using std::swap;
  serverid_.Swap(&other->serverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(bf_, other->bf_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_pvp_match::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_pvp_match::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_pvp_match::kPlayerGuidsFieldNumber;
const int tmsg_rep_pvp_match::kPlayerNamesFieldNumber;
const int tmsg_rep_pvp_match::kPlayerTemplatesFieldNumber;
const int tmsg_rep_pvp_match::kPlayerServersFieldNumber;
const int tmsg_rep_pvp_match::kPlayerBfsFieldNumber;
const int tmsg_rep_pvp_match::kPlayerPointsFieldNumber;
const int tmsg_rep_pvp_match::kPlayerVipsFieldNumber;
const int tmsg_rep_pvp_match::kPlayerAchievesFieldNumber;
const int tmsg_rep_pvp_match::kPlayerGuanghuansFieldNumber;
const int tmsg_rep_pvp_match::kPlayerDressFieldNumber;
const int tmsg_rep_pvp_match::kPlayerNalflagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_pvp_match::tmsg_rep_pvp_match()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_pvp_match.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_pvp_match)
}
tmsg_rep_pvp_match::tmsg_rep_pvp_match(const tmsg_rep_pvp_match& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_guids_(from.player_guids_),
      player_names_(from.player_names_),
      player_templates_(from.player_templates_),
      player_servers_(from.player_servers_),
      player_bfs_(from.player_bfs_),
      player_points_(from.player_points_),
      player_vips_(from.player_vips_),
      player_achieves_(from.player_achieves_),
      player_guanghuans_(from.player_guanghuans_),
      player_dress_(from.player_dress_),
      player_nalflag_(from.player_nalflag_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_pvp_match)
}

void tmsg_rep_pvp_match::SharedCtor() {
}

tmsg_rep_pvp_match::~tmsg_rep_pvp_match() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_pvp_match)
  SharedDtor();
}

void tmsg_rep_pvp_match::SharedDtor() {
}

void tmsg_rep_pvp_match::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_pvp_match::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_pvp_match& tmsg_rep_pvp_match::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_pvp_match.base);
  return *internal_default_instance();
}


void tmsg_rep_pvp_match::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_pvp_match)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  player_guids_.Clear();
  set_changed();
  player_names_.Clear();
  set_changed();
  player_templates_.Clear();
  set_changed();
  player_servers_.Clear();
  set_changed();
  player_bfs_.Clear();
  set_changed();
  player_points_.Clear();
  set_changed();
  player_vips_.Clear();
  set_changed();
  player_achieves_.Clear();
  set_changed();
  player_guanghuans_.Clear();
  set_changed();
  player_dress_.Clear();
  set_changed();
  player_nalflag_.Clear();
  _internal_metadata_.Clear();
}

bool tmsg_rep_pvp_match::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_pvp_match)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 player_guids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_player_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_player_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string player_names = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_player_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->player_names(this->player_names_size() - 1).data(),
            static_cast<int>(this->player_names(this->player_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_rep_pvp_match.player_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_templates = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_templates())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_player_templates())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_servers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_servers())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_player_servers())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_bfs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_bfs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_player_bfs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_points = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_points())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_player_points())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_vips = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_vips())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_player_vips())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_achieves = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_achieves())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_player_achieves())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_guanghuans = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_guanghuans())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_player_guanghuans())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_dress = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_dress())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 82u, input, this->mutable_player_dress())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_nalflag = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_nalflag())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 90u, input, this->mutable_player_nalflag())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_pvp_match)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_pvp_match)
  return false;
#undef DO_
}

void tmsg_rep_pvp_match::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_pvp_match)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 player_guids = 1;
  if (this->player_guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_guids_cached_byte_size_));
  }
  for (int i = 0, n = this->player_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->player_guids(i), output);
  }

  // repeated string player_names = 2;
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_names(i).data(), static_cast<int>(this->player_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_rep_pvp_match.player_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->player_names(i), output);
  }

  // repeated int32 player_templates = 3;
  if (this->player_templates_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_templates_cached_byte_size_));
  }
  for (int i = 0, n = this->player_templates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_templates(i), output);
  }

  // repeated int32 player_servers = 4;
  if (this->player_servers_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_servers_cached_byte_size_));
  }
  for (int i = 0, n = this->player_servers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_servers(i), output);
  }

  // repeated int32 player_bfs = 5;
  if (this->player_bfs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_bfs_cached_byte_size_));
  }
  for (int i = 0, n = this->player_bfs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_bfs(i), output);
  }

  // repeated int32 player_points = 6;
  if (this->player_points_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_points_cached_byte_size_));
  }
  for (int i = 0, n = this->player_points_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_points(i), output);
  }

  // repeated int32 player_vips = 7;
  if (this->player_vips_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_vips_cached_byte_size_));
  }
  for (int i = 0, n = this->player_vips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_vips(i), output);
  }

  // repeated int32 player_achieves = 8;
  if (this->player_achieves_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_achieves_cached_byte_size_));
  }
  for (int i = 0, n = this->player_achieves_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_achieves(i), output);
  }

  // repeated int32 player_guanghuans = 9;
  if (this->player_guanghuans_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_guanghuans_cached_byte_size_));
  }
  for (int i = 0, n = this->player_guanghuans_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_guanghuans(i), output);
  }

  // repeated int32 player_dress = 10;
  if (this->player_dress_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_dress_cached_byte_size_));
  }
  for (int i = 0, n = this->player_dress_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_dress(i), output);
  }

  // repeated int32 player_nalflag = 11;
  if (this->player_nalflag_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_nalflag_cached_byte_size_));
  }
  for (int i = 0, n = this->player_nalflag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_nalflag(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_pvp_match)
}

::google::protobuf::uint8* tmsg_rep_pvp_match::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_pvp_match)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 player_guids = 1;
  if (this->player_guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_guids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->player_guids_, target);
  }

  // repeated string player_names = 2;
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_names(i).data(), static_cast<int>(this->player_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_rep_pvp_match.player_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->player_names(i), target);
  }

  // repeated int32 player_templates = 3;
  if (this->player_templates_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_templates_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_templates_, target);
  }

  // repeated int32 player_servers = 4;
  if (this->player_servers_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_servers_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_servers_, target);
  }

  // repeated int32 player_bfs = 5;
  if (this->player_bfs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_bfs_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_bfs_, target);
  }

  // repeated int32 player_points = 6;
  if (this->player_points_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_points_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_points_, target);
  }

  // repeated int32 player_vips = 7;
  if (this->player_vips_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_vips_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_vips_, target);
  }

  // repeated int32 player_achieves = 8;
  if (this->player_achieves_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_achieves_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_achieves_, target);
  }

  // repeated int32 player_guanghuans = 9;
  if (this->player_guanghuans_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_guanghuans_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_guanghuans_, target);
  }

  // repeated int32 player_dress = 10;
  if (this->player_dress_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_dress_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_dress_, target);
  }

  // repeated int32 player_nalflag = 11;
  if (this->player_nalflag_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_nalflag_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_nalflag_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_pvp_match)
  return target;
}

size_t tmsg_rep_pvp_match::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_pvp_match)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 player_guids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->player_guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_guids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string player_names = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->player_names_size());
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->player_names(i));
  }

  // repeated int32 player_templates = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_templates_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_templates_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_servers = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_servers_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_servers_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_bfs = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_bfs_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_bfs_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_points = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_points_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_points_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_vips = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_vips_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_vips_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_achieves = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_achieves_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_achieves_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_guanghuans = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_guanghuans_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_guanghuans_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_dress = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_dress_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_dress_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_nalflag = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_nalflag_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_nalflag_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_pvp_match::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_pvp_match)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_pvp_match* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_pvp_match>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_pvp_match)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_pvp_match)
    MergeFrom(*source);
  }
}

void tmsg_rep_pvp_match::MergeFrom(const tmsg_rep_pvp_match& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_pvp_match)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_guids_.MergeFrom(from.player_guids_);
  player_names_.MergeFrom(from.player_names_);
  player_templates_.MergeFrom(from.player_templates_);
  player_servers_.MergeFrom(from.player_servers_);
  player_bfs_.MergeFrom(from.player_bfs_);
  player_points_.MergeFrom(from.player_points_);
  player_vips_.MergeFrom(from.player_vips_);
  player_achieves_.MergeFrom(from.player_achieves_);
  player_guanghuans_.MergeFrom(from.player_guanghuans_);
  player_dress_.MergeFrom(from.player_dress_);
  player_nalflag_.MergeFrom(from.player_nalflag_);
}

void tmsg_rep_pvp_match::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_pvp_match)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_pvp_match::CopyFrom(const tmsg_rep_pvp_match& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_pvp_match)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_pvp_match::IsInitialized() const {
  return true;
}

void tmsg_rep_pvp_match::Swap(tmsg_rep_pvp_match* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_pvp_match::InternalSwap(tmsg_rep_pvp_match* other) {
  using std::swap;
  player_guids_.InternalSwap(&other->player_guids_);
  player_names_.InternalSwap(CastToBase(&other->player_names_));
  player_templates_.InternalSwap(&other->player_templates_);
  player_servers_.InternalSwap(&other->player_servers_);
  player_bfs_.InternalSwap(&other->player_bfs_);
  player_points_.InternalSwap(&other->player_points_);
  player_vips_.InternalSwap(&other->player_vips_);
  player_achieves_.InternalSwap(&other->player_achieves_);
  player_guanghuans_.InternalSwap(&other->player_guanghuans_);
  player_dress_.InternalSwap(&other->player_dress_);
  player_nalflag_.InternalSwap(&other->player_nalflag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_pvp_match::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_pvp_fight::InitAsDefaultInstance() {
  ::rpcproto::_tmsg_req_pvp_fight_default_instance_._instance.get_mutable()->player_ = const_cast< ::rpcproto::tmsg_player_fight_player*>(
      ::rpcproto::tmsg_player_fight_player::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_pvp_fight::kGuidFieldNumber;
const int tmsg_req_pvp_fight::kPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_pvp_fight::tmsg_req_pvp_fight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_pvp_fight.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_pvp_fight)
}
tmsg_req_pvp_fight::tmsg_req_pvp_fight(const tmsg_req_pvp_fight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player()) {
    player_ = new ::rpcproto::tmsg_player_fight_player(*from.player_);
  } else {
    player_ = NULL;
  }
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_pvp_fight)
}

void tmsg_req_pvp_fight::SharedCtor() {
  ::memset(&player_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guid_) -
      reinterpret_cast<char*>(&player_)) + sizeof(guid_));
}

tmsg_req_pvp_fight::~tmsg_req_pvp_fight() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_pvp_fight)
  SharedDtor();
}

void tmsg_req_pvp_fight::SharedDtor() {
  if (this != internal_default_instance()) delete player_;
}

void tmsg_req_pvp_fight::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_pvp_fight::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_pvp_fight& tmsg_req_pvp_fight::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_pvp_fight.base);
  return *internal_default_instance();
}


void tmsg_req_pvp_fight::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_pvp_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && player_ != NULL) {
    delete player_;
  }
  player_ = NULL;
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool tmsg_req_pvp_fight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_pvp_fight)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rpcproto.tmsg_player_fight_player player = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_pvp_fight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_pvp_fight)
  return false;
#undef DO_
}

void tmsg_req_pvp_fight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_pvp_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // .rpcproto.tmsg_player_fight_player player = 2;
  if (this->has_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_player(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_pvp_fight)
}

::google::protobuf::uint8* tmsg_req_pvp_fight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_pvp_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // .rpcproto.tmsg_player_fight_player player = 2;
  if (this->has_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_player(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_pvp_fight)
  return target;
}

size_t tmsg_req_pvp_fight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_pvp_fight)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .rpcproto.tmsg_player_fight_player player = 2;
  if (this->has_player()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_);
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_pvp_fight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_pvp_fight)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_pvp_fight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_pvp_fight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_pvp_fight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_pvp_fight)
    MergeFrom(*source);
  }
}

void tmsg_req_pvp_fight::MergeFrom(const tmsg_req_pvp_fight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_pvp_fight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player()) {
    mutable_player()->::rpcproto::tmsg_player_fight_player::MergeFrom(from.player());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void tmsg_req_pvp_fight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_pvp_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_pvp_fight::CopyFrom(const tmsg_req_pvp_fight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_pvp_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_pvp_fight::IsInitialized() const {
  return true;
}

void tmsg_req_pvp_fight::Swap(tmsg_req_pvp_fight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_pvp_fight::InternalSwap(tmsg_req_pvp_fight* other) {
  using std::swap;
  swap(player_, other->player_);
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_pvp_fight::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_pvp_fight::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_pvp_fight::kTextFieldNumber;
const int tmsg_rep_pvp_fight::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_pvp_fight::tmsg_rep_pvp_fight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_pvp_fight.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_pvp_fight)
}
tmsg_rep_pvp_fight::tmsg_rep_pvp_fight(const tmsg_rep_pvp_fight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_pvp_fight)
}

void tmsg_rep_pvp_fight::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

tmsg_rep_pvp_fight::~tmsg_rep_pvp_fight() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_pvp_fight)
  SharedDtor();
}

void tmsg_rep_pvp_fight::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_rep_pvp_fight::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_pvp_fight::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_pvp_fight& tmsg_rep_pvp_fight::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_pvp_fight.base);
  return *internal_default_instance();
}


void tmsg_rep_pvp_fight::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_pvp_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  result_ = 0;
  _internal_metadata_.Clear();
}

bool tmsg_rep_pvp_fight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_pvp_fight)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_pvp_fight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_pvp_fight)
  return false;
#undef DO_
}

void tmsg_rep_pvp_fight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_pvp_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->text(), output);
  }

  // int32 result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_pvp_fight)
}

::google::protobuf::uint8* tmsg_rep_pvp_fight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_pvp_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes text = 1;
  if (this->text().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->text(), target);
  }

  // int32 result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_pvp_fight)
  return target;
}

size_t tmsg_rep_pvp_fight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_pvp_fight)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->text());
  }

  // int32 result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_pvp_fight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_pvp_fight)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_pvp_fight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_pvp_fight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_pvp_fight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_pvp_fight)
    MergeFrom(*source);
  }
}

void tmsg_rep_pvp_fight::MergeFrom(const tmsg_rep_pvp_fight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_pvp_fight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void tmsg_rep_pvp_fight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_pvp_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_pvp_fight::CopyFrom(const tmsg_rep_pvp_fight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_pvp_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_pvp_fight::IsInitialized() const {
  return true;
}

void tmsg_rep_pvp_fight::Swap(tmsg_rep_pvp_fight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_pvp_fight::InternalSwap(tmsg_rep_pvp_fight* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_pvp_fight::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_pvp_reward::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_pvp_reward::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_pvp_reward::tmsg_req_pvp_reward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_pvp_reward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_pvp_reward)
}
tmsg_req_pvp_reward::tmsg_req_pvp_reward(const tmsg_req_pvp_reward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serverid().size() > 0) {
    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_pvp_reward)
}

void tmsg_req_pvp_reward::SharedCtor() {
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

tmsg_req_pvp_reward::~tmsg_req_pvp_reward() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_pvp_reward)
  SharedDtor();
}

void tmsg_req_pvp_reward::SharedDtor() {
  serverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_req_pvp_reward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_pvp_reward::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_pvp_reward& tmsg_req_pvp_reward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_pvp_reward.base);
  return *internal_default_instance();
}


void tmsg_req_pvp_reward::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_pvp_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool tmsg_req_pvp_reward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_pvp_reward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string serverid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverid().data(), static_cast<int>(this->serverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_pvp_reward.serverid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_pvp_reward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_pvp_reward)
  return false;
#undef DO_
}

void tmsg_req_pvp_reward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_pvp_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serverid = 1;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_pvp_reward.serverid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_pvp_reward)
}

::google::protobuf::uint8* tmsg_req_pvp_reward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_pvp_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string serverid = 1;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_pvp_reward.serverid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_pvp_reward)
  return target;
}

size_t tmsg_req_pvp_reward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_pvp_reward)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string serverid = 1;
  if (this->serverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_pvp_reward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_pvp_reward)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_pvp_reward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_pvp_reward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_pvp_reward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_pvp_reward)
    MergeFrom(*source);
  }
}

void tmsg_req_pvp_reward::MergeFrom(const tmsg_req_pvp_reward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_pvp_reward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serverid().size() > 0) {

    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
}

void tmsg_req_pvp_reward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_pvp_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_pvp_reward::CopyFrom(const tmsg_req_pvp_reward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_pvp_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_pvp_reward::IsInitialized() const {
  return true;
}

void tmsg_req_pvp_reward::Swap(tmsg_req_pvp_reward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_pvp_reward::InternalSwap(tmsg_req_pvp_reward* other) {
  using std::swap;
  serverid_.Swap(&other->serverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_pvp_reward::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_pvp_reward::InitAsDefaultInstance() {
  ::rpcproto::_tmsg_rep_pvp_reward_default_instance_._instance.get_mutable()->ranks_ = const_cast< ::rpcproto::tmsg_rep_pvp_match*>(
      ::rpcproto::tmsg_rep_pvp_match::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_pvp_reward::kGuidsFieldNumber;
const int tmsg_rep_pvp_reward::kRanksFieldNumber;
const int tmsg_rep_pvp_reward::kResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_pvp_reward::tmsg_rep_pvp_reward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_pvp_reward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_pvp_reward)
}
tmsg_rep_pvp_reward::tmsg_rep_pvp_reward(const tmsg_rep_pvp_reward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      guids_(from.guids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ranks()) {
    ranks_ = new ::rpcproto::tmsg_rep_pvp_match(*from.ranks_);
  } else {
    ranks_ = NULL;
  }
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_pvp_reward)
}

void tmsg_rep_pvp_reward::SharedCtor() {
  ::memset(&ranks_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&ranks_)) + sizeof(res_));
}

tmsg_rep_pvp_reward::~tmsg_rep_pvp_reward() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_pvp_reward)
  SharedDtor();
}

void tmsg_rep_pvp_reward::SharedDtor() {
  if (this != internal_default_instance()) delete ranks_;
}

void tmsg_rep_pvp_reward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_pvp_reward::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_pvp_reward& tmsg_rep_pvp_reward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_pvp_reward.base);
  return *internal_default_instance();
}


void tmsg_rep_pvp_reward::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_pvp_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  guids_.Clear();
  if (GetArenaNoVirtual() == NULL && ranks_ != NULL) {
    delete ranks_;
  }
  ranks_ = NULL;
  set_changed();
  res_ = 0;
  _internal_metadata_.Clear();
}

bool tmsg_rep_pvp_reward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_pvp_reward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 guids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rpcproto.tmsg_rep_pvp_match ranks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ranks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 res = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_pvp_reward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_pvp_reward)
  return false;
#undef DO_
}

void tmsg_rep_pvp_reward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_pvp_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 guids = 1;
  if (this->guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _guids_cached_byte_size_));
  }
  for (int i = 0, n = this->guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->guids(i), output);
  }

  // .rpcproto.tmsg_rep_pvp_match ranks = 2;
  if (this->has_ranks()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_ranks(), output);
  }

  // int32 res = 3;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->res(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_pvp_reward)
}

::google::protobuf::uint8* tmsg_rep_pvp_reward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_pvp_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 guids = 1;
  if (this->guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _guids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->guids_, target);
  }

  // .rpcproto.tmsg_rep_pvp_match ranks = 2;
  if (this->has_ranks()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_ranks(), deterministic, target);
  }

  // int32 res = 3;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->res(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_pvp_reward)
  return target;
}

size_t tmsg_rep_pvp_reward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_pvp_reward)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 guids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _guids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .rpcproto.tmsg_rep_pvp_match ranks = 2;
  if (this->has_ranks()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ranks_);
  }

  // int32 res = 3;
  if (this->res() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->res());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_pvp_reward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_pvp_reward)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_pvp_reward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_pvp_reward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_pvp_reward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_pvp_reward)
    MergeFrom(*source);
  }
}

void tmsg_rep_pvp_reward::MergeFrom(const tmsg_rep_pvp_reward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_pvp_reward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guids_.MergeFrom(from.guids_);
  if (from.has_ranks()) {
    mutable_ranks()->::rpcproto::tmsg_rep_pvp_match::MergeFrom(from.ranks());
  }
  if (from.res() != 0) {
    set_res(from.res());
  }
}

void tmsg_rep_pvp_reward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_pvp_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_pvp_reward::CopyFrom(const tmsg_rep_pvp_reward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_pvp_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_pvp_reward::IsInitialized() const {
  return true;
}

void tmsg_rep_pvp_reward::Swap(tmsg_rep_pvp_reward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_pvp_reward::InternalSwap(tmsg_rep_pvp_reward* other) {
  using std::swap;
  guids_.InternalSwap(&other->guids_);
  swap(ranks_, other->ranks_);
  swap(res_, other->res_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_pvp_reward::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_team_login::InitAsDefaultInstance() {
  ::rpcproto::_tmsg_req_team_login_default_instance_._instance.get_mutable()->players_ = const_cast< ::rpcproto::tmsg_player_fight_player*>(
      ::rpcproto::tmsg_player_fight_player::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_team_login::kPlayersFieldNumber;
const int tmsg_req_team_login::kSigFieldNumber;
const int tmsg_req_team_login::kFriendsFieldNumber;
const int tmsg_req_team_login::kByRewardNumFieldNumber;
const int tmsg_req_team_login::kSrankFieldNumber;
const int tmsg_req_team_login::kDsRewardNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_team_login::tmsg_req_team_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_team_login.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_team_login)
}
tmsg_req_team_login::tmsg_req_team_login(const tmsg_req_team_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friends_(from.friends_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sig().size() > 0) {
    sig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sig_);
  }
  if (from.has_players()) {
    players_ = new ::rpcproto::tmsg_player_fight_player(*from.players_);
  } else {
    players_ = NULL;
  }
  ::memcpy(&by_reward_num_, &from.by_reward_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&ds_reward_num_) -
    reinterpret_cast<char*>(&by_reward_num_)) + sizeof(ds_reward_num_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_team_login)
}

void tmsg_req_team_login::SharedCtor() {
  sig_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&players_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ds_reward_num_) -
      reinterpret_cast<char*>(&players_)) + sizeof(ds_reward_num_));
}

tmsg_req_team_login::~tmsg_req_team_login() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_team_login)
  SharedDtor();
}

void tmsg_req_team_login::SharedDtor() {
  sig_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete players_;
}

void tmsg_req_team_login::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_team_login::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_team_login& tmsg_req_team_login::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_team_login.base);
  return *internal_default_instance();
}


void tmsg_req_team_login::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_team_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  friends_.Clear();
  set_changed();
  sig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && players_ != NULL) {
    delete players_;
  }
  players_ = NULL;
  ::memset(&by_reward_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ds_reward_num_) -
      reinterpret_cast<char*>(&by_reward_num_)) + sizeof(ds_reward_num_));
  _internal_metadata_.Clear();
}

bool tmsg_req_team_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_team_login)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .rpcproto.tmsg_player_fight_player players = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sig = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sig()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sig().data(), static_cast<int>(this->sig().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_team_login.sig"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 friends = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_friends())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_friends())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 by_reward_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &by_reward_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 srank = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &srank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ds_reward_num = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ds_reward_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_team_login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_team_login)
  return false;
#undef DO_
}

void tmsg_req_team_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_team_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rpcproto.tmsg_player_fight_player players = 1;
  if (this->has_players()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_players(), output);
  }

  // string sig = 2;
  if (this->sig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sig().data(), static_cast<int>(this->sig().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_team_login.sig");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sig(), output);
  }

  // repeated uint64 friends = 3;
  if (this->friends_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _friends_cached_byte_size_));
  }
  for (int i = 0, n = this->friends_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->friends(i), output);
  }

  // int32 by_reward_num = 4;
  if (this->by_reward_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->by_reward_num(), output);
  }

  // int32 srank = 5;
  if (this->srank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->srank(), output);
  }

  // int32 ds_reward_num = 6;
  if (this->ds_reward_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ds_reward_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_team_login)
}

::google::protobuf::uint8* tmsg_req_team_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_team_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .rpcproto.tmsg_player_fight_player players = 1;
  if (this->has_players()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_players(), deterministic, target);
  }

  // string sig = 2;
  if (this->sig().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sig().data(), static_cast<int>(this->sig().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_team_login.sig");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sig(), target);
  }

  // repeated uint64 friends = 3;
  if (this->friends_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _friends_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->friends_, target);
  }

  // int32 by_reward_num = 4;
  if (this->by_reward_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->by_reward_num(), target);
  }

  // int32 srank = 5;
  if (this->srank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->srank(), target);
  }

  // int32 ds_reward_num = 6;
  if (this->ds_reward_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ds_reward_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_team_login)
  return target;
}

size_t tmsg_req_team_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_team_login)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 friends = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->friends_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _friends_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string sig = 2;
  if (this->sig().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sig());
  }

  // .rpcproto.tmsg_player_fight_player players = 1;
  if (this->has_players()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *players_);
  }

  // int32 by_reward_num = 4;
  if (this->by_reward_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->by_reward_num());
  }

  // int32 srank = 5;
  if (this->srank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->srank());
  }

  // int32 ds_reward_num = 6;
  if (this->ds_reward_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ds_reward_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_team_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_team_login)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_team_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_team_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_team_login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_team_login)
    MergeFrom(*source);
  }
}

void tmsg_req_team_login::MergeFrom(const tmsg_req_team_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_team_login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friends_.MergeFrom(from.friends_);
  if (from.sig().size() > 0) {

    sig_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sig_);
  }
  if (from.has_players()) {
    mutable_players()->::rpcproto::tmsg_player_fight_player::MergeFrom(from.players());
  }
  if (from.by_reward_num() != 0) {
    set_by_reward_num(from.by_reward_num());
  }
  if (from.srank() != 0) {
    set_srank(from.srank());
  }
  if (from.ds_reward_num() != 0) {
    set_ds_reward_num(from.ds_reward_num());
  }
}

void tmsg_req_team_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_team_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_team_login::CopyFrom(const tmsg_req_team_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_team_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_team_login::IsInitialized() const {
  return true;
}

void tmsg_req_team_login::Swap(tmsg_req_team_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_team_login::InternalSwap(tmsg_req_team_login* other) {
  using std::swap;
  friends_.InternalSwap(&other->friends_);
  sig_.Swap(&other->sig_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(players_, other->players_);
  swap(by_reward_num_, other->by_reward_num_);
  swap(srank_, other->srank_);
  swap(ds_reward_num_, other->ds_reward_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_team_login::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_team_login::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_team_login::kResFieldNumber;
const int tmsg_rep_team_login::kChenghaoFieldNumber;
const int tmsg_rep_team_login::kPointFieldNumber;
const int tmsg_rep_team_login::kDuanweiFieldNumber;
const int tmsg_rep_team_login::kDspointFieldNumber;
const int tmsg_rep_team_login::kDsCdTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_team_login::tmsg_rep_team_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_team_login.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_team_login)
}
tmsg_rep_team_login::tmsg_rep_team_login(const tmsg_rep_team_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&res_, &from.res_,
    static_cast<size_t>(reinterpret_cast<char*>(&dspoint_) -
    reinterpret_cast<char*>(&res_)) + sizeof(dspoint_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_team_login)
}

void tmsg_rep_team_login::SharedCtor() {
  ::memset(&res_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dspoint_) -
      reinterpret_cast<char*>(&res_)) + sizeof(dspoint_));
}

tmsg_rep_team_login::~tmsg_rep_team_login() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_team_login)
  SharedDtor();
}

void tmsg_rep_team_login::SharedDtor() {
}

void tmsg_rep_team_login::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_team_login::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_team_login& tmsg_rep_team_login::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_team_login.base);
  return *internal_default_instance();
}


void tmsg_rep_team_login::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_team_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&res_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dspoint_) -
      reinterpret_cast<char*>(&res_)) + sizeof(dspoint_));
  _internal_metadata_.Clear();
}

bool tmsg_rep_team_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_team_login)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 res = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 chenghao = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chenghao_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 point = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 duanwei = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duanwei_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dspoint = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dspoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ds_cd_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ds_cd_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_team_login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_team_login)
  return false;
#undef DO_
}

void tmsg_rep_team_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_team_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 res = 1;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->res(), output);
  }

  // int32 chenghao = 2;
  if (this->chenghao() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chenghao(), output);
  }

  // int32 point = 3;
  if (this->point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->point(), output);
  }

  // int32 duanwei = 4;
  if (this->duanwei() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->duanwei(), output);
  }

  // int32 dspoint = 5;
  if (this->dspoint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->dspoint(), output);
  }

  // uint64 ds_cd_time = 6;
  if (this->ds_cd_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->ds_cd_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_team_login)
}

::google::protobuf::uint8* tmsg_rep_team_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_team_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 res = 1;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->res(), target);
  }

  // int32 chenghao = 2;
  if (this->chenghao() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chenghao(), target);
  }

  // int32 point = 3;
  if (this->point() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->point(), target);
  }

  // int32 duanwei = 4;
  if (this->duanwei() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->duanwei(), target);
  }

  // int32 dspoint = 5;
  if (this->dspoint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->dspoint(), target);
  }

  // uint64 ds_cd_time = 6;
  if (this->ds_cd_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->ds_cd_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_team_login)
  return target;
}

size_t tmsg_rep_team_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_team_login)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->res());
  }

  // int32 chenghao = 2;
  if (this->chenghao() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chenghao());
  }

  // int32 point = 3;
  if (this->point() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->point());
  }

  // int32 duanwei = 4;
  if (this->duanwei() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duanwei());
  }

  // uint64 ds_cd_time = 6;
  if (this->ds_cd_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ds_cd_time());
  }

  // int32 dspoint = 5;
  if (this->dspoint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dspoint());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_team_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_team_login)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_team_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_team_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_team_login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_team_login)
    MergeFrom(*source);
  }
}

void tmsg_rep_team_login::MergeFrom(const tmsg_rep_team_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_team_login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.res() != 0) {
    set_res(from.res());
  }
  if (from.chenghao() != 0) {
    set_chenghao(from.chenghao());
  }
  if (from.point() != 0) {
    set_point(from.point());
  }
  if (from.duanwei() != 0) {
    set_duanwei(from.duanwei());
  }
  if (from.ds_cd_time() != 0) {
    set_ds_cd_time(from.ds_cd_time());
  }
  if (from.dspoint() != 0) {
    set_dspoint(from.dspoint());
  }
}

void tmsg_rep_team_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_team_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_team_login::CopyFrom(const tmsg_rep_team_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_team_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_team_login::IsInitialized() const {
  return true;
}

void tmsg_rep_team_login::Swap(tmsg_rep_team_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_team_login::InternalSwap(tmsg_rep_team_login* other) {
  using std::swap;
  swap(res_, other->res_);
  swap(chenghao_, other->chenghao_);
  swap(point_, other->point_);
  swap(duanwei_, other->duanwei_);
  swap(ds_cd_time_, other->ds_cd_time_);
  swap(dspoint_, other->dspoint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_team_login::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_team_pull::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_team_pull::kGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_team_pull::tmsg_req_team_pull()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_team_pull.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_team_pull)
}
tmsg_req_team_pull::tmsg_req_team_pull(const tmsg_req_team_pull& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_team_pull)
}

void tmsg_req_team_pull::SharedCtor() {
  guid_ = GOOGLE_ULONGLONG(0);
}

tmsg_req_team_pull::~tmsg_req_team_pull() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_team_pull)
  SharedDtor();
}

void tmsg_req_team_pull::SharedDtor() {
}

void tmsg_req_team_pull::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_team_pull::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_team_pull& tmsg_req_team_pull::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_team_pull.base);
  return *internal_default_instance();
}


void tmsg_req_team_pull::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_team_pull)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool tmsg_req_team_pull::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_team_pull)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_team_pull)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_team_pull)
  return false;
#undef DO_
}

void tmsg_req_team_pull::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_team_pull)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_team_pull)
}

::google::protobuf::uint8* tmsg_req_team_pull::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_team_pull)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_team_pull)
  return target;
}

size_t tmsg_req_team_pull::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_team_pull)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_team_pull::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_team_pull)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_team_pull* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_team_pull>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_team_pull)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_team_pull)
    MergeFrom(*source);
  }
}

void tmsg_req_team_pull::MergeFrom(const tmsg_req_team_pull& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_team_pull)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void tmsg_req_team_pull::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_team_pull)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_team_pull::CopyFrom(const tmsg_req_team_pull& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_team_pull)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_team_pull::IsInitialized() const {
  return true;
}

void tmsg_req_team_pull::Swap(tmsg_req_team_pull* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_team_pull::InternalSwap(tmsg_req_team_pull* other) {
  using std::swap;
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_team_pull::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_team_push::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_team_push::kChenghaoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_team_push::tmsg_rep_team_push()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_team_push.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_team_push)
}
tmsg_rep_team_push::tmsg_rep_team_push(const tmsg_rep_team_push& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chenghao_ = from.chenghao_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_team_push)
}

void tmsg_rep_team_push::SharedCtor() {
  chenghao_ = 0;
}

tmsg_rep_team_push::~tmsg_rep_team_push() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_team_push)
  SharedDtor();
}

void tmsg_rep_team_push::SharedDtor() {
}

void tmsg_rep_team_push::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_team_push::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_team_push& tmsg_rep_team_push::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_team_push.base);
  return *internal_default_instance();
}


void tmsg_rep_team_push::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_team_push)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  chenghao_ = 0;
  _internal_metadata_.Clear();
}

bool tmsg_rep_team_push::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_team_push)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 chenghao = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chenghao_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_team_push)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_team_push)
  return false;
#undef DO_
}

void tmsg_rep_team_push::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_team_push)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chenghao = 1;
  if (this->chenghao() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chenghao(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_team_push)
}

::google::protobuf::uint8* tmsg_rep_team_push::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_team_push)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chenghao = 1;
  if (this->chenghao() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chenghao(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_team_push)
  return target;
}

size_t tmsg_rep_team_push::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_team_push)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 chenghao = 1;
  if (this->chenghao() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chenghao());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_team_push::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_team_push)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_team_push* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_team_push>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_team_push)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_team_push)
    MergeFrom(*source);
  }
}

void tmsg_rep_team_push::MergeFrom(const tmsg_rep_team_push& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_team_push)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chenghao() != 0) {
    set_chenghao(from.chenghao());
  }
}

void tmsg_rep_team_push::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_team_push)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_team_push::CopyFrom(const tmsg_rep_team_push& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_team_push)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_team_push::IsInitialized() const {
  return true;
}

void tmsg_rep_team_push::Swap(tmsg_rep_team_push* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_team_push::InternalSwap(tmsg_rep_team_push* other) {
  using std::swap;
  swap(chenghao_, other->chenghao_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_team_push::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_team_invite::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_team_invite::kFriendsFieldNumber;
const int tmsg_team_invite::kWhoisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_team_invite::tmsg_team_invite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_team_invite.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_team_invite)
}
tmsg_team_invite::tmsg_team_invite(const tmsg_team_invite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&friends_, &from.friends_,
    static_cast<size_t>(reinterpret_cast<char*>(&whois_) -
    reinterpret_cast<char*>(&friends_)) + sizeof(whois_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_team_invite)
}

void tmsg_team_invite::SharedCtor() {
  ::memset(&friends_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&whois_) -
      reinterpret_cast<char*>(&friends_)) + sizeof(whois_));
}

tmsg_team_invite::~tmsg_team_invite() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_team_invite)
  SharedDtor();
}

void tmsg_team_invite::SharedDtor() {
}

void tmsg_team_invite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_team_invite::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_team_invite& tmsg_team_invite::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_team_invite.base);
  return *internal_default_instance();
}


void tmsg_team_invite::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_team_invite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&friends_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&whois_) -
      reinterpret_cast<char*>(&friends_)) + sizeof(whois_));
  _internal_metadata_.Clear();
}

bool tmsg_team_invite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_team_invite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 friends = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &friends_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 whois = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &whois_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_team_invite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_team_invite)
  return false;
#undef DO_
}

void tmsg_team_invite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_team_invite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 friends = 1;
  if (this->friends() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->friends(), output);
  }

  // uint64 whois = 2;
  if (this->whois() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->whois(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_team_invite)
}

::google::protobuf::uint8* tmsg_team_invite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_team_invite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 friends = 1;
  if (this->friends() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->friends(), target);
  }

  // uint64 whois = 2;
  if (this->whois() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->whois(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_team_invite)
  return target;
}

size_t tmsg_team_invite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_team_invite)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 friends = 1;
  if (this->friends() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->friends());
  }

  // uint64 whois = 2;
  if (this->whois() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->whois());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_team_invite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_team_invite)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_team_invite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_team_invite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_team_invite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_team_invite)
    MergeFrom(*source);
  }
}

void tmsg_team_invite::MergeFrom(const tmsg_team_invite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_team_invite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.friends() != 0) {
    set_friends(from.friends());
  }
  if (from.whois() != 0) {
    set_whois(from.whois());
  }
}

void tmsg_team_invite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_team_invite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_team_invite::CopyFrom(const tmsg_team_invite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_team_invite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_team_invite::IsInitialized() const {
  return true;
}

void tmsg_team_invite::Swap(tmsg_team_invite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_team_invite::InternalSwap(tmsg_team_invite* other) {
  using std::swap;
  swap(friends_, other->friends_);
  swap(whois_, other->whois_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_team_invite::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_bingyuan_buy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_bingyuan_buy::kGuidFieldNumber;
const int tmsg_req_bingyuan_buy::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_bingyuan_buy::tmsg_req_bingyuan_buy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_bingyuan_buy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_bingyuan_buy)
}
tmsg_req_bingyuan_buy::tmsg_req_bingyuan_buy(const tmsg_req_bingyuan_buy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_bingyuan_buy)
}

void tmsg_req_bingyuan_buy::SharedCtor() {
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(num_));
}

tmsg_req_bingyuan_buy::~tmsg_req_bingyuan_buy() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_bingyuan_buy)
  SharedDtor();
}

void tmsg_req_bingyuan_buy::SharedDtor() {
}

void tmsg_req_bingyuan_buy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_bingyuan_buy::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_bingyuan_buy& tmsg_req_bingyuan_buy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_bingyuan_buy.base);
  return *internal_default_instance();
}


void tmsg_req_bingyuan_buy::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_bingyuan_buy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(num_));
  _internal_metadata_.Clear();
}

bool tmsg_req_bingyuan_buy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_bingyuan_buy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_bingyuan_buy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_bingyuan_buy)
  return false;
#undef DO_
}

void tmsg_req_bingyuan_buy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_bingyuan_buy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // int32 num = 2;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_bingyuan_buy)
}

::google::protobuf::uint8* tmsg_req_bingyuan_buy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_bingyuan_buy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // int32 num = 2;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_bingyuan_buy)
  return target;
}

size_t tmsg_req_bingyuan_buy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_bingyuan_buy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // int32 num = 2;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_bingyuan_buy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_bingyuan_buy)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_bingyuan_buy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_bingyuan_buy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_bingyuan_buy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_bingyuan_buy)
    MergeFrom(*source);
  }
}

void tmsg_req_bingyuan_buy::MergeFrom(const tmsg_req_bingyuan_buy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_bingyuan_buy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void tmsg_req_bingyuan_buy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_bingyuan_buy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_bingyuan_buy::CopyFrom(const tmsg_req_bingyuan_buy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_bingyuan_buy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_bingyuan_buy::IsInitialized() const {
  return true;
}

void tmsg_req_bingyuan_buy::Swap(tmsg_req_bingyuan_buy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_bingyuan_buy::InternalSwap(tmsg_req_bingyuan_buy* other) {
  using std::swap;
  swap(guid_, other->guid_);
  swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_bingyuan_buy::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_bingyuan_fight::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_bingyuan_fight::kIdFieldNumber;
const int tmsg_req_bingyuan_fight::kGuidFieldNumber;
const int tmsg_req_bingyuan_fight::kNumFieldNumber;
const int tmsg_req_bingyuan_fight::kPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_bingyuan_fight::tmsg_req_bingyuan_fight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_bingyuan_fight.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_bingyuan_fight)
}
tmsg_req_bingyuan_fight::tmsg_req_bingyuan_fight(const tmsg_req_bingyuan_fight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&point_) -
    reinterpret_cast<char*>(&id_)) + sizeof(point_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_bingyuan_fight)
}

void tmsg_req_bingyuan_fight::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_) -
      reinterpret_cast<char*>(&id_)) + sizeof(point_));
}

tmsg_req_bingyuan_fight::~tmsg_req_bingyuan_fight() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_bingyuan_fight)
  SharedDtor();
}

void tmsg_req_bingyuan_fight::SharedDtor() {
}

void tmsg_req_bingyuan_fight::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_bingyuan_fight::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_bingyuan_fight& tmsg_req_bingyuan_fight::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_bingyuan_fight.base);
  return *internal_default_instance();
}


void tmsg_req_bingyuan_fight::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_bingyuan_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_) -
      reinterpret_cast<char*>(&id_)) + sizeof(point_));
  _internal_metadata_.Clear();
}

bool tmsg_req_bingyuan_fight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_bingyuan_fight)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 point = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_bingyuan_fight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_bingyuan_fight)
  return false;
#undef DO_
}

void tmsg_req_bingyuan_fight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_bingyuan_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // int32 num = 3;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num(), output);
  }

  // int32 point = 4;
  if (this->point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->point(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_bingyuan_fight)
}

::google::protobuf::uint8* tmsg_req_bingyuan_fight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_bingyuan_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // int32 num = 3;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num(), target);
  }

  // int32 point = 4;
  if (this->point() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->point(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_bingyuan_fight)
  return target;
}

size_t tmsg_req_bingyuan_fight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_bingyuan_fight)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // int32 num = 3;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  // int32 point = 4;
  if (this->point() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->point());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_bingyuan_fight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_bingyuan_fight)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_bingyuan_fight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_bingyuan_fight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_bingyuan_fight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_bingyuan_fight)
    MergeFrom(*source);
  }
}

void tmsg_req_bingyuan_fight::MergeFrom(const tmsg_req_bingyuan_fight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_bingyuan_fight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
  if (from.point() != 0) {
    set_point(from.point());
  }
}

void tmsg_req_bingyuan_fight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_bingyuan_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_bingyuan_fight::CopyFrom(const tmsg_req_bingyuan_fight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_bingyuan_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_bingyuan_fight::IsInitialized() const {
  return true;
}

void tmsg_req_bingyuan_fight::Swap(tmsg_req_bingyuan_fight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_bingyuan_fight::InternalSwap(tmsg_req_bingyuan_fight* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(guid_, other->guid_);
  swap(num_, other->num_);
  swap(point_, other->point_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_bingyuan_fight::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_bingyuan_fight::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_bingyuan_fight::kBingjingFieldNumber;
const int tmsg_rep_bingyuan_fight::kPointFieldNumber;
const int tmsg_rep_bingyuan_fight::kChenghaoFieldNumber;
const int tmsg_rep_bingyuan_fight::kResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_bingyuan_fight::tmsg_rep_bingyuan_fight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_bingyuan_fight.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_bingyuan_fight)
}
tmsg_rep_bingyuan_fight::tmsg_rep_bingyuan_fight(const tmsg_rep_bingyuan_fight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bingjing_, &from.bingjing_,
    static_cast<size_t>(reinterpret_cast<char*>(&res_) -
    reinterpret_cast<char*>(&bingjing_)) + sizeof(res_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_bingyuan_fight)
}

void tmsg_rep_bingyuan_fight::SharedCtor() {
  ::memset(&bingjing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&bingjing_)) + sizeof(res_));
}

tmsg_rep_bingyuan_fight::~tmsg_rep_bingyuan_fight() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_bingyuan_fight)
  SharedDtor();
}

void tmsg_rep_bingyuan_fight::SharedDtor() {
}

void tmsg_rep_bingyuan_fight::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_bingyuan_fight::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_bingyuan_fight& tmsg_rep_bingyuan_fight::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_bingyuan_fight.base);
  return *internal_default_instance();
}


void tmsg_rep_bingyuan_fight::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_bingyuan_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bingjing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&bingjing_)) + sizeof(res_));
  _internal_metadata_.Clear();
}

bool tmsg_rep_bingyuan_fight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_bingyuan_fight)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 bingjing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bingjing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 chenghao = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chenghao_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool res = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_bingyuan_fight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_bingyuan_fight)
  return false;
#undef DO_
}

void tmsg_rep_bingyuan_fight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_bingyuan_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 bingjing = 1;
  if (this->bingjing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bingjing(), output);
  }

  // int32 point = 2;
  if (this->point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->point(), output);
  }

  // int32 chenghao = 3;
  if (this->chenghao() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->chenghao(), output);
  }

  // bool res = 4;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->res(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_bingyuan_fight)
}

::google::protobuf::uint8* tmsg_rep_bingyuan_fight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_bingyuan_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 bingjing = 1;
  if (this->bingjing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bingjing(), target);
  }

  // int32 point = 2;
  if (this->point() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->point(), target);
  }

  // int32 chenghao = 3;
  if (this->chenghao() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->chenghao(), target);
  }

  // bool res = 4;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->res(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_bingyuan_fight)
  return target;
}

size_t tmsg_rep_bingyuan_fight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_bingyuan_fight)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 bingjing = 1;
  if (this->bingjing() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bingjing());
  }

  // int32 point = 2;
  if (this->point() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->point());
  }

  // int32 chenghao = 3;
  if (this->chenghao() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chenghao());
  }

  // bool res = 4;
  if (this->res() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_bingyuan_fight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_bingyuan_fight)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_bingyuan_fight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_bingyuan_fight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_bingyuan_fight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_bingyuan_fight)
    MergeFrom(*source);
  }
}

void tmsg_rep_bingyuan_fight::MergeFrom(const tmsg_rep_bingyuan_fight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_bingyuan_fight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bingjing() != 0) {
    set_bingjing(from.bingjing());
  }
  if (from.point() != 0) {
    set_point(from.point());
  }
  if (from.chenghao() != 0) {
    set_chenghao(from.chenghao());
  }
  if (from.res() != 0) {
    set_res(from.res());
  }
}

void tmsg_rep_bingyuan_fight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_bingyuan_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_bingyuan_fight::CopyFrom(const tmsg_rep_bingyuan_fight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_bingyuan_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_bingyuan_fight::IsInitialized() const {
  return true;
}

void tmsg_rep_bingyuan_fight::Swap(tmsg_rep_bingyuan_fight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_bingyuan_fight::InternalSwap(tmsg_rep_bingyuan_fight* other) {
  using std::swap;
  swap(bingjing_, other->bingjing_);
  swap(point_, other->point_);
  swap(chenghao_, other->chenghao_);
  swap(res_, other->res_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_bingyuan_fight::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_ds_fight::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_ds_fight::kIdFieldNumber;
const int tmsg_req_ds_fight::kGuidFieldNumber;
const int tmsg_req_ds_fight::kRewardNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_ds_fight::tmsg_req_ds_fight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_ds_fight.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_ds_fight)
}
tmsg_req_ds_fight::tmsg_req_ds_fight(const tmsg_req_ds_fight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&reward_num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(reward_num_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_ds_fight)
}

void tmsg_req_ds_fight::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reward_num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(reward_num_));
}

tmsg_req_ds_fight::~tmsg_req_ds_fight() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_ds_fight)
  SharedDtor();
}

void tmsg_req_ds_fight::SharedDtor() {
}

void tmsg_req_ds_fight::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_ds_fight::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_ds_fight& tmsg_req_ds_fight::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_ds_fight.base);
  return *internal_default_instance();
}


void tmsg_req_ds_fight::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_ds_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reward_num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(reward_num_));
  _internal_metadata_.Clear();
}

bool tmsg_req_ds_fight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_ds_fight)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 reward_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_ds_fight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_ds_fight)
  return false;
#undef DO_
}

void tmsg_req_ds_fight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_ds_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // int32 reward_num = 3;
  if (this->reward_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->reward_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_ds_fight)
}

::google::protobuf::uint8* tmsg_req_ds_fight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_ds_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // int32 reward_num = 3;
  if (this->reward_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->reward_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_ds_fight)
  return target;
}

size_t tmsg_req_ds_fight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_ds_fight)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // int32 reward_num = 3;
  if (this->reward_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reward_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_ds_fight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_ds_fight)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_ds_fight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_ds_fight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_ds_fight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_ds_fight)
    MergeFrom(*source);
  }
}

void tmsg_req_ds_fight::MergeFrom(const tmsg_req_ds_fight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_ds_fight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.reward_num() != 0) {
    set_reward_num(from.reward_num());
  }
}

void tmsg_req_ds_fight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_ds_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_ds_fight::CopyFrom(const tmsg_req_ds_fight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_ds_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_ds_fight::IsInitialized() const {
  return true;
}

void tmsg_req_ds_fight::Swap(tmsg_req_ds_fight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_ds_fight::InternalSwap(tmsg_req_ds_fight* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(guid_, other->guid_);
  swap(reward_num_, other->reward_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_ds_fight::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_ds_fight::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_ds_fight::kXinpianFieldNumber;
const int tmsg_rep_ds_fight::kPointFieldNumber;
const int tmsg_rep_ds_fight::kCiliaoFieldNumber;
const int tmsg_rep_ds_fight::kDuanweiFieldNumber;
const int tmsg_rep_ds_fight::kGrankFieldNumber;
const int tmsg_rep_ds_fight::kResFieldNumber;
const int tmsg_rep_ds_fight::kCdTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_ds_fight::tmsg_rep_ds_fight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_ds_fight.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_ds_fight)
}
tmsg_rep_ds_fight::tmsg_rep_ds_fight(const tmsg_rep_ds_fight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&xinpian_, &from.xinpian_,
    static_cast<size_t>(reinterpret_cast<char*>(&cd_time_) -
    reinterpret_cast<char*>(&xinpian_)) + sizeof(cd_time_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_ds_fight)
}

void tmsg_rep_ds_fight::SharedCtor() {
  ::memset(&xinpian_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cd_time_) -
      reinterpret_cast<char*>(&xinpian_)) + sizeof(cd_time_));
}

tmsg_rep_ds_fight::~tmsg_rep_ds_fight() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_ds_fight)
  SharedDtor();
}

void tmsg_rep_ds_fight::SharedDtor() {
}

void tmsg_rep_ds_fight::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_ds_fight::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_ds_fight& tmsg_rep_ds_fight::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_ds_fight.base);
  return *internal_default_instance();
}


void tmsg_rep_ds_fight::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_ds_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&xinpian_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cd_time_) -
      reinterpret_cast<char*>(&xinpian_)) + sizeof(cd_time_));
  _internal_metadata_.Clear();
}

bool tmsg_rep_ds_fight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_ds_fight)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 xinpian = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xinpian_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ciliao = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ciliao_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 duanwei = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duanwei_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 grank = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool res = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 cd_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cd_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_ds_fight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_ds_fight)
  return false;
#undef DO_
}

void tmsg_rep_ds_fight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_ds_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 xinpian = 1;
  if (this->xinpian() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->xinpian(), output);
  }

  // int32 point = 2;
  if (this->point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->point(), output);
  }

  // int32 ciliao = 3;
  if (this->ciliao() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ciliao(), output);
  }

  // int32 duanwei = 4;
  if (this->duanwei() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->duanwei(), output);
  }

  // int32 grank = 5;
  if (this->grank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->grank(), output);
  }

  // bool res = 6;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->res(), output);
  }

  // uint64 cd_time = 7;
  if (this->cd_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->cd_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_ds_fight)
}

::google::protobuf::uint8* tmsg_rep_ds_fight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_ds_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 xinpian = 1;
  if (this->xinpian() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->xinpian(), target);
  }

  // int32 point = 2;
  if (this->point() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->point(), target);
  }

  // int32 ciliao = 3;
  if (this->ciliao() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ciliao(), target);
  }

  // int32 duanwei = 4;
  if (this->duanwei() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->duanwei(), target);
  }

  // int32 grank = 5;
  if (this->grank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->grank(), target);
  }

  // bool res = 6;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->res(), target);
  }

  // uint64 cd_time = 7;
  if (this->cd_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->cd_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_ds_fight)
  return target;
}

size_t tmsg_rep_ds_fight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_ds_fight)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 xinpian = 1;
  if (this->xinpian() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xinpian());
  }

  // int32 point = 2;
  if (this->point() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->point());
  }

  // int32 ciliao = 3;
  if (this->ciliao() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ciliao());
  }

  // int32 duanwei = 4;
  if (this->duanwei() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duanwei());
  }

  // int32 grank = 5;
  if (this->grank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->grank());
  }

  // bool res = 6;
  if (this->res() != 0) {
    total_size += 1 + 1;
  }

  // uint64 cd_time = 7;
  if (this->cd_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cd_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_ds_fight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_ds_fight)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_ds_fight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_ds_fight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_ds_fight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_ds_fight)
    MergeFrom(*source);
  }
}

void tmsg_rep_ds_fight::MergeFrom(const tmsg_rep_ds_fight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_ds_fight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xinpian() != 0) {
    set_xinpian(from.xinpian());
  }
  if (from.point() != 0) {
    set_point(from.point());
  }
  if (from.ciliao() != 0) {
    set_ciliao(from.ciliao());
  }
  if (from.duanwei() != 0) {
    set_duanwei(from.duanwei());
  }
  if (from.grank() != 0) {
    set_grank(from.grank());
  }
  if (from.res() != 0) {
    set_res(from.res());
  }
  if (from.cd_time() != 0) {
    set_cd_time(from.cd_time());
  }
}

void tmsg_rep_ds_fight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_ds_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_ds_fight::CopyFrom(const tmsg_rep_ds_fight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_ds_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_ds_fight::IsInitialized() const {
  return true;
}

void tmsg_rep_ds_fight::Swap(tmsg_rep_ds_fight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_ds_fight::InternalSwap(tmsg_rep_ds_fight* other) {
  using std::swap;
  swap(xinpian_, other->xinpian_);
  swap(point_, other->point_);
  swap(ciliao_, other->ciliao_);
  swap(duanwei_, other->duanwei_);
  swap(grank_, other->grank_);
  swap(res_, other->res_);
  swap(cd_time_, other->cd_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_ds_fight::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_mofang_point::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_mofang_point::kPointFieldNumber;
const int tmsg_req_mofang_point::kHuodongTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_mofang_point::tmsg_req_mofang_point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_mofang_point.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_mofang_point)
}
tmsg_req_mofang_point::tmsg_req_mofang_point(const tmsg_req_mofang_point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&huodong_time_, &from.huodong_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&point_) -
    reinterpret_cast<char*>(&huodong_time_)) + sizeof(point_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_mofang_point)
}

void tmsg_req_mofang_point::SharedCtor() {
  ::memset(&huodong_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_) -
      reinterpret_cast<char*>(&huodong_time_)) + sizeof(point_));
}

tmsg_req_mofang_point::~tmsg_req_mofang_point() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_mofang_point)
  SharedDtor();
}

void tmsg_req_mofang_point::SharedDtor() {
}

void tmsg_req_mofang_point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_mofang_point::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_mofang_point& tmsg_req_mofang_point::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_mofang_point.base);
  return *internal_default_instance();
}


void tmsg_req_mofang_point::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_mofang_point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&huodong_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_) -
      reinterpret_cast<char*>(&huodong_time_)) + sizeof(point_));
  _internal_metadata_.Clear();
}

bool tmsg_req_mofang_point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_mofang_point)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 huodong_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &huodong_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_mofang_point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_mofang_point)
  return false;
#undef DO_
}

void tmsg_req_mofang_point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_mofang_point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 point = 1;
  if (this->point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->point(), output);
  }

  // uint64 huodong_time = 2;
  if (this->huodong_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->huodong_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_mofang_point)
}

::google::protobuf::uint8* tmsg_req_mofang_point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_mofang_point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 point = 1;
  if (this->point() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->point(), target);
  }

  // uint64 huodong_time = 2;
  if (this->huodong_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->huodong_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_mofang_point)
  return target;
}

size_t tmsg_req_mofang_point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_mofang_point)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 huodong_time = 2;
  if (this->huodong_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->huodong_time());
  }

  // int32 point = 1;
  if (this->point() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->point());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_mofang_point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_mofang_point)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_mofang_point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_mofang_point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_mofang_point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_mofang_point)
    MergeFrom(*source);
  }
}

void tmsg_req_mofang_point::MergeFrom(const tmsg_req_mofang_point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_mofang_point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.huodong_time() != 0) {
    set_huodong_time(from.huodong_time());
  }
  if (from.point() != 0) {
    set_point(from.point());
  }
}

void tmsg_req_mofang_point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_mofang_point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_mofang_point::CopyFrom(const tmsg_req_mofang_point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_mofang_point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_mofang_point::IsInitialized() const {
  return true;
}

void tmsg_req_mofang_point::Swap(tmsg_req_mofang_point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_mofang_point::InternalSwap(tmsg_req_mofang_point* other) {
  using std::swap;
  swap(huodong_time_, other->huodong_time_);
  swap(point_, other->point_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_mofang_point::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_mofang_point::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_mofang_point::kPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_mofang_point::tmsg_rep_mofang_point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_mofang_point.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_mofang_point)
}
tmsg_rep_mofang_point::tmsg_rep_mofang_point(const tmsg_rep_mofang_point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  point_ = from.point_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_mofang_point)
}

void tmsg_rep_mofang_point::SharedCtor() {
  point_ = 0;
}

tmsg_rep_mofang_point::~tmsg_rep_mofang_point() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_mofang_point)
  SharedDtor();
}

void tmsg_rep_mofang_point::SharedDtor() {
}

void tmsg_rep_mofang_point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_mofang_point::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_mofang_point& tmsg_rep_mofang_point::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_mofang_point.base);
  return *internal_default_instance();
}


void tmsg_rep_mofang_point::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_mofang_point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  point_ = 0;
  _internal_metadata_.Clear();
}

bool tmsg_rep_mofang_point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_mofang_point)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_mofang_point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_mofang_point)
  return false;
#undef DO_
}

void tmsg_rep_mofang_point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_mofang_point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 point = 1;
  if (this->point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->point(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_mofang_point)
}

::google::protobuf::uint8* tmsg_rep_mofang_point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_mofang_point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 point = 1;
  if (this->point() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->point(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_mofang_point)
  return target;
}

size_t tmsg_rep_mofang_point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_mofang_point)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 point = 1;
  if (this->point() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->point());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_mofang_point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_mofang_point)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_mofang_point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_mofang_point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_mofang_point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_mofang_point)
    MergeFrom(*source);
  }
}

void tmsg_rep_mofang_point::MergeFrom(const tmsg_rep_mofang_point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_mofang_point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.point() != 0) {
    set_point(from.point());
  }
}

void tmsg_rep_mofang_point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_mofang_point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_mofang_point::CopyFrom(const tmsg_rep_mofang_point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_mofang_point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_mofang_point::IsInitialized() const {
  return true;
}

void tmsg_rep_mofang_point::Swap(tmsg_rep_mofang_point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_mofang_point::InternalSwap(tmsg_rep_mofang_point* other) {
  using std::swap;
  swap(point_, other->point_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_mofang_point::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_invite_code::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_invite_code::kPlayerGuidFieldNumber;
const int tmsg_req_invite_code::kSocialGuidFieldNumber;
const int tmsg_req_invite_code::kCodeFieldNumber;
const int tmsg_req_invite_code::kPlayerGuidsFieldNumber;
const int tmsg_req_invite_code::kLevelsFieldNumber;
const int tmsg_req_invite_code::kIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_invite_code::tmsg_req_invite_code()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_invite_code.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_invite_code)
}
tmsg_req_invite_code::tmsg_req_invite_code(const tmsg_req_invite_code& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_guids_(from.player_guids_),
      levels_(from.levels_),
      ids_(from.ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&social_guid_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(social_guid_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_invite_code)
}

void tmsg_req_invite_code::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&social_guid_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(social_guid_));
}

tmsg_req_invite_code::~tmsg_req_invite_code() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_invite_code)
  SharedDtor();
}

void tmsg_req_invite_code::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_req_invite_code::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_invite_code::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_invite_code& tmsg_req_invite_code::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_invite_code.base);
  return *internal_default_instance();
}


void tmsg_req_invite_code::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_invite_code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  player_guids_.Clear();
  set_changed();
  levels_.Clear();
  set_changed();
  ids_.Clear();
  set_changed();
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&social_guid_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(social_guid_));
  _internal_metadata_.Clear();
}

bool tmsg_req_invite_code::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_invite_code)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 social_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &social_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_invite_code.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 player_guids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_player_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34u, input, this->mutable_player_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 levels = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_levels())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_levels())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 ids = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_invite_code)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_invite_code)
  return false;
#undef DO_
}

void tmsg_req_invite_code::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_invite_code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // uint64 social_guid = 2;
  if (this->social_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->social_guid(), output);
  }

  // string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_invite_code.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code(), output);
  }

  // repeated uint64 player_guids = 4;
  if (this->player_guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_guids_cached_byte_size_));
  }
  for (int i = 0, n = this->player_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->player_guids(i), output);
  }

  // repeated int32 levels = 5;
  if (this->levels_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _levels_cached_byte_size_));
  }
  for (int i = 0, n = this->levels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->levels(i), output);
  }

  // repeated int32 ids = 6;
  if (this->ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _ids_cached_byte_size_));
  }
  for (int i = 0, n = this->ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_invite_code)
}

::google::protobuf::uint8* tmsg_req_invite_code::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_invite_code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // uint64 social_guid = 2;
  if (this->social_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->social_guid(), target);
  }

  // string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_invite_code.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code(), target);
  }

  // repeated uint64 player_guids = 4;
  if (this->player_guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_guids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->player_guids_, target);
  }

  // repeated int32 levels = 5;
  if (this->levels_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _levels_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->levels_, target);
  }

  // repeated int32 ids = 6;
  if (this->ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->ids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_invite_code)
  return target;
}

size_t tmsg_req_invite_code::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_invite_code)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 player_guids = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->player_guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_guids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 levels = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->levels_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _levels_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 ids = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string code = 3;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  // uint64 social_guid = 2;
  if (this->social_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->social_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_invite_code::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_invite_code)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_invite_code* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_invite_code>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_invite_code)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_invite_code)
    MergeFrom(*source);
  }
}

void tmsg_req_invite_code::MergeFrom(const tmsg_req_invite_code& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_invite_code)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_guids_.MergeFrom(from.player_guids_);
  levels_.MergeFrom(from.levels_);
  ids_.MergeFrom(from.ids_);
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.player_guid() != 0) {
    set_player_guid(from.player_guid());
  }
  if (from.social_guid() != 0) {
    set_social_guid(from.social_guid());
  }
}

void tmsg_req_invite_code::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_invite_code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_invite_code::CopyFrom(const tmsg_req_invite_code& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_invite_code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_invite_code::IsInitialized() const {
  return true;
}

void tmsg_req_invite_code::Swap(tmsg_req_invite_code* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_invite_code::InternalSwap(tmsg_req_invite_code* other) {
  using std::swap;
  player_guids_.InternalSwap(&other->player_guids_);
  levels_.InternalSwap(&other->levels_);
  ids_.InternalSwap(&other->ids_);
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_guid_, other->player_guid_);
  swap(social_guid_, other->social_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_invite_code::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_invite_code::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_invite_code::kResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_invite_code::tmsg_rep_invite_code()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_invite_code.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_invite_code)
}
tmsg_rep_invite_code::tmsg_rep_invite_code(const tmsg_rep_invite_code& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_invite_code)
}

void tmsg_rep_invite_code::SharedCtor() {
  res_ = 0;
}

tmsg_rep_invite_code::~tmsg_rep_invite_code() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_invite_code)
  SharedDtor();
}

void tmsg_rep_invite_code::SharedDtor() {
}

void tmsg_rep_invite_code::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_invite_code::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_invite_code& tmsg_rep_invite_code::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_invite_code.base);
  return *internal_default_instance();
}


void tmsg_rep_invite_code::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_invite_code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  res_ = 0;
  _internal_metadata_.Clear();
}

bool tmsg_rep_invite_code::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_invite_code)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 res = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_invite_code)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_invite_code)
  return false;
#undef DO_
}

void tmsg_rep_invite_code::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_invite_code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 res = 1;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->res(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_invite_code)
}

::google::protobuf::uint8* tmsg_rep_invite_code::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_invite_code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 res = 1;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->res(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_invite_code)
  return target;
}

size_t tmsg_rep_invite_code::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_invite_code)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->res());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_invite_code::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_invite_code)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_invite_code* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_invite_code>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_invite_code)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_invite_code)
    MergeFrom(*source);
  }
}

void tmsg_rep_invite_code::MergeFrom(const tmsg_rep_invite_code& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_invite_code)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.res() != 0) {
    set_res(from.res());
  }
}

void tmsg_rep_invite_code::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_invite_code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_invite_code::CopyFrom(const tmsg_rep_invite_code& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_invite_code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_invite_code::IsInitialized() const {
  return true;
}

void tmsg_rep_invite_code::Swap(tmsg_rep_invite_code* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_invite_code::InternalSwap(tmsg_rep_invite_code* other) {
  using std::swap;
  swap(res_, other->res_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_invite_code::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_invite_code_input::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_invite_code_input::kPlayerGuidFieldNumber;
const int tmsg_req_invite_code_input::kPlayerLevelFieldNumber;
const int tmsg_req_invite_code_input::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_invite_code_input::tmsg_req_invite_code_input()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_invite_code_input.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_invite_code_input)
}
tmsg_req_invite_code_input::tmsg_req_invite_code_input(const tmsg_req_invite_code_input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_level_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(player_level_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_invite_code_input)
}

void tmsg_req_invite_code_input::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_level_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(player_level_));
}

tmsg_req_invite_code_input::~tmsg_req_invite_code_input() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_invite_code_input)
  SharedDtor();
}

void tmsg_req_invite_code_input::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_req_invite_code_input::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_invite_code_input::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_invite_code_input& tmsg_req_invite_code_input::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_invite_code_input.base);
  return *internal_default_instance();
}


void tmsg_req_invite_code_input::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_invite_code_input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_level_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(player_level_));
  _internal_metadata_.Clear();
}

bool tmsg_req_invite_code_input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_invite_code_input)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 player_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_invite_code_input.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_invite_code_input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_invite_code_input)
  return false;
#undef DO_
}

void tmsg_req_invite_code_input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_invite_code_input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // int32 player_level = 2;
  if (this->player_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->player_level(), output);
  }

  // string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_invite_code_input.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_invite_code_input)
}

::google::protobuf::uint8* tmsg_req_invite_code_input::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_invite_code_input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // int32 player_level = 2;
  if (this->player_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->player_level(), target);
  }

  // string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_invite_code_input.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_invite_code_input)
  return target;
}

size_t tmsg_req_invite_code_input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_invite_code_input)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string code = 3;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  // int32 player_level = 2;
  if (this->player_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->player_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_invite_code_input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_invite_code_input)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_invite_code_input* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_invite_code_input>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_invite_code_input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_invite_code_input)
    MergeFrom(*source);
  }
}

void tmsg_req_invite_code_input::MergeFrom(const tmsg_req_invite_code_input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_invite_code_input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.player_guid() != 0) {
    set_player_guid(from.player_guid());
  }
  if (from.player_level() != 0) {
    set_player_level(from.player_level());
  }
}

void tmsg_req_invite_code_input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_invite_code_input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_invite_code_input::CopyFrom(const tmsg_req_invite_code_input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_invite_code_input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_invite_code_input::IsInitialized() const {
  return true;
}

void tmsg_req_invite_code_input::Swap(tmsg_req_invite_code_input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_invite_code_input::InternalSwap(tmsg_req_invite_code_input* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_guid_, other->player_guid_);
  swap(player_level_, other->player_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_invite_code_input::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_invite_level::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_invite_level::kPlayerGuidsFieldNumber;
const int tmsg_rep_invite_level::kLevelsFieldNumber;
const int tmsg_rep_invite_level::kResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_invite_level::tmsg_rep_invite_level()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_invite_level.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_invite_level)
}
tmsg_rep_invite_level::tmsg_rep_invite_level(const tmsg_rep_invite_level& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_guids_(from.player_guids_),
      levels_(from.levels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_invite_level)
}

void tmsg_rep_invite_level::SharedCtor() {
  res_ = false;
}

tmsg_rep_invite_level::~tmsg_rep_invite_level() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_invite_level)
  SharedDtor();
}

void tmsg_rep_invite_level::SharedDtor() {
}

void tmsg_rep_invite_level::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_invite_level::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_invite_level& tmsg_rep_invite_level::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_invite_level.base);
  return *internal_default_instance();
}


void tmsg_rep_invite_level::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_invite_level)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  player_guids_.Clear();
  set_changed();
  levels_.Clear();
  set_changed();
  res_ = false;
  _internal_metadata_.Clear();
}

bool tmsg_rep_invite_level::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_invite_level)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 player_guids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_player_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_player_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 levels = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_levels())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_levels())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool res = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_invite_level)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_invite_level)
  return false;
#undef DO_
}

void tmsg_rep_invite_level::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_invite_level)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 player_guids = 1;
  if (this->player_guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_guids_cached_byte_size_));
  }
  for (int i = 0, n = this->player_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->player_guids(i), output);
  }

  // repeated int32 levels = 2;
  if (this->levels_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _levels_cached_byte_size_));
  }
  for (int i = 0, n = this->levels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->levels(i), output);
  }

  // bool res = 3;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->res(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_invite_level)
}

::google::protobuf::uint8* tmsg_rep_invite_level::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_invite_level)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 player_guids = 1;
  if (this->player_guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_guids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->player_guids_, target);
  }

  // repeated int32 levels = 2;
  if (this->levels_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _levels_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->levels_, target);
  }

  // bool res = 3;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->res(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_invite_level)
  return target;
}

size_t tmsg_rep_invite_level::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_invite_level)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 player_guids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->player_guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_guids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 levels = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->levels_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _levels_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool res = 3;
  if (this->res() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_invite_level::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_invite_level)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_invite_level* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_invite_level>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_invite_level)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_invite_level)
    MergeFrom(*source);
  }
}

void tmsg_rep_invite_level::MergeFrom(const tmsg_rep_invite_level& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_invite_level)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_guids_.MergeFrom(from.player_guids_);
  levels_.MergeFrom(from.levels_);
  if (from.res() != 0) {
    set_res(from.res());
  }
}

void tmsg_rep_invite_level::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_invite_level)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_invite_level::CopyFrom(const tmsg_rep_invite_level& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_invite_level)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_invite_level::IsInitialized() const {
  return true;
}

void tmsg_rep_invite_level::Swap(tmsg_rep_invite_level* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_invite_level::InternalSwap(tmsg_rep_invite_level* other) {
  using std::swap;
  player_guids_.InternalSwap(&other->player_guids_);
  levels_.InternalSwap(&other->levels_);
  swap(res_, other->res_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_invite_level::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_guild_pvp_baoming::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_guild_pvp_baoming::kGuildFieldNumber;
const int tmsg_req_guild_pvp_baoming::kGuildServerFieldNumber;
const int tmsg_req_guild_pvp_baoming::kGuildNameFieldNumber;
const int tmsg_req_guild_pvp_baoming::kGuildIconFieldNumber;
const int tmsg_req_guild_pvp_baoming::kGuildLevelFieldNumber;
const int tmsg_req_guild_pvp_baoming::kPlayerGuidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_guild_pvp_baoming::tmsg_req_guild_pvp_baoming()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_guild_pvp_baoming.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_guild_pvp_baoming)
}
tmsg_req_guild_pvp_baoming::tmsg_req_guild_pvp_baoming(const tmsg_req_guild_pvp_baoming& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_guids_(from.player_guids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guild_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guild_name().size() > 0) {
    guild_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guild_name_);
  }
  ::memcpy(&guild_, &from.guild_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_level_) -
    reinterpret_cast<char*>(&guild_)) + sizeof(guild_level_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_guild_pvp_baoming)
}

void tmsg_req_guild_pvp_baoming::SharedCtor() {
  guild_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guild_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_level_) -
      reinterpret_cast<char*>(&guild_)) + sizeof(guild_level_));
}

tmsg_req_guild_pvp_baoming::~tmsg_req_guild_pvp_baoming() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_guild_pvp_baoming)
  SharedDtor();
}

void tmsg_req_guild_pvp_baoming::SharedDtor() {
  guild_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_req_guild_pvp_baoming::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_guild_pvp_baoming::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_guild_pvp_baoming& tmsg_req_guild_pvp_baoming::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_guild_pvp_baoming.base);
  return *internal_default_instance();
}


void tmsg_req_guild_pvp_baoming::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_guild_pvp_baoming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  player_guids_.Clear();
  set_changed();
  guild_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guild_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_level_) -
      reinterpret_cast<char*>(&guild_)) + sizeof(guild_level_));
  _internal_metadata_.Clear();
}

bool tmsg_req_guild_pvp_baoming::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_guild_pvp_baoming)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guild = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_server_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string guild_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guild_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->guild_name().data(), static_cast<int>(this->guild_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_guild_pvp_baoming.guild_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_icon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 player_guids = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_player_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 50u, input, this->mutable_player_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_guild_pvp_baoming)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_guild_pvp_baoming)
  return false;
#undef DO_
}

void tmsg_req_guild_pvp_baoming::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_guild_pvp_baoming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild = 1;
  if (this->guild() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guild(), output);
  }

  // int32 guild_server = 2;
  if (this->guild_server() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->guild_server(), output);
  }

  // string guild_name = 3;
  if (this->guild_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guild_name().data(), static_cast<int>(this->guild_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_guild_pvp_baoming.guild_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->guild_name(), output);
  }

  // int32 guild_icon = 4;
  if (this->guild_icon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->guild_icon(), output);
  }

  // int32 guild_level = 5;
  if (this->guild_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->guild_level(), output);
  }

  // repeated uint64 player_guids = 6;
  if (this->player_guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_guids_cached_byte_size_));
  }
  for (int i = 0, n = this->player_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->player_guids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_guild_pvp_baoming)
}

::google::protobuf::uint8* tmsg_req_guild_pvp_baoming::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_guild_pvp_baoming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild = 1;
  if (this->guild() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guild(), target);
  }

  // int32 guild_server = 2;
  if (this->guild_server() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->guild_server(), target);
  }

  // string guild_name = 3;
  if (this->guild_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guild_name().data(), static_cast<int>(this->guild_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_guild_pvp_baoming.guild_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->guild_name(), target);
  }

  // int32 guild_icon = 4;
  if (this->guild_icon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->guild_icon(), target);
  }

  // int32 guild_level = 5;
  if (this->guild_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->guild_level(), target);
  }

  // repeated uint64 player_guids = 6;
  if (this->player_guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_guids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->player_guids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_guild_pvp_baoming)
  return target;
}

size_t tmsg_req_guild_pvp_baoming::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_guild_pvp_baoming)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 player_guids = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->player_guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_guids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string guild_name = 3;
  if (this->guild_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guild_name());
  }

  // uint64 guild = 1;
  if (this->guild() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guild());
  }

  // int32 guild_server = 2;
  if (this->guild_server() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_server());
  }

  // int32 guild_icon = 4;
  if (this->guild_icon() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_icon());
  }

  // int32 guild_level = 5;
  if (this->guild_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_guild_pvp_baoming::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_guild_pvp_baoming)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_guild_pvp_baoming* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_guild_pvp_baoming>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_guild_pvp_baoming)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_guild_pvp_baoming)
    MergeFrom(*source);
  }
}

void tmsg_req_guild_pvp_baoming::MergeFrom(const tmsg_req_guild_pvp_baoming& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_guild_pvp_baoming)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_guids_.MergeFrom(from.player_guids_);
  if (from.guild_name().size() > 0) {

    guild_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guild_name_);
  }
  if (from.guild() != 0) {
    set_guild(from.guild());
  }
  if (from.guild_server() != 0) {
    set_guild_server(from.guild_server());
  }
  if (from.guild_icon() != 0) {
    set_guild_icon(from.guild_icon());
  }
  if (from.guild_level() != 0) {
    set_guild_level(from.guild_level());
  }
}

void tmsg_req_guild_pvp_baoming::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_guild_pvp_baoming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_guild_pvp_baoming::CopyFrom(const tmsg_req_guild_pvp_baoming& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_guild_pvp_baoming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_guild_pvp_baoming::IsInitialized() const {
  return true;
}

void tmsg_req_guild_pvp_baoming::Swap(tmsg_req_guild_pvp_baoming* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_guild_pvp_baoming::InternalSwap(tmsg_req_guild_pvp_baoming* other) {
  using std::swap;
  player_guids_.InternalSwap(&other->player_guids_);
  guild_name_.Swap(&other->guild_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guild_, other->guild_);
  swap(guild_server_, other->guild_server_);
  swap(guild_icon_, other->guild_icon_);
  swap(guild_level_, other->guild_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_guild_pvp_baoming::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_guild_pvp_baoming::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_guild_pvp_baoming::kResFieldNumber;
const int tmsg_rep_guild_pvp_baoming::kPlayerGuidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_guild_pvp_baoming::tmsg_rep_guild_pvp_baoming()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_pvp_baoming.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_guild_pvp_baoming)
}
tmsg_rep_guild_pvp_baoming::tmsg_rep_guild_pvp_baoming(const tmsg_rep_guild_pvp_baoming& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_guids_(from.player_guids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_guild_pvp_baoming)
}

void tmsg_rep_guild_pvp_baoming::SharedCtor() {
  res_ = false;
}

tmsg_rep_guild_pvp_baoming::~tmsg_rep_guild_pvp_baoming() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_guild_pvp_baoming)
  SharedDtor();
}

void tmsg_rep_guild_pvp_baoming::SharedDtor() {
}

void tmsg_rep_guild_pvp_baoming::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_guild_pvp_baoming::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_guild_pvp_baoming& tmsg_rep_guild_pvp_baoming::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_pvp_baoming.base);
  return *internal_default_instance();
}


void tmsg_rep_guild_pvp_baoming::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_guild_pvp_baoming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  player_guids_.Clear();
  set_changed();
  res_ = false;
  _internal_metadata_.Clear();
}

bool tmsg_rep_guild_pvp_baoming::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_guild_pvp_baoming)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool res = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 player_guids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_player_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_player_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_guild_pvp_baoming)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_guild_pvp_baoming)
  return false;
#undef DO_
}

void tmsg_rep_guild_pvp_baoming::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_guild_pvp_baoming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool res = 1;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->res(), output);
  }

  // repeated uint64 player_guids = 2;
  if (this->player_guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_guids_cached_byte_size_));
  }
  for (int i = 0, n = this->player_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->player_guids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_guild_pvp_baoming)
}

::google::protobuf::uint8* tmsg_rep_guild_pvp_baoming::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_guild_pvp_baoming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool res = 1;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->res(), target);
  }

  // repeated uint64 player_guids = 2;
  if (this->player_guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_guids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->player_guids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_guild_pvp_baoming)
  return target;
}

size_t tmsg_rep_guild_pvp_baoming::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_guild_pvp_baoming)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 player_guids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->player_guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_guids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool res = 1;
  if (this->res() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_guild_pvp_baoming::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_guild_pvp_baoming)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_guild_pvp_baoming* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_guild_pvp_baoming>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_guild_pvp_baoming)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_guild_pvp_baoming)
    MergeFrom(*source);
  }
}

void tmsg_rep_guild_pvp_baoming::MergeFrom(const tmsg_rep_guild_pvp_baoming& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_guild_pvp_baoming)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_guids_.MergeFrom(from.player_guids_);
  if (from.res() != 0) {
    set_res(from.res());
  }
}

void tmsg_rep_guild_pvp_baoming::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_guild_pvp_baoming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_guild_pvp_baoming::CopyFrom(const tmsg_rep_guild_pvp_baoming& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_guild_pvp_baoming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_guild_pvp_baoming::IsInitialized() const {
  return true;
}

void tmsg_rep_guild_pvp_baoming::Swap(tmsg_rep_guild_pvp_baoming* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_guild_pvp_baoming::InternalSwap(tmsg_rep_guild_pvp_baoming* other) {
  using std::swap;
  player_guids_.InternalSwap(&other->player_guids_);
  swap(res_, other->res_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_guild_pvp_baoming::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_guild_pvp_bushu::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_guild_pvp_bushu::kGuildFieldNumber;
const int tmsg_req_guild_pvp_bushu::kGuildNameFieldNumber;
const int tmsg_req_guild_pvp_bushu::kGuildIconFieldNumber;
const int tmsg_req_guild_pvp_bushu::kGuildLevelFieldNumber;
const int tmsg_req_guild_pvp_bushu::kPlayerGuidsFieldNumber;
const int tmsg_req_guild_pvp_bushu::kPlayerNamesFieldNumber;
const int tmsg_req_guild_pvp_bushu::kPlayerTemplateFieldNumber;
const int tmsg_req_guild_pvp_bushu::kPlayerLevelFieldNumber;
const int tmsg_req_guild_pvp_bushu::kPlayerBatEffFieldNumber;
const int tmsg_req_guild_pvp_bushu::kPlayerVipsFieldNumber;
const int tmsg_req_guild_pvp_bushu::kPlayerAchievesFieldNumber;
const int tmsg_req_guild_pvp_bushu::kPlayerMapStarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_guild_pvp_bushu::tmsg_req_guild_pvp_bushu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_guild_pvp_bushu.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_guild_pvp_bushu)
}
tmsg_req_guild_pvp_bushu::tmsg_req_guild_pvp_bushu(const tmsg_req_guild_pvp_bushu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_guids_(from.player_guids_),
      player_names_(from.player_names_),
      player_template_(from.player_template_),
      player_level_(from.player_level_),
      player_bat_eff_(from.player_bat_eff_),
      player_vips_(from.player_vips_),
      player_achieves_(from.player_achieves_),
      player_map_star_(from.player_map_star_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guild_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guild_name().size() > 0) {
    guild_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guild_name_);
  }
  ::memcpy(&guild_, &from.guild_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_level_) -
    reinterpret_cast<char*>(&guild_)) + sizeof(guild_level_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_guild_pvp_bushu)
}

void tmsg_req_guild_pvp_bushu::SharedCtor() {
  guild_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guild_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_level_) -
      reinterpret_cast<char*>(&guild_)) + sizeof(guild_level_));
}

tmsg_req_guild_pvp_bushu::~tmsg_req_guild_pvp_bushu() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_guild_pvp_bushu)
  SharedDtor();
}

void tmsg_req_guild_pvp_bushu::SharedDtor() {
  guild_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_req_guild_pvp_bushu::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_guild_pvp_bushu::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_guild_pvp_bushu& tmsg_req_guild_pvp_bushu::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_guild_pvp_bushu.base);
  return *internal_default_instance();
}


void tmsg_req_guild_pvp_bushu::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_guild_pvp_bushu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  player_guids_.Clear();
  set_changed();
  player_names_.Clear();
  set_changed();
  player_template_.Clear();
  set_changed();
  player_level_.Clear();
  set_changed();
  player_bat_eff_.Clear();
  set_changed();
  player_vips_.Clear();
  set_changed();
  player_achieves_.Clear();
  set_changed();
  player_map_star_.Clear();
  set_changed();
  guild_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guild_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_level_) -
      reinterpret_cast<char*>(&guild_)) + sizeof(guild_level_));
  _internal_metadata_.Clear();
}

bool tmsg_req_guild_pvp_bushu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_guild_pvp_bushu)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guild = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string guild_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guild_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->guild_name().data(), static_cast<int>(this->guild_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_guild_pvp_bushu.guild_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_icon = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 player_guids = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_player_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 42u, input, this->mutable_player_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string player_names = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_player_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->player_names(this->player_names_size() - 1).data(),
            static_cast<int>(this->player_names(this->player_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_guild_pvp_bushu.player_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_template = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_template())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_player_template())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_level = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_level())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_player_level())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_bat_eff = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_bat_eff())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_player_bat_eff())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_vips = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_vips())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 82u, input, this->mutable_player_vips())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_achieves = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_achieves())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 90u, input, this->mutable_player_achieves())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_map_star = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_map_star())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 98u, input, this->mutable_player_map_star())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_guild_pvp_bushu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_guild_pvp_bushu)
  return false;
#undef DO_
}

void tmsg_req_guild_pvp_bushu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_guild_pvp_bushu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild = 1;
  if (this->guild() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guild(), output);
  }

  // string guild_name = 2;
  if (this->guild_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guild_name().data(), static_cast<int>(this->guild_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_guild_pvp_bushu.guild_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->guild_name(), output);
  }

  // int32 guild_icon = 3;
  if (this->guild_icon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->guild_icon(), output);
  }

  // int32 guild_level = 4;
  if (this->guild_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->guild_level(), output);
  }

  // repeated uint64 player_guids = 5;
  if (this->player_guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_guids_cached_byte_size_));
  }
  for (int i = 0, n = this->player_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->player_guids(i), output);
  }

  // repeated string player_names = 6;
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_names(i).data(), static_cast<int>(this->player_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_guild_pvp_bushu.player_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->player_names(i), output);
  }

  // repeated int32 player_template = 7;
  if (this->player_template_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_template_cached_byte_size_));
  }
  for (int i = 0, n = this->player_template_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_template(i), output);
  }

  // repeated int32 player_level = 8;
  if (this->player_level_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_level_cached_byte_size_));
  }
  for (int i = 0, n = this->player_level_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_level(i), output);
  }

  // repeated int32 player_bat_eff = 9;
  if (this->player_bat_eff_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_bat_eff_cached_byte_size_));
  }
  for (int i = 0, n = this->player_bat_eff_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_bat_eff(i), output);
  }

  // repeated int32 player_vips = 10;
  if (this->player_vips_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_vips_cached_byte_size_));
  }
  for (int i = 0, n = this->player_vips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_vips(i), output);
  }

  // repeated int32 player_achieves = 11;
  if (this->player_achieves_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_achieves_cached_byte_size_));
  }
  for (int i = 0, n = this->player_achieves_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_achieves(i), output);
  }

  // repeated int32 player_map_star = 12;
  if (this->player_map_star_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_map_star_cached_byte_size_));
  }
  for (int i = 0, n = this->player_map_star_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_map_star(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_guild_pvp_bushu)
}

::google::protobuf::uint8* tmsg_req_guild_pvp_bushu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_guild_pvp_bushu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild = 1;
  if (this->guild() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guild(), target);
  }

  // string guild_name = 2;
  if (this->guild_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guild_name().data(), static_cast<int>(this->guild_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_guild_pvp_bushu.guild_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->guild_name(), target);
  }

  // int32 guild_icon = 3;
  if (this->guild_icon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->guild_icon(), target);
  }

  // int32 guild_level = 4;
  if (this->guild_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->guild_level(), target);
  }

  // repeated uint64 player_guids = 5;
  if (this->player_guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_guids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->player_guids_, target);
  }

  // repeated string player_names = 6;
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_names(i).data(), static_cast<int>(this->player_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_guild_pvp_bushu.player_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->player_names(i), target);
  }

  // repeated int32 player_template = 7;
  if (this->player_template_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_template_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_template_, target);
  }

  // repeated int32 player_level = 8;
  if (this->player_level_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_level_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_level_, target);
  }

  // repeated int32 player_bat_eff = 9;
  if (this->player_bat_eff_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_bat_eff_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_bat_eff_, target);
  }

  // repeated int32 player_vips = 10;
  if (this->player_vips_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_vips_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_vips_, target);
  }

  // repeated int32 player_achieves = 11;
  if (this->player_achieves_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_achieves_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_achieves_, target);
  }

  // repeated int32 player_map_star = 12;
  if (this->player_map_star_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_map_star_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_map_star_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_guild_pvp_bushu)
  return target;
}

size_t tmsg_req_guild_pvp_bushu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_guild_pvp_bushu)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 player_guids = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->player_guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_guids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string player_names = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->player_names_size());
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->player_names(i));
  }

  // repeated int32 player_template = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_template_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_template_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_level = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_level_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_level_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_bat_eff = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_bat_eff_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_bat_eff_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_vips = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_vips_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_vips_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_achieves = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_achieves_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_achieves_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_map_star = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_map_star_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_map_star_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string guild_name = 2;
  if (this->guild_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guild_name());
  }

  // uint64 guild = 1;
  if (this->guild() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guild());
  }

  // int32 guild_icon = 3;
  if (this->guild_icon() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_icon());
  }

  // int32 guild_level = 4;
  if (this->guild_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_guild_pvp_bushu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_guild_pvp_bushu)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_guild_pvp_bushu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_guild_pvp_bushu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_guild_pvp_bushu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_guild_pvp_bushu)
    MergeFrom(*source);
  }
}

void tmsg_req_guild_pvp_bushu::MergeFrom(const tmsg_req_guild_pvp_bushu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_guild_pvp_bushu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_guids_.MergeFrom(from.player_guids_);
  player_names_.MergeFrom(from.player_names_);
  player_template_.MergeFrom(from.player_template_);
  player_level_.MergeFrom(from.player_level_);
  player_bat_eff_.MergeFrom(from.player_bat_eff_);
  player_vips_.MergeFrom(from.player_vips_);
  player_achieves_.MergeFrom(from.player_achieves_);
  player_map_star_.MergeFrom(from.player_map_star_);
  if (from.guild_name().size() > 0) {

    guild_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guild_name_);
  }
  if (from.guild() != 0) {
    set_guild(from.guild());
  }
  if (from.guild_icon() != 0) {
    set_guild_icon(from.guild_icon());
  }
  if (from.guild_level() != 0) {
    set_guild_level(from.guild_level());
  }
}

void tmsg_req_guild_pvp_bushu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_guild_pvp_bushu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_guild_pvp_bushu::CopyFrom(const tmsg_req_guild_pvp_bushu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_guild_pvp_bushu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_guild_pvp_bushu::IsInitialized() const {
  return true;
}

void tmsg_req_guild_pvp_bushu::Swap(tmsg_req_guild_pvp_bushu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_guild_pvp_bushu::InternalSwap(tmsg_req_guild_pvp_bushu* other) {
  using std::swap;
  player_guids_.InternalSwap(&other->player_guids_);
  player_names_.InternalSwap(CastToBase(&other->player_names_));
  player_template_.InternalSwap(&other->player_template_);
  player_level_.InternalSwap(&other->player_level_);
  player_bat_eff_.InternalSwap(&other->player_bat_eff_);
  player_vips_.InternalSwap(&other->player_vips_);
  player_achieves_.InternalSwap(&other->player_achieves_);
  player_map_star_.InternalSwap(&other->player_map_star_);
  guild_name_.Swap(&other->guild_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guild_, other->guild_);
  swap(guild_icon_, other->guild_icon_);
  swap(guild_level_, other->guild_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_guild_pvp_bushu::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_guild_pvp_bushu::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_guild_pvp_bushu::kResFieldNumber;
const int tmsg_rep_guild_pvp_bushu::kPlayerGuidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_guild_pvp_bushu::tmsg_rep_guild_pvp_bushu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_pvp_bushu.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_guild_pvp_bushu)
}
tmsg_rep_guild_pvp_bushu::tmsg_rep_guild_pvp_bushu(const tmsg_rep_guild_pvp_bushu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_guids_(from.player_guids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_guild_pvp_bushu)
}

void tmsg_rep_guild_pvp_bushu::SharedCtor() {
  res_ = false;
}

tmsg_rep_guild_pvp_bushu::~tmsg_rep_guild_pvp_bushu() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_guild_pvp_bushu)
  SharedDtor();
}

void tmsg_rep_guild_pvp_bushu::SharedDtor() {
}

void tmsg_rep_guild_pvp_bushu::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_guild_pvp_bushu::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_guild_pvp_bushu& tmsg_rep_guild_pvp_bushu::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_pvp_bushu.base);
  return *internal_default_instance();
}


void tmsg_rep_guild_pvp_bushu::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_guild_pvp_bushu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  player_guids_.Clear();
  set_changed();
  res_ = false;
  _internal_metadata_.Clear();
}

bool tmsg_rep_guild_pvp_bushu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_guild_pvp_bushu)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool res = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 player_guids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_player_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_player_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_guild_pvp_bushu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_guild_pvp_bushu)
  return false;
#undef DO_
}

void tmsg_rep_guild_pvp_bushu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_guild_pvp_bushu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool res = 1;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->res(), output);
  }

  // repeated uint64 player_guids = 2;
  if (this->player_guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_guids_cached_byte_size_));
  }
  for (int i = 0, n = this->player_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->player_guids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_guild_pvp_bushu)
}

::google::protobuf::uint8* tmsg_rep_guild_pvp_bushu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_guild_pvp_bushu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool res = 1;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->res(), target);
  }

  // repeated uint64 player_guids = 2;
  if (this->player_guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_guids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->player_guids_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_guild_pvp_bushu)
  return target;
}

size_t tmsg_rep_guild_pvp_bushu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_guild_pvp_bushu)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 player_guids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->player_guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_guids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool res = 1;
  if (this->res() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_guild_pvp_bushu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_guild_pvp_bushu)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_guild_pvp_bushu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_guild_pvp_bushu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_guild_pvp_bushu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_guild_pvp_bushu)
    MergeFrom(*source);
  }
}

void tmsg_rep_guild_pvp_bushu::MergeFrom(const tmsg_rep_guild_pvp_bushu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_guild_pvp_bushu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_guids_.MergeFrom(from.player_guids_);
  if (from.res() != 0) {
    set_res(from.res());
  }
}

void tmsg_rep_guild_pvp_bushu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_guild_pvp_bushu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_guild_pvp_bushu::CopyFrom(const tmsg_rep_guild_pvp_bushu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_guild_pvp_bushu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_guild_pvp_bushu::IsInitialized() const {
  return true;
}

void tmsg_rep_guild_pvp_bushu::Swap(tmsg_rep_guild_pvp_bushu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_guild_pvp_bushu::InternalSwap(tmsg_rep_guild_pvp_bushu* other) {
  using std::swap;
  player_guids_.InternalSwap(&other->player_guids_);
  swap(res_, other->res_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_guild_pvp_bushu::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_guild_look_bushu::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_guild_look_bushu::kPlayerGuidsFieldNumber;
const int tmsg_rep_guild_look_bushu::kPlayerNamesFieldNumber;
const int tmsg_rep_guild_look_bushu::kPlayerTemplateFieldNumber;
const int tmsg_rep_guild_look_bushu::kPlayerLevelFieldNumber;
const int tmsg_rep_guild_look_bushu::kPlayerBatEffFieldNumber;
const int tmsg_rep_guild_look_bushu::kPlayerVipsFieldNumber;
const int tmsg_rep_guild_look_bushu::kPlayerAchievesFieldNumber;
const int tmsg_rep_guild_look_bushu::kResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_guild_look_bushu::tmsg_rep_guild_look_bushu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_look_bushu.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_guild_look_bushu)
}
tmsg_rep_guild_look_bushu::tmsg_rep_guild_look_bushu(const tmsg_rep_guild_look_bushu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_guids_(from.player_guids_),
      player_names_(from.player_names_),
      player_template_(from.player_template_),
      player_level_(from.player_level_),
      player_bat_eff_(from.player_bat_eff_),
      player_vips_(from.player_vips_),
      player_achieves_(from.player_achieves_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_guild_look_bushu)
}

void tmsg_rep_guild_look_bushu::SharedCtor() {
  res_ = false;
}

tmsg_rep_guild_look_bushu::~tmsg_rep_guild_look_bushu() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_guild_look_bushu)
  SharedDtor();
}

void tmsg_rep_guild_look_bushu::SharedDtor() {
}

void tmsg_rep_guild_look_bushu::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_guild_look_bushu::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_guild_look_bushu& tmsg_rep_guild_look_bushu::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_look_bushu.base);
  return *internal_default_instance();
}


void tmsg_rep_guild_look_bushu::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_guild_look_bushu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  player_guids_.Clear();
  set_changed();
  player_names_.Clear();
  set_changed();
  player_template_.Clear();
  set_changed();
  player_level_.Clear();
  set_changed();
  player_bat_eff_.Clear();
  set_changed();
  player_vips_.Clear();
  set_changed();
  player_achieves_.Clear();
  set_changed();
  res_ = false;
  _internal_metadata_.Clear();
}

bool tmsg_rep_guild_look_bushu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_guild_look_bushu)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 player_guids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_player_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_player_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string player_names = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_player_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->player_names(this->player_names_size() - 1).data(),
            static_cast<int>(this->player_names(this->player_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_rep_guild_look_bushu.player_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_template = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_template())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_player_template())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_level())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_player_level())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_bat_eff = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_bat_eff())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_player_bat_eff())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_vips = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_vips())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_player_vips())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_achieves = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_achieves())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_player_achieves())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool res = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_guild_look_bushu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_guild_look_bushu)
  return false;
#undef DO_
}

void tmsg_rep_guild_look_bushu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_guild_look_bushu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 player_guids = 1;
  if (this->player_guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_guids_cached_byte_size_));
  }
  for (int i = 0, n = this->player_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->player_guids(i), output);
  }

  // repeated string player_names = 2;
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_names(i).data(), static_cast<int>(this->player_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_rep_guild_look_bushu.player_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->player_names(i), output);
  }

  // repeated int32 player_template = 3;
  if (this->player_template_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_template_cached_byte_size_));
  }
  for (int i = 0, n = this->player_template_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_template(i), output);
  }

  // repeated int32 player_level = 4;
  if (this->player_level_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_level_cached_byte_size_));
  }
  for (int i = 0, n = this->player_level_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_level(i), output);
  }

  // repeated int32 player_bat_eff = 5;
  if (this->player_bat_eff_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_bat_eff_cached_byte_size_));
  }
  for (int i = 0, n = this->player_bat_eff_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_bat_eff(i), output);
  }

  // repeated int32 player_vips = 6;
  if (this->player_vips_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_vips_cached_byte_size_));
  }
  for (int i = 0, n = this->player_vips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_vips(i), output);
  }

  // repeated int32 player_achieves = 7;
  if (this->player_achieves_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_achieves_cached_byte_size_));
  }
  for (int i = 0, n = this->player_achieves_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_achieves(i), output);
  }

  // bool res = 8;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->res(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_guild_look_bushu)
}

::google::protobuf::uint8* tmsg_rep_guild_look_bushu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_guild_look_bushu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 player_guids = 1;
  if (this->player_guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_guids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->player_guids_, target);
  }

  // repeated string player_names = 2;
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_names(i).data(), static_cast<int>(this->player_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_rep_guild_look_bushu.player_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->player_names(i), target);
  }

  // repeated int32 player_template = 3;
  if (this->player_template_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_template_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_template_, target);
  }

  // repeated int32 player_level = 4;
  if (this->player_level_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_level_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_level_, target);
  }

  // repeated int32 player_bat_eff = 5;
  if (this->player_bat_eff_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_bat_eff_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_bat_eff_, target);
  }

  // repeated int32 player_vips = 6;
  if (this->player_vips_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_vips_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_vips_, target);
  }

  // repeated int32 player_achieves = 7;
  if (this->player_achieves_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_achieves_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_achieves_, target);
  }

  // bool res = 8;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->res(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_guild_look_bushu)
  return target;
}

size_t tmsg_rep_guild_look_bushu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_guild_look_bushu)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 player_guids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->player_guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_guids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string player_names = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->player_names_size());
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->player_names(i));
  }

  // repeated int32 player_template = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_template_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_template_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_level = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_level_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_level_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_bat_eff = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_bat_eff_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_bat_eff_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_vips = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_vips_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_vips_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_achieves = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_achieves_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_achieves_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool res = 8;
  if (this->res() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_guild_look_bushu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_guild_look_bushu)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_guild_look_bushu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_guild_look_bushu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_guild_look_bushu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_guild_look_bushu)
    MergeFrom(*source);
  }
}

void tmsg_rep_guild_look_bushu::MergeFrom(const tmsg_rep_guild_look_bushu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_guild_look_bushu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_guids_.MergeFrom(from.player_guids_);
  player_names_.MergeFrom(from.player_names_);
  player_template_.MergeFrom(from.player_template_);
  player_level_.MergeFrom(from.player_level_);
  player_bat_eff_.MergeFrom(from.player_bat_eff_);
  player_vips_.MergeFrom(from.player_vips_);
  player_achieves_.MergeFrom(from.player_achieves_);
  if (from.res() != 0) {
    set_res(from.res());
  }
}

void tmsg_rep_guild_look_bushu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_guild_look_bushu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_guild_look_bushu::CopyFrom(const tmsg_rep_guild_look_bushu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_guild_look_bushu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_guild_look_bushu::IsInitialized() const {
  return true;
}

void tmsg_rep_guild_look_bushu::Swap(tmsg_rep_guild_look_bushu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_guild_look_bushu::InternalSwap(tmsg_rep_guild_look_bushu* other) {
  using std::swap;
  player_guids_.InternalSwap(&other->player_guids_);
  player_names_.InternalSwap(CastToBase(&other->player_names_));
  player_template_.InternalSwap(&other->player_template_);
  player_level_.InternalSwap(&other->player_level_);
  player_bat_eff_.InternalSwap(&other->player_bat_eff_);
  player_vips_.InternalSwap(&other->player_vips_);
  player_achieves_.InternalSwap(&other->player_achieves_);
  swap(res_, other->res_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_guild_look_bushu::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_guild_jinrizhanji::InitAsDefaultInstance() {
  ::rpcproto::_tmsg_rep_guild_jinrizhanji_default_instance_._instance.get_mutable()->bushu_ = const_cast< ::rpcproto::tmsg_rep_guild_look_bushu*>(
      ::rpcproto::tmsg_rep_guild_look_bushu::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_guild_jinrizhanji::kGuildZhanjiFieldNumber;
const int tmsg_rep_guild_jinrizhanji::kGuildTotalZhanjiFieldNumber;
const int tmsg_rep_guild_jinrizhanji::kGuildExpFieldNumber;
const int tmsg_rep_guild_jinrizhanji::kPlayerZhanjiFieldNumber;
const int tmsg_rep_guild_jinrizhanji::kPlayerTotalZhanjiFieldNumber;
const int tmsg_rep_guild_jinrizhanji::kBushuFieldNumber;
const int tmsg_rep_guild_jinrizhanji::kJudianFieldNumber;
const int tmsg_rep_guild_jinrizhanji::kJidiFieldNumber;
const int tmsg_rep_guild_jinrizhanji::kPerfectFieldNumber;
const int tmsg_rep_guild_jinrizhanji::kResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_guild_jinrizhanji::tmsg_rep_guild_jinrizhanji()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_jinrizhanji.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_guild_jinrizhanji)
}
tmsg_rep_guild_jinrizhanji::tmsg_rep_guild_jinrizhanji(const tmsg_rep_guild_jinrizhanji& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bushu()) {
    bushu_ = new ::rpcproto::tmsg_rep_guild_look_bushu(*from.bushu_);
  } else {
    bushu_ = NULL;
  }
  ::memcpy(&guild_zhanji_, &from.guild_zhanji_,
    static_cast<size_t>(reinterpret_cast<char*>(&res_) -
    reinterpret_cast<char*>(&guild_zhanji_)) + sizeof(res_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_guild_jinrizhanji)
}

void tmsg_rep_guild_jinrizhanji::SharedCtor() {
  ::memset(&bushu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&bushu_)) + sizeof(res_));
}

tmsg_rep_guild_jinrizhanji::~tmsg_rep_guild_jinrizhanji() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_guild_jinrizhanji)
  SharedDtor();
}

void tmsg_rep_guild_jinrizhanji::SharedDtor() {
  if (this != internal_default_instance()) delete bushu_;
}

void tmsg_rep_guild_jinrizhanji::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_guild_jinrizhanji::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_guild_jinrizhanji& tmsg_rep_guild_jinrizhanji::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_jinrizhanji.base);
  return *internal_default_instance();
}


void tmsg_rep_guild_jinrizhanji::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_guild_jinrizhanji)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && bushu_ != NULL) {
    delete bushu_;
  }
  bushu_ = NULL;
  ::memset(&guild_zhanji_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&guild_zhanji_)) + sizeof(res_));
  _internal_metadata_.Clear();
}

bool tmsg_rep_guild_jinrizhanji::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_guild_jinrizhanji)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 guild_zhanji = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_zhanji_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_total_zhanji = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_total_zhanji_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_exp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 player_zhanji = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_zhanji_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 player_total_zhanji = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_total_zhanji_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rpcproto.tmsg_rep_guild_look_bushu bushu = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bushu()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 judian = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &judian_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 jidi = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jidi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 perfect = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &perfect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool res = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_guild_jinrizhanji)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_guild_jinrizhanji)
  return false;
#undef DO_
}

void tmsg_rep_guild_jinrizhanji::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_guild_jinrizhanji)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 guild_zhanji = 1;
  if (this->guild_zhanji() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->guild_zhanji(), output);
  }

  // int32 guild_total_zhanji = 2;
  if (this->guild_total_zhanji() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->guild_total_zhanji(), output);
  }

  // int32 guild_exp = 3;
  if (this->guild_exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->guild_exp(), output);
  }

  // int32 player_zhanji = 4;
  if (this->player_zhanji() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->player_zhanji(), output);
  }

  // int32 player_total_zhanji = 5;
  if (this->player_total_zhanji() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->player_total_zhanji(), output);
  }

  // .rpcproto.tmsg_rep_guild_look_bushu bushu = 6;
  if (this->has_bushu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_bushu(), output);
  }

  // int32 judian = 7;
  if (this->judian() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->judian(), output);
  }

  // int32 jidi = 8;
  if (this->jidi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->jidi(), output);
  }

  // int32 perfect = 9;
  if (this->perfect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->perfect(), output);
  }

  // bool res = 10;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->res(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_guild_jinrizhanji)
}

::google::protobuf::uint8* tmsg_rep_guild_jinrizhanji::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_guild_jinrizhanji)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 guild_zhanji = 1;
  if (this->guild_zhanji() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->guild_zhanji(), target);
  }

  // int32 guild_total_zhanji = 2;
  if (this->guild_total_zhanji() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->guild_total_zhanji(), target);
  }

  // int32 guild_exp = 3;
  if (this->guild_exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->guild_exp(), target);
  }

  // int32 player_zhanji = 4;
  if (this->player_zhanji() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->player_zhanji(), target);
  }

  // int32 player_total_zhanji = 5;
  if (this->player_total_zhanji() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->player_total_zhanji(), target);
  }

  // .rpcproto.tmsg_rep_guild_look_bushu bushu = 6;
  if (this->has_bushu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_bushu(), deterministic, target);
  }

  // int32 judian = 7;
  if (this->judian() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->judian(), target);
  }

  // int32 jidi = 8;
  if (this->jidi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->jidi(), target);
  }

  // int32 perfect = 9;
  if (this->perfect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->perfect(), target);
  }

  // bool res = 10;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->res(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_guild_jinrizhanji)
  return target;
}

size_t tmsg_rep_guild_jinrizhanji::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_guild_jinrizhanji)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .rpcproto.tmsg_rep_guild_look_bushu bushu = 6;
  if (this->has_bushu()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bushu_);
  }

  // int32 guild_zhanji = 1;
  if (this->guild_zhanji() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_zhanji());
  }

  // int32 guild_total_zhanji = 2;
  if (this->guild_total_zhanji() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_total_zhanji());
  }

  // int32 guild_exp = 3;
  if (this->guild_exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_exp());
  }

  // int32 player_zhanji = 4;
  if (this->player_zhanji() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->player_zhanji());
  }

  // int32 player_total_zhanji = 5;
  if (this->player_total_zhanji() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->player_total_zhanji());
  }

  // int32 judian = 7;
  if (this->judian() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->judian());
  }

  // int32 jidi = 8;
  if (this->jidi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jidi());
  }

  // int32 perfect = 9;
  if (this->perfect() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->perfect());
  }

  // bool res = 10;
  if (this->res() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_guild_jinrizhanji::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_guild_jinrizhanji)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_guild_jinrizhanji* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_guild_jinrizhanji>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_guild_jinrizhanji)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_guild_jinrizhanji)
    MergeFrom(*source);
  }
}

void tmsg_rep_guild_jinrizhanji::MergeFrom(const tmsg_rep_guild_jinrizhanji& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_guild_jinrizhanji)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bushu()) {
    mutable_bushu()->::rpcproto::tmsg_rep_guild_look_bushu::MergeFrom(from.bushu());
  }
  if (from.guild_zhanji() != 0) {
    set_guild_zhanji(from.guild_zhanji());
  }
  if (from.guild_total_zhanji() != 0) {
    set_guild_total_zhanji(from.guild_total_zhanji());
  }
  if (from.guild_exp() != 0) {
    set_guild_exp(from.guild_exp());
  }
  if (from.player_zhanji() != 0) {
    set_player_zhanji(from.player_zhanji());
  }
  if (from.player_total_zhanji() != 0) {
    set_player_total_zhanji(from.player_total_zhanji());
  }
  if (from.judian() != 0) {
    set_judian(from.judian());
  }
  if (from.jidi() != 0) {
    set_jidi(from.jidi());
  }
  if (from.perfect() != 0) {
    set_perfect(from.perfect());
  }
  if (from.res() != 0) {
    set_res(from.res());
  }
}

void tmsg_rep_guild_jinrizhanji::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_guild_jinrizhanji)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_guild_jinrizhanji::CopyFrom(const tmsg_rep_guild_jinrizhanji& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_guild_jinrizhanji)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_guild_jinrizhanji::IsInitialized() const {
  return true;
}

void tmsg_rep_guild_jinrizhanji::Swap(tmsg_rep_guild_jinrizhanji* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_guild_jinrizhanji::InternalSwap(tmsg_rep_guild_jinrizhanji* other) {
  using std::swap;
  swap(bushu_, other->bushu_);
  swap(guild_zhanji_, other->guild_zhanji_);
  swap(guild_total_zhanji_, other->guild_total_zhanji_);
  swap(guild_exp_, other->guild_exp_);
  swap(player_zhanji_, other->player_zhanji_);
  swap(player_total_zhanji_, other->player_total_zhanji_);
  swap(judian_, other->judian_);
  swap(jidi_, other->jidi_);
  swap(perfect_, other->perfect_);
  swap(res_, other->res_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_guild_jinrizhanji::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_guild_fight::InitAsDefaultInstance() {
  ::rpcproto::_tmsg_req_guild_fight_default_instance_._instance.get_mutable()->player_ = const_cast< ::rpcproto::tmsg_player_fight_player*>(
      ::rpcproto::tmsg_player_fight_player::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_guild_fight::kPlayerGuildFieldNumber;
const int tmsg_req_guild_fight::kPlayerGuidFieldNumber;
const int tmsg_req_guild_fight::kTargetGuildFieldNumber;
const int tmsg_req_guild_fight::kTargetIndexFieldNumber;
const int tmsg_req_guild_fight::kPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_guild_fight::tmsg_req_guild_fight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_guild_fight.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_guild_fight)
}
tmsg_req_guild_fight::tmsg_req_guild_fight(const tmsg_req_guild_fight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player()) {
    player_ = new ::rpcproto::tmsg_player_fight_player(*from.player_);
  } else {
    player_ = NULL;
  }
  ::memcpy(&player_guild_, &from.player_guild_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_index_) -
    reinterpret_cast<char*>(&player_guild_)) + sizeof(target_index_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_guild_fight)
}

void tmsg_req_guild_fight::SharedCtor() {
  ::memset(&player_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_index_) -
      reinterpret_cast<char*>(&player_)) + sizeof(target_index_));
}

tmsg_req_guild_fight::~tmsg_req_guild_fight() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_guild_fight)
  SharedDtor();
}

void tmsg_req_guild_fight::SharedDtor() {
  if (this != internal_default_instance()) delete player_;
}

void tmsg_req_guild_fight::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_guild_fight::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_guild_fight& tmsg_req_guild_fight::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_guild_fight.base);
  return *internal_default_instance();
}


void tmsg_req_guild_fight::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_guild_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && player_ != NULL) {
    delete player_;
  }
  player_ = NULL;
  ::memset(&player_guild_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_index_) -
      reinterpret_cast<char*>(&player_guild_)) + sizeof(target_index_));
  _internal_metadata_.Clear();
}

bool tmsg_req_guild_fight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_guild_fight)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_guild = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 target_guild = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 target_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rpcproto.tmsg_player_fight_player player = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_guild_fight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_guild_fight)
  return false;
#undef DO_
}

void tmsg_req_guild_fight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_guild_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_guild = 1;
  if (this->player_guild() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guild(), output);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_guid(), output);
  }

  // uint64 target_guild = 3;
  if (this->target_guild() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->target_guild(), output);
  }

  // int32 target_index = 4;
  if (this->target_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->target_index(), output);
  }

  // .rpcproto.tmsg_player_fight_player player = 5;
  if (this->has_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_player(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_guild_fight)
}

::google::protobuf::uint8* tmsg_req_guild_fight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_guild_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_guild = 1;
  if (this->player_guild() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guild(), target);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_guid(), target);
  }

  // uint64 target_guild = 3;
  if (this->target_guild() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->target_guild(), target);
  }

  // int32 target_index = 4;
  if (this->target_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->target_index(), target);
  }

  // .rpcproto.tmsg_player_fight_player player = 5;
  if (this->has_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_player(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_guild_fight)
  return target;
}

size_t tmsg_req_guild_fight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_guild_fight)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .rpcproto.tmsg_player_fight_player player = 5;
  if (this->has_player()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *player_);
  }

  // uint64 player_guild = 1;
  if (this->player_guild() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guild());
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  // uint64 target_guild = 3;
  if (this->target_guild() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->target_guild());
  }

  // int32 target_index = 4;
  if (this->target_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_guild_fight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_guild_fight)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_guild_fight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_guild_fight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_guild_fight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_guild_fight)
    MergeFrom(*source);
  }
}

void tmsg_req_guild_fight::MergeFrom(const tmsg_req_guild_fight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_guild_fight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player()) {
    mutable_player()->::rpcproto::tmsg_player_fight_player::MergeFrom(from.player());
  }
  if (from.player_guild() != 0) {
    set_player_guild(from.player_guild());
  }
  if (from.player_guid() != 0) {
    set_player_guid(from.player_guid());
  }
  if (from.target_guild() != 0) {
    set_target_guild(from.target_guild());
  }
  if (from.target_index() != 0) {
    set_target_index(from.target_index());
  }
}

void tmsg_req_guild_fight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_guild_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_guild_fight::CopyFrom(const tmsg_req_guild_fight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_guild_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_guild_fight::IsInitialized() const {
  return true;
}

void tmsg_req_guild_fight::Swap(tmsg_req_guild_fight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_guild_fight::InternalSwap(tmsg_req_guild_fight* other) {
  using std::swap;
  swap(player_, other->player_);
  swap(player_guild_, other->player_guild_);
  swap(player_guid_, other->player_guid_);
  swap(target_guild_, other->target_guild_);
  swap(target_index_, other->target_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_guild_fight::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_guild_fight::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_guild_fight::kTextFieldNumber;
const int tmsg_rep_guild_fight::kResultFieldNumber;
const int tmsg_rep_guild_fight::kGuardPointFieldNumber;
const int tmsg_rep_guild_fight::kGongxianFieldNumber;
const int tmsg_rep_guild_fight::kZhanjiFieldNumber;
const int tmsg_rep_guild_fight::kExpFieldNumber;
const int tmsg_rep_guild_fight::kJudianFieldNumber;
const int tmsg_rep_guild_fight::kJidiFieldNumber;
const int tmsg_rep_guild_fight::kPerfectFieldNumber;
const int tmsg_rep_guild_fight::kResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_guild_fight::tmsg_rep_guild_fight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_fight.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_guild_fight)
}
tmsg_rep_guild_fight::tmsg_rep_guild_fight(const tmsg_rep_guild_fight& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&res_) -
    reinterpret_cast<char*>(&result_)) + sizeof(res_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_guild_fight)
}

void tmsg_rep_guild_fight::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&result_)) + sizeof(res_));
}

tmsg_rep_guild_fight::~tmsg_rep_guild_fight() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_guild_fight)
  SharedDtor();
}

void tmsg_rep_guild_fight::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_rep_guild_fight::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_guild_fight::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_guild_fight& tmsg_rep_guild_fight::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_fight.base);
  return *internal_default_instance();
}


void tmsg_rep_guild_fight::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_guild_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&result_)) + sizeof(res_));
  _internal_metadata_.Clear();
}

bool tmsg_rep_guild_fight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_guild_fight)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guard_point = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guard_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gongxian = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gongxian_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 zhanji = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zhanji_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 exp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 judian = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &judian_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 jidi = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jidi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 perfect = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &perfect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 res = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_guild_fight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_guild_fight)
  return false;
#undef DO_
}

void tmsg_rep_guild_fight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_guild_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->text(), output);
  }

  // int32 result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  // int32 guard_point = 3;
  if (this->guard_point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->guard_point(), output);
  }

  // int32 gongxian = 4;
  if (this->gongxian() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->gongxian(), output);
  }

  // int32 zhanji = 5;
  if (this->zhanji() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->zhanji(), output);
  }

  // int32 exp = 6;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->exp(), output);
  }

  // int32 judian = 7;
  if (this->judian() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->judian(), output);
  }

  // int32 jidi = 8;
  if (this->jidi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->jidi(), output);
  }

  // int32 perfect = 9;
  if (this->perfect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->perfect(), output);
  }

  // int32 res = 10;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->res(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_guild_fight)
}

::google::protobuf::uint8* tmsg_rep_guild_fight::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_guild_fight)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes text = 1;
  if (this->text().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->text(), target);
  }

  // int32 result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  // int32 guard_point = 3;
  if (this->guard_point() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->guard_point(), target);
  }

  // int32 gongxian = 4;
  if (this->gongxian() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->gongxian(), target);
  }

  // int32 zhanji = 5;
  if (this->zhanji() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->zhanji(), target);
  }

  // int32 exp = 6;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->exp(), target);
  }

  // int32 judian = 7;
  if (this->judian() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->judian(), target);
  }

  // int32 jidi = 8;
  if (this->jidi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->jidi(), target);
  }

  // int32 perfect = 9;
  if (this->perfect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->perfect(), target);
  }

  // int32 res = 10;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->res(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_guild_fight)
  return target;
}

size_t tmsg_rep_guild_fight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_guild_fight)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->text());
  }

  // int32 result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // int32 guard_point = 3;
  if (this->guard_point() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guard_point());
  }

  // int32 gongxian = 4;
  if (this->gongxian() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gongxian());
  }

  // int32 zhanji = 5;
  if (this->zhanji() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->zhanji());
  }

  // int32 exp = 6;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exp());
  }

  // int32 judian = 7;
  if (this->judian() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->judian());
  }

  // int32 jidi = 8;
  if (this->jidi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jidi());
  }

  // int32 perfect = 9;
  if (this->perfect() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->perfect());
  }

  // int32 res = 10;
  if (this->res() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->res());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_guild_fight::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_guild_fight)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_guild_fight* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_guild_fight>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_guild_fight)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_guild_fight)
    MergeFrom(*source);
  }
}

void tmsg_rep_guild_fight::MergeFrom(const tmsg_rep_guild_fight& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_guild_fight)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.guard_point() != 0) {
    set_guard_point(from.guard_point());
  }
  if (from.gongxian() != 0) {
    set_gongxian(from.gongxian());
  }
  if (from.zhanji() != 0) {
    set_zhanji(from.zhanji());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.judian() != 0) {
    set_judian(from.judian());
  }
  if (from.jidi() != 0) {
    set_jidi(from.jidi());
  }
  if (from.perfect() != 0) {
    set_perfect(from.perfect());
  }
  if (from.res() != 0) {
    set_res(from.res());
  }
}

void tmsg_rep_guild_fight::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_guild_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_guild_fight::CopyFrom(const tmsg_rep_guild_fight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_guild_fight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_guild_fight::IsInitialized() const {
  return true;
}

void tmsg_rep_guild_fight::Swap(tmsg_rep_guild_fight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_guild_fight::InternalSwap(tmsg_rep_guild_fight* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  swap(guard_point_, other->guard_point_);
  swap(gongxian_, other->gongxian_);
  swap(zhanji_, other->zhanji_);
  swap(exp_, other->exp_);
  swap(judian_, other->judian_);
  swap(jidi_, other->jidi_);
  swap(perfect_, other->perfect_);
  swap(res_, other->res_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_guild_fight::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_guild_look::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_guild_look::kPlayerGuidFieldNumber;
const int tmsg_req_guild_look::kPlayerGuildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_guild_look::tmsg_req_guild_look()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_guild_look.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_guild_look)
}
tmsg_req_guild_look::tmsg_req_guild_look(const tmsg_req_guild_look& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_guild_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(player_guild_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_guild_look)
}

void tmsg_req_guild_look::SharedCtor() {
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_guild_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(player_guild_));
}

tmsg_req_guild_look::~tmsg_req_guild_look() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_guild_look)
  SharedDtor();
}

void tmsg_req_guild_look::SharedDtor() {
}

void tmsg_req_guild_look::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_guild_look::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_guild_look& tmsg_req_guild_look::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_guild_look.base);
  return *internal_default_instance();
}


void tmsg_req_guild_look::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_guild_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_guild_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(player_guild_));
  _internal_metadata_.Clear();
}

bool tmsg_req_guild_look::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_guild_look)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_guild = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_guild_look)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_guild_look)
  return false;
#undef DO_
}

void tmsg_req_guild_look::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_guild_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // uint64 player_guild = 2;
  if (this->player_guild() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_guild(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_guild_look)
}

::google::protobuf::uint8* tmsg_req_guild_look::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_guild_look)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // uint64 player_guild = 2;
  if (this->player_guild() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_guild(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_guild_look)
  return target;
}

size_t tmsg_req_guild_look::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_guild_look)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  // uint64 player_guild = 2;
  if (this->player_guild() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guild());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_guild_look::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_guild_look)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_guild_look* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_guild_look>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_guild_look)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_guild_look)
    MergeFrom(*source);
  }
}

void tmsg_req_guild_look::MergeFrom(const tmsg_req_guild_look& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_guild_look)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_guid() != 0) {
    set_player_guid(from.player_guid());
  }
  if (from.player_guild() != 0) {
    set_player_guild(from.player_guild());
  }
}

void tmsg_req_guild_look::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_guild_look)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_guild_look::CopyFrom(const tmsg_req_guild_look& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_guild_look)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_guild_look::IsInitialized() const {
  return true;
}

void tmsg_req_guild_look::Swap(tmsg_req_guild_look* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_guild_look::InternalSwap(tmsg_req_guild_look* other) {
  using std::swap;
  swap(player_guid_, other->player_guid_);
  swap(player_guild_, other->player_guild_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_guild_look::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_guild_fight_info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_guild_fight_info::kGuildFieldNumber;
const int tmsg_guild_fight_info::kGuildServerFieldNumber;
const int tmsg_guild_fight_info::kGuildNameFieldNumber;
const int tmsg_guild_fight_info::kGuildIconFieldNumber;
const int tmsg_guild_fight_info::kGuildLevelFieldNumber;
const int tmsg_guild_fight_info::kTargetGuidsFieldNumber;
const int tmsg_guild_fight_info::kTargetNamesFieldNumber;
const int tmsg_guild_fight_info::kTargetTemplatesFieldNumber;
const int tmsg_guild_fight_info::kTargetLevelsFieldNumber;
const int tmsg_guild_fight_info::kTargetBatEffsFieldNumber;
const int tmsg_guild_fight_info::kTargetVipsFieldNumber;
const int tmsg_guild_fight_info::kTargetAchievesFieldNumber;
const int tmsg_guild_fight_info::kTargetDefenseNumsFieldNumber;
const int tmsg_guild_fight_info::kGuardPointsFieldNumber;
const int tmsg_guild_fight_info::kGuardGongpoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_guild_fight_info::tmsg_guild_fight_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_guild_fight_info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_guild_fight_info)
}
tmsg_guild_fight_info::tmsg_guild_fight_info(const tmsg_guild_fight_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      target_guids_(from.target_guids_),
      target_names_(from.target_names_),
      target_templates_(from.target_templates_),
      target_levels_(from.target_levels_),
      target_bat_effs_(from.target_bat_effs_),
      target_vips_(from.target_vips_),
      target_achieves_(from.target_achieves_),
      target_defense_nums_(from.target_defense_nums_),
      guard_points_(from.guard_points_),
      guard_gongpo_(from.guard_gongpo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guild_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guild_name().size() > 0) {
    guild_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guild_name_);
  }
  ::memcpy(&guild_, &from.guild_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_level_) -
    reinterpret_cast<char*>(&guild_)) + sizeof(guild_level_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_guild_fight_info)
}

void tmsg_guild_fight_info::SharedCtor() {
  guild_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guild_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_level_) -
      reinterpret_cast<char*>(&guild_)) + sizeof(guild_level_));
}

tmsg_guild_fight_info::~tmsg_guild_fight_info() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_guild_fight_info)
  SharedDtor();
}

void tmsg_guild_fight_info::SharedDtor() {
  guild_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_guild_fight_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_guild_fight_info::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_guild_fight_info& tmsg_guild_fight_info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_guild_fight_info.base);
  return *internal_default_instance();
}


void tmsg_guild_fight_info::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_guild_fight_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  target_guids_.Clear();
  set_changed();
  target_names_.Clear();
  set_changed();
  target_templates_.Clear();
  set_changed();
  target_levels_.Clear();
  set_changed();
  target_bat_effs_.Clear();
  set_changed();
  target_vips_.Clear();
  set_changed();
  target_achieves_.Clear();
  set_changed();
  target_defense_nums_.Clear();
  set_changed();
  guard_points_.Clear();
  set_changed();
  guard_gongpo_.Clear();
  set_changed();
  guild_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guild_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_level_) -
      reinterpret_cast<char*>(&guild_)) + sizeof(guild_level_));
  _internal_metadata_.Clear();
}

bool tmsg_guild_fight_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_guild_fight_info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guild = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_server_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string guild_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guild_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->guild_name().data(), static_cast<int>(this->guild_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_guild_fight_info.guild_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_icon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 target_guids = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_target_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 50u, input, this->mutable_target_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string target_names = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_target_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_names(this->target_names_size() - 1).data(),
            static_cast<int>(this->target_names(this->target_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_guild_fight_info.target_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 target_templates = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_target_templates())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_target_templates())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 target_levels = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_target_levels())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_target_levels())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 target_bat_effs = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_target_bat_effs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 82u, input, this->mutable_target_bat_effs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 target_vips = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_target_vips())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 90u, input, this->mutable_target_vips())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 target_achieves = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_target_achieves())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 98u, input, this->mutable_target_achieves())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 target_defense_nums = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_target_defense_nums())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 106u, input, this->mutable_target_defense_nums())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 guard_points = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_guard_points())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 114u, input, this->mutable_guard_points())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 guard_gongpo = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_guard_gongpo())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 122u, input, this->mutable_guard_gongpo())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_guild_fight_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_guild_fight_info)
  return false;
#undef DO_
}

void tmsg_guild_fight_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_guild_fight_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild = 1;
  if (this->guild() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guild(), output);
  }

  // int32 guild_server = 2;
  if (this->guild_server() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->guild_server(), output);
  }

  // string guild_name = 3;
  if (this->guild_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guild_name().data(), static_cast<int>(this->guild_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_guild_fight_info.guild_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->guild_name(), output);
  }

  // int32 guild_icon = 4;
  if (this->guild_icon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->guild_icon(), output);
  }

  // int32 guild_level = 5;
  if (this->guild_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->guild_level(), output);
  }

  // repeated uint64 target_guids = 6;
  if (this->target_guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _target_guids_cached_byte_size_));
  }
  for (int i = 0, n = this->target_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->target_guids(i), output);
  }

  // repeated string target_names = 7;
  for (int i = 0, n = this->target_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_names(i).data(), static_cast<int>(this->target_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_guild_fight_info.target_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->target_names(i), output);
  }

  // repeated int32 target_templates = 8;
  if (this->target_templates_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _target_templates_cached_byte_size_));
  }
  for (int i = 0, n = this->target_templates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->target_templates(i), output);
  }

  // repeated int32 target_levels = 9;
  if (this->target_levels_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _target_levels_cached_byte_size_));
  }
  for (int i = 0, n = this->target_levels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->target_levels(i), output);
  }

  // repeated int32 target_bat_effs = 10;
  if (this->target_bat_effs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _target_bat_effs_cached_byte_size_));
  }
  for (int i = 0, n = this->target_bat_effs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->target_bat_effs(i), output);
  }

  // repeated int32 target_vips = 11;
  if (this->target_vips_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _target_vips_cached_byte_size_));
  }
  for (int i = 0, n = this->target_vips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->target_vips(i), output);
  }

  // repeated int32 target_achieves = 12;
  if (this->target_achieves_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _target_achieves_cached_byte_size_));
  }
  for (int i = 0, n = this->target_achieves_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->target_achieves(i), output);
  }

  // repeated int32 target_defense_nums = 13;
  if (this->target_defense_nums_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _target_defense_nums_cached_byte_size_));
  }
  for (int i = 0, n = this->target_defense_nums_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->target_defense_nums(i), output);
  }

  // repeated int32 guard_points = 14;
  if (this->guard_points_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _guard_points_cached_byte_size_));
  }
  for (int i = 0, n = this->guard_points_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->guard_points(i), output);
  }

  // repeated int32 guard_gongpo = 15;
  if (this->guard_gongpo_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _guard_gongpo_cached_byte_size_));
  }
  for (int i = 0, n = this->guard_gongpo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->guard_gongpo(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_guild_fight_info)
}

::google::protobuf::uint8* tmsg_guild_fight_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_guild_fight_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild = 1;
  if (this->guild() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guild(), target);
  }

  // int32 guild_server = 2;
  if (this->guild_server() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->guild_server(), target);
  }

  // string guild_name = 3;
  if (this->guild_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guild_name().data(), static_cast<int>(this->guild_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_guild_fight_info.guild_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->guild_name(), target);
  }

  // int32 guild_icon = 4;
  if (this->guild_icon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->guild_icon(), target);
  }

  // int32 guild_level = 5;
  if (this->guild_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->guild_level(), target);
  }

  // repeated uint64 target_guids = 6;
  if (this->target_guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _target_guids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->target_guids_, target);
  }

  // repeated string target_names = 7;
  for (int i = 0, n = this->target_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_names(i).data(), static_cast<int>(this->target_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_guild_fight_info.target_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->target_names(i), target);
  }

  // repeated int32 target_templates = 8;
  if (this->target_templates_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _target_templates_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->target_templates_, target);
  }

  // repeated int32 target_levels = 9;
  if (this->target_levels_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _target_levels_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->target_levels_, target);
  }

  // repeated int32 target_bat_effs = 10;
  if (this->target_bat_effs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _target_bat_effs_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->target_bat_effs_, target);
  }

  // repeated int32 target_vips = 11;
  if (this->target_vips_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _target_vips_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->target_vips_, target);
  }

  // repeated int32 target_achieves = 12;
  if (this->target_achieves_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _target_achieves_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->target_achieves_, target);
  }

  // repeated int32 target_defense_nums = 13;
  if (this->target_defense_nums_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _target_defense_nums_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->target_defense_nums_, target);
  }

  // repeated int32 guard_points = 14;
  if (this->guard_points_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _guard_points_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->guard_points_, target);
  }

  // repeated int32 guard_gongpo = 15;
  if (this->guard_gongpo_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _guard_gongpo_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->guard_gongpo_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_guild_fight_info)
  return target;
}

size_t tmsg_guild_fight_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_guild_fight_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 target_guids = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->target_guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _target_guids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string target_names = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->target_names_size());
  for (int i = 0, n = this->target_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->target_names(i));
  }

  // repeated int32 target_templates = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->target_templates_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _target_templates_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 target_levels = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->target_levels_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _target_levels_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 target_bat_effs = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->target_bat_effs_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _target_bat_effs_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 target_vips = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->target_vips_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _target_vips_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 target_achieves = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->target_achieves_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _target_achieves_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 target_defense_nums = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->target_defense_nums_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _target_defense_nums_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 guard_points = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->guard_points_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _guard_points_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 guard_gongpo = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->guard_gongpo_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _guard_gongpo_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string guild_name = 3;
  if (this->guild_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guild_name());
  }

  // uint64 guild = 1;
  if (this->guild() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guild());
  }

  // int32 guild_server = 2;
  if (this->guild_server() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_server());
  }

  // int32 guild_icon = 4;
  if (this->guild_icon() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_icon());
  }

  // int32 guild_level = 5;
  if (this->guild_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_guild_fight_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_guild_fight_info)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_guild_fight_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_guild_fight_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_guild_fight_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_guild_fight_info)
    MergeFrom(*source);
  }
}

void tmsg_guild_fight_info::MergeFrom(const tmsg_guild_fight_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_guild_fight_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  target_guids_.MergeFrom(from.target_guids_);
  target_names_.MergeFrom(from.target_names_);
  target_templates_.MergeFrom(from.target_templates_);
  target_levels_.MergeFrom(from.target_levels_);
  target_bat_effs_.MergeFrom(from.target_bat_effs_);
  target_vips_.MergeFrom(from.target_vips_);
  target_achieves_.MergeFrom(from.target_achieves_);
  target_defense_nums_.MergeFrom(from.target_defense_nums_);
  guard_points_.MergeFrom(from.guard_points_);
  guard_gongpo_.MergeFrom(from.guard_gongpo_);
  if (from.guild_name().size() > 0) {

    guild_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guild_name_);
  }
  if (from.guild() != 0) {
    set_guild(from.guild());
  }
  if (from.guild_server() != 0) {
    set_guild_server(from.guild_server());
  }
  if (from.guild_icon() != 0) {
    set_guild_icon(from.guild_icon());
  }
  if (from.guild_level() != 0) {
    set_guild_level(from.guild_level());
  }
}

void tmsg_guild_fight_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_guild_fight_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_guild_fight_info::CopyFrom(const tmsg_guild_fight_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_guild_fight_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_guild_fight_info::IsInitialized() const {
  return true;
}

void tmsg_guild_fight_info::Swap(tmsg_guild_fight_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_guild_fight_info::InternalSwap(tmsg_guild_fight_info* other) {
  using std::swap;
  target_guids_.InternalSwap(&other->target_guids_);
  target_names_.InternalSwap(CastToBase(&other->target_names_));
  target_templates_.InternalSwap(&other->target_templates_);
  target_levels_.InternalSwap(&other->target_levels_);
  target_bat_effs_.InternalSwap(&other->target_bat_effs_);
  target_vips_.InternalSwap(&other->target_vips_);
  target_achieves_.InternalSwap(&other->target_achieves_);
  target_defense_nums_.InternalSwap(&other->target_defense_nums_);
  guard_points_.InternalSwap(&other->guard_points_);
  guard_gongpo_.InternalSwap(&other->guard_gongpo_);
  guild_name_.Swap(&other->guild_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guild_, other->guild_);
  swap(guild_server_, other->guild_server_);
  swap(guild_icon_, other->guild_icon_);
  swap(guild_level_, other->guild_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_guild_fight_info::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_guild_fight_info::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_guild_fight_info::kGuildFightFieldNumber;
const int tmsg_rep_guild_fight_info::kGuildZhanjiFieldNumber;
const int tmsg_rep_guild_fight_info::kZhanjiFieldNumber;
const int tmsg_rep_guild_fight_info::kTotalZhanjiFieldNumber;
const int tmsg_rep_guild_fight_info::kJudianFieldNumber;
const int tmsg_rep_guild_fight_info::kJidiFieldNumber;
const int tmsg_rep_guild_fight_info::kPerfectFieldNumber;
const int tmsg_rep_guild_fight_info::kResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_guild_fight_info::tmsg_rep_guild_fight_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_fight_info.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_guild_fight_info)
}
tmsg_rep_guild_fight_info::tmsg_rep_guild_fight_info(const tmsg_rep_guild_fight_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      guild_fight_(from.guild_fight_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guild_zhanji_, &from.guild_zhanji_,
    static_cast<size_t>(reinterpret_cast<char*>(&res_) -
    reinterpret_cast<char*>(&guild_zhanji_)) + sizeof(res_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_guild_fight_info)
}

void tmsg_rep_guild_fight_info::SharedCtor() {
  ::memset(&guild_zhanji_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&guild_zhanji_)) + sizeof(res_));
}

tmsg_rep_guild_fight_info::~tmsg_rep_guild_fight_info() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_guild_fight_info)
  SharedDtor();
}

void tmsg_rep_guild_fight_info::SharedDtor() {
}

void tmsg_rep_guild_fight_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_guild_fight_info::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_guild_fight_info& tmsg_rep_guild_fight_info::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_fight_info.base);
  return *internal_default_instance();
}


void tmsg_rep_guild_fight_info::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_guild_fight_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_fight_.Clear();
  ::memset(&guild_zhanji_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&guild_zhanji_)) + sizeof(res_));
  _internal_metadata_.Clear();
}

bool tmsg_rep_guild_fight_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_guild_fight_info)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .rpcproto.tmsg_guild_fight_info guild_fight = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_guild_fight()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_zhanji = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_zhanji_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 zhanji = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zhanji_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_zhanji = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_zhanji_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 judian = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &judian_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 jidi = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jidi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 perfect = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &perfect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool res = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_guild_fight_info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_guild_fight_info)
  return false;
#undef DO_
}

void tmsg_rep_guild_fight_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_guild_fight_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rpcproto.tmsg_guild_fight_info guild_fight = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guild_fight_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->guild_fight(static_cast<int>(i)),
      output);
  }

  // int32 guild_zhanji = 2;
  if (this->guild_zhanji() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->guild_zhanji(), output);
  }

  // int32 zhanji = 3;
  if (this->zhanji() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->zhanji(), output);
  }

  // int32 total_zhanji = 4;
  if (this->total_zhanji() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_zhanji(), output);
  }

  // int32 judian = 5;
  if (this->judian() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->judian(), output);
  }

  // int32 jidi = 6;
  if (this->jidi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->jidi(), output);
  }

  // int32 perfect = 7;
  if (this->perfect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->perfect(), output);
  }

  // bool res = 8;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->res(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_guild_fight_info)
}

::google::protobuf::uint8* tmsg_rep_guild_fight_info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_guild_fight_info)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rpcproto.tmsg_guild_fight_info guild_fight = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->guild_fight_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->guild_fight(static_cast<int>(i)), deterministic, target);
  }

  // int32 guild_zhanji = 2;
  if (this->guild_zhanji() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->guild_zhanji(), target);
  }

  // int32 zhanji = 3;
  if (this->zhanji() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->zhanji(), target);
  }

  // int32 total_zhanji = 4;
  if (this->total_zhanji() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_zhanji(), target);
  }

  // int32 judian = 5;
  if (this->judian() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->judian(), target);
  }

  // int32 jidi = 6;
  if (this->jidi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->jidi(), target);
  }

  // int32 perfect = 7;
  if (this->perfect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->perfect(), target);
  }

  // bool res = 8;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->res(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_guild_fight_info)
  return target;
}

size_t tmsg_rep_guild_fight_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_guild_fight_info)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rpcproto.tmsg_guild_fight_info guild_fight = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->guild_fight_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->guild_fight(static_cast<int>(i)));
    }
  }

  // int32 guild_zhanji = 2;
  if (this->guild_zhanji() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_zhanji());
  }

  // int32 zhanji = 3;
  if (this->zhanji() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->zhanji());
  }

  // int32 total_zhanji = 4;
  if (this->total_zhanji() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_zhanji());
  }

  // int32 judian = 5;
  if (this->judian() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->judian());
  }

  // int32 jidi = 6;
  if (this->jidi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jidi());
  }

  // int32 perfect = 7;
  if (this->perfect() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->perfect());
  }

  // bool res = 8;
  if (this->res() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_guild_fight_info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_guild_fight_info)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_guild_fight_info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_guild_fight_info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_guild_fight_info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_guild_fight_info)
    MergeFrom(*source);
  }
}

void tmsg_rep_guild_fight_info::MergeFrom(const tmsg_rep_guild_fight_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_guild_fight_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guild_fight_.MergeFrom(from.guild_fight_);
  if (from.guild_zhanji() != 0) {
    set_guild_zhanji(from.guild_zhanji());
  }
  if (from.zhanji() != 0) {
    set_zhanji(from.zhanji());
  }
  if (from.total_zhanji() != 0) {
    set_total_zhanji(from.total_zhanji());
  }
  if (from.judian() != 0) {
    set_judian(from.judian());
  }
  if (from.jidi() != 0) {
    set_jidi(from.jidi());
  }
  if (from.perfect() != 0) {
    set_perfect(from.perfect());
  }
  if (from.res() != 0) {
    set_res(from.res());
  }
}

void tmsg_rep_guild_fight_info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_guild_fight_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_guild_fight_info::CopyFrom(const tmsg_rep_guild_fight_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_guild_fight_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_guild_fight_info::IsInitialized() const {
  return true;
}

void tmsg_rep_guild_fight_info::Swap(tmsg_rep_guild_fight_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_guild_fight_info::InternalSwap(tmsg_rep_guild_fight_info* other) {
  using std::swap;
  CastToBase(&guild_fight_)->InternalSwap(CastToBase(&other->guild_fight_));
  swap(guild_zhanji_, other->guild_zhanji_);
  swap(zhanji_, other->zhanji_);
  swap(total_zhanji_, other->total_zhanji_);
  swap(judian_, other->judian_);
  swap(jidi_, other->jidi_);
  swap(perfect_, other->perfect_);
  swap(res_, other->res_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_guild_fight_info::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_guild_gongpo_reward::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_guild_gongpo_reward::kGuildFieldNumber;
const int tmsg_rep_guild_gongpo_reward::kJudianFieldNumber;
const int tmsg_rep_guild_gongpo_reward::kJidiFieldNumber;
const int tmsg_rep_guild_gongpo_reward::kPerfectFieldNumber;
const int tmsg_rep_guild_gongpo_reward::kResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_guild_gongpo_reward::tmsg_rep_guild_gongpo_reward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_gongpo_reward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_guild_gongpo_reward)
}
tmsg_rep_guild_gongpo_reward::tmsg_rep_guild_gongpo_reward(const tmsg_rep_guild_gongpo_reward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guild_, &from.guild_,
    static_cast<size_t>(reinterpret_cast<char*>(&res_) -
    reinterpret_cast<char*>(&guild_)) + sizeof(res_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_guild_gongpo_reward)
}

void tmsg_rep_guild_gongpo_reward::SharedCtor() {
  ::memset(&guild_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&guild_)) + sizeof(res_));
}

tmsg_rep_guild_gongpo_reward::~tmsg_rep_guild_gongpo_reward() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_guild_gongpo_reward)
  SharedDtor();
}

void tmsg_rep_guild_gongpo_reward::SharedDtor() {
}

void tmsg_rep_guild_gongpo_reward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_guild_gongpo_reward::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_guild_gongpo_reward& tmsg_rep_guild_gongpo_reward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_gongpo_reward.base);
  return *internal_default_instance();
}


void tmsg_rep_guild_gongpo_reward::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_guild_gongpo_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guild_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&guild_)) + sizeof(res_));
  _internal_metadata_.Clear();
}

bool tmsg_rep_guild_gongpo_reward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_guild_gongpo_reward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guild = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guild_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 judian = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &judian_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 jidi = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jidi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 perfect = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &perfect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool res = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_guild_gongpo_reward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_guild_gongpo_reward)
  return false;
#undef DO_
}

void tmsg_rep_guild_gongpo_reward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_guild_gongpo_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild = 1;
  if (this->guild() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guild(), output);
  }

  // int32 judian = 2;
  if (this->judian() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->judian(), output);
  }

  // int32 jidi = 3;
  if (this->jidi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->jidi(), output);
  }

  // int32 perfect = 4;
  if (this->perfect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->perfect(), output);
  }

  // bool res = 5;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->res(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_guild_gongpo_reward)
}

::google::protobuf::uint8* tmsg_rep_guild_gongpo_reward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_guild_gongpo_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guild = 1;
  if (this->guild() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guild(), target);
  }

  // int32 judian = 2;
  if (this->judian() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->judian(), target);
  }

  // int32 jidi = 3;
  if (this->jidi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->jidi(), target);
  }

  // int32 perfect = 4;
  if (this->perfect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->perfect(), target);
  }

  // bool res = 5;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->res(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_guild_gongpo_reward)
  return target;
}

size_t tmsg_rep_guild_gongpo_reward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_guild_gongpo_reward)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guild = 1;
  if (this->guild() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guild());
  }

  // int32 judian = 2;
  if (this->judian() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->judian());
  }

  // int32 jidi = 3;
  if (this->jidi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jidi());
  }

  // int32 perfect = 4;
  if (this->perfect() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->perfect());
  }

  // bool res = 5;
  if (this->res() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_guild_gongpo_reward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_guild_gongpo_reward)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_guild_gongpo_reward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_guild_gongpo_reward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_guild_gongpo_reward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_guild_gongpo_reward)
    MergeFrom(*source);
  }
}

void tmsg_rep_guild_gongpo_reward::MergeFrom(const tmsg_rep_guild_gongpo_reward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_guild_gongpo_reward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guild() != 0) {
    set_guild(from.guild());
  }
  if (from.judian() != 0) {
    set_judian(from.judian());
  }
  if (from.jidi() != 0) {
    set_jidi(from.jidi());
  }
  if (from.perfect() != 0) {
    set_perfect(from.perfect());
  }
  if (from.res() != 0) {
    set_res(from.res());
  }
}

void tmsg_rep_guild_gongpo_reward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_guild_gongpo_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_guild_gongpo_reward::CopyFrom(const tmsg_rep_guild_gongpo_reward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_guild_gongpo_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_guild_gongpo_reward::IsInitialized() const {
  return true;
}

void tmsg_rep_guild_gongpo_reward::Swap(tmsg_rep_guild_gongpo_reward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_guild_gongpo_reward::InternalSwap(tmsg_rep_guild_gongpo_reward* other) {
  using std::swap;
  swap(guild_, other->guild_);
  swap(judian_, other->judian_);
  swap(jidi_, other->jidi_);
  swap(perfect_, other->perfect_);
  swap(res_, other->res_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_guild_gongpo_reward::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_push_guild_match::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_push_guild_match::kWeekFieldNumber;
const int tmsg_push_guild_match::kHourFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_push_guild_match::tmsg_push_guild_match()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_push_guild_match.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_push_guild_match)
}
tmsg_push_guild_match::tmsg_push_guild_match(const tmsg_push_guild_match& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&week_, &from.week_,
    static_cast<size_t>(reinterpret_cast<char*>(&hour_) -
    reinterpret_cast<char*>(&week_)) + sizeof(hour_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_push_guild_match)
}

void tmsg_push_guild_match::SharedCtor() {
  ::memset(&week_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hour_) -
      reinterpret_cast<char*>(&week_)) + sizeof(hour_));
}

tmsg_push_guild_match::~tmsg_push_guild_match() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_push_guild_match)
  SharedDtor();
}

void tmsg_push_guild_match::SharedDtor() {
}

void tmsg_push_guild_match::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_push_guild_match::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_push_guild_match& tmsg_push_guild_match::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_push_guild_match.base);
  return *internal_default_instance();
}


void tmsg_push_guild_match::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_push_guild_match)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&week_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hour_) -
      reinterpret_cast<char*>(&week_)) + sizeof(hour_));
  _internal_metadata_.Clear();
}

bool tmsg_push_guild_match::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_push_guild_match)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 week = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hour = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hour_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_push_guild_match)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_push_guild_match)
  return false;
#undef DO_
}

void tmsg_push_guild_match::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_push_guild_match)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 week = 1;
  if (this->week() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->week(), output);
  }

  // int32 hour = 2;
  if (this->hour() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hour(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_push_guild_match)
}

::google::protobuf::uint8* tmsg_push_guild_match::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_push_guild_match)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 week = 1;
  if (this->week() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->week(), target);
  }

  // int32 hour = 2;
  if (this->hour() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hour(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_push_guild_match)
  return target;
}

size_t tmsg_push_guild_match::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_push_guild_match)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 week = 1;
  if (this->week() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->week());
  }

  // int32 hour = 2;
  if (this->hour() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hour());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_push_guild_match::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_push_guild_match)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_push_guild_match* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_push_guild_match>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_push_guild_match)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_push_guild_match)
    MergeFrom(*source);
  }
}

void tmsg_push_guild_match::MergeFrom(const tmsg_push_guild_match& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_push_guild_match)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.week() != 0) {
    set_week(from.week());
  }
  if (from.hour() != 0) {
    set_hour(from.hour());
  }
}

void tmsg_push_guild_match::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_push_guild_match)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_push_guild_match::CopyFrom(const tmsg_push_guild_match& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_push_guild_match)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_push_guild_match::IsInitialized() const {
  return true;
}

void tmsg_push_guild_match::Swap(tmsg_push_guild_match* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_push_guild_match::InternalSwap(tmsg_push_guild_match* other) {
  using std::swap;
  swap(week_, other->week_);
  swap(hour_, other->hour_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_push_guild_match::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_guild_fight_reward::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_guild_fight_reward::kPlayerRewardsFieldNumber;
const int tmsg_rep_guild_fight_reward::kGuildRewardsFieldNumber;
const int tmsg_rep_guild_fight_reward::kZhouFieldNumber;
const int tmsg_rep_guild_fight_reward::kStypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_guild_fight_reward::tmsg_rep_guild_fight_reward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_fight_reward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_guild_fight_reward)
}
tmsg_rep_guild_fight_reward::tmsg_rep_guild_fight_reward(const tmsg_rep_guild_fight_reward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_rewards_(from.player_rewards_),
      guild_rewards_(from.guild_rewards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&zhou_, &from.zhou_,
    static_cast<size_t>(reinterpret_cast<char*>(&stype_) -
    reinterpret_cast<char*>(&zhou_)) + sizeof(stype_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_guild_fight_reward)
}

void tmsg_rep_guild_fight_reward::SharedCtor() {
  ::memset(&zhou_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stype_) -
      reinterpret_cast<char*>(&zhou_)) + sizeof(stype_));
}

tmsg_rep_guild_fight_reward::~tmsg_rep_guild_fight_reward() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_guild_fight_reward)
  SharedDtor();
}

void tmsg_rep_guild_fight_reward::SharedDtor() {
}

void tmsg_rep_guild_fight_reward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_guild_fight_reward::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_guild_fight_reward& tmsg_rep_guild_fight_reward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_fight_reward.base);
  return *internal_default_instance();
}


void tmsg_rep_guild_fight_reward::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_guild_fight_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  player_rewards_.Clear();
  set_changed();
  guild_rewards_.Clear();
  ::memset(&zhou_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stype_) -
      reinterpret_cast<char*>(&zhou_)) + sizeof(stype_));
  _internal_metadata_.Clear();
}

bool tmsg_rep_guild_fight_reward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_guild_fight_reward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 player_rewards = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_player_rewards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_player_rewards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 guild_rewards = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_guild_rewards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_guild_rewards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 zhou = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zhou_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stype = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_guild_fight_reward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_guild_fight_reward)
  return false;
#undef DO_
}

void tmsg_rep_guild_fight_reward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_guild_fight_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 player_rewards = 1;
  if (this->player_rewards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_rewards_cached_byte_size_));
  }
  for (int i = 0, n = this->player_rewards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->player_rewards(i), output);
  }

  // repeated uint64 guild_rewards = 2;
  if (this->guild_rewards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _guild_rewards_cached_byte_size_));
  }
  for (int i = 0, n = this->guild_rewards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->guild_rewards(i), output);
  }

  // int32 zhou = 3;
  if (this->zhou() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->zhou(), output);
  }

  // int32 stype = 4;
  if (this->stype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->stype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_guild_fight_reward)
}

::google::protobuf::uint8* tmsg_rep_guild_fight_reward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_guild_fight_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 player_rewards = 1;
  if (this->player_rewards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_rewards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->player_rewards_, target);
  }

  // repeated uint64 guild_rewards = 2;
  if (this->guild_rewards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _guild_rewards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->guild_rewards_, target);
  }

  // int32 zhou = 3;
  if (this->zhou() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->zhou(), target);
  }

  // int32 stype = 4;
  if (this->stype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->stype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_guild_fight_reward)
  return target;
}

size_t tmsg_rep_guild_fight_reward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_guild_fight_reward)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 player_rewards = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->player_rewards_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_rewards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 guild_rewards = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->guild_rewards_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _guild_rewards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 zhou = 3;
  if (this->zhou() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->zhou());
  }

  // int32 stype = 4;
  if (this->stype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_guild_fight_reward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_guild_fight_reward)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_guild_fight_reward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_guild_fight_reward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_guild_fight_reward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_guild_fight_reward)
    MergeFrom(*source);
  }
}

void tmsg_rep_guild_fight_reward::MergeFrom(const tmsg_rep_guild_fight_reward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_guild_fight_reward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_rewards_.MergeFrom(from.player_rewards_);
  guild_rewards_.MergeFrom(from.guild_rewards_);
  if (from.zhou() != 0) {
    set_zhou(from.zhou());
  }
  if (from.stype() != 0) {
    set_stype(from.stype());
  }
}

void tmsg_rep_guild_fight_reward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_guild_fight_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_guild_fight_reward::CopyFrom(const tmsg_rep_guild_fight_reward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_guild_fight_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_guild_fight_reward::IsInitialized() const {
  return true;
}

void tmsg_rep_guild_fight_reward::Swap(tmsg_rep_guild_fight_reward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_guild_fight_reward::InternalSwap(tmsg_rep_guild_fight_reward* other) {
  using std::swap;
  player_rewards_.InternalSwap(&other->player_rewards_);
  guild_rewards_.InternalSwap(&other->guild_rewards_);
  swap(zhou_, other->zhou_);
  swap(stype_, other->stype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_guild_fight_reward::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_guild_target_reward::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_guild_target_reward::kPvpGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_guild_target_reward::tmsg_req_guild_target_reward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_guild_target_reward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_guild_target_reward)
}
tmsg_req_guild_target_reward::tmsg_req_guild_target_reward(const tmsg_req_guild_target_reward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pvp_guid_ = from.pvp_guid_;
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_guild_target_reward)
}

void tmsg_req_guild_target_reward::SharedCtor() {
  pvp_guid_ = GOOGLE_ULONGLONG(0);
}

tmsg_req_guild_target_reward::~tmsg_req_guild_target_reward() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_guild_target_reward)
  SharedDtor();
}

void tmsg_req_guild_target_reward::SharedDtor() {
}

void tmsg_req_guild_target_reward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_guild_target_reward::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_guild_target_reward& tmsg_req_guild_target_reward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_guild_target_reward.base);
  return *internal_default_instance();
}


void tmsg_req_guild_target_reward::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_guild_target_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  pvp_guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool tmsg_req_guild_target_reward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_guild_target_reward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 pvp_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pvp_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_guild_target_reward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_guild_target_reward)
  return false;
#undef DO_
}

void tmsg_req_guild_target_reward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_guild_target_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 pvp_guid = 1;
  if (this->pvp_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->pvp_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_guild_target_reward)
}

::google::protobuf::uint8* tmsg_req_guild_target_reward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_guild_target_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 pvp_guid = 1;
  if (this->pvp_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->pvp_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_guild_target_reward)
  return target;
}

size_t tmsg_req_guild_target_reward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_guild_target_reward)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 pvp_guid = 1;
  if (this->pvp_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pvp_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_guild_target_reward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_guild_target_reward)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_guild_target_reward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_guild_target_reward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_guild_target_reward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_guild_target_reward)
    MergeFrom(*source);
  }
}

void tmsg_req_guild_target_reward::MergeFrom(const tmsg_req_guild_target_reward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_guild_target_reward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pvp_guid() != 0) {
    set_pvp_guid(from.pvp_guid());
  }
}

void tmsg_req_guild_target_reward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_guild_target_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_guild_target_reward::CopyFrom(const tmsg_req_guild_target_reward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_guild_target_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_guild_target_reward::IsInitialized() const {
  return true;
}

void tmsg_req_guild_target_reward::Swap(tmsg_req_guild_target_reward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_guild_target_reward::InternalSwap(tmsg_req_guild_target_reward* other) {
  using std::swap;
  swap(pvp_guid_, other->pvp_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_guild_target_reward::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_rep_guild_target_reward::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_rep_guild_target_reward::kJudianFieldNumber;
const int tmsg_rep_guild_target_reward::kJidiFieldNumber;
const int tmsg_rep_guild_target_reward::kPerfectFieldNumber;
const int tmsg_rep_guild_target_reward::kResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_rep_guild_target_reward::tmsg_rep_guild_target_reward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_target_reward.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_rep_guild_target_reward)
}
tmsg_rep_guild_target_reward::tmsg_rep_guild_target_reward(const tmsg_rep_guild_target_reward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&judian_, &from.judian_,
    static_cast<size_t>(reinterpret_cast<char*>(&res_) -
    reinterpret_cast<char*>(&judian_)) + sizeof(res_));
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_rep_guild_target_reward)
}

void tmsg_rep_guild_target_reward::SharedCtor() {
  ::memset(&judian_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&judian_)) + sizeof(res_));
}

tmsg_rep_guild_target_reward::~tmsg_rep_guild_target_reward() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_rep_guild_target_reward)
  SharedDtor();
}

void tmsg_rep_guild_target_reward::SharedDtor() {
}

void tmsg_rep_guild_target_reward::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_rep_guild_target_reward::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_rep_guild_target_reward& tmsg_rep_guild_target_reward::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_rep_guild_target_reward.base);
  return *internal_default_instance();
}


void tmsg_rep_guild_target_reward::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_rep_guild_target_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&judian_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&judian_)) + sizeof(res_));
  _internal_metadata_.Clear();
}

bool tmsg_rep_guild_target_reward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_rep_guild_target_reward)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 judian = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &judian_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 jidi = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jidi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 perfect = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &perfect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool res = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_rep_guild_target_reward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_rep_guild_target_reward)
  return false;
#undef DO_
}

void tmsg_rep_guild_target_reward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_rep_guild_target_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 judian = 1;
  if (this->judian() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->judian(), output);
  }

  // int32 jidi = 2;
  if (this->jidi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->jidi(), output);
  }

  // int32 perfect = 3;
  if (this->perfect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->perfect(), output);
  }

  // bool res = 4;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->res(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_rep_guild_target_reward)
}

::google::protobuf::uint8* tmsg_rep_guild_target_reward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_rep_guild_target_reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 judian = 1;
  if (this->judian() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->judian(), target);
  }

  // int32 jidi = 2;
  if (this->jidi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->jidi(), target);
  }

  // int32 perfect = 3;
  if (this->perfect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->perfect(), target);
  }

  // bool res = 4;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->res(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_rep_guild_target_reward)
  return target;
}

size_t tmsg_rep_guild_target_reward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_rep_guild_target_reward)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 judian = 1;
  if (this->judian() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->judian());
  }

  // int32 jidi = 2;
  if (this->jidi() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jidi());
  }

  // int32 perfect = 3;
  if (this->perfect() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->perfect());
  }

  // bool res = 4;
  if (this->res() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_rep_guild_target_reward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_rep_guild_target_reward)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_rep_guild_target_reward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_rep_guild_target_reward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_rep_guild_target_reward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_rep_guild_target_reward)
    MergeFrom(*source);
  }
}

void tmsg_rep_guild_target_reward::MergeFrom(const tmsg_rep_guild_target_reward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_rep_guild_target_reward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.judian() != 0) {
    set_judian(from.judian());
  }
  if (from.jidi() != 0) {
    set_jidi(from.jidi());
  }
  if (from.perfect() != 0) {
    set_perfect(from.perfect());
  }
  if (from.res() != 0) {
    set_res(from.res());
  }
}

void tmsg_rep_guild_target_reward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_rep_guild_target_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_rep_guild_target_reward::CopyFrom(const tmsg_rep_guild_target_reward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_rep_guild_target_reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_rep_guild_target_reward::IsInitialized() const {
  return true;
}

void tmsg_rep_guild_target_reward::Swap(tmsg_rep_guild_target_reward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_rep_guild_target_reward::InternalSwap(tmsg_rep_guild_target_reward* other) {
  using std::swap;
  swap(judian_, other->judian_);
  swap(jidi_, other->jidi_);
  swap(perfect_, other->perfect_);
  swap(res_, other->res_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_rep_guild_target_reward::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void tmsg_req_libao_exchange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int tmsg_req_libao_exchange::kCodeFieldNumber;
const int tmsg_req_libao_exchange::kUsernameFieldNumber;
const int tmsg_req_libao_exchange::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

tmsg_req_libao_exchange::tmsg_req_libao_exchange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_rpc_2eproto::scc_info_tmsg_req_libao_exchange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpcproto.tmsg_req_libao_exchange)
}
tmsg_req_libao_exchange::tmsg_req_libao_exchange(const tmsg_req_libao_exchange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serverid().size() > 0) {
    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
  // @@protoc_insertion_point(copy_constructor:rpcproto.tmsg_req_libao_exchange)
}

void tmsg_req_libao_exchange::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

tmsg_req_libao_exchange::~tmsg_req_libao_exchange() {
  // @@protoc_insertion_point(destructor:rpcproto.tmsg_req_libao_exchange)
  SharedDtor();
}

void tmsg_req_libao_exchange::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void tmsg_req_libao_exchange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* tmsg_req_libao_exchange::descriptor() {
  ::protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const tmsg_req_libao_exchange& tmsg_req_libao_exchange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_rpc_2eproto::scc_info_tmsg_req_libao_exchange.base);
  return *internal_default_instance();
}


void tmsg_req_libao_exchange::Clear() {
// @@protoc_insertion_point(message_clear_start:rpcproto.tmsg_req_libao_exchange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool tmsg_req_libao_exchange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpcproto.tmsg_req_libao_exchange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_libao_exchange.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_libao_exchange.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverid().data(), static_cast<int>(this->serverid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpcproto.tmsg_req_libao_exchange.serverid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpcproto.tmsg_req_libao_exchange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpcproto.tmsg_req_libao_exchange)
  return false;
#undef DO_
}

void tmsg_req_libao_exchange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpcproto.tmsg_req_libao_exchange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_libao_exchange.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_libao_exchange.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // string serverid = 3;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_libao_exchange.serverid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpcproto.tmsg_req_libao_exchange)
}

::google::protobuf::uint8* tmsg_req_libao_exchange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpcproto.tmsg_req_libao_exchange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_libao_exchange.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_libao_exchange.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // string serverid = 3;
  if (this->serverid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverid().data(), static_cast<int>(this->serverid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpcproto.tmsg_req_libao_exchange.serverid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpcproto.tmsg_req_libao_exchange)
  return target;
}

size_t tmsg_req_libao_exchange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpcproto.tmsg_req_libao_exchange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string serverid = 3;
  if (this->serverid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tmsg_req_libao_exchange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpcproto.tmsg_req_libao_exchange)
  GOOGLE_DCHECK_NE(&from, this);
  const tmsg_req_libao_exchange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const tmsg_req_libao_exchange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpcproto.tmsg_req_libao_exchange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpcproto.tmsg_req_libao_exchange)
    MergeFrom(*source);
  }
}

void tmsg_req_libao_exchange::MergeFrom(const tmsg_req_libao_exchange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpcproto.tmsg_req_libao_exchange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.serverid().size() > 0) {

    serverid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverid_);
  }
}

void tmsg_req_libao_exchange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpcproto.tmsg_req_libao_exchange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tmsg_req_libao_exchange::CopyFrom(const tmsg_req_libao_exchange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpcproto.tmsg_req_libao_exchange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tmsg_req_libao_exchange::IsInitialized() const {
  return true;
}

void tmsg_req_libao_exchange::Swap(tmsg_req_libao_exchange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void tmsg_req_libao_exchange::InternalSwap(tmsg_req_libao_exchange* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  serverid_.Swap(&other->serverid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata tmsg_req_libao_exchange::GetMetadata() const {
  protobuf_rpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_rpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rpcproto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::rpc* Arena::CreateMaybeMessage< ::rpcproto::rpc >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::rpc >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::request* Arena::CreateMaybeMessage< ::rpcproto::request >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::error* Arena::CreateMaybeMessage< ::rpcproto::error >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::error >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::response* Arena::CreateMaybeMessage< ::rpcproto::response >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_libao* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_libao >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_libao >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_libao* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_libao >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_libao >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_gonggao* Arena::CreateMaybeMessage< ::rpcproto::tmsg_gonggao >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_gonggao >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_login_heitao* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_login_heitao >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_login_heitao >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_login_heitao* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_login_heitao >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_login_heitao >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_recharge_heitao* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_recharge_heitao >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_recharge_heitao >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_player_vote* Arena::CreateMaybeMessage< ::rpcproto::tmsg_player_vote >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_player_vote >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_new_huodong* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_new_huodong >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_new_huodong >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_huodong* Arena::CreateMaybeMessage< ::rpcproto::tmsg_huodong >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_huodong >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_new_huodong* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_new_huodong >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_new_huodong >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_kick* Arena::CreateMaybeMessage< ::rpcproto::tmsg_kick >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_kick >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_activity_reward* Arena::CreateMaybeMessage< ::rpcproto::tmsg_activity_reward >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_activity_reward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_activity* Arena::CreateMaybeMessage< ::rpcproto::tmsg_activity >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_activity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_activity_group* Arena::CreateMaybeMessage< ::rpcproto::tmsg_activity_group >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_activity_group >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_recharge_apple* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_recharge_apple >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_recharge_apple >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_recharge_apple* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_recharge_apple >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_recharge_apple >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_fight_equip* Arena::CreateMaybeMessage< ::rpcproto::tmsg_fight_equip >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_fight_equip >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_fight_treasure* Arena::CreateMaybeMessage< ::rpcproto::tmsg_fight_treasure >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_fight_treasure >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_fight_role* Arena::CreateMaybeMessage< ::rpcproto::tmsg_fight_role >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_fight_role >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_fight_pet* Arena::CreateMaybeMessage< ::rpcproto::tmsg_fight_pet >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_fight_pet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_player_fight_player* Arena::CreateMaybeMessage< ::rpcproto::tmsg_player_fight_player >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_player_fight_player >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_player_fight_info* Arena::CreateMaybeMessage< ::rpcproto::tmsg_player_fight_info >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_player_fight_info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_pvp_match* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_pvp_match >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_pvp_match >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_pvp_match* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_pvp_match >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_pvp_match >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_pvp_fight* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_pvp_fight >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_pvp_fight >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_pvp_fight* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_pvp_fight >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_pvp_fight >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_pvp_reward* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_pvp_reward >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_pvp_reward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_pvp_reward* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_pvp_reward >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_pvp_reward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_team_login* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_team_login >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_team_login >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_team_login* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_team_login >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_team_login >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_team_pull* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_team_pull >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_team_pull >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_team_push* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_team_push >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_team_push >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_team_invite* Arena::CreateMaybeMessage< ::rpcproto::tmsg_team_invite >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_team_invite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_bingyuan_buy* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_bingyuan_buy >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_bingyuan_buy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_bingyuan_fight* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_bingyuan_fight >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_bingyuan_fight >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_bingyuan_fight* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_bingyuan_fight >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_bingyuan_fight >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_ds_fight* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_ds_fight >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_ds_fight >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_ds_fight* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_ds_fight >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_ds_fight >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_mofang_point* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_mofang_point >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_mofang_point >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_mofang_point* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_mofang_point >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_mofang_point >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_invite_code* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_invite_code >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_invite_code >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_invite_code* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_invite_code >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_invite_code >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_invite_code_input* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_invite_code_input >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_invite_code_input >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_invite_level* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_invite_level >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_invite_level >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_guild_pvp_baoming* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_guild_pvp_baoming >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_guild_pvp_baoming >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_guild_pvp_baoming* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_guild_pvp_baoming >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_guild_pvp_baoming >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_guild_pvp_bushu* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_guild_pvp_bushu >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_guild_pvp_bushu >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_guild_pvp_bushu* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_guild_pvp_bushu >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_guild_pvp_bushu >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_guild_look_bushu* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_guild_look_bushu >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_guild_look_bushu >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_guild_jinrizhanji* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_guild_jinrizhanji >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_guild_jinrizhanji >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_guild_fight* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_guild_fight >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_guild_fight >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_guild_fight* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_guild_fight >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_guild_fight >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_guild_look* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_guild_look >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_guild_look >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_guild_fight_info* Arena::CreateMaybeMessage< ::rpcproto::tmsg_guild_fight_info >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_guild_fight_info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_guild_fight_info* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_guild_fight_info >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_guild_fight_info >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_guild_gongpo_reward* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_guild_gongpo_reward >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_guild_gongpo_reward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_push_guild_match* Arena::CreateMaybeMessage< ::rpcproto::tmsg_push_guild_match >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_push_guild_match >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_guild_fight_reward* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_guild_fight_reward >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_guild_fight_reward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_guild_target_reward* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_guild_target_reward >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_guild_target_reward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_rep_guild_target_reward* Arena::CreateMaybeMessage< ::rpcproto::tmsg_rep_guild_target_reward >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_rep_guild_target_reward >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpcproto::tmsg_req_libao_exchange* Arena::CreateMaybeMessage< ::rpcproto::tmsg_req_libao_exchange >(Arena* arena) {
  return Arena::CreateInternal< ::rpcproto::tmsg_req_libao_exchange >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
