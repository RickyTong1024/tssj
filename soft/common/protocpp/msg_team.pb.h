// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_team.proto

#ifndef PROTOBUF_INCLUDED_msg_5fteam_2eproto
#define PROTOBUF_INCLUDED_msg_5fteam_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "role.eproto.pb.h"
#include "equip.eproto.pb.h"
#include "treasure.eproto.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_msg_5fteam_2eproto 

namespace protobuf_msg_5fteam_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[32];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_msg_5fteam_2eproto
namespace protocol {
namespace team {
class bingyuan_fight_text;
class bingyuan_fight_textDefaultTypeInternal;
extern bingyuan_fight_textDefaultTypeInternal _bingyuan_fight_text_default_instance_;
class bingyuan_huihe;
class bingyuan_huiheDefaultTypeInternal;
extern bingyuan_huiheDefaultTypeInternal _bingyuan_huihe_default_instance_;
class cmsg_change_hanhua;
class cmsg_change_hanhuaDefaultTypeInternal;
extern cmsg_change_hanhuaDefaultTypeInternal _cmsg_change_hanhua_default_instance_;
class cmsg_chat_team;
class cmsg_chat_teamDefaultTypeInternal;
extern cmsg_chat_teamDefaultTypeInternal _cmsg_chat_team_default_instance_;
class cmsg_enter_world;
class cmsg_enter_worldDefaultTypeInternal;
extern cmsg_enter_worldDefaultTypeInternal _cmsg_enter_world_default_instance_;
class cmsg_hanhua;
class cmsg_hanhuaDefaultTypeInternal;
extern cmsg_hanhuaDefaultTypeInternal _cmsg_hanhua_default_instance_;
class cmsg_invite_agree;
class cmsg_invite_agreeDefaultTypeInternal;
extern cmsg_invite_agreeDefaultTypeInternal _cmsg_invite_agree_default_instance_;
class cmsg_player_look;
class cmsg_player_lookDefaultTypeInternal;
extern cmsg_player_lookDefaultTypeInternal _cmsg_player_look_default_instance_;
class cmsg_team_enter;
class cmsg_team_enterDefaultTypeInternal;
extern cmsg_team_enterDefaultTypeInternal _cmsg_team_enter_default_instance_;
class cmsg_team_kick;
class cmsg_team_kickDefaultTypeInternal;
extern cmsg_team_kickDefaultTypeInternal _cmsg_team_kick_default_instance_;
class cmsg_team_move;
class cmsg_team_moveDefaultTypeInternal;
extern cmsg_team_moveDefaultTypeInternal _cmsg_team_move_default_instance_;
class smsg_change_team_stat;
class smsg_change_team_statDefaultTypeInternal;
extern smsg_change_team_statDefaultTypeInternal _smsg_change_team_stat_default_instance_;
class smsg_chat_team;
class smsg_chat_teamDefaultTypeInternal;
extern smsg_chat_teamDefaultTypeInternal _smsg_chat_team_default_instance_;
class smsg_enter_world;
class smsg_enter_worldDefaultTypeInternal;
extern smsg_enter_worldDefaultTypeInternal _smsg_enter_world_default_instance_;
class smsg_fight_ds;
class smsg_fight_dsDefaultTypeInternal;
extern smsg_fight_dsDefaultTypeInternal _smsg_fight_ds_default_instance_;
class smsg_fight_team;
class smsg_fight_teamDefaultTypeInternal;
extern smsg_fight_teamDefaultTypeInternal _smsg_fight_team_default_instance_;
class smsg_hanhua;
class smsg_hanhuaDefaultTypeInternal;
extern smsg_hanhuaDefaultTypeInternal _smsg_hanhua_default_instance_;
class smsg_invite_add;
class smsg_invite_addDefaultTypeInternal;
extern smsg_invite_addDefaultTypeInternal _smsg_invite_add_default_instance_;
class smsg_invite_all;
class smsg_invite_allDefaultTypeInternal;
extern smsg_invite_allDefaultTypeInternal _smsg_invite_all_default_instance_;
class smsg_invite_remove;
class smsg_invite_removeDefaultTypeInternal;
extern smsg_invite_removeDefaultTypeInternal _smsg_invite_remove_default_instance_;
class smsg_invite_remove_social;
class smsg_invite_remove_socialDefaultTypeInternal;
extern smsg_invite_remove_socialDefaultTypeInternal _smsg_invite_remove_social_default_instance_;
class smsg_player_look;
class smsg_player_lookDefaultTypeInternal;
extern smsg_player_lookDefaultTypeInternal _smsg_player_look_default_instance_;
class smsg_reset_ds;
class smsg_reset_dsDefaultTypeInternal;
extern smsg_reset_dsDefaultTypeInternal _smsg_reset_ds_default_instance_;
class smsg_team_create;
class smsg_team_createDefaultTypeInternal;
extern smsg_team_createDefaultTypeInternal _smsg_team_create_default_instance_;
class smsg_team_enter;
class smsg_team_enterDefaultTypeInternal;
extern smsg_team_enterDefaultTypeInternal _smsg_team_enter_default_instance_;
class smsg_team_leave;
class smsg_team_leaveDefaultTypeInternal;
extern smsg_team_leaveDefaultTypeInternal _smsg_team_leave_default_instance_;
class smsg_team_move;
class smsg_team_moveDefaultTypeInternal;
extern smsg_team_moveDefaultTypeInternal _smsg_team_move_default_instance_;
class smsg_team_player_reward_change;
class smsg_team_player_reward_changeDefaultTypeInternal;
extern smsg_team_player_reward_changeDefaultTypeInternal _smsg_team_player_reward_change_default_instance_;
class smsg_team_prepare;
class smsg_team_prepareDefaultTypeInternal;
extern smsg_team_prepareDefaultTypeInternal _smsg_team_prepare_default_instance_;
class team;
class teamDefaultTypeInternal;
extern teamDefaultTypeInternal _team_default_instance_;
class team_invite;
class team_inviteDefaultTypeInternal;
extern team_inviteDefaultTypeInternal _team_invite_default_instance_;
class team_player;
class team_playerDefaultTypeInternal;
extern team_playerDefaultTypeInternal _team_player_default_instance_;
}  // namespace team
}  // namespace protocol
namespace google {
namespace protobuf {
template<> ::protocol::team::bingyuan_fight_text* Arena::CreateMaybeMessage<::protocol::team::bingyuan_fight_text>(Arena*);
template<> ::protocol::team::bingyuan_huihe* Arena::CreateMaybeMessage<::protocol::team::bingyuan_huihe>(Arena*);
template<> ::protocol::team::cmsg_change_hanhua* Arena::CreateMaybeMessage<::protocol::team::cmsg_change_hanhua>(Arena*);
template<> ::protocol::team::cmsg_chat_team* Arena::CreateMaybeMessage<::protocol::team::cmsg_chat_team>(Arena*);
template<> ::protocol::team::cmsg_enter_world* Arena::CreateMaybeMessage<::protocol::team::cmsg_enter_world>(Arena*);
template<> ::protocol::team::cmsg_hanhua* Arena::CreateMaybeMessage<::protocol::team::cmsg_hanhua>(Arena*);
template<> ::protocol::team::cmsg_invite_agree* Arena::CreateMaybeMessage<::protocol::team::cmsg_invite_agree>(Arena*);
template<> ::protocol::team::cmsg_player_look* Arena::CreateMaybeMessage<::protocol::team::cmsg_player_look>(Arena*);
template<> ::protocol::team::cmsg_team_enter* Arena::CreateMaybeMessage<::protocol::team::cmsg_team_enter>(Arena*);
template<> ::protocol::team::cmsg_team_kick* Arena::CreateMaybeMessage<::protocol::team::cmsg_team_kick>(Arena*);
template<> ::protocol::team::cmsg_team_move* Arena::CreateMaybeMessage<::protocol::team::cmsg_team_move>(Arena*);
template<> ::protocol::team::smsg_change_team_stat* Arena::CreateMaybeMessage<::protocol::team::smsg_change_team_stat>(Arena*);
template<> ::protocol::team::smsg_chat_team* Arena::CreateMaybeMessage<::protocol::team::smsg_chat_team>(Arena*);
template<> ::protocol::team::smsg_enter_world* Arena::CreateMaybeMessage<::protocol::team::smsg_enter_world>(Arena*);
template<> ::protocol::team::smsg_fight_ds* Arena::CreateMaybeMessage<::protocol::team::smsg_fight_ds>(Arena*);
template<> ::protocol::team::smsg_fight_team* Arena::CreateMaybeMessage<::protocol::team::smsg_fight_team>(Arena*);
template<> ::protocol::team::smsg_hanhua* Arena::CreateMaybeMessage<::protocol::team::smsg_hanhua>(Arena*);
template<> ::protocol::team::smsg_invite_add* Arena::CreateMaybeMessage<::protocol::team::smsg_invite_add>(Arena*);
template<> ::protocol::team::smsg_invite_all* Arena::CreateMaybeMessage<::protocol::team::smsg_invite_all>(Arena*);
template<> ::protocol::team::smsg_invite_remove* Arena::CreateMaybeMessage<::protocol::team::smsg_invite_remove>(Arena*);
template<> ::protocol::team::smsg_invite_remove_social* Arena::CreateMaybeMessage<::protocol::team::smsg_invite_remove_social>(Arena*);
template<> ::protocol::team::smsg_player_look* Arena::CreateMaybeMessage<::protocol::team::smsg_player_look>(Arena*);
template<> ::protocol::team::smsg_reset_ds* Arena::CreateMaybeMessage<::protocol::team::smsg_reset_ds>(Arena*);
template<> ::protocol::team::smsg_team_create* Arena::CreateMaybeMessage<::protocol::team::smsg_team_create>(Arena*);
template<> ::protocol::team::smsg_team_enter* Arena::CreateMaybeMessage<::protocol::team::smsg_team_enter>(Arena*);
template<> ::protocol::team::smsg_team_leave* Arena::CreateMaybeMessage<::protocol::team::smsg_team_leave>(Arena*);
template<> ::protocol::team::smsg_team_move* Arena::CreateMaybeMessage<::protocol::team::smsg_team_move>(Arena*);
template<> ::protocol::team::smsg_team_player_reward_change* Arena::CreateMaybeMessage<::protocol::team::smsg_team_player_reward_change>(Arena*);
template<> ::protocol::team::smsg_team_prepare* Arena::CreateMaybeMessage<::protocol::team::smsg_team_prepare>(Arena*);
template<> ::protocol::team::team* Arena::CreateMaybeMessage<::protocol::team::team>(Arena*);
template<> ::protocol::team::team_invite* Arena::CreateMaybeMessage<::protocol::team::team_invite>(Arena*);
template<> ::protocol::team::team_player* Arena::CreateMaybeMessage<::protocol::team::team_player>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protocol {
namespace team {

// ===================================================================

class team_player : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.team_player) */ {
 public:
  team_player();
  virtual ~team_player();

  team_player(const team_player& from);

  inline team_player& operator=(const team_player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  team_player(team_player&& from) noexcept
    : team_player() {
    *this = ::std::move(from);
  }

  inline team_player& operator=(team_player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const team_player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const team_player* internal_default_instance() {
    return reinterpret_cast<const team_player*>(
               &_team_player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(team_player* other);
  friend void swap(team_player& a, team_player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline team_player* New() const final {
    return CreateMaybeMessage<team_player>(NULL);
  }

  team_player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<team_player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const team_player& from);
  void MergeFrom(const team_player& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(team_player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 invites = 17;
  int invites_size() const;
  void clear_invites();
  static const int kInvitesFieldNumber = 17;
  ::google::protobuf::uint64 invites(int index) const;
  void set_invites(int index, ::google::protobuf::uint64 value);
  void add_invites(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      invites() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_invites();

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // int32 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 bf = 4;
  void clear_bf();
  static const int kBfFieldNumber = 4;
  ::google::protobuf::int32 bf() const;
  void set_bf(::google::protobuf::int32 value);

  // int32 chenhao = 5;
  void clear_chenhao();
  static const int kChenhaoFieldNumber = 5;
  ::google::protobuf::int32 chenhao() const;
  void set_chenhao(::google::protobuf::int32 value);

  // int32 level = 6;
  void clear_level();
  static const int kLevelFieldNumber = 6;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // bool leader = 7;
  void clear_leader();
  static const int kLeaderFieldNumber = 7;
  bool leader() const;
  void set_leader(bool value);

  // bool prepare = 8;
  void clear_prepare();
  static const int kPrepareFieldNumber = 8;
  bool prepare() const;
  void set_prepare(bool value);

  // bool is_npc = 10;
  void clear_is_npc();
  static const int kIsNpcFieldNumber = 10;
  bool is_npc() const;
  void set_is_npc(bool value);

  // int32 reward_num = 9;
  void clear_reward_num();
  static const int kRewardNumFieldNumber = 9;
  ::google::protobuf::int32 reward_num() const;
  void set_reward_num(::google::protobuf::int32 value);

  // int32 serverid = 11;
  void clear_serverid();
  static const int kServeridFieldNumber = 11;
  ::google::protobuf::int32 serverid() const;
  void set_serverid(::google::protobuf::int32 value);

  // int32 kill = 12;
  void clear_kill();
  static const int kKillFieldNumber = 12;
  ::google::protobuf::int32 kill() const;
  void set_kill(::google::protobuf::int32 value);

  // int32 vip = 13;
  void clear_vip();
  static const int kVipFieldNumber = 13;
  ::google::protobuf::int32 vip() const;
  void set_vip(::google::protobuf::int32 value);

  // int32 achieve = 14;
  void clear_achieve();
  static const int kAchieveFieldNumber = 14;
  ::google::protobuf::int32 achieve() const;
  void set_achieve(::google::protobuf::int32 value);

  // int32 guanghuan = 15;
  void clear_guanghuan();
  static const int kGuanghuanFieldNumber = 15;
  ::google::protobuf::int32 guanghuan() const;
  void set_guanghuan(::google::protobuf::int32 value);

  // int32 dress = 16;
  void clear_dress();
  static const int kDressFieldNumber = 16;
  ::google::protobuf::int32 dress() const;
  void set_dress(::google::protobuf::int32 value);

  // uint64 bind_guid = 18;
  void clear_bind_guid();
  static const int kBindGuidFieldNumber = 18;
  ::google::protobuf::uint64 bind_guid() const;
  void set_bind_guid(::google::protobuf::uint64 value);

  // int32 nalflag = 19;
  void clear_nalflag();
  static const int kNalflagFieldNumber = 19;
  ::google::protobuf::int32 nalflag() const;
  void set_nalflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.team.team_player)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > invites_;
  mutable int _invites_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 bf_;
  ::google::protobuf::int32 chenhao_;
  ::google::protobuf::int32 level_;
  bool leader_;
  bool prepare_;
  bool is_npc_;
  ::google::protobuf::int32 reward_num_;
  ::google::protobuf::int32 serverid_;
  ::google::protobuf::int32 kill_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 achieve_;
  ::google::protobuf::int32 guanghuan_;
  ::google::protobuf::int32 dress_;
  ::google::protobuf::uint64 bind_guid_;
  ::google::protobuf::int32 nalflag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class team : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.team) */ {
 public:
  team();
  virtual ~team();

  team(const team& from);

  inline team& operator=(const team& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  team(team&& from) noexcept
    : team() {
    *this = ::std::move(from);
  }

  inline team& operator=(team&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const team& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const team* internal_default_instance() {
    return reinterpret_cast<const team*>(
               &_team_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(team* other);
  friend void swap(team& a, team& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline team* New() const final {
    return CreateMaybeMessage<team>(NULL);
  }

  team* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<team>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const team& from);
  void MergeFrom(const team& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(team* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.team.team_player players = 2;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 2;
  ::protocol::team::team_player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::team::team_player >*
      mutable_players();
  const ::protocol::team::team_player& players(int index) const;
  ::protocol::team::team_player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::protocol::team::team_player >&
      players() const;

  // uint64 team_id = 1;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  ::google::protobuf::uint64 team_id() const;
  void set_team_id(::google::protobuf::uint64 value);

  // int32 level = 4;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // int32 jiacheng = 5;
  void clear_jiacheng();
  static const int kJiachengFieldNumber = 5;
  ::google::protobuf::int32 jiacheng() const;
  void set_jiacheng(::google::protobuf::int32 value);

  // bool open = 3;
  void clear_open();
  static const int kOpenFieldNumber = 3;
  bool open() const;
  void set_open(bool value);

  // bool result = 6;
  void clear_result();
  static const int kResultFieldNumber = 6;
  bool result() const;
  void set_result(bool value);

  // bool fight = 8;
  void clear_fight();
  static const int kFightFieldNumber = 8;
  bool fight() const;
  void set_fight(bool value);

  // int32 stat = 7;
  void clear_stat();
  static const int kStatFieldNumber = 7;
  ::google::protobuf::int32 stat() const;
  void set_stat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.team.team)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::team::team_player > players_;
  ::google::protobuf::uint64 team_id_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 jiacheng_;
  bool open_;
  bool result_;
  bool fight_;
  ::google::protobuf::int32 stat_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class team_invite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.team_invite) */ {
 public:
  team_invite();
  virtual ~team_invite();

  team_invite(const team_invite& from);

  inline team_invite& operator=(const team_invite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  team_invite(team_invite&& from) noexcept
    : team_invite() {
    *this = ::std::move(from);
  }

  inline team_invite& operator=(team_invite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const team_invite& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const team_invite* internal_default_instance() {
    return reinterpret_cast<const team_invite*>(
               &_team_invite_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(team_invite* other);
  friend void swap(team_invite& a, team_invite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline team_invite* New() const final {
    return CreateMaybeMessage<team_invite>(NULL);
  }

  team_invite* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<team_invite>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const team_invite& from);
  void MergeFrom(const team_invite& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(team_invite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string guild = 7;
  void clear_guild();
  static const int kGuildFieldNumber = 7;
  const ::std::string& guild() const;
  void set_guild(const ::std::string& value);
  #if LANG_CXX11
  void set_guild(::std::string&& value);
  #endif
  void set_guild(const char* value);
  void set_guild(const char* value, size_t size);
  ::std::string* mutable_guild();
  ::std::string* release_guild();
  void set_allocated_guild(::std::string* guild);

  // uint64 invite_id = 1;
  void clear_invite_id();
  static const int kInviteIdFieldNumber = 1;
  ::google::protobuf::uint64 invite_id() const;
  void set_invite_id(::google::protobuf::uint64 value);

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // int32 id = 4;
  void clear_id();
  static const int kIdFieldNumber = 4;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 chenghao = 5;
  void clear_chenghao();
  static const int kChenghaoFieldNumber = 5;
  ::google::protobuf::int32 chenghao() const;
  void set_chenghao(::google::protobuf::int32 value);

  // int32 bf = 6;
  void clear_bf();
  static const int kBfFieldNumber = 6;
  ::google::protobuf::int32 bf() const;
  void set_bf(::google::protobuf::int32 value);

  // int32 level = 8;
  void clear_level();
  static const int kLevelFieldNumber = 8;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // int32 vip = 9;
  void clear_vip();
  static const int kVipFieldNumber = 9;
  ::google::protobuf::int32 vip() const;
  void set_vip(::google::protobuf::int32 value);

  // int32 achieve = 10;
  void clear_achieve();
  static const int kAchieveFieldNumber = 10;
  ::google::protobuf::int32 achieve() const;
  void set_achieve(::google::protobuf::int32 value);

  // uint64 team_id = 11;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 11;
  ::google::protobuf::uint64 team_id() const;
  void set_team_id(::google::protobuf::uint64 value);

  // int32 time = 12;
  void clear_time();
  static const int kTimeFieldNumber = 12;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // int32 nalflag = 13;
  void clear_nalflag();
  static const int kNalflagFieldNumber = 13;
  ::google::protobuf::int32 nalflag() const;
  void set_nalflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.team.team_invite)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr guild_;
  ::google::protobuf::uint64 invite_id_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 chenghao_;
  ::google::protobuf::int32 bf_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 achieve_;
  ::google::protobuf::uint64 team_id_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 nalflag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class bingyuan_huihe : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.bingyuan_huihe) */ {
 public:
  bingyuan_huihe();
  virtual ~bingyuan_huihe();

  bingyuan_huihe(const bingyuan_huihe& from);

  inline bingyuan_huihe& operator=(const bingyuan_huihe& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  bingyuan_huihe(bingyuan_huihe&& from) noexcept
    : bingyuan_huihe() {
    *this = ::std::move(from);
  }

  inline bingyuan_huihe& operator=(bingyuan_huihe&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const bingyuan_huihe& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const bingyuan_huihe* internal_default_instance() {
    return reinterpret_cast<const bingyuan_huihe*>(
               &_bingyuan_huihe_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(bingyuan_huihe* other);
  friend void swap(bingyuan_huihe& a, bingyuan_huihe& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline bingyuan_huihe* New() const final {
    return CreateMaybeMessage<bingyuan_huihe>(NULL);
  }

  bingyuan_huihe* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<bingyuan_huihe>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const bingyuan_huihe& from);
  void MergeFrom(const bingyuan_huihe& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(bingyuan_huihe* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 team_ids = 1;
  int team_ids_size() const;
  void clear_team_ids();
  static const int kTeamIdsFieldNumber = 1;
  ::google::protobuf::uint64 team_ids(int index) const;
  void set_team_ids(int index, ::google::protobuf::uint64 value);
  void add_team_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      team_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_team_ids();

  // repeated uint64 team_guids = 2;
  int team_guids_size() const;
  void clear_team_guids();
  static const int kTeamGuidsFieldNumber = 2;
  ::google::protobuf::uint64 team_guids(int index) const;
  void set_team_guids(int index, ::google::protobuf::uint64 value);
  void add_team_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      team_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_team_guids();

  // repeated double max_hps = 3;
  int max_hps_size() const;
  void clear_max_hps();
  static const int kMaxHpsFieldNumber = 3;
  double max_hps(int index) const;
  void set_max_hps(int index, double value);
  void add_max_hps(double value);
  const ::google::protobuf::RepeatedField< double >&
      max_hps() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_max_hps();

  // repeated double hps = 4;
  int hps_size() const;
  void clear_hps();
  static const int kHpsFieldNumber = 4;
  double hps(int index) const;
  void set_hps(int index, double value);
  void add_hps(double value);
  const ::google::protobuf::RepeatedField< double >&
      hps() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_hps();

  // uint64 win = 5;
  void clear_win();
  static const int kWinFieldNumber = 5;
  ::google::protobuf::uint64 win() const;
  void set_win(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.team.bingyuan_huihe)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > team_ids_;
  mutable int _team_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > team_guids_;
  mutable int _team_guids_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > max_hps_;
  mutable int _max_hps_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > hps_;
  mutable int _hps_cached_byte_size_;
  ::google::protobuf::uint64 win_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class bingyuan_fight_text : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.bingyuan_fight_text) */ {
 public:
  bingyuan_fight_text();
  virtual ~bingyuan_fight_text();

  bingyuan_fight_text(const bingyuan_fight_text& from);

  inline bingyuan_fight_text& operator=(const bingyuan_fight_text& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  bingyuan_fight_text(bingyuan_fight_text&& from) noexcept
    : bingyuan_fight_text() {
    *this = ::std::move(from);
  }

  inline bingyuan_fight_text& operator=(bingyuan_fight_text&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const bingyuan_fight_text& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const bingyuan_fight_text* internal_default_instance() {
    return reinterpret_cast<const bingyuan_fight_text*>(
               &_bingyuan_fight_text_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(bingyuan_fight_text* other);
  friend void swap(bingyuan_fight_text& a, bingyuan_fight_text& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline bingyuan_fight_text* New() const final {
    return CreateMaybeMessage<bingyuan_fight_text>(NULL);
  }

  bingyuan_fight_text* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<bingyuan_fight_text>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const bingyuan_fight_text& from);
  void MergeFrom(const bingyuan_fight_text& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(bingyuan_fight_text* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.team.bingyuan_huihe huihes = 1;
  int huihes_size() const;
  void clear_huihes();
  static const int kHuihesFieldNumber = 1;
  ::protocol::team::bingyuan_huihe* mutable_huihes(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::team::bingyuan_huihe >*
      mutable_huihes();
  const ::protocol::team::bingyuan_huihe& huihes(int index) const;
  ::protocol::team::bingyuan_huihe* add_huihes();
  const ::google::protobuf::RepeatedPtrField< ::protocol::team::bingyuan_huihe >&
      huihes() const;

  // @@protoc_insertion_point(class_scope:protocol.team.bingyuan_fight_text)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::team::bingyuan_huihe > huihes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_enter_world : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.cmsg_enter_world) */ {
 public:
  cmsg_enter_world();
  virtual ~cmsg_enter_world();

  cmsg_enter_world(const cmsg_enter_world& from);

  inline cmsg_enter_world& operator=(const cmsg_enter_world& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_enter_world(cmsg_enter_world&& from) noexcept
    : cmsg_enter_world() {
    *this = ::std::move(from);
  }

  inline cmsg_enter_world& operator=(cmsg_enter_world&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_enter_world& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_enter_world* internal_default_instance() {
    return reinterpret_cast<const cmsg_enter_world*>(
               &_cmsg_enter_world_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(cmsg_enter_world* other);
  friend void swap(cmsg_enter_world& a, cmsg_enter_world& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_enter_world* New() const final {
    return CreateMaybeMessage<cmsg_enter_world>(NULL);
  }

  cmsg_enter_world* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_enter_world>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_enter_world& from);
  void MergeFrom(const cmsg_enter_world& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_enter_world* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sig = 2;
  void clear_sig();
  static const int kSigFieldNumber = 2;
  const ::std::string& sig() const;
  void set_sig(const ::std::string& value);
  #if LANG_CXX11
  void set_sig(::std::string&& value);
  #endif
  void set_sig(const char* value);
  void set_sig(const char* value, size_t size);
  ::std::string* mutable_sig();
  ::std::string* release_sig();
  void set_allocated_sig(::std::string* sig);

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // int32 type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.team.cmsg_enter_world)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sig_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_enter_world : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_enter_world) */ {
 public:
  smsg_enter_world();
  virtual ~smsg_enter_world();

  smsg_enter_world(const smsg_enter_world& from);

  inline smsg_enter_world& operator=(const smsg_enter_world& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_enter_world(smsg_enter_world&& from) noexcept
    : smsg_enter_world() {
    *this = ::std::move(from);
  }

  inline smsg_enter_world& operator=(smsg_enter_world&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_enter_world& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_enter_world* internal_default_instance() {
    return reinterpret_cast<const smsg_enter_world*>(
               &_smsg_enter_world_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(smsg_enter_world* other);
  friend void swap(smsg_enter_world& a, smsg_enter_world& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_enter_world* New() const final {
    return CreateMaybeMessage<smsg_enter_world>(NULL);
  }

  smsg_enter_world* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_enter_world>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_enter_world& from);
  void MergeFrom(const smsg_enter_world& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_enter_world* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.team.team_invite invites = 5;
  int invites_size() const;
  void clear_invites();
  static const int kInvitesFieldNumber = 5;
  ::protocol::team::team_invite* mutable_invites(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::team::team_invite >*
      mutable_invites();
  const ::protocol::team::team_invite& invites(int index) const;
  ::protocol::team::team_invite* add_invites();
  const ::google::protobuf::RepeatedPtrField< ::protocol::team::team_invite >&
      invites() const;

  // repeated string talks = 6;
  int talks_size() const;
  void clear_talks();
  static const int kTalksFieldNumber = 6;
  const ::std::string& talks(int index) const;
  ::std::string* mutable_talks(int index);
  void set_talks(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_talks(int index, ::std::string&& value);
  #endif
  void set_talks(int index, const char* value);
  void set_talks(int index, const char* value, size_t size);
  ::std::string* add_talks();
  void add_talks(const ::std::string& value);
  #if LANG_CXX11
  void add_talks(::std::string&& value);
  #endif
  void add_talks(const char* value);
  void add_talks(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& talks() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_talks();

  // int32 chenghao = 1;
  void clear_chenghao();
  static const int kChenghaoFieldNumber = 1;
  ::google::protobuf::int32 chenghao() const;
  void set_chenghao(::google::protobuf::int32 value);

  // int32 point = 2;
  void clear_point();
  static const int kPointFieldNumber = 2;
  ::google::protobuf::int32 point() const;
  void set_point(::google::protobuf::int32 value);

  // uint64 next_invite_time = 4;
  void clear_next_invite_time();
  static const int kNextInviteTimeFieldNumber = 4;
  ::google::protobuf::uint64 next_invite_time() const;
  void set_next_invite_time(::google::protobuf::uint64 value);

  // int32 rank = 3;
  void clear_rank();
  static const int kRankFieldNumber = 3;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // int32 srank = 7;
  void clear_srank();
  static const int kSrankFieldNumber = 7;
  ::google::protobuf::int32 srank() const;
  void set_srank(::google::protobuf::int32 value);

  // int32 sgrank = 8;
  void clear_sgrank();
  static const int kSgrankFieldNumber = 8;
  ::google::protobuf::int32 sgrank() const;
  void set_sgrank(::google::protobuf::int32 value);

  // int32 spoint = 9;
  void clear_spoint();
  static const int kSpointFieldNumber = 9;
  ::google::protobuf::int32 spoint() const;
  void set_spoint(::google::protobuf::int32 value);

  // int32 sduanwei = 10;
  void clear_sduanwei();
  static const int kSduanweiFieldNumber = 10;
  ::google::protobuf::int32 sduanwei() const;
  void set_sduanwei(::google::protobuf::int32 value);

  // bool sreset = 11;
  void clear_sreset();
  static const int kSresetFieldNumber = 11;
  bool sreset() const;
  void set_sreset(bool value);

  // uint64 ds_cdtime = 13;
  void clear_ds_cdtime();
  static const int kDsCdtimeFieldNumber = 13;
  ::google::protobuf::uint64 ds_cdtime() const;
  void set_ds_cdtime(::google::protobuf::uint64 value);

  // int32 soduanwei = 12;
  void clear_soduanwei();
  static const int kSoduanweiFieldNumber = 12;
  ::google::protobuf::int32 soduanwei() const;
  void set_soduanwei(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_enter_world)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::team::team_invite > invites_;
  ::google::protobuf::RepeatedPtrField< ::std::string> talks_;
  ::google::protobuf::int32 chenghao_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::uint64 next_invite_time_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 srank_;
  ::google::protobuf::int32 sgrank_;
  ::google::protobuf::int32 spoint_;
  ::google::protobuf::int32 sduanwei_;
  bool sreset_;
  ::google::protobuf::uint64 ds_cdtime_;
  ::google::protobuf::int32 soduanwei_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_team_create : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_team_create) */ {
 public:
  smsg_team_create();
  virtual ~smsg_team_create();

  smsg_team_create(const smsg_team_create& from);

  inline smsg_team_create& operator=(const smsg_team_create& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_team_create(smsg_team_create&& from) noexcept
    : smsg_team_create() {
    *this = ::std::move(from);
  }

  inline smsg_team_create& operator=(smsg_team_create&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_team_create& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_team_create* internal_default_instance() {
    return reinterpret_cast<const smsg_team_create*>(
               &_smsg_team_create_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(smsg_team_create* other);
  friend void swap(smsg_team_create& a, smsg_team_create& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_team_create* New() const final {
    return CreateMaybeMessage<smsg_team_create>(NULL);
  }

  smsg_team_create* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_team_create>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_team_create& from);
  void MergeFrom(const smsg_team_create& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_team_create* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.team.team team_info = 1;
  bool has_team_info() const;
  void clear_team_info();
  static const int kTeamInfoFieldNumber = 1;
  private:
  const ::protocol::team::team& _internal_team_info() const;
  public:
  const ::protocol::team::team& team_info() const;
  ::protocol::team::team* release_team_info();
  ::protocol::team::team* mutable_team_info();
  void set_allocated_team_info(::protocol::team::team* team_info);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_team_create)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::team::team* team_info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_team_enter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.cmsg_team_enter) */ {
 public:
  cmsg_team_enter();
  virtual ~cmsg_team_enter();

  cmsg_team_enter(const cmsg_team_enter& from);

  inline cmsg_team_enter& operator=(const cmsg_team_enter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_team_enter(cmsg_team_enter&& from) noexcept
    : cmsg_team_enter() {
    *this = ::std::move(from);
  }

  inline cmsg_team_enter& operator=(cmsg_team_enter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_team_enter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_team_enter* internal_default_instance() {
    return reinterpret_cast<const cmsg_team_enter*>(
               &_cmsg_team_enter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(cmsg_team_enter* other);
  friend void swap(cmsg_team_enter& a, cmsg_team_enter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_team_enter* New() const final {
    return CreateMaybeMessage<cmsg_team_enter>(NULL);
  }

  cmsg_team_enter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_team_enter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_team_enter& from);
  void MergeFrom(const cmsg_team_enter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_team_enter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 team_id = 1;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  ::google::protobuf::uint64 team_id() const;
  void set_team_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.team.cmsg_team_enter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 team_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_team_enter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_team_enter) */ {
 public:
  smsg_team_enter();
  virtual ~smsg_team_enter();

  smsg_team_enter(const smsg_team_enter& from);

  inline smsg_team_enter& operator=(const smsg_team_enter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_team_enter(smsg_team_enter&& from) noexcept
    : smsg_team_enter() {
    *this = ::std::move(from);
  }

  inline smsg_team_enter& operator=(smsg_team_enter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_team_enter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_team_enter* internal_default_instance() {
    return reinterpret_cast<const smsg_team_enter*>(
               &_smsg_team_enter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(smsg_team_enter* other);
  friend void swap(smsg_team_enter& a, smsg_team_enter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_team_enter* New() const final {
    return CreateMaybeMessage<smsg_team_enter>(NULL);
  }

  smsg_team_enter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_team_enter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_team_enter& from);
  void MergeFrom(const smsg_team_enter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_team_enter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.team.team_player member = 1;
  bool has_member() const;
  void clear_member();
  static const int kMemberFieldNumber = 1;
  private:
  const ::protocol::team::team_player& _internal_member() const;
  public:
  const ::protocol::team::team_player& member() const;
  ::protocol::team::team_player* release_member();
  ::protocol::team::team_player* mutable_member();
  void set_allocated_member(::protocol::team::team_player* member);

  // int32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // int32 jiacheng = 3;
  void clear_jiacheng();
  static const int kJiachengFieldNumber = 3;
  ::google::protobuf::int32 jiacheng() const;
  void set_jiacheng(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_team_enter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::team::team_player* member_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 jiacheng_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_team_leave : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_team_leave) */ {
 public:
  smsg_team_leave();
  virtual ~smsg_team_leave();

  smsg_team_leave(const smsg_team_leave& from);

  inline smsg_team_leave& operator=(const smsg_team_leave& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_team_leave(smsg_team_leave&& from) noexcept
    : smsg_team_leave() {
    *this = ::std::move(from);
  }

  inline smsg_team_leave& operator=(smsg_team_leave&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_team_leave& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_team_leave* internal_default_instance() {
    return reinterpret_cast<const smsg_team_leave*>(
               &_smsg_team_leave_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(smsg_team_leave* other);
  friend void swap(smsg_team_leave& a, smsg_team_leave& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_team_leave* New() const final {
    return CreateMaybeMessage<smsg_team_leave>(NULL);
  }

  smsg_team_leave* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_team_leave>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_team_leave& from);
  void MergeFrom(const smsg_team_leave& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_team_leave* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint64 leader = 2;
  void clear_leader();
  static const int kLeaderFieldNumber = 2;
  ::google::protobuf::uint64 leader() const;
  void set_leader(::google::protobuf::uint64 value);

  // int32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // int32 jiacheng = 4;
  void clear_jiacheng();
  static const int kJiachengFieldNumber = 4;
  ::google::protobuf::int32 jiacheng() const;
  void set_jiacheng(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_team_leave)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 leader_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 jiacheng_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_team_kick : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.cmsg_team_kick) */ {
 public:
  cmsg_team_kick();
  virtual ~cmsg_team_kick();

  cmsg_team_kick(const cmsg_team_kick& from);

  inline cmsg_team_kick& operator=(const cmsg_team_kick& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_team_kick(cmsg_team_kick&& from) noexcept
    : cmsg_team_kick() {
    *this = ::std::move(from);
  }

  inline cmsg_team_kick& operator=(cmsg_team_kick&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_team_kick& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_team_kick* internal_default_instance() {
    return reinterpret_cast<const cmsg_team_kick*>(
               &_cmsg_team_kick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(cmsg_team_kick* other);
  friend void swap(cmsg_team_kick& a, cmsg_team_kick& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_team_kick* New() const final {
    return CreateMaybeMessage<cmsg_team_kick>(NULL);
  }

  cmsg_team_kick* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_team_kick>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_team_kick& from);
  void MergeFrom(const cmsg_team_kick& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_team_kick* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.team.cmsg_team_kick)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_team_prepare : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_team_prepare) */ {
 public:
  smsg_team_prepare();
  virtual ~smsg_team_prepare();

  smsg_team_prepare(const smsg_team_prepare& from);

  inline smsg_team_prepare& operator=(const smsg_team_prepare& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_team_prepare(smsg_team_prepare&& from) noexcept
    : smsg_team_prepare() {
    *this = ::std::move(from);
  }

  inline smsg_team_prepare& operator=(smsg_team_prepare&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_team_prepare& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_team_prepare* internal_default_instance() {
    return reinterpret_cast<const smsg_team_prepare*>(
               &_smsg_team_prepare_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(smsg_team_prepare* other);
  friend void swap(smsg_team_prepare& a, smsg_team_prepare& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_team_prepare* New() const final {
    return CreateMaybeMessage<smsg_team_prepare>(NULL);
  }

  smsg_team_prepare* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_team_prepare>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_team_prepare& from);
  void MergeFrom(const smsg_team_prepare& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_team_prepare* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // bool prepare = 2;
  void clear_prepare();
  static const int kPrepareFieldNumber = 2;
  bool prepare() const;
  void set_prepare(bool value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_team_prepare)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  bool prepare_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_team_move : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.cmsg_team_move) */ {
 public:
  cmsg_team_move();
  virtual ~cmsg_team_move();

  cmsg_team_move(const cmsg_team_move& from);

  inline cmsg_team_move& operator=(const cmsg_team_move& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_team_move(cmsg_team_move&& from) noexcept
    : cmsg_team_move() {
    *this = ::std::move(from);
  }

  inline cmsg_team_move& operator=(cmsg_team_move&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_team_move& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_team_move* internal_default_instance() {
    return reinterpret_cast<const cmsg_team_move*>(
               &_cmsg_team_move_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(cmsg_team_move* other);
  friend void swap(cmsg_team_move& a, cmsg_team_move& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_team_move* New() const final {
    return CreateMaybeMessage<cmsg_team_move>(NULL);
  }

  cmsg_team_move* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_team_move>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_team_move& from);
  void MergeFrom(const cmsg_team_move& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_team_move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // int32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.team.cmsg_team_move)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_team_move : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_team_move) */ {
 public:
  smsg_team_move();
  virtual ~smsg_team_move();

  smsg_team_move(const smsg_team_move& from);

  inline smsg_team_move& operator=(const smsg_team_move& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_team_move(smsg_team_move&& from) noexcept
    : smsg_team_move() {
    *this = ::std::move(from);
  }

  inline smsg_team_move& operator=(smsg_team_move&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_team_move& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_team_move* internal_default_instance() {
    return reinterpret_cast<const smsg_team_move*>(
               &_smsg_team_move_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(smsg_team_move* other);
  friend void swap(smsg_team_move& a, smsg_team_move& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_team_move* New() const final {
    return CreateMaybeMessage<smsg_team_move>(NULL);
  }

  smsg_team_move* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_team_move>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_team_move& from);
  void MergeFrom(const smsg_team_move& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_team_move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // int32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_team_move)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_fight_team : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_fight_team) */ {
 public:
  smsg_fight_team();
  virtual ~smsg_fight_team();

  smsg_fight_team(const smsg_fight_team& from);

  inline smsg_fight_team& operator=(const smsg_fight_team& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_fight_team(smsg_fight_team&& from) noexcept
    : smsg_fight_team() {
    *this = ::std::move(from);
  }

  inline smsg_fight_team& operator=(smsg_fight_team&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_fight_team& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_fight_team* internal_default_instance() {
    return reinterpret_cast<const smsg_fight_team*>(
               &_smsg_fight_team_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(smsg_fight_team* other);
  friend void swap(smsg_fight_team& a, smsg_fight_team& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_fight_team* New() const final {
    return CreateMaybeMessage<smsg_fight_team>(NULL);
  }

  smsg_fight_team* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_fight_team>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_fight_team& from);
  void MergeFrom(const smsg_fight_team& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_fight_team* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.team.bingyuan_fight_text text = 3;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 3;
  private:
  const ::protocol::team::bingyuan_fight_text& _internal_text() const;
  public:
  const ::protocol::team::bingyuan_fight_text& text() const;
  ::protocol::team::bingyuan_fight_text* release_text();
  ::protocol::team::bingyuan_fight_text* mutable_text();
  void set_allocated_text(::protocol::team::bingyuan_fight_text* text);

  // .protocol.team.team oteam = 4;
  bool has_oteam() const;
  void clear_oteam();
  static const int kOteamFieldNumber = 4;
  private:
  const ::protocol::team::team& _internal_oteam() const;
  public:
  const ::protocol::team::team& oteam() const;
  ::protocol::team::team* release_oteam();
  ::protocol::team::team* mutable_oteam();
  void set_allocated_oteam(::protocol::team::team* oteam);

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // uint64 win = 2;
  void clear_win();
  static const int kWinFieldNumber = 2;
  ::google::protobuf::uint64 win() const;
  void set_win(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_fight_team)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::team::bingyuan_fight_text* text_;
  ::protocol::team::team* oteam_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 win_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_chat_team : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.cmsg_chat_team) */ {
 public:
  cmsg_chat_team();
  virtual ~cmsg_chat_team();

  cmsg_chat_team(const cmsg_chat_team& from);

  inline cmsg_chat_team& operator=(const cmsg_chat_team& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_chat_team(cmsg_chat_team&& from) noexcept
    : cmsg_chat_team() {
    *this = ::std::move(from);
  }

  inline cmsg_chat_team& operator=(cmsg_chat_team&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_chat_team& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_chat_team* internal_default_instance() {
    return reinterpret_cast<const cmsg_chat_team*>(
               &_cmsg_chat_team_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(cmsg_chat_team* other);
  friend void swap(cmsg_chat_team& a, cmsg_chat_team& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_chat_team* New() const final {
    return CreateMaybeMessage<cmsg_chat_team>(NULL);
  }

  cmsg_chat_team* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_chat_team>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_chat_team& from);
  void MergeFrom(const cmsg_chat_team& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_chat_team* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 3;
  void clear_text();
  static const int kTextFieldNumber = 3;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // string color = 4;
  void clear_color();
  static const int kColorFieldNumber = 4;
  const ::std::string& color() const;
  void set_color(const ::std::string& value);
  #if LANG_CXX11
  void set_color(::std::string&& value);
  #endif
  void set_color(const char* value);
  void set_color(const char* value, size_t size);
  ::std::string* mutable_color();
  ::std::string* release_color();
  void set_allocated_color(::std::string* color);

  // @@protoc_insertion_point(class_scope:protocol.team.cmsg_chat_team)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr color_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_chat_team : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_chat_team) */ {
 public:
  smsg_chat_team();
  virtual ~smsg_chat_team();

  smsg_chat_team(const smsg_chat_team& from);

  inline smsg_chat_team& operator=(const smsg_chat_team& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_chat_team(smsg_chat_team&& from) noexcept
    : smsg_chat_team() {
    *this = ::std::move(from);
  }

  inline smsg_chat_team& operator=(smsg_chat_team&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_chat_team& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_chat_team* internal_default_instance() {
    return reinterpret_cast<const smsg_chat_team*>(
               &_smsg_chat_team_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(smsg_chat_team* other);
  friend void swap(smsg_chat_team& a, smsg_chat_team& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_chat_team* New() const final {
    return CreateMaybeMessage<smsg_chat_team>(NULL);
  }

  smsg_chat_team* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_chat_team>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_chat_team& from);
  void MergeFrom(const smsg_chat_team& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_chat_team* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string player_name = 2;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // string text = 6;
  void clear_text();
  static const int kTextFieldNumber = 6;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // string color = 7;
  void clear_color();
  static const int kColorFieldNumber = 7;
  const ::std::string& color() const;
  void set_color(const ::std::string& value);
  #if LANG_CXX11
  void set_color(::std::string&& value);
  #endif
  void set_color(const char* value);
  void set_color(const char* value, size_t size);
  ::std::string* mutable_color();
  ::std::string* release_color();
  void set_allocated_color(::std::string* color);

  // uint64 player_guid = 1;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 1;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // uint32 player_template = 3;
  void clear_player_template();
  static const int kPlayerTemplateFieldNumber = 3;
  ::google::protobuf::uint32 player_template() const;
  void set_player_template(::google::protobuf::uint32 value);

  // int32 vip = 4;
  void clear_vip();
  static const int kVipFieldNumber = 4;
  ::google::protobuf::int32 vip() const;
  void set_vip(::google::protobuf::int32 value);

  // int32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // int32 player_nalflag = 8;
  void clear_player_nalflag();
  static const int kPlayerNalflagFieldNumber = 8;
  ::google::protobuf::int32 player_nalflag() const;
  void set_player_nalflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_chat_team)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr color_;
  ::google::protobuf::uint64 player_guid_;
  ::google::protobuf::uint32 player_template_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 player_nalflag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_player_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.cmsg_player_look) */ {
 public:
  cmsg_player_look();
  virtual ~cmsg_player_look();

  cmsg_player_look(const cmsg_player_look& from);

  inline cmsg_player_look& operator=(const cmsg_player_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_player_look(cmsg_player_look&& from) noexcept
    : cmsg_player_look() {
    *this = ::std::move(from);
  }

  inline cmsg_player_look& operator=(cmsg_player_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_player_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_player_look* internal_default_instance() {
    return reinterpret_cast<const cmsg_player_look*>(
               &_cmsg_player_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(cmsg_player_look* other);
  friend void swap(cmsg_player_look& a, cmsg_player_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_player_look* New() const final {
    return CreateMaybeMessage<cmsg_player_look>(NULL);
  }

  cmsg_player_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_player_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_player_look& from);
  void MergeFrom(const cmsg_player_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_player_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.team.cmsg_player_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_player_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_player_look) */ {
 public:
  smsg_player_look();
  virtual ~smsg_player_look();

  smsg_player_look(const smsg_player_look& from);

  inline smsg_player_look& operator=(const smsg_player_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_player_look(smsg_player_look&& from) noexcept
    : smsg_player_look() {
    *this = ::std::move(from);
  }

  inline smsg_player_look& operator=(smsg_player_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_player_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_player_look* internal_default_instance() {
    return reinterpret_cast<const smsg_player_look*>(
               &_smsg_player_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(smsg_player_look* other);
  friend void swap(smsg_player_look& a, smsg_player_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_player_look* New() const final {
    return CreateMaybeMessage<smsg_player_look>(NULL);
  }

  smsg_player_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_player_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_player_look& from);
  void MergeFrom(const smsg_player_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_player_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.role_t roles = 6;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 6;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // repeated .dhc.equip_t equips = 7;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 7;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 8;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 8;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated int32 duixings = 9;
  int duixings_size() const;
  void clear_duixings();
  static const int kDuixingsFieldNumber = 9;
  ::google::protobuf::int32 duixings(int index) const;
  void set_duixings(int index, ::google::protobuf::int32 value);
  void add_duixings(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      duixings() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_duixings();

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string guild = 10;
  void clear_guild();
  static const int kGuildFieldNumber = 10;
  const ::std::string& guild() const;
  void set_guild(const ::std::string& value);
  #if LANG_CXX11
  void set_guild(::std::string&& value);
  #endif
  void set_guild(const char* value);
  void set_guild(const char* value, size_t size);
  ::std::string* mutable_guild();
  ::std::string* release_guild();
  void set_allocated_guild(::std::string* guild);

  // uint32 template_id = 1;
  void clear_template_id();
  static const int kTemplateIdFieldNumber = 1;
  ::google::protobuf::uint32 template_id() const;
  void set_template_id(::google::protobuf::uint32 value);

  // int32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // int32 bf = 4;
  void clear_bf();
  static const int kBfFieldNumber = 4;
  ::google::protobuf::int32 bf() const;
  void set_bf(::google::protobuf::int32 value);

  // int32 vip = 5;
  void clear_vip();
  static const int kVipFieldNumber = 5;
  ::google::protobuf::int32 vip() const;
  void set_vip(::google::protobuf::int32 value);

  // int32 achieves = 11;
  void clear_achieves();
  static const int kAchievesFieldNumber = 11;
  ::google::protobuf::int32 achieves() const;
  void set_achieves(::google::protobuf::int32 value);

  // int32 nalflag = 12;
  void clear_nalflag();
  static const int kNalflagFieldNumber = 12;
  ::google::protobuf::int32 nalflag() const;
  void set_nalflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_player_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > duixings_;
  mutable int _duixings_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr guild_;
  ::google::protobuf::uint32 template_id_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 bf_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 achieves_;
  ::google::protobuf::int32 nalflag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_invite_add : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_invite_add) */ {
 public:
  smsg_invite_add();
  virtual ~smsg_invite_add();

  smsg_invite_add(const smsg_invite_add& from);

  inline smsg_invite_add& operator=(const smsg_invite_add& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_invite_add(smsg_invite_add&& from) noexcept
    : smsg_invite_add() {
    *this = ::std::move(from);
  }

  inline smsg_invite_add& operator=(smsg_invite_add&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_invite_add& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_invite_add* internal_default_instance() {
    return reinterpret_cast<const smsg_invite_add*>(
               &_smsg_invite_add_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(smsg_invite_add* other);
  friend void swap(smsg_invite_add& a, smsg_invite_add& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_invite_add* New() const final {
    return CreateMaybeMessage<smsg_invite_add>(NULL);
  }

  smsg_invite_add* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_invite_add>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_invite_add& from);
  void MergeFrom(const smsg_invite_add& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_invite_add* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.team.team_invite invite = 1;
  bool has_invite() const;
  void clear_invite();
  static const int kInviteFieldNumber = 1;
  private:
  const ::protocol::team::team_invite& _internal_invite() const;
  public:
  const ::protocol::team::team_invite& invite() const;
  ::protocol::team::team_invite* release_invite();
  ::protocol::team::team_invite* mutable_invite();
  void set_allocated_invite(::protocol::team::team_invite* invite);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_invite_add)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::team::team_invite* invite_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_invite_agree : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.cmsg_invite_agree) */ {
 public:
  cmsg_invite_agree();
  virtual ~cmsg_invite_agree();

  cmsg_invite_agree(const cmsg_invite_agree& from);

  inline cmsg_invite_agree& operator=(const cmsg_invite_agree& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_invite_agree(cmsg_invite_agree&& from) noexcept
    : cmsg_invite_agree() {
    *this = ::std::move(from);
  }

  inline cmsg_invite_agree& operator=(cmsg_invite_agree&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_invite_agree& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_invite_agree* internal_default_instance() {
    return reinterpret_cast<const cmsg_invite_agree*>(
               &_cmsg_invite_agree_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(cmsg_invite_agree* other);
  friend void swap(cmsg_invite_agree& a, cmsg_invite_agree& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_invite_agree* New() const final {
    return CreateMaybeMessage<cmsg_invite_agree>(NULL);
  }

  cmsg_invite_agree* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_invite_agree>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_invite_agree& from);
  void MergeFrom(const cmsg_invite_agree& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_invite_agree* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 invite_id = 2;
  void clear_invite_id();
  static const int kInviteIdFieldNumber = 2;
  ::google::protobuf::uint64 invite_id() const;
  void set_invite_id(::google::protobuf::uint64 value);

  // bool agree = 1;
  void clear_agree();
  static const int kAgreeFieldNumber = 1;
  bool agree() const;
  void set_agree(bool value);

  // @@protoc_insertion_point(class_scope:protocol.team.cmsg_invite_agree)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 invite_id_;
  bool agree_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_invite_remove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_invite_remove) */ {
 public:
  smsg_invite_remove();
  virtual ~smsg_invite_remove();

  smsg_invite_remove(const smsg_invite_remove& from);

  inline smsg_invite_remove& operator=(const smsg_invite_remove& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_invite_remove(smsg_invite_remove&& from) noexcept
    : smsg_invite_remove() {
    *this = ::std::move(from);
  }

  inline smsg_invite_remove& operator=(smsg_invite_remove&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_invite_remove& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_invite_remove* internal_default_instance() {
    return reinterpret_cast<const smsg_invite_remove*>(
               &_smsg_invite_remove_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(smsg_invite_remove* other);
  friend void swap(smsg_invite_remove& a, smsg_invite_remove& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_invite_remove* New() const final {
    return CreateMaybeMessage<smsg_invite_remove>(NULL);
  }

  smsg_invite_remove* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_invite_remove>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_invite_remove& from);
  void MergeFrom(const smsg_invite_remove& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_invite_remove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 invite_id = 1;
  void clear_invite_id();
  static const int kInviteIdFieldNumber = 1;
  ::google::protobuf::uint64 invite_id() const;
  void set_invite_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_invite_remove)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 invite_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_invite_remove_social : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_invite_remove_social) */ {
 public:
  smsg_invite_remove_social();
  virtual ~smsg_invite_remove_social();

  smsg_invite_remove_social(const smsg_invite_remove_social& from);

  inline smsg_invite_remove_social& operator=(const smsg_invite_remove_social& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_invite_remove_social(smsg_invite_remove_social&& from) noexcept
    : smsg_invite_remove_social() {
    *this = ::std::move(from);
  }

  inline smsg_invite_remove_social& operator=(smsg_invite_remove_social&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_invite_remove_social& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_invite_remove_social* internal_default_instance() {
    return reinterpret_cast<const smsg_invite_remove_social*>(
               &_smsg_invite_remove_social_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(smsg_invite_remove_social* other);
  friend void swap(smsg_invite_remove_social& a, smsg_invite_remove_social& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_invite_remove_social* New() const final {
    return CreateMaybeMessage<smsg_invite_remove_social>(NULL);
  }

  smsg_invite_remove_social* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_invite_remove_social>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_invite_remove_social& from);
  void MergeFrom(const smsg_invite_remove_social& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_invite_remove_social* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_invite_remove_social)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_invite_all : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_invite_all) */ {
 public:
  smsg_invite_all();
  virtual ~smsg_invite_all();

  smsg_invite_all(const smsg_invite_all& from);

  inline smsg_invite_all& operator=(const smsg_invite_all& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_invite_all(smsg_invite_all&& from) noexcept
    : smsg_invite_all() {
    *this = ::std::move(from);
  }

  inline smsg_invite_all& operator=(smsg_invite_all&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_invite_all& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_invite_all* internal_default_instance() {
    return reinterpret_cast<const smsg_invite_all*>(
               &_smsg_invite_all_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(smsg_invite_all* other);
  friend void swap(smsg_invite_all& a, smsg_invite_all& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_invite_all* New() const final {
    return CreateMaybeMessage<smsg_invite_all>(NULL);
  }

  smsg_invite_all* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_invite_all>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_invite_all& from);
  void MergeFrom(const smsg_invite_all& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_invite_all* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 next_time = 1;
  void clear_next_time();
  static const int kNextTimeFieldNumber = 1;
  ::google::protobuf::uint64 next_time() const;
  void set_next_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_invite_all)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 next_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_team_player_reward_change : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_team_player_reward_change) */ {
 public:
  smsg_team_player_reward_change();
  virtual ~smsg_team_player_reward_change();

  smsg_team_player_reward_change(const smsg_team_player_reward_change& from);

  inline smsg_team_player_reward_change& operator=(const smsg_team_player_reward_change& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_team_player_reward_change(smsg_team_player_reward_change&& from) noexcept
    : smsg_team_player_reward_change() {
    *this = ::std::move(from);
  }

  inline smsg_team_player_reward_change& operator=(smsg_team_player_reward_change&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_team_player_reward_change& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_team_player_reward_change* internal_default_instance() {
    return reinterpret_cast<const smsg_team_player_reward_change*>(
               &_smsg_team_player_reward_change_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(smsg_team_player_reward_change* other);
  friend void swap(smsg_team_player_reward_change& a, smsg_team_player_reward_change& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_team_player_reward_change* New() const final {
    return CreateMaybeMessage<smsg_team_player_reward_change>(NULL);
  }

  smsg_team_player_reward_change* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_team_player_reward_change>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_team_player_reward_change& from);
  void MergeFrom(const smsg_team_player_reward_change& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_team_player_reward_change* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // int32 num = 2;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // int32 point = 3;
  void clear_point();
  static const int kPointFieldNumber = 3;
  ::google::protobuf::int32 point() const;
  void set_point(::google::protobuf::int32 value);

  // int32 rank = 4;
  void clear_rank();
  static const int kRankFieldNumber = 4;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // int32 chenghao = 5;
  void clear_chenghao();
  static const int kChenghaoFieldNumber = 5;
  ::google::protobuf::int32 chenghao() const;
  void set_chenghao(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_team_player_reward_change)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 chenghao_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_change_team_stat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_change_team_stat) */ {
 public:
  smsg_change_team_stat();
  virtual ~smsg_change_team_stat();

  smsg_change_team_stat(const smsg_change_team_stat& from);

  inline smsg_change_team_stat& operator=(const smsg_change_team_stat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_change_team_stat(smsg_change_team_stat&& from) noexcept
    : smsg_change_team_stat() {
    *this = ::std::move(from);
  }

  inline smsg_change_team_stat& operator=(smsg_change_team_stat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_change_team_stat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_change_team_stat* internal_default_instance() {
    return reinterpret_cast<const smsg_change_team_stat*>(
               &_smsg_change_team_stat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(smsg_change_team_stat* other);
  friend void swap(smsg_change_team_stat& a, smsg_change_team_stat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_change_team_stat* New() const final {
    return CreateMaybeMessage<smsg_change_team_stat>(NULL);
  }

  smsg_change_team_stat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_change_team_stat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_change_team_stat& from);
  void MergeFrom(const smsg_change_team_stat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_change_team_stat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 stat = 1;
  void clear_stat();
  static const int kStatFieldNumber = 1;
  ::google::protobuf::int32 stat() const;
  void set_stat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_change_team_stat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 stat_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_hanhua : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.cmsg_hanhua) */ {
 public:
  cmsg_hanhua();
  virtual ~cmsg_hanhua();

  cmsg_hanhua(const cmsg_hanhua& from);

  inline cmsg_hanhua& operator=(const cmsg_hanhua& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_hanhua(cmsg_hanhua&& from) noexcept
    : cmsg_hanhua() {
    *this = ::std::move(from);
  }

  inline cmsg_hanhua& operator=(cmsg_hanhua&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_hanhua& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_hanhua* internal_default_instance() {
    return reinterpret_cast<const cmsg_hanhua*>(
               &_cmsg_hanhua_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(cmsg_hanhua* other);
  friend void swap(cmsg_hanhua& a, cmsg_hanhua& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_hanhua* New() const final {
    return CreateMaybeMessage<cmsg_hanhua>(NULL);
  }

  cmsg_hanhua* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_hanhua>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_hanhua& from);
  void MergeFrom(const cmsg_hanhua& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_hanhua* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.team.cmsg_hanhua)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_hanhua : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_hanhua) */ {
 public:
  smsg_hanhua();
  virtual ~smsg_hanhua();

  smsg_hanhua(const smsg_hanhua& from);

  inline smsg_hanhua& operator=(const smsg_hanhua& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_hanhua(smsg_hanhua&& from) noexcept
    : smsg_hanhua() {
    *this = ::std::move(from);
  }

  inline smsg_hanhua& operator=(smsg_hanhua&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_hanhua& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_hanhua* internal_default_instance() {
    return reinterpret_cast<const smsg_hanhua*>(
               &_smsg_hanhua_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(smsg_hanhua* other);
  friend void swap(smsg_hanhua& a, smsg_hanhua& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_hanhua* New() const final {
    return CreateMaybeMessage<smsg_hanhua>(NULL);
  }

  smsg_hanhua* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_hanhua>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_hanhua& from);
  void MergeFrom(const smsg_hanhua& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_hanhua* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string content = 1;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_hanhua)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint64 guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_change_hanhua : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.cmsg_change_hanhua) */ {
 public:
  cmsg_change_hanhua();
  virtual ~cmsg_change_hanhua();

  cmsg_change_hanhua(const cmsg_change_hanhua& from);

  inline cmsg_change_hanhua& operator=(const cmsg_change_hanhua& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_change_hanhua(cmsg_change_hanhua&& from) noexcept
    : cmsg_change_hanhua() {
    *this = ::std::move(from);
  }

  inline cmsg_change_hanhua& operator=(cmsg_change_hanhua&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_change_hanhua& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_change_hanhua* internal_default_instance() {
    return reinterpret_cast<const cmsg_change_hanhua*>(
               &_cmsg_change_hanhua_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(cmsg_change_hanhua* other);
  friend void swap(cmsg_change_hanhua& a, cmsg_change_hanhua& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_change_hanhua* New() const final {
    return CreateMaybeMessage<cmsg_change_hanhua>(NULL);
  }

  cmsg_change_hanhua* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_change_hanhua>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_change_hanhua& from);
  void MergeFrom(const cmsg_change_hanhua& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_change_hanhua* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 index = 1;
  int index_size() const;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index(int index) const;
  void set_index(int index, ::google::protobuf::int32 value);
  void add_index(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      index() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_index();

  // repeated string content = 2;
  int content_size() const;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content(int index) const;
  ::std::string* mutable_content(int index);
  void set_content(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_content(int index, ::std::string&& value);
  #endif
  void set_content(int index, const char* value);
  void set_content(int index, const char* value, size_t size);
  ::std::string* add_content();
  void add_content(const ::std::string& value);
  #if LANG_CXX11
  void add_content(::std::string&& value);
  #endif
  void add_content(const char* value);
  void add_content(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& content() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_content();

  // @@protoc_insertion_point(class_scope:protocol.team.cmsg_change_hanhua)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > index_;
  mutable int _index_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> content_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_fight_ds : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_fight_ds) */ {
 public:
  smsg_fight_ds();
  virtual ~smsg_fight_ds();

  smsg_fight_ds(const smsg_fight_ds& from);

  inline smsg_fight_ds& operator=(const smsg_fight_ds& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_fight_ds(smsg_fight_ds&& from) noexcept
    : smsg_fight_ds() {
    *this = ::std::move(from);
  }

  inline smsg_fight_ds& operator=(smsg_fight_ds&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_fight_ds& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_fight_ds* internal_default_instance() {
    return reinterpret_cast<const smsg_fight_ds*>(
               &_smsg_fight_ds_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(smsg_fight_ds* other);
  friend void swap(smsg_fight_ds& a, smsg_fight_ds& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_fight_ds* New() const final {
    return CreateMaybeMessage<smsg_fight_ds>(NULL);
  }

  smsg_fight_ds* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_fight_ds>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_fight_ds& from);
  void MergeFrom(const smsg_fight_ds& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_fight_ds* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes text = 3;
  void clear_text();
  static const int kTextFieldNumber = 3;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // int32 result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 duanwei = 5;
  void clear_duanwei();
  static const int kDuanweiFieldNumber = 5;
  ::google::protobuf::int32 duanwei() const;
  void set_duanwei(::google::protobuf::int32 value);

  // int32 bf = 6;
  void clear_bf();
  static const int kBfFieldNumber = 6;
  ::google::protobuf::int32 bf() const;
  void set_bf(::google::protobuf::int32 value);

  // int32 template_id = 7;
  void clear_template_id();
  static const int kTemplateIdFieldNumber = 7;
  ::google::protobuf::int32 template_id() const;
  void set_template_id(::google::protobuf::int32 value);

  // int32 vip = 8;
  void clear_vip();
  static const int kVipFieldNumber = 8;
  ::google::protobuf::int32 vip() const;
  void set_vip(::google::protobuf::int32 value);

  // int32 achieve = 9;
  void clear_achieve();
  static const int kAchieveFieldNumber = 9;
  ::google::protobuf::int32 achieve() const;
  void set_achieve(::google::protobuf::int32 value);

  // int32 guanghuan = 10;
  void clear_guanghuan();
  static const int kGuanghuanFieldNumber = 10;
  ::google::protobuf::int32 guanghuan() const;
  void set_guanghuan(::google::protobuf::int32 value);

  // int32 dress = 11;
  void clear_dress();
  static const int kDressFieldNumber = 11;
  ::google::protobuf::int32 dress() const;
  void set_dress(::google::protobuf::int32 value);

  // uint64 cd_time = 12;
  void clear_cd_time();
  static const int kCdTimeFieldNumber = 12;
  ::google::protobuf::uint64 cd_time() const;
  void set_cd_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_fight_ds)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 duanwei_;
  ::google::protobuf::int32 bf_;
  ::google::protobuf::int32 template_id_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 achieve_;
  ::google::protobuf::int32 guanghuan_;
  ::google::protobuf::int32 dress_;
  ::google::protobuf::uint64 cd_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_reset_ds : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.team.smsg_reset_ds) */ {
 public:
  smsg_reset_ds();
  virtual ~smsg_reset_ds();

  smsg_reset_ds(const smsg_reset_ds& from);

  inline smsg_reset_ds& operator=(const smsg_reset_ds& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_reset_ds(smsg_reset_ds&& from) noexcept
    : smsg_reset_ds() {
    *this = ::std::move(from);
  }

  inline smsg_reset_ds& operator=(smsg_reset_ds&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_reset_ds& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_reset_ds* internal_default_instance() {
    return reinterpret_cast<const smsg_reset_ds*>(
               &_smsg_reset_ds_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(smsg_reset_ds* other);
  friend void swap(smsg_reset_ds& a, smsg_reset_ds& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_reset_ds* New() const final {
    return CreateMaybeMessage<smsg_reset_ds>(NULL);
  }

  smsg_reset_ds* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_reset_ds>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_reset_ds& from);
  void MergeFrom(const smsg_reset_ds& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_reset_ds* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 oldduanwei = 1;
  void clear_oldduanwei();
  static const int kOldduanweiFieldNumber = 1;
  ::google::protobuf::int32 oldduanwei() const;
  void set_oldduanwei(::google::protobuf::int32 value);

  // int32 newduanwei = 2;
  void clear_newduanwei();
  static const int kNewduanweiFieldNumber = 2;
  ::google::protobuf::int32 newduanwei() const;
  void set_newduanwei(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.team.smsg_reset_ds)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 oldduanwei_;
  ::google::protobuf::int32 newduanwei_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fteam_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// team_player

// uint64 guid = 1;
inline void team_player::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 team_player::guid() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.guid)
  return guid_;
}
inline void team_player::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.guid)
}

// string name = 2;
inline void team_player::clear_name() {
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& team_player::name() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.name)
  return name_.GetNoArena();
}
inline void team_player::set_name(const ::std::string& value) {
  set_changed();
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.team.team_player.name)
}
#if LANG_CXX11
inline void team_player::set_name(::std::string&& value) {
  set_changed();
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.team.team_player.name)
}
#endif
inline void team_player::set_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.team.team_player.name)
}
inline void team_player::set_name(const char* value, size_t size) {
  set_changed();
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.team.team_player.name)
}
inline ::std::string* team_player::mutable_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.team.team_player.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* team_player::release_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.team.team_player.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void team_player::set_allocated_name(::std::string* name) {
  set_changed();
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.team.team_player.name)
}

// int32 id = 3;
inline void team_player::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 team_player::id() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.id)
  return id_;
}
inline void team_player::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.id)
}

// int32 bf = 4;
inline void team_player::clear_bf() {
  set_changed();
  bf_ = 0;
}
inline ::google::protobuf::int32 team_player::bf() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.bf)
  return bf_;
}
inline void team_player::set_bf(::google::protobuf::int32 value) {
  set_changed();
  
  bf_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.bf)
}

// int32 chenhao = 5;
inline void team_player::clear_chenhao() {
  set_changed();
  chenhao_ = 0;
}
inline ::google::protobuf::int32 team_player::chenhao() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.chenhao)
  return chenhao_;
}
inline void team_player::set_chenhao(::google::protobuf::int32 value) {
  set_changed();
  
  chenhao_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.chenhao)
}

// int32 level = 6;
inline void team_player::clear_level() {
  set_changed();
  level_ = 0;
}
inline ::google::protobuf::int32 team_player::level() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.level)
  return level_;
}
inline void team_player::set_level(::google::protobuf::int32 value) {
  set_changed();
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.level)
}

// bool leader = 7;
inline void team_player::clear_leader() {
  set_changed();
  leader_ = false;
}
inline bool team_player::leader() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.leader)
  return leader_;
}
inline void team_player::set_leader(bool value) {
  set_changed();
  
  leader_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.leader)
}

// bool prepare = 8;
inline void team_player::clear_prepare() {
  set_changed();
  prepare_ = false;
}
inline bool team_player::prepare() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.prepare)
  return prepare_;
}
inline void team_player::set_prepare(bool value) {
  set_changed();
  
  prepare_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.prepare)
}

// int32 reward_num = 9;
inline void team_player::clear_reward_num() {
  set_changed();
  reward_num_ = 0;
}
inline ::google::protobuf::int32 team_player::reward_num() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.reward_num)
  return reward_num_;
}
inline void team_player::set_reward_num(::google::protobuf::int32 value) {
  set_changed();
  
  reward_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.reward_num)
}

// bool is_npc = 10;
inline void team_player::clear_is_npc() {
  set_changed();
  is_npc_ = false;
}
inline bool team_player::is_npc() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.is_npc)
  return is_npc_;
}
inline void team_player::set_is_npc(bool value) {
  set_changed();
  
  is_npc_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.is_npc)
}

// int32 serverid = 11;
inline void team_player::clear_serverid() {
  set_changed();
  serverid_ = 0;
}
inline ::google::protobuf::int32 team_player::serverid() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.serverid)
  return serverid_;
}
inline void team_player::set_serverid(::google::protobuf::int32 value) {
  set_changed();
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.serverid)
}

// int32 kill = 12;
inline void team_player::clear_kill() {
  set_changed();
  kill_ = 0;
}
inline ::google::protobuf::int32 team_player::kill() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.kill)
  return kill_;
}
inline void team_player::set_kill(::google::protobuf::int32 value) {
  set_changed();
  
  kill_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.kill)
}

// int32 vip = 13;
inline void team_player::clear_vip() {
  set_changed();
  vip_ = 0;
}
inline ::google::protobuf::int32 team_player::vip() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.vip)
  return vip_;
}
inline void team_player::set_vip(::google::protobuf::int32 value) {
  set_changed();
  
  vip_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.vip)
}

// int32 achieve = 14;
inline void team_player::clear_achieve() {
  set_changed();
  achieve_ = 0;
}
inline ::google::protobuf::int32 team_player::achieve() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.achieve)
  return achieve_;
}
inline void team_player::set_achieve(::google::protobuf::int32 value) {
  set_changed();
  
  achieve_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.achieve)
}

// int32 guanghuan = 15;
inline void team_player::clear_guanghuan() {
  set_changed();
  guanghuan_ = 0;
}
inline ::google::protobuf::int32 team_player::guanghuan() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.guanghuan)
  return guanghuan_;
}
inline void team_player::set_guanghuan(::google::protobuf::int32 value) {
  set_changed();
  
  guanghuan_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.guanghuan)
}

// int32 dress = 16;
inline void team_player::clear_dress() {
  set_changed();
  dress_ = 0;
}
inline ::google::protobuf::int32 team_player::dress() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.dress)
  return dress_;
}
inline void team_player::set_dress(::google::protobuf::int32 value) {
  set_changed();
  
  dress_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.dress)
}

// repeated uint64 invites = 17;
inline int team_player::invites_size() const {
  return invites_.size();
}
inline void team_player::clear_invites() {
  set_changed();
  invites_.Clear();
}
inline ::google::protobuf::uint64 team_player::invites(int index) const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.invites)
  return invites_.Get(index);
}
inline void team_player::set_invites(int index, ::google::protobuf::uint64 value) {
  set_changed();
  invites_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.team.team_player.invites)
}
inline void team_player::add_invites(::google::protobuf::uint64 value) {
  set_changed();
  invites_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.team.team_player.invites)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
team_player::invites() const {
  // @@protoc_insertion_point(field_list:protocol.team.team_player.invites)
  return invites_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
team_player::mutable_invites() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.team.team_player.invites)
  return &invites_;
}

// uint64 bind_guid = 18;
inline void team_player::clear_bind_guid() {
  set_changed();
  bind_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 team_player::bind_guid() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.bind_guid)
  return bind_guid_;
}
inline void team_player::set_bind_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  bind_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.bind_guid)
}

// int32 nalflag = 19;
inline void team_player::clear_nalflag() {
  set_changed();
  nalflag_ = 0;
}
inline ::google::protobuf::int32 team_player::nalflag() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_player.nalflag)
  return nalflag_;
}
inline void team_player::set_nalflag(::google::protobuf::int32 value) {
  set_changed();
  
  nalflag_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_player.nalflag)
}

// -------------------------------------------------------------------

// team

// uint64 team_id = 1;
inline void team::clear_team_id() {
  set_changed();
  team_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 team::team_id() const {
  // @@protoc_insertion_point(field_get:protocol.team.team.team_id)
  return team_id_;
}
inline void team::set_team_id(::google::protobuf::uint64 value) {
  set_changed();
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team.team_id)
}

// repeated .protocol.team.team_player players = 2;
inline int team::players_size() const {
  return players_.size();
}
inline void team::clear_players() {
  players_.Clear();
}
inline ::protocol::team::team_player* team::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.team.team.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::team::team_player >*
team::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:protocol.team.team.players)
  return &players_;
}
inline const ::protocol::team::team_player& team::players(int index) const {
  // @@protoc_insertion_point(field_get:protocol.team.team.players)
  return players_.Get(index);
}
inline ::protocol::team::team_player* team::add_players() {
  // @@protoc_insertion_point(field_add:protocol.team.team.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::team::team_player >&
team::players() const {
  // @@protoc_insertion_point(field_list:protocol.team.team.players)
  return players_;
}

// bool open = 3;
inline void team::clear_open() {
  set_changed();
  open_ = false;
}
inline bool team::open() const {
  // @@protoc_insertion_point(field_get:protocol.team.team.open)
  return open_;
}
inline void team::set_open(bool value) {
  set_changed();
  
  open_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team.open)
}

// int32 level = 4;
inline void team::clear_level() {
  set_changed();
  level_ = 0;
}
inline ::google::protobuf::int32 team::level() const {
  // @@protoc_insertion_point(field_get:protocol.team.team.level)
  return level_;
}
inline void team::set_level(::google::protobuf::int32 value) {
  set_changed();
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team.level)
}

// int32 jiacheng = 5;
inline void team::clear_jiacheng() {
  set_changed();
  jiacheng_ = 0;
}
inline ::google::protobuf::int32 team::jiacheng() const {
  // @@protoc_insertion_point(field_get:protocol.team.team.jiacheng)
  return jiacheng_;
}
inline void team::set_jiacheng(::google::protobuf::int32 value) {
  set_changed();
  
  jiacheng_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team.jiacheng)
}

// bool result = 6;
inline void team::clear_result() {
  set_changed();
  result_ = false;
}
inline bool team::result() const {
  // @@protoc_insertion_point(field_get:protocol.team.team.result)
  return result_;
}
inline void team::set_result(bool value) {
  set_changed();
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team.result)
}

// int32 stat = 7;
inline void team::clear_stat() {
  set_changed();
  stat_ = 0;
}
inline ::google::protobuf::int32 team::stat() const {
  // @@protoc_insertion_point(field_get:protocol.team.team.stat)
  return stat_;
}
inline void team::set_stat(::google::protobuf::int32 value) {
  set_changed();
  
  stat_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team.stat)
}

// bool fight = 8;
inline void team::clear_fight() {
  set_changed();
  fight_ = false;
}
inline bool team::fight() const {
  // @@protoc_insertion_point(field_get:protocol.team.team.fight)
  return fight_;
}
inline void team::set_fight(bool value) {
  set_changed();
  
  fight_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team.fight)
}

// -------------------------------------------------------------------

// team_invite

// uint64 invite_id = 1;
inline void team_invite::clear_invite_id() {
  set_changed();
  invite_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 team_invite::invite_id() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_invite.invite_id)
  return invite_id_;
}
inline void team_invite::set_invite_id(::google::protobuf::uint64 value) {
  set_changed();
  
  invite_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_invite.invite_id)
}

// uint64 guid = 2;
inline void team_invite::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 team_invite::guid() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_invite.guid)
  return guid_;
}
inline void team_invite::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_invite.guid)
}

// string name = 3;
inline void team_invite::clear_name() {
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& team_invite::name() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_invite.name)
  return name_.GetNoArena();
}
inline void team_invite::set_name(const ::std::string& value) {
  set_changed();
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.team.team_invite.name)
}
#if LANG_CXX11
inline void team_invite::set_name(::std::string&& value) {
  set_changed();
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.team.team_invite.name)
}
#endif
inline void team_invite::set_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.team.team_invite.name)
}
inline void team_invite::set_name(const char* value, size_t size) {
  set_changed();
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.team.team_invite.name)
}
inline ::std::string* team_invite::mutable_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.team.team_invite.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* team_invite::release_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.team.team_invite.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void team_invite::set_allocated_name(::std::string* name) {
  set_changed();
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.team.team_invite.name)
}

// int32 id = 4;
inline void team_invite::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 team_invite::id() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_invite.id)
  return id_;
}
inline void team_invite::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_invite.id)
}

// int32 chenghao = 5;
inline void team_invite::clear_chenghao() {
  set_changed();
  chenghao_ = 0;
}
inline ::google::protobuf::int32 team_invite::chenghao() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_invite.chenghao)
  return chenghao_;
}
inline void team_invite::set_chenghao(::google::protobuf::int32 value) {
  set_changed();
  
  chenghao_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_invite.chenghao)
}

// int32 bf = 6;
inline void team_invite::clear_bf() {
  set_changed();
  bf_ = 0;
}
inline ::google::protobuf::int32 team_invite::bf() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_invite.bf)
  return bf_;
}
inline void team_invite::set_bf(::google::protobuf::int32 value) {
  set_changed();
  
  bf_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_invite.bf)
}

// string guild = 7;
inline void team_invite::clear_guild() {
  set_changed();
  guild_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& team_invite::guild() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_invite.guild)
  return guild_.GetNoArena();
}
inline void team_invite::set_guild(const ::std::string& value) {
  set_changed();
  
  guild_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.team.team_invite.guild)
}
#if LANG_CXX11
inline void team_invite::set_guild(::std::string&& value) {
  set_changed();
  
  guild_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.team.team_invite.guild)
}
#endif
inline void team_invite::set_guild(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  guild_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.team.team_invite.guild)
}
inline void team_invite::set_guild(const char* value, size_t size) {
  set_changed();
  
  guild_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.team.team_invite.guild)
}
inline ::std::string* team_invite::mutable_guild() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.team.team_invite.guild)
  return guild_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* team_invite::release_guild() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.team.team_invite.guild)
  
  return guild_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void team_invite::set_allocated_guild(::std::string* guild) {
  set_changed();
  if (guild != NULL) {
    
  } else {
    
  }
  guild_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guild);
  // @@protoc_insertion_point(field_set_allocated:protocol.team.team_invite.guild)
}

// int32 level = 8;
inline void team_invite::clear_level() {
  set_changed();
  level_ = 0;
}
inline ::google::protobuf::int32 team_invite::level() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_invite.level)
  return level_;
}
inline void team_invite::set_level(::google::protobuf::int32 value) {
  set_changed();
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_invite.level)
}

// int32 vip = 9;
inline void team_invite::clear_vip() {
  set_changed();
  vip_ = 0;
}
inline ::google::protobuf::int32 team_invite::vip() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_invite.vip)
  return vip_;
}
inline void team_invite::set_vip(::google::protobuf::int32 value) {
  set_changed();
  
  vip_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_invite.vip)
}

// int32 achieve = 10;
inline void team_invite::clear_achieve() {
  set_changed();
  achieve_ = 0;
}
inline ::google::protobuf::int32 team_invite::achieve() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_invite.achieve)
  return achieve_;
}
inline void team_invite::set_achieve(::google::protobuf::int32 value) {
  set_changed();
  
  achieve_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_invite.achieve)
}

// uint64 team_id = 11;
inline void team_invite::clear_team_id() {
  set_changed();
  team_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 team_invite::team_id() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_invite.team_id)
  return team_id_;
}
inline void team_invite::set_team_id(::google::protobuf::uint64 value) {
  set_changed();
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_invite.team_id)
}

// int32 time = 12;
inline void team_invite::clear_time() {
  set_changed();
  time_ = 0;
}
inline ::google::protobuf::int32 team_invite::time() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_invite.time)
  return time_;
}
inline void team_invite::set_time(::google::protobuf::int32 value) {
  set_changed();
  
  time_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_invite.time)
}

// int32 nalflag = 13;
inline void team_invite::clear_nalflag() {
  set_changed();
  nalflag_ = 0;
}
inline ::google::protobuf::int32 team_invite::nalflag() const {
  // @@protoc_insertion_point(field_get:protocol.team.team_invite.nalflag)
  return nalflag_;
}
inline void team_invite::set_nalflag(::google::protobuf::int32 value) {
  set_changed();
  
  nalflag_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.team_invite.nalflag)
}

// -------------------------------------------------------------------

// bingyuan_huihe

// repeated uint64 team_ids = 1;
inline int bingyuan_huihe::team_ids_size() const {
  return team_ids_.size();
}
inline void bingyuan_huihe::clear_team_ids() {
  set_changed();
  team_ids_.Clear();
}
inline ::google::protobuf::uint64 bingyuan_huihe::team_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.team.bingyuan_huihe.team_ids)
  return team_ids_.Get(index);
}
inline void bingyuan_huihe::set_team_ids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  team_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.team.bingyuan_huihe.team_ids)
}
inline void bingyuan_huihe::add_team_ids(::google::protobuf::uint64 value) {
  set_changed();
  team_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.team.bingyuan_huihe.team_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
bingyuan_huihe::team_ids() const {
  // @@protoc_insertion_point(field_list:protocol.team.bingyuan_huihe.team_ids)
  return team_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
bingyuan_huihe::mutable_team_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.team.bingyuan_huihe.team_ids)
  return &team_ids_;
}

// repeated uint64 team_guids = 2;
inline int bingyuan_huihe::team_guids_size() const {
  return team_guids_.size();
}
inline void bingyuan_huihe::clear_team_guids() {
  set_changed();
  team_guids_.Clear();
}
inline ::google::protobuf::uint64 bingyuan_huihe::team_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.team.bingyuan_huihe.team_guids)
  return team_guids_.Get(index);
}
inline void bingyuan_huihe::set_team_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  team_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.team.bingyuan_huihe.team_guids)
}
inline void bingyuan_huihe::add_team_guids(::google::protobuf::uint64 value) {
  set_changed();
  team_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.team.bingyuan_huihe.team_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
bingyuan_huihe::team_guids() const {
  // @@protoc_insertion_point(field_list:protocol.team.bingyuan_huihe.team_guids)
  return team_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
bingyuan_huihe::mutable_team_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.team.bingyuan_huihe.team_guids)
  return &team_guids_;
}

// repeated double max_hps = 3;
inline int bingyuan_huihe::max_hps_size() const {
  return max_hps_.size();
}
inline void bingyuan_huihe::clear_max_hps() {
  set_changed();
  max_hps_.Clear();
}
inline double bingyuan_huihe::max_hps(int index) const {
  // @@protoc_insertion_point(field_get:protocol.team.bingyuan_huihe.max_hps)
  return max_hps_.Get(index);
}
inline void bingyuan_huihe::set_max_hps(int index, double value) {
  set_changed();
  max_hps_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.team.bingyuan_huihe.max_hps)
}
inline void bingyuan_huihe::add_max_hps(double value) {
  set_changed();
  max_hps_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.team.bingyuan_huihe.max_hps)
}
inline const ::google::protobuf::RepeatedField< double >&
bingyuan_huihe::max_hps() const {
  // @@protoc_insertion_point(field_list:protocol.team.bingyuan_huihe.max_hps)
  return max_hps_;
}
inline ::google::protobuf::RepeatedField< double >*
bingyuan_huihe::mutable_max_hps() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.team.bingyuan_huihe.max_hps)
  return &max_hps_;
}

// repeated double hps = 4;
inline int bingyuan_huihe::hps_size() const {
  return hps_.size();
}
inline void bingyuan_huihe::clear_hps() {
  set_changed();
  hps_.Clear();
}
inline double bingyuan_huihe::hps(int index) const {
  // @@protoc_insertion_point(field_get:protocol.team.bingyuan_huihe.hps)
  return hps_.Get(index);
}
inline void bingyuan_huihe::set_hps(int index, double value) {
  set_changed();
  hps_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.team.bingyuan_huihe.hps)
}
inline void bingyuan_huihe::add_hps(double value) {
  set_changed();
  hps_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.team.bingyuan_huihe.hps)
}
inline const ::google::protobuf::RepeatedField< double >&
bingyuan_huihe::hps() const {
  // @@protoc_insertion_point(field_list:protocol.team.bingyuan_huihe.hps)
  return hps_;
}
inline ::google::protobuf::RepeatedField< double >*
bingyuan_huihe::mutable_hps() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.team.bingyuan_huihe.hps)
  return &hps_;
}

// uint64 win = 5;
inline void bingyuan_huihe::clear_win() {
  set_changed();
  win_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 bingyuan_huihe::win() const {
  // @@protoc_insertion_point(field_get:protocol.team.bingyuan_huihe.win)
  return win_;
}
inline void bingyuan_huihe::set_win(::google::protobuf::uint64 value) {
  set_changed();
  
  win_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.bingyuan_huihe.win)
}

// -------------------------------------------------------------------

// bingyuan_fight_text

// repeated .protocol.team.bingyuan_huihe huihes = 1;
inline int bingyuan_fight_text::huihes_size() const {
  return huihes_.size();
}
inline void bingyuan_fight_text::clear_huihes() {
  huihes_.Clear();
}
inline ::protocol::team::bingyuan_huihe* bingyuan_fight_text::mutable_huihes(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.team.bingyuan_fight_text.huihes)
  return huihes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::team::bingyuan_huihe >*
bingyuan_fight_text::mutable_huihes() {
  // @@protoc_insertion_point(field_mutable_list:protocol.team.bingyuan_fight_text.huihes)
  return &huihes_;
}
inline const ::protocol::team::bingyuan_huihe& bingyuan_fight_text::huihes(int index) const {
  // @@protoc_insertion_point(field_get:protocol.team.bingyuan_fight_text.huihes)
  return huihes_.Get(index);
}
inline ::protocol::team::bingyuan_huihe* bingyuan_fight_text::add_huihes() {
  // @@protoc_insertion_point(field_add:protocol.team.bingyuan_fight_text.huihes)
  return huihes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::team::bingyuan_huihe >&
bingyuan_fight_text::huihes() const {
  // @@protoc_insertion_point(field_list:protocol.team.bingyuan_fight_text.huihes)
  return huihes_;
}

// -------------------------------------------------------------------

// cmsg_enter_world

// uint64 guid = 1;
inline void cmsg_enter_world::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_enter_world::guid() const {
  // @@protoc_insertion_point(field_get:protocol.team.cmsg_enter_world.guid)
  return guid_;
}
inline void cmsg_enter_world::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_enter_world.guid)
}

// string sig = 2;
inline void cmsg_enter_world::clear_sig() {
  set_changed();
  sig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_enter_world::sig() const {
  // @@protoc_insertion_point(field_get:protocol.team.cmsg_enter_world.sig)
  return sig_.GetNoArena();
}
inline void cmsg_enter_world::set_sig(const ::std::string& value) {
  set_changed();
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_enter_world.sig)
}
#if LANG_CXX11
inline void cmsg_enter_world::set_sig(::std::string&& value) {
  set_changed();
  
  sig_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.team.cmsg_enter_world.sig)
}
#endif
inline void cmsg_enter_world::set_sig(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.team.cmsg_enter_world.sig)
}
inline void cmsg_enter_world::set_sig(const char* value, size_t size) {
  set_changed();
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.team.cmsg_enter_world.sig)
}
inline ::std::string* cmsg_enter_world::mutable_sig() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.team.cmsg_enter_world.sig)
  return sig_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_enter_world::release_sig() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.team.cmsg_enter_world.sig)
  
  return sig_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_enter_world::set_allocated_sig(::std::string* sig) {
  set_changed();
  if (sig != NULL) {
    
  } else {
    
  }
  sig_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sig);
  // @@protoc_insertion_point(field_set_allocated:protocol.team.cmsg_enter_world.sig)
}

// int32 type = 3;
inline void cmsg_enter_world::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 cmsg_enter_world::type() const {
  // @@protoc_insertion_point(field_get:protocol.team.cmsg_enter_world.type)
  return type_;
}
inline void cmsg_enter_world::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_enter_world.type)
}

// -------------------------------------------------------------------

// smsg_enter_world

// int32 chenghao = 1;
inline void smsg_enter_world::clear_chenghao() {
  set_changed();
  chenghao_ = 0;
}
inline ::google::protobuf::int32 smsg_enter_world::chenghao() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_enter_world.chenghao)
  return chenghao_;
}
inline void smsg_enter_world::set_chenghao(::google::protobuf::int32 value) {
  set_changed();
  
  chenghao_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_enter_world.chenghao)
}

// int32 point = 2;
inline void smsg_enter_world::clear_point() {
  set_changed();
  point_ = 0;
}
inline ::google::protobuf::int32 smsg_enter_world::point() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_enter_world.point)
  return point_;
}
inline void smsg_enter_world::set_point(::google::protobuf::int32 value) {
  set_changed();
  
  point_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_enter_world.point)
}

// int32 rank = 3;
inline void smsg_enter_world::clear_rank() {
  set_changed();
  rank_ = 0;
}
inline ::google::protobuf::int32 smsg_enter_world::rank() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_enter_world.rank)
  return rank_;
}
inline void smsg_enter_world::set_rank(::google::protobuf::int32 value) {
  set_changed();
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_enter_world.rank)
}

// uint64 next_invite_time = 4;
inline void smsg_enter_world::clear_next_invite_time() {
  set_changed();
  next_invite_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_enter_world::next_invite_time() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_enter_world.next_invite_time)
  return next_invite_time_;
}
inline void smsg_enter_world::set_next_invite_time(::google::protobuf::uint64 value) {
  set_changed();
  
  next_invite_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_enter_world.next_invite_time)
}

// repeated .protocol.team.team_invite invites = 5;
inline int smsg_enter_world::invites_size() const {
  return invites_.size();
}
inline void smsg_enter_world::clear_invites() {
  invites_.Clear();
}
inline ::protocol::team::team_invite* smsg_enter_world::mutable_invites(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_enter_world.invites)
  return invites_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::team::team_invite >*
smsg_enter_world::mutable_invites() {
  // @@protoc_insertion_point(field_mutable_list:protocol.team.smsg_enter_world.invites)
  return &invites_;
}
inline const ::protocol::team::team_invite& smsg_enter_world::invites(int index) const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_enter_world.invites)
  return invites_.Get(index);
}
inline ::protocol::team::team_invite* smsg_enter_world::add_invites() {
  // @@protoc_insertion_point(field_add:protocol.team.smsg_enter_world.invites)
  return invites_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::team::team_invite >&
smsg_enter_world::invites() const {
  // @@protoc_insertion_point(field_list:protocol.team.smsg_enter_world.invites)
  return invites_;
}

// repeated string talks = 6;
inline int smsg_enter_world::talks_size() const {
  return talks_.size();
}
inline void smsg_enter_world::clear_talks() {
  set_changed();
  talks_.Clear();
}
inline const ::std::string& smsg_enter_world::talks(int index) const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_enter_world.talks)
  return talks_.Get(index);
}
inline ::std::string* smsg_enter_world::mutable_talks(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_enter_world.talks)
  return talks_.Mutable(index);
}
inline void smsg_enter_world::set_talks(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.team.smsg_enter_world.talks)
  talks_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void smsg_enter_world::set_talks(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.team.smsg_enter_world.talks)
  talks_.Mutable(index)->assign(std::move(value));
}
#endif
inline void smsg_enter_world::set_talks(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  talks_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.team.smsg_enter_world.talks)
}
inline void smsg_enter_world::set_talks(int index, const char* value, size_t size) {
  set_changed();
  talks_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.team.smsg_enter_world.talks)
}
inline ::std::string* smsg_enter_world::add_talks() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.team.smsg_enter_world.talks)
  return talks_.Add();
}
inline void smsg_enter_world::add_talks(const ::std::string& value) {
  set_changed();
  talks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.team.smsg_enter_world.talks)
}
#if LANG_CXX11
inline void smsg_enter_world::add_talks(::std::string&& value) {
  set_changed();
  talks_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.team.smsg_enter_world.talks)
}
#endif
inline void smsg_enter_world::add_talks(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  talks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.team.smsg_enter_world.talks)
}
inline void smsg_enter_world::add_talks(const char* value, size_t size) {
  set_changed();
  talks_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.team.smsg_enter_world.talks)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
smsg_enter_world::talks() const {
  // @@protoc_insertion_point(field_list:protocol.team.smsg_enter_world.talks)
  return talks_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
smsg_enter_world::mutable_talks() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.team.smsg_enter_world.talks)
  return &talks_;
}

// int32 srank = 7;
inline void smsg_enter_world::clear_srank() {
  set_changed();
  srank_ = 0;
}
inline ::google::protobuf::int32 smsg_enter_world::srank() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_enter_world.srank)
  return srank_;
}
inline void smsg_enter_world::set_srank(::google::protobuf::int32 value) {
  set_changed();
  
  srank_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_enter_world.srank)
}

// int32 sgrank = 8;
inline void smsg_enter_world::clear_sgrank() {
  set_changed();
  sgrank_ = 0;
}
inline ::google::protobuf::int32 smsg_enter_world::sgrank() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_enter_world.sgrank)
  return sgrank_;
}
inline void smsg_enter_world::set_sgrank(::google::protobuf::int32 value) {
  set_changed();
  
  sgrank_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_enter_world.sgrank)
}

// int32 spoint = 9;
inline void smsg_enter_world::clear_spoint() {
  set_changed();
  spoint_ = 0;
}
inline ::google::protobuf::int32 smsg_enter_world::spoint() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_enter_world.spoint)
  return spoint_;
}
inline void smsg_enter_world::set_spoint(::google::protobuf::int32 value) {
  set_changed();
  
  spoint_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_enter_world.spoint)
}

// int32 sduanwei = 10;
inline void smsg_enter_world::clear_sduanwei() {
  set_changed();
  sduanwei_ = 0;
}
inline ::google::protobuf::int32 smsg_enter_world::sduanwei() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_enter_world.sduanwei)
  return sduanwei_;
}
inline void smsg_enter_world::set_sduanwei(::google::protobuf::int32 value) {
  set_changed();
  
  sduanwei_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_enter_world.sduanwei)
}

// bool sreset = 11;
inline void smsg_enter_world::clear_sreset() {
  set_changed();
  sreset_ = false;
}
inline bool smsg_enter_world::sreset() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_enter_world.sreset)
  return sreset_;
}
inline void smsg_enter_world::set_sreset(bool value) {
  set_changed();
  
  sreset_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_enter_world.sreset)
}

// int32 soduanwei = 12;
inline void smsg_enter_world::clear_soduanwei() {
  set_changed();
  soduanwei_ = 0;
}
inline ::google::protobuf::int32 smsg_enter_world::soduanwei() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_enter_world.soduanwei)
  return soduanwei_;
}
inline void smsg_enter_world::set_soduanwei(::google::protobuf::int32 value) {
  set_changed();
  
  soduanwei_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_enter_world.soduanwei)
}

// uint64 ds_cdtime = 13;
inline void smsg_enter_world::clear_ds_cdtime() {
  set_changed();
  ds_cdtime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_enter_world::ds_cdtime() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_enter_world.ds_cdtime)
  return ds_cdtime_;
}
inline void smsg_enter_world::set_ds_cdtime(::google::protobuf::uint64 value) {
  set_changed();
  
  ds_cdtime_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_enter_world.ds_cdtime)
}

// -------------------------------------------------------------------

// smsg_team_create

// .protocol.team.team team_info = 1;
inline bool smsg_team_create::has_team_info() const {
  return this != internal_default_instance() && team_info_ != NULL;
}
inline void smsg_team_create::clear_team_info() {
  if (GetArenaNoVirtual() == NULL && team_info_ != NULL) {
    delete team_info_;
  }
  team_info_ = NULL;
}
inline const ::protocol::team::team& smsg_team_create::_internal_team_info() const {
  return *team_info_;
}
inline const ::protocol::team::team& smsg_team_create::team_info() const {
  const ::protocol::team::team* p = team_info_;
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_create.team_info)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::team::team*>(
      &::protocol::team::_team_default_instance_);
}
inline ::protocol::team::team* smsg_team_create::release_team_info() {
  // @@protoc_insertion_point(field_release:protocol.team.smsg_team_create.team_info)
  
  ::protocol::team::team* temp = team_info_;
  team_info_ = NULL;
  return temp;
}
inline ::protocol::team::team* smsg_team_create::mutable_team_info() {
  
  if (team_info_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::team::team>(GetArenaNoVirtual());
    team_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_team_create.team_info)
  return team_info_;
}
inline void smsg_team_create::set_allocated_team_info(::protocol::team::team* team_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete team_info_;
  }
  if (team_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      team_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, team_info, submessage_arena);
    }
    
  } else {
    
  }
  team_info_ = team_info;
  // @@protoc_insertion_point(field_set_allocated:protocol.team.smsg_team_create.team_info)
}

// -------------------------------------------------------------------

// cmsg_team_enter

// uint64 team_id = 1;
inline void cmsg_team_enter::clear_team_id() {
  set_changed();
  team_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_team_enter::team_id() const {
  // @@protoc_insertion_point(field_get:protocol.team.cmsg_team_enter.team_id)
  return team_id_;
}
inline void cmsg_team_enter::set_team_id(::google::protobuf::uint64 value) {
  set_changed();
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_team_enter.team_id)
}

// -------------------------------------------------------------------

// smsg_team_enter

// .protocol.team.team_player member = 1;
inline bool smsg_team_enter::has_member() const {
  return this != internal_default_instance() && member_ != NULL;
}
inline void smsg_team_enter::clear_member() {
  if (GetArenaNoVirtual() == NULL && member_ != NULL) {
    delete member_;
  }
  member_ = NULL;
}
inline const ::protocol::team::team_player& smsg_team_enter::_internal_member() const {
  return *member_;
}
inline const ::protocol::team::team_player& smsg_team_enter::member() const {
  const ::protocol::team::team_player* p = member_;
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_enter.member)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::team::team_player*>(
      &::protocol::team::_team_player_default_instance_);
}
inline ::protocol::team::team_player* smsg_team_enter::release_member() {
  // @@protoc_insertion_point(field_release:protocol.team.smsg_team_enter.member)
  
  ::protocol::team::team_player* temp = member_;
  member_ = NULL;
  return temp;
}
inline ::protocol::team::team_player* smsg_team_enter::mutable_member() {
  
  if (member_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::team::team_player>(GetArenaNoVirtual());
    member_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_team_enter.member)
  return member_;
}
inline void smsg_team_enter::set_allocated_member(::protocol::team::team_player* member) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete member_;
  }
  if (member) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      member = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, member, submessage_arena);
    }
    
  } else {
    
  }
  member_ = member;
  // @@protoc_insertion_point(field_set_allocated:protocol.team.smsg_team_enter.member)
}

// int32 level = 2;
inline void smsg_team_enter::clear_level() {
  set_changed();
  level_ = 0;
}
inline ::google::protobuf::int32 smsg_team_enter::level() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_enter.level)
  return level_;
}
inline void smsg_team_enter::set_level(::google::protobuf::int32 value) {
  set_changed();
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_team_enter.level)
}

// int32 jiacheng = 3;
inline void smsg_team_enter::clear_jiacheng() {
  set_changed();
  jiacheng_ = 0;
}
inline ::google::protobuf::int32 smsg_team_enter::jiacheng() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_enter.jiacheng)
  return jiacheng_;
}
inline void smsg_team_enter::set_jiacheng(::google::protobuf::int32 value) {
  set_changed();
  
  jiacheng_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_team_enter.jiacheng)
}

// -------------------------------------------------------------------

// smsg_team_leave

// uint64 guid = 1;
inline void smsg_team_leave::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_team_leave::guid() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_leave.guid)
  return guid_;
}
inline void smsg_team_leave::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_team_leave.guid)
}

// uint64 leader = 2;
inline void smsg_team_leave::clear_leader() {
  set_changed();
  leader_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_team_leave::leader() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_leave.leader)
  return leader_;
}
inline void smsg_team_leave::set_leader(::google::protobuf::uint64 value) {
  set_changed();
  
  leader_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_team_leave.leader)
}

// int32 level = 3;
inline void smsg_team_leave::clear_level() {
  set_changed();
  level_ = 0;
}
inline ::google::protobuf::int32 smsg_team_leave::level() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_leave.level)
  return level_;
}
inline void smsg_team_leave::set_level(::google::protobuf::int32 value) {
  set_changed();
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_team_leave.level)
}

// int32 jiacheng = 4;
inline void smsg_team_leave::clear_jiacheng() {
  set_changed();
  jiacheng_ = 0;
}
inline ::google::protobuf::int32 smsg_team_leave::jiacheng() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_leave.jiacheng)
  return jiacheng_;
}
inline void smsg_team_leave::set_jiacheng(::google::protobuf::int32 value) {
  set_changed();
  
  jiacheng_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_team_leave.jiacheng)
}

// -------------------------------------------------------------------

// cmsg_team_kick

// uint64 guid = 1;
inline void cmsg_team_kick::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_team_kick::guid() const {
  // @@protoc_insertion_point(field_get:protocol.team.cmsg_team_kick.guid)
  return guid_;
}
inline void cmsg_team_kick::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_team_kick.guid)
}

// -------------------------------------------------------------------

// smsg_team_prepare

// uint64 guid = 1;
inline void smsg_team_prepare::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_team_prepare::guid() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_prepare.guid)
  return guid_;
}
inline void smsg_team_prepare::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_team_prepare.guid)
}

// bool prepare = 2;
inline void smsg_team_prepare::clear_prepare() {
  set_changed();
  prepare_ = false;
}
inline bool smsg_team_prepare::prepare() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_prepare.prepare)
  return prepare_;
}
inline void smsg_team_prepare::set_prepare(bool value) {
  set_changed();
  
  prepare_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_team_prepare.prepare)
}

// -------------------------------------------------------------------

// cmsg_team_move

// uint64 guid = 1;
inline void cmsg_team_move::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_team_move::guid() const {
  // @@protoc_insertion_point(field_get:protocol.team.cmsg_team_move.guid)
  return guid_;
}
inline void cmsg_team_move::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_team_move.guid)
}

// int32 index = 2;
inline void cmsg_team_move::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 cmsg_team_move::index() const {
  // @@protoc_insertion_point(field_get:protocol.team.cmsg_team_move.index)
  return index_;
}
inline void cmsg_team_move::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_team_move.index)
}

// -------------------------------------------------------------------

// smsg_team_move

// uint64 guid = 1;
inline void smsg_team_move::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_team_move::guid() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_move.guid)
  return guid_;
}
inline void smsg_team_move::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_team_move.guid)
}

// int32 index = 2;
inline void smsg_team_move::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 smsg_team_move::index() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_move.index)
  return index_;
}
inline void smsg_team_move::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_team_move.index)
}

// -------------------------------------------------------------------

// smsg_fight_team

// uint64 id = 1;
inline void smsg_fight_team::clear_id() {
  set_changed();
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_fight_team::id() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_team.id)
  return id_;
}
inline void smsg_fight_team::set_id(::google::protobuf::uint64 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_fight_team.id)
}

// uint64 win = 2;
inline void smsg_fight_team::clear_win() {
  set_changed();
  win_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_fight_team::win() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_team.win)
  return win_;
}
inline void smsg_fight_team::set_win(::google::protobuf::uint64 value) {
  set_changed();
  
  win_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_fight_team.win)
}

// .protocol.team.bingyuan_fight_text text = 3;
inline bool smsg_fight_team::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline void smsg_fight_team::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
inline const ::protocol::team::bingyuan_fight_text& smsg_fight_team::_internal_text() const {
  return *text_;
}
inline const ::protocol::team::bingyuan_fight_text& smsg_fight_team::text() const {
  const ::protocol::team::bingyuan_fight_text* p = text_;
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_team.text)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::team::bingyuan_fight_text*>(
      &::protocol::team::_bingyuan_fight_text_default_instance_);
}
inline ::protocol::team::bingyuan_fight_text* smsg_fight_team::release_text() {
  // @@protoc_insertion_point(field_release:protocol.team.smsg_fight_team.text)
  
  ::protocol::team::bingyuan_fight_text* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::protocol::team::bingyuan_fight_text* smsg_fight_team::mutable_text() {
  
  if (text_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::team::bingyuan_fight_text>(GetArenaNoVirtual());
    text_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_fight_team.text)
  return text_;
}
inline void smsg_fight_team::set_allocated_text(::protocol::team::bingyuan_fight_text* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete text_;
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:protocol.team.smsg_fight_team.text)
}

// .protocol.team.team oteam = 4;
inline bool smsg_fight_team::has_oteam() const {
  return this != internal_default_instance() && oteam_ != NULL;
}
inline void smsg_fight_team::clear_oteam() {
  if (GetArenaNoVirtual() == NULL && oteam_ != NULL) {
    delete oteam_;
  }
  oteam_ = NULL;
}
inline const ::protocol::team::team& smsg_fight_team::_internal_oteam() const {
  return *oteam_;
}
inline const ::protocol::team::team& smsg_fight_team::oteam() const {
  const ::protocol::team::team* p = oteam_;
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_team.oteam)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::team::team*>(
      &::protocol::team::_team_default_instance_);
}
inline ::protocol::team::team* smsg_fight_team::release_oteam() {
  // @@protoc_insertion_point(field_release:protocol.team.smsg_fight_team.oteam)
  
  ::protocol::team::team* temp = oteam_;
  oteam_ = NULL;
  return temp;
}
inline ::protocol::team::team* smsg_fight_team::mutable_oteam() {
  
  if (oteam_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::team::team>(GetArenaNoVirtual());
    oteam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_fight_team.oteam)
  return oteam_;
}
inline void smsg_fight_team::set_allocated_oteam(::protocol::team::team* oteam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete oteam_;
  }
  if (oteam) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      oteam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, oteam, submessage_arena);
    }
    
  } else {
    
  }
  oteam_ = oteam;
  // @@protoc_insertion_point(field_set_allocated:protocol.team.smsg_fight_team.oteam)
}

// -------------------------------------------------------------------

// cmsg_chat_team

// string text = 3;
inline void cmsg_chat_team::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_chat_team::text() const {
  // @@protoc_insertion_point(field_get:protocol.team.cmsg_chat_team.text)
  return text_.GetNoArena();
}
inline void cmsg_chat_team::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_chat_team.text)
}
#if LANG_CXX11
inline void cmsg_chat_team::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.team.cmsg_chat_team.text)
}
#endif
inline void cmsg_chat_team::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.team.cmsg_chat_team.text)
}
inline void cmsg_chat_team::set_text(const char* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.team.cmsg_chat_team.text)
}
inline ::std::string* cmsg_chat_team::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.team.cmsg_chat_team.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_chat_team::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.team.cmsg_chat_team.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_chat_team::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.team.cmsg_chat_team.text)
}

// string color = 4;
inline void cmsg_chat_team::clear_color() {
  set_changed();
  color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_chat_team::color() const {
  // @@protoc_insertion_point(field_get:protocol.team.cmsg_chat_team.color)
  return color_.GetNoArena();
}
inline void cmsg_chat_team::set_color(const ::std::string& value) {
  set_changed();
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_chat_team.color)
}
#if LANG_CXX11
inline void cmsg_chat_team::set_color(::std::string&& value) {
  set_changed();
  
  color_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.team.cmsg_chat_team.color)
}
#endif
inline void cmsg_chat_team::set_color(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.team.cmsg_chat_team.color)
}
inline void cmsg_chat_team::set_color(const char* value, size_t size) {
  set_changed();
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.team.cmsg_chat_team.color)
}
inline ::std::string* cmsg_chat_team::mutable_color() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.team.cmsg_chat_team.color)
  return color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_chat_team::release_color() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.team.cmsg_chat_team.color)
  
  return color_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_chat_team::set_allocated_color(::std::string* color) {
  set_changed();
  if (color != NULL) {
    
  } else {
    
  }
  color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color);
  // @@protoc_insertion_point(field_set_allocated:protocol.team.cmsg_chat_team.color)
}

// -------------------------------------------------------------------

// smsg_chat_team

// uint64 player_guid = 1;
inline void smsg_chat_team::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_chat_team::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_chat_team.player_guid)
  return player_guid_;
}
inline void smsg_chat_team::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_chat_team.player_guid)
}

// string player_name = 2;
inline void smsg_chat_team::clear_player_name() {
  set_changed();
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_chat_team::player_name() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_chat_team.player_name)
  return player_name_.GetNoArena();
}
inline void smsg_chat_team::set_player_name(const ::std::string& value) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.team.smsg_chat_team.player_name)
}
#if LANG_CXX11
inline void smsg_chat_team::set_player_name(::std::string&& value) {
  set_changed();
  
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.team.smsg_chat_team.player_name)
}
#endif
inline void smsg_chat_team::set_player_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.team.smsg_chat_team.player_name)
}
inline void smsg_chat_team::set_player_name(const char* value, size_t size) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.team.smsg_chat_team.player_name)
}
inline ::std::string* smsg_chat_team::mutable_player_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_chat_team.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_chat_team::release_player_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.team.smsg_chat_team.player_name)
  
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_chat_team::set_allocated_player_name(::std::string* player_name) {
  set_changed();
  if (player_name != NULL) {
    
  } else {
    
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.team.smsg_chat_team.player_name)
}

// uint32 player_template = 3;
inline void smsg_chat_team::clear_player_template() {
  set_changed();
  player_template_ = 0u;
}
inline ::google::protobuf::uint32 smsg_chat_team::player_template() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_chat_team.player_template)
  return player_template_;
}
inline void smsg_chat_team::set_player_template(::google::protobuf::uint32 value) {
  set_changed();
  
  player_template_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_chat_team.player_template)
}

// int32 vip = 4;
inline void smsg_chat_team::clear_vip() {
  set_changed();
  vip_ = 0;
}
inline ::google::protobuf::int32 smsg_chat_team::vip() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_chat_team.vip)
  return vip_;
}
inline void smsg_chat_team::set_vip(::google::protobuf::int32 value) {
  set_changed();
  
  vip_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_chat_team.vip)
}

// int32 level = 5;
inline void smsg_chat_team::clear_level() {
  set_changed();
  level_ = 0;
}
inline ::google::protobuf::int32 smsg_chat_team::level() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_chat_team.level)
  return level_;
}
inline void smsg_chat_team::set_level(::google::protobuf::int32 value) {
  set_changed();
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_chat_team.level)
}

// string text = 6;
inline void smsg_chat_team::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_chat_team::text() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_chat_team.text)
  return text_.GetNoArena();
}
inline void smsg_chat_team::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.team.smsg_chat_team.text)
}
#if LANG_CXX11
inline void smsg_chat_team::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.team.smsg_chat_team.text)
}
#endif
inline void smsg_chat_team::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.team.smsg_chat_team.text)
}
inline void smsg_chat_team::set_text(const char* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.team.smsg_chat_team.text)
}
inline ::std::string* smsg_chat_team::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_chat_team.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_chat_team::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.team.smsg_chat_team.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_chat_team::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.team.smsg_chat_team.text)
}

// string color = 7;
inline void smsg_chat_team::clear_color() {
  set_changed();
  color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_chat_team::color() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_chat_team.color)
  return color_.GetNoArena();
}
inline void smsg_chat_team::set_color(const ::std::string& value) {
  set_changed();
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.team.smsg_chat_team.color)
}
#if LANG_CXX11
inline void smsg_chat_team::set_color(::std::string&& value) {
  set_changed();
  
  color_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.team.smsg_chat_team.color)
}
#endif
inline void smsg_chat_team::set_color(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.team.smsg_chat_team.color)
}
inline void smsg_chat_team::set_color(const char* value, size_t size) {
  set_changed();
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.team.smsg_chat_team.color)
}
inline ::std::string* smsg_chat_team::mutable_color() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_chat_team.color)
  return color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_chat_team::release_color() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.team.smsg_chat_team.color)
  
  return color_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_chat_team::set_allocated_color(::std::string* color) {
  set_changed();
  if (color != NULL) {
    
  } else {
    
  }
  color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color);
  // @@protoc_insertion_point(field_set_allocated:protocol.team.smsg_chat_team.color)
}

// int32 player_nalflag = 8;
inline void smsg_chat_team::clear_player_nalflag() {
  set_changed();
  player_nalflag_ = 0;
}
inline ::google::protobuf::int32 smsg_chat_team::player_nalflag() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_chat_team.player_nalflag)
  return player_nalflag_;
}
inline void smsg_chat_team::set_player_nalflag(::google::protobuf::int32 value) {
  set_changed();
  
  player_nalflag_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_chat_team.player_nalflag)
}

// -------------------------------------------------------------------

// cmsg_player_look

// uint64 guid = 1;
inline void cmsg_player_look::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_player_look::guid() const {
  // @@protoc_insertion_point(field_get:protocol.team.cmsg_player_look.guid)
  return guid_;
}
inline void cmsg_player_look::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_player_look.guid)
}

// -------------------------------------------------------------------

// smsg_player_look

// uint32 template_id = 1;
inline void smsg_player_look::clear_template_id() {
  set_changed();
  template_id_ = 0u;
}
inline ::google::protobuf::uint32 smsg_player_look::template_id() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_player_look.template_id)
  return template_id_;
}
inline void smsg_player_look::set_template_id(::google::protobuf::uint32 value) {
  set_changed();
  
  template_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_player_look.template_id)
}

// int32 level = 2;
inline void smsg_player_look::clear_level() {
  set_changed();
  level_ = 0;
}
inline ::google::protobuf::int32 smsg_player_look::level() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_player_look.level)
  return level_;
}
inline void smsg_player_look::set_level(::google::protobuf::int32 value) {
  set_changed();
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_player_look.level)
}

// string name = 3;
inline void smsg_player_look::clear_name() {
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_player_look::name() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_player_look.name)
  return name_.GetNoArena();
}
inline void smsg_player_look::set_name(const ::std::string& value) {
  set_changed();
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.team.smsg_player_look.name)
}
#if LANG_CXX11
inline void smsg_player_look::set_name(::std::string&& value) {
  set_changed();
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.team.smsg_player_look.name)
}
#endif
inline void smsg_player_look::set_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.team.smsg_player_look.name)
}
inline void smsg_player_look::set_name(const char* value, size_t size) {
  set_changed();
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.team.smsg_player_look.name)
}
inline ::std::string* smsg_player_look::mutable_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_player_look.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_player_look::release_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.team.smsg_player_look.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_player_look::set_allocated_name(::std::string* name) {
  set_changed();
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.team.smsg_player_look.name)
}

// int32 bf = 4;
inline void smsg_player_look::clear_bf() {
  set_changed();
  bf_ = 0;
}
inline ::google::protobuf::int32 smsg_player_look::bf() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_player_look.bf)
  return bf_;
}
inline void smsg_player_look::set_bf(::google::protobuf::int32 value) {
  set_changed();
  
  bf_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_player_look.bf)
}

// int32 vip = 5;
inline void smsg_player_look::clear_vip() {
  set_changed();
  vip_ = 0;
}
inline ::google::protobuf::int32 smsg_player_look::vip() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_player_look.vip)
  return vip_;
}
inline void smsg_player_look::set_vip(::google::protobuf::int32 value) {
  set_changed();
  
  vip_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_player_look.vip)
}

// repeated .dhc.role_t roles = 6;
inline int smsg_player_look::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_player_look::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_player_look.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_player_look::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.team.smsg_player_look.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_player_look::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_player_look.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_player_look::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.team.smsg_player_look.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_player_look::roles() const {
  // @@protoc_insertion_point(field_list:protocol.team.smsg_player_look.roles)
  return roles_;
}

// repeated .dhc.equip_t equips = 7;
inline int smsg_player_look::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_player_look::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_player_look.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_player_look::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.team.smsg_player_look.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_player_look::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_player_look.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_player_look::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.team.smsg_player_look.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_player_look::equips() const {
  // @@protoc_insertion_point(field_list:protocol.team.smsg_player_look.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 8;
inline int smsg_player_look::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_player_look::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_player_look.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_player_look::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.team.smsg_player_look.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_player_look::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_player_look.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_player_look::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.team.smsg_player_look.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_player_look::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.team.smsg_player_look.treasures)
  return treasures_;
}

// repeated int32 duixings = 9;
inline int smsg_player_look::duixings_size() const {
  return duixings_.size();
}
inline void smsg_player_look::clear_duixings() {
  set_changed();
  duixings_.Clear();
}
inline ::google::protobuf::int32 smsg_player_look::duixings(int index) const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_player_look.duixings)
  return duixings_.Get(index);
}
inline void smsg_player_look::set_duixings(int index, ::google::protobuf::int32 value) {
  set_changed();
  duixings_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.team.smsg_player_look.duixings)
}
inline void smsg_player_look::add_duixings(::google::protobuf::int32 value) {
  set_changed();
  duixings_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.team.smsg_player_look.duixings)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_player_look::duixings() const {
  // @@protoc_insertion_point(field_list:protocol.team.smsg_player_look.duixings)
  return duixings_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_player_look::mutable_duixings() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.team.smsg_player_look.duixings)
  return &duixings_;
}

// string guild = 10;
inline void smsg_player_look::clear_guild() {
  set_changed();
  guild_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_player_look::guild() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_player_look.guild)
  return guild_.GetNoArena();
}
inline void smsg_player_look::set_guild(const ::std::string& value) {
  set_changed();
  
  guild_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.team.smsg_player_look.guild)
}
#if LANG_CXX11
inline void smsg_player_look::set_guild(::std::string&& value) {
  set_changed();
  
  guild_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.team.smsg_player_look.guild)
}
#endif
inline void smsg_player_look::set_guild(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  guild_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.team.smsg_player_look.guild)
}
inline void smsg_player_look::set_guild(const char* value, size_t size) {
  set_changed();
  
  guild_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.team.smsg_player_look.guild)
}
inline ::std::string* smsg_player_look::mutable_guild() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_player_look.guild)
  return guild_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_player_look::release_guild() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.team.smsg_player_look.guild)
  
  return guild_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_player_look::set_allocated_guild(::std::string* guild) {
  set_changed();
  if (guild != NULL) {
    
  } else {
    
  }
  guild_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guild);
  // @@protoc_insertion_point(field_set_allocated:protocol.team.smsg_player_look.guild)
}

// int32 achieves = 11;
inline void smsg_player_look::clear_achieves() {
  set_changed();
  achieves_ = 0;
}
inline ::google::protobuf::int32 smsg_player_look::achieves() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_player_look.achieves)
  return achieves_;
}
inline void smsg_player_look::set_achieves(::google::protobuf::int32 value) {
  set_changed();
  
  achieves_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_player_look.achieves)
}

// int32 nalflag = 12;
inline void smsg_player_look::clear_nalflag() {
  set_changed();
  nalflag_ = 0;
}
inline ::google::protobuf::int32 smsg_player_look::nalflag() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_player_look.nalflag)
  return nalflag_;
}
inline void smsg_player_look::set_nalflag(::google::protobuf::int32 value) {
  set_changed();
  
  nalflag_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_player_look.nalflag)
}

// -------------------------------------------------------------------

// smsg_invite_add

// .protocol.team.team_invite invite = 1;
inline bool smsg_invite_add::has_invite() const {
  return this != internal_default_instance() && invite_ != NULL;
}
inline void smsg_invite_add::clear_invite() {
  if (GetArenaNoVirtual() == NULL && invite_ != NULL) {
    delete invite_;
  }
  invite_ = NULL;
}
inline const ::protocol::team::team_invite& smsg_invite_add::_internal_invite() const {
  return *invite_;
}
inline const ::protocol::team::team_invite& smsg_invite_add::invite() const {
  const ::protocol::team::team_invite* p = invite_;
  // @@protoc_insertion_point(field_get:protocol.team.smsg_invite_add.invite)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::team::team_invite*>(
      &::protocol::team::_team_invite_default_instance_);
}
inline ::protocol::team::team_invite* smsg_invite_add::release_invite() {
  // @@protoc_insertion_point(field_release:protocol.team.smsg_invite_add.invite)
  
  ::protocol::team::team_invite* temp = invite_;
  invite_ = NULL;
  return temp;
}
inline ::protocol::team::team_invite* smsg_invite_add::mutable_invite() {
  
  if (invite_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::team::team_invite>(GetArenaNoVirtual());
    invite_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_invite_add.invite)
  return invite_;
}
inline void smsg_invite_add::set_allocated_invite(::protocol::team::team_invite* invite) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete invite_;
  }
  if (invite) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      invite = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, invite, submessage_arena);
    }
    
  } else {
    
  }
  invite_ = invite;
  // @@protoc_insertion_point(field_set_allocated:protocol.team.smsg_invite_add.invite)
}

// -------------------------------------------------------------------

// cmsg_invite_agree

// bool agree = 1;
inline void cmsg_invite_agree::clear_agree() {
  set_changed();
  agree_ = false;
}
inline bool cmsg_invite_agree::agree() const {
  // @@protoc_insertion_point(field_get:protocol.team.cmsg_invite_agree.agree)
  return agree_;
}
inline void cmsg_invite_agree::set_agree(bool value) {
  set_changed();
  
  agree_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_invite_agree.agree)
}

// uint64 invite_id = 2;
inline void cmsg_invite_agree::clear_invite_id() {
  set_changed();
  invite_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_invite_agree::invite_id() const {
  // @@protoc_insertion_point(field_get:protocol.team.cmsg_invite_agree.invite_id)
  return invite_id_;
}
inline void cmsg_invite_agree::set_invite_id(::google::protobuf::uint64 value) {
  set_changed();
  
  invite_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_invite_agree.invite_id)
}

// -------------------------------------------------------------------

// smsg_invite_remove

// uint64 invite_id = 1;
inline void smsg_invite_remove::clear_invite_id() {
  set_changed();
  invite_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_invite_remove::invite_id() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_invite_remove.invite_id)
  return invite_id_;
}
inline void smsg_invite_remove::set_invite_id(::google::protobuf::uint64 value) {
  set_changed();
  
  invite_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_invite_remove.invite_id)
}

// -------------------------------------------------------------------

// smsg_invite_remove_social

// uint64 guid = 1;
inline void smsg_invite_remove_social::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_invite_remove_social::guid() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_invite_remove_social.guid)
  return guid_;
}
inline void smsg_invite_remove_social::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_invite_remove_social.guid)
}

// -------------------------------------------------------------------

// smsg_invite_all

// uint64 next_time = 1;
inline void smsg_invite_all::clear_next_time() {
  set_changed();
  next_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_invite_all::next_time() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_invite_all.next_time)
  return next_time_;
}
inline void smsg_invite_all::set_next_time(::google::protobuf::uint64 value) {
  set_changed();
  
  next_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_invite_all.next_time)
}

// -------------------------------------------------------------------

// smsg_team_player_reward_change

// uint64 guid = 1;
inline void smsg_team_player_reward_change::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_team_player_reward_change::guid() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_player_reward_change.guid)
  return guid_;
}
inline void smsg_team_player_reward_change::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_team_player_reward_change.guid)
}

// int32 num = 2;
inline void smsg_team_player_reward_change::clear_num() {
  set_changed();
  num_ = 0;
}
inline ::google::protobuf::int32 smsg_team_player_reward_change::num() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_player_reward_change.num)
  return num_;
}
inline void smsg_team_player_reward_change::set_num(::google::protobuf::int32 value) {
  set_changed();
  
  num_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_team_player_reward_change.num)
}

// int32 point = 3;
inline void smsg_team_player_reward_change::clear_point() {
  set_changed();
  point_ = 0;
}
inline ::google::protobuf::int32 smsg_team_player_reward_change::point() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_player_reward_change.point)
  return point_;
}
inline void smsg_team_player_reward_change::set_point(::google::protobuf::int32 value) {
  set_changed();
  
  point_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_team_player_reward_change.point)
}

// int32 rank = 4;
inline void smsg_team_player_reward_change::clear_rank() {
  set_changed();
  rank_ = 0;
}
inline ::google::protobuf::int32 smsg_team_player_reward_change::rank() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_player_reward_change.rank)
  return rank_;
}
inline void smsg_team_player_reward_change::set_rank(::google::protobuf::int32 value) {
  set_changed();
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_team_player_reward_change.rank)
}

// int32 chenghao = 5;
inline void smsg_team_player_reward_change::clear_chenghao() {
  set_changed();
  chenghao_ = 0;
}
inline ::google::protobuf::int32 smsg_team_player_reward_change::chenghao() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_team_player_reward_change.chenghao)
  return chenghao_;
}
inline void smsg_team_player_reward_change::set_chenghao(::google::protobuf::int32 value) {
  set_changed();
  
  chenghao_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_team_player_reward_change.chenghao)
}

// -------------------------------------------------------------------

// smsg_change_team_stat

// int32 stat = 1;
inline void smsg_change_team_stat::clear_stat() {
  set_changed();
  stat_ = 0;
}
inline ::google::protobuf::int32 smsg_change_team_stat::stat() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_change_team_stat.stat)
  return stat_;
}
inline void smsg_change_team_stat::set_stat(::google::protobuf::int32 value) {
  set_changed();
  
  stat_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_change_team_stat.stat)
}

// -------------------------------------------------------------------

// cmsg_hanhua

// int32 index = 1;
inline void cmsg_hanhua::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 cmsg_hanhua::index() const {
  // @@protoc_insertion_point(field_get:protocol.team.cmsg_hanhua.index)
  return index_;
}
inline void cmsg_hanhua::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_hanhua.index)
}

// -------------------------------------------------------------------

// smsg_hanhua

// string content = 1;
inline void smsg_hanhua::clear_content() {
  set_changed();
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_hanhua::content() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_hanhua.content)
  return content_.GetNoArena();
}
inline void smsg_hanhua::set_content(const ::std::string& value) {
  set_changed();
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.team.smsg_hanhua.content)
}
#if LANG_CXX11
inline void smsg_hanhua::set_content(::std::string&& value) {
  set_changed();
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.team.smsg_hanhua.content)
}
#endif
inline void smsg_hanhua::set_content(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.team.smsg_hanhua.content)
}
inline void smsg_hanhua::set_content(const char* value, size_t size) {
  set_changed();
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.team.smsg_hanhua.content)
}
inline ::std::string* smsg_hanhua::mutable_content() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_hanhua.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_hanhua::release_content() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.team.smsg_hanhua.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_hanhua::set_allocated_content(::std::string* content) {
  set_changed();
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:protocol.team.smsg_hanhua.content)
}

// uint64 guid = 2;
inline void smsg_hanhua::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_hanhua::guid() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_hanhua.guid)
  return guid_;
}
inline void smsg_hanhua::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_hanhua.guid)
}

// -------------------------------------------------------------------

// cmsg_change_hanhua

// repeated int32 index = 1;
inline int cmsg_change_hanhua::index_size() const {
  return index_.size();
}
inline void cmsg_change_hanhua::clear_index() {
  set_changed();
  index_.Clear();
}
inline ::google::protobuf::int32 cmsg_change_hanhua::index(int index) const {
  // @@protoc_insertion_point(field_get:protocol.team.cmsg_change_hanhua.index)
  return index_.Get(index);
}
inline void cmsg_change_hanhua::set_index(int index, ::google::protobuf::int32 value) {
  set_changed();
  index_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_change_hanhua.index)
}
inline void cmsg_change_hanhua::add_index(::google::protobuf::int32 value) {
  set_changed();
  index_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.team.cmsg_change_hanhua.index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
cmsg_change_hanhua::index() const {
  // @@protoc_insertion_point(field_list:protocol.team.cmsg_change_hanhua.index)
  return index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
cmsg_change_hanhua::mutable_index() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.team.cmsg_change_hanhua.index)
  return &index_;
}

// repeated string content = 2;
inline int cmsg_change_hanhua::content_size() const {
  return content_.size();
}
inline void cmsg_change_hanhua::clear_content() {
  set_changed();
  content_.Clear();
}
inline const ::std::string& cmsg_change_hanhua::content(int index) const {
  // @@protoc_insertion_point(field_get:protocol.team.cmsg_change_hanhua.content)
  return content_.Get(index);
}
inline ::std::string* cmsg_change_hanhua::mutable_content(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.team.cmsg_change_hanhua.content)
  return content_.Mutable(index);
}
inline void cmsg_change_hanhua::set_content(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_change_hanhua.content)
  content_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void cmsg_change_hanhua::set_content(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.team.cmsg_change_hanhua.content)
  content_.Mutable(index)->assign(std::move(value));
}
#endif
inline void cmsg_change_hanhua::set_content(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  content_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.team.cmsg_change_hanhua.content)
}
inline void cmsg_change_hanhua::set_content(int index, const char* value, size_t size) {
  set_changed();
  content_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.team.cmsg_change_hanhua.content)
}
inline ::std::string* cmsg_change_hanhua::add_content() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.team.cmsg_change_hanhua.content)
  return content_.Add();
}
inline void cmsg_change_hanhua::add_content(const ::std::string& value) {
  set_changed();
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.team.cmsg_change_hanhua.content)
}
#if LANG_CXX11
inline void cmsg_change_hanhua::add_content(::std::string&& value) {
  set_changed();
  content_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.team.cmsg_change_hanhua.content)
}
#endif
inline void cmsg_change_hanhua::add_content(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.team.cmsg_change_hanhua.content)
}
inline void cmsg_change_hanhua::add_content(const char* value, size_t size) {
  set_changed();
  content_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.team.cmsg_change_hanhua.content)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
cmsg_change_hanhua::content() const {
  // @@protoc_insertion_point(field_list:protocol.team.cmsg_change_hanhua.content)
  return content_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
cmsg_change_hanhua::mutable_content() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.team.cmsg_change_hanhua.content)
  return &content_;
}

// -------------------------------------------------------------------

// smsg_fight_ds

// uint64 id = 1;
inline void smsg_fight_ds::clear_id() {
  set_changed();
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_fight_ds::id() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_ds.id)
  return id_;
}
inline void smsg_fight_ds::set_id(::google::protobuf::uint64 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_fight_ds.id)
}

// int32 result = 2;
inline void smsg_fight_ds::clear_result() {
  set_changed();
  result_ = 0;
}
inline ::google::protobuf::int32 smsg_fight_ds::result() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_ds.result)
  return result_;
}
inline void smsg_fight_ds::set_result(::google::protobuf::int32 value) {
  set_changed();
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_fight_ds.result)
}

// bytes text = 3;
inline void smsg_fight_ds::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_fight_ds::text() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_ds.text)
  return text_.GetNoArena();
}
inline void smsg_fight_ds::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.team.smsg_fight_ds.text)
}
#if LANG_CXX11
inline void smsg_fight_ds::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.team.smsg_fight_ds.text)
}
#endif
inline void smsg_fight_ds::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.team.smsg_fight_ds.text)
}
inline void smsg_fight_ds::set_text(const void* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.team.smsg_fight_ds.text)
}
inline ::std::string* smsg_fight_ds::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_fight_ds.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_fight_ds::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.team.smsg_fight_ds.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_fight_ds::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.team.smsg_fight_ds.text)
}

// string name = 4;
inline void smsg_fight_ds::clear_name() {
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_fight_ds::name() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_ds.name)
  return name_.GetNoArena();
}
inline void smsg_fight_ds::set_name(const ::std::string& value) {
  set_changed();
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.team.smsg_fight_ds.name)
}
#if LANG_CXX11
inline void smsg_fight_ds::set_name(::std::string&& value) {
  set_changed();
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.team.smsg_fight_ds.name)
}
#endif
inline void smsg_fight_ds::set_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.team.smsg_fight_ds.name)
}
inline void smsg_fight_ds::set_name(const char* value, size_t size) {
  set_changed();
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.team.smsg_fight_ds.name)
}
inline ::std::string* smsg_fight_ds::mutable_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.team.smsg_fight_ds.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_fight_ds::release_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.team.smsg_fight_ds.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_fight_ds::set_allocated_name(::std::string* name) {
  set_changed();
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.team.smsg_fight_ds.name)
}

// int32 duanwei = 5;
inline void smsg_fight_ds::clear_duanwei() {
  set_changed();
  duanwei_ = 0;
}
inline ::google::protobuf::int32 smsg_fight_ds::duanwei() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_ds.duanwei)
  return duanwei_;
}
inline void smsg_fight_ds::set_duanwei(::google::protobuf::int32 value) {
  set_changed();
  
  duanwei_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_fight_ds.duanwei)
}

// int32 bf = 6;
inline void smsg_fight_ds::clear_bf() {
  set_changed();
  bf_ = 0;
}
inline ::google::protobuf::int32 smsg_fight_ds::bf() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_ds.bf)
  return bf_;
}
inline void smsg_fight_ds::set_bf(::google::protobuf::int32 value) {
  set_changed();
  
  bf_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_fight_ds.bf)
}

// int32 template_id = 7;
inline void smsg_fight_ds::clear_template_id() {
  set_changed();
  template_id_ = 0;
}
inline ::google::protobuf::int32 smsg_fight_ds::template_id() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_ds.template_id)
  return template_id_;
}
inline void smsg_fight_ds::set_template_id(::google::protobuf::int32 value) {
  set_changed();
  
  template_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_fight_ds.template_id)
}

// int32 vip = 8;
inline void smsg_fight_ds::clear_vip() {
  set_changed();
  vip_ = 0;
}
inline ::google::protobuf::int32 smsg_fight_ds::vip() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_ds.vip)
  return vip_;
}
inline void smsg_fight_ds::set_vip(::google::protobuf::int32 value) {
  set_changed();
  
  vip_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_fight_ds.vip)
}

// int32 achieve = 9;
inline void smsg_fight_ds::clear_achieve() {
  set_changed();
  achieve_ = 0;
}
inline ::google::protobuf::int32 smsg_fight_ds::achieve() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_ds.achieve)
  return achieve_;
}
inline void smsg_fight_ds::set_achieve(::google::protobuf::int32 value) {
  set_changed();
  
  achieve_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_fight_ds.achieve)
}

// int32 guanghuan = 10;
inline void smsg_fight_ds::clear_guanghuan() {
  set_changed();
  guanghuan_ = 0;
}
inline ::google::protobuf::int32 smsg_fight_ds::guanghuan() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_ds.guanghuan)
  return guanghuan_;
}
inline void smsg_fight_ds::set_guanghuan(::google::protobuf::int32 value) {
  set_changed();
  
  guanghuan_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_fight_ds.guanghuan)
}

// int32 dress = 11;
inline void smsg_fight_ds::clear_dress() {
  set_changed();
  dress_ = 0;
}
inline ::google::protobuf::int32 smsg_fight_ds::dress() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_ds.dress)
  return dress_;
}
inline void smsg_fight_ds::set_dress(::google::protobuf::int32 value) {
  set_changed();
  
  dress_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_fight_ds.dress)
}

// uint64 cd_time = 12;
inline void smsg_fight_ds::clear_cd_time() {
  set_changed();
  cd_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_fight_ds::cd_time() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_fight_ds.cd_time)
  return cd_time_;
}
inline void smsg_fight_ds::set_cd_time(::google::protobuf::uint64 value) {
  set_changed();
  
  cd_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_fight_ds.cd_time)
}

// -------------------------------------------------------------------

// smsg_reset_ds

// int32 oldduanwei = 1;
inline void smsg_reset_ds::clear_oldduanwei() {
  set_changed();
  oldduanwei_ = 0;
}
inline ::google::protobuf::int32 smsg_reset_ds::oldduanwei() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_reset_ds.oldduanwei)
  return oldduanwei_;
}
inline void smsg_reset_ds::set_oldduanwei(::google::protobuf::int32 value) {
  set_changed();
  
  oldduanwei_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_reset_ds.oldduanwei)
}

// int32 newduanwei = 2;
inline void smsg_reset_ds::clear_newduanwei() {
  set_changed();
  newduanwei_ = 0;
}
inline ::google::protobuf::int32 smsg_reset_ds::newduanwei() const {
  // @@protoc_insertion_point(field_get:protocol.team.smsg_reset_ds.newduanwei)
  return newduanwei_;
}
inline void smsg_reset_ds::set_newduanwei(::google::protobuf::int32 value) {
  set_changed();
  
  newduanwei_ = value;
  // @@protoc_insertion_point(field_set:protocol.team.smsg_reset_ds.newduanwei)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace team
}  // namespace protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_msg_5fteam_2eproto
