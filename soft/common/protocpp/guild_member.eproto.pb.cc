// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guild_member.eproto

#include "guild_member.eproto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace dhc {
class guild_member_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<guild_member_t>
      _instance;
} _guild_member_t_default_instance_;
}  // namespace dhc
namespace protobuf_guild_5fmember_2eeproto {
static void InitDefaultsguild_member_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dhc::_guild_member_t_default_instance_;
    new (ptr) ::dhc::guild_member_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dhc::guild_member_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_guild_member_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsguild_member_t}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_guild_member_t.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, guild_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, player_iocn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, player_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, player_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, bf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, zhiwu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, sign_flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, last_sign_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, join_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, contribution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, honors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, mnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, mbnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, last_mbtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, mission_rewards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, msg_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, player_vip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, player_achieve_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, offline_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, gongpo_rewards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, map_star_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_member_t, nalflag_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dhc::guild_member_t)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dhc::_guild_member_t_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "guild_member.eproto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023guild_member.eproto\022\003dhc\"\344\003\n\016guild_mem"
      "ber_t\022\014\n\004guid\030\001 \001(\004\022\022\n\nguild_guid\030\002 \001(\004\022"
      "\023\n\013player_guid\030\003 \001(\004\022\026\n\016player_iocn_id\030\004"
      " \001(\005\022\023\n\013player_name\030\005 \001(\t\022\024\n\014player_leve"
      "l\030\006 \001(\005\022\n\n\002bf\030\007 \001(\005\022\r\n\005zhiwu\030\010 \001(\005\022\021\n\tsi"
      "gn_flag\030\t \001(\005\022\026\n\016last_sign_time\030\n \001(\004\022\021\n"
      "\tjoin_time\030\013 \001(\004\022\024\n\014contribution\030\014 \001(\005\022\016"
      "\n\006honors\030\r \003(\005\022\014\n\004mnum\030\016 \001(\005\022\r\n\005mbnum\030\017 "
      "\001(\005\022\023\n\013last_mbtime\030\020 \001(\004\022\027\n\017mission_rewa"
      "rds\030\021 \003(\005\022\021\n\tmsg_count\030\022 \001(\005\022\022\n\nplayer_v"
      "ip\030\023 \001(\005\022\026\n\016player_achieve\030\024 \001(\005\022\024\n\014offl"
      "ine_time\030\025 \001(\004\022\026\n\016gongpo_rewards\030\026 \003(\005\022\020"
      "\n\010map_star\030\027 \001(\005\022\017\n\007nalflag\030\030 \001(\005b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 521);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "guild_member.eproto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_guild_5fmember_2eeproto
namespace dhc {

// ===================================================================

void guild_member_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int guild_member_t::kGuidFieldNumber;
const int guild_member_t::kGuildGuidFieldNumber;
const int guild_member_t::kPlayerGuidFieldNumber;
const int guild_member_t::kPlayerIocnIdFieldNumber;
const int guild_member_t::kPlayerNameFieldNumber;
const int guild_member_t::kPlayerLevelFieldNumber;
const int guild_member_t::kBfFieldNumber;
const int guild_member_t::kZhiwuFieldNumber;
const int guild_member_t::kSignFlagFieldNumber;
const int guild_member_t::kLastSignTimeFieldNumber;
const int guild_member_t::kJoinTimeFieldNumber;
const int guild_member_t::kContributionFieldNumber;
const int guild_member_t::kHonorsFieldNumber;
const int guild_member_t::kMnumFieldNumber;
const int guild_member_t::kMbnumFieldNumber;
const int guild_member_t::kLastMbtimeFieldNumber;
const int guild_member_t::kMissionRewardsFieldNumber;
const int guild_member_t::kMsgCountFieldNumber;
const int guild_member_t::kPlayerVipFieldNumber;
const int guild_member_t::kPlayerAchieveFieldNumber;
const int guild_member_t::kOfflineTimeFieldNumber;
const int guild_member_t::kGongpoRewardsFieldNumber;
const int guild_member_t::kMapStarFieldNumber;
const int guild_member_t::kNalflagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

guild_member_t::guild_member_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_guild_5fmember_2eeproto::scc_info_guild_member_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dhc.guild_member_t)
}
guild_member_t::guild_member_t(const guild_member_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      honors_(from.honors_),
      mission_rewards_(from.mission_rewards_),
      gongpo_rewards_(from.gongpo_rewards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.player_name().size() > 0) {
    player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&nalflag_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(nalflag_));
  // @@protoc_insertion_point(copy_constructor:dhc.guild_member_t)
}

void guild_member_t::SharedCtor() {
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nalflag_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(nalflag_));
}

guild_member_t::~guild_member_t() {
  // @@protoc_insertion_point(destructor:dhc.guild_member_t)
  SharedDtor();
}

void guild_member_t::SharedDtor() {
  player_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void guild_member_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* guild_member_t::descriptor() {
  ::protobuf_guild_5fmember_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_guild_5fmember_2eeproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const guild_member_t& guild_member_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_guild_5fmember_2eeproto::scc_info_guild_member_t.base);
  return *internal_default_instance();
}


void guild_member_t::Clear() {
// @@protoc_insertion_point(message_clear_start:dhc.guild_member_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  honors_.Clear();
  set_changed();
  mission_rewards_.Clear();
  set_changed();
  gongpo_rewards_.Clear();
  set_changed();
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nalflag_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(nalflag_));
  _internal_metadata_.Clear();
}

bool guild_member_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dhc.guild_member_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guild_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guild_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 player_iocn_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_iocn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string player_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_player_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->player_name().data(), static_cast<int>(this->player_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dhc.guild_member_t.player_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 player_level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bf = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 zhiwu = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zhiwu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sign_flag = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sign_flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 last_sign_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_sign_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 join_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &join_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 contribution = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &contribution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 honors = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_honors())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 106u, input, this->mutable_honors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mnum = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mbnum = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mbnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 last_mbtime = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_mbtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 mission_rewards = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_mission_rewards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 138u, input, this->mutable_mission_rewards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 msg_count = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 player_vip = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_vip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 player_achieve = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_achieve_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 offline_time = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offline_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 gongpo_rewards = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_gongpo_rewards())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 178u, input, this->mutable_gongpo_rewards())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 map_star = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_star_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nalflag = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nalflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dhc.guild_member_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dhc.guild_member_t)
  return false;
#undef DO_
}

void guild_member_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dhc.guild_member_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // uint64 guild_guid = 2;
  if (this->guild_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guild_guid(), output);
  }

  // uint64 player_guid = 3;
  if (this->player_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->player_guid(), output);
  }

  // int32 player_iocn_id = 4;
  if (this->player_iocn_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->player_iocn_id(), output);
  }

  // string player_name = 5;
  if (this->player_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_member_t.player_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->player_name(), output);
  }

  // int32 player_level = 6;
  if (this->player_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->player_level(), output);
  }

  // int32 bf = 7;
  if (this->bf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->bf(), output);
  }

  // int32 zhiwu = 8;
  if (this->zhiwu() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->zhiwu(), output);
  }

  // int32 sign_flag = 9;
  if (this->sign_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->sign_flag(), output);
  }

  // uint64 last_sign_time = 10;
  if (this->last_sign_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->last_sign_time(), output);
  }

  // uint64 join_time = 11;
  if (this->join_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->join_time(), output);
  }

  // int32 contribution = 12;
  if (this->contribution() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->contribution(), output);
  }

  // repeated int32 honors = 13;
  if (this->honors_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _honors_cached_byte_size_));
  }
  for (int i = 0, n = this->honors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->honors(i), output);
  }

  // int32 mnum = 14;
  if (this->mnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->mnum(), output);
  }

  // int32 mbnum = 15;
  if (this->mbnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->mbnum(), output);
  }

  // uint64 last_mbtime = 16;
  if (this->last_mbtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->last_mbtime(), output);
  }

  // repeated int32 mission_rewards = 17;
  if (this->mission_rewards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(17, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _mission_rewards_cached_byte_size_));
  }
  for (int i = 0, n = this->mission_rewards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->mission_rewards(i), output);
  }

  // int32 msg_count = 18;
  if (this->msg_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->msg_count(), output);
  }

  // int32 player_vip = 19;
  if (this->player_vip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->player_vip(), output);
  }

  // int32 player_achieve = 20;
  if (this->player_achieve() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->player_achieve(), output);
  }

  // uint64 offline_time = 21;
  if (this->offline_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(21, this->offline_time(), output);
  }

  // repeated int32 gongpo_rewards = 22;
  if (this->gongpo_rewards_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(22, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _gongpo_rewards_cached_byte_size_));
  }
  for (int i = 0, n = this->gongpo_rewards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->gongpo_rewards(i), output);
  }

  // int32 map_star = 23;
  if (this->map_star() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->map_star(), output);
  }

  // int32 nalflag = 24;
  if (this->nalflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->nalflag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dhc.guild_member_t)
}

::google::protobuf::uint8* guild_member_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dhc.guild_member_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // uint64 guild_guid = 2;
  if (this->guild_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guild_guid(), target);
  }

  // uint64 player_guid = 3;
  if (this->player_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->player_guid(), target);
  }

  // int32 player_iocn_id = 4;
  if (this->player_iocn_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->player_iocn_id(), target);
  }

  // string player_name = 5;
  if (this->player_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_member_t.player_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->player_name(), target);
  }

  // int32 player_level = 6;
  if (this->player_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->player_level(), target);
  }

  // int32 bf = 7;
  if (this->bf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->bf(), target);
  }

  // int32 zhiwu = 8;
  if (this->zhiwu() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->zhiwu(), target);
  }

  // int32 sign_flag = 9;
  if (this->sign_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->sign_flag(), target);
  }

  // uint64 last_sign_time = 10;
  if (this->last_sign_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->last_sign_time(), target);
  }

  // uint64 join_time = 11;
  if (this->join_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->join_time(), target);
  }

  // int32 contribution = 12;
  if (this->contribution() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->contribution(), target);
  }

  // repeated int32 honors = 13;
  if (this->honors_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _honors_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->honors_, target);
  }

  // int32 mnum = 14;
  if (this->mnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->mnum(), target);
  }

  // int32 mbnum = 15;
  if (this->mbnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->mbnum(), target);
  }

  // uint64 last_mbtime = 16;
  if (this->last_mbtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->last_mbtime(), target);
  }

  // repeated int32 mission_rewards = 17;
  if (this->mission_rewards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      17,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _mission_rewards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->mission_rewards_, target);
  }

  // int32 msg_count = 18;
  if (this->msg_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->msg_count(), target);
  }

  // int32 player_vip = 19;
  if (this->player_vip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->player_vip(), target);
  }

  // int32 player_achieve = 20;
  if (this->player_achieve() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->player_achieve(), target);
  }

  // uint64 offline_time = 21;
  if (this->offline_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(21, this->offline_time(), target);
  }

  // repeated int32 gongpo_rewards = 22;
  if (this->gongpo_rewards_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      22,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _gongpo_rewards_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->gongpo_rewards_, target);
  }

  // int32 map_star = 23;
  if (this->map_star() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->map_star(), target);
  }

  // int32 nalflag = 24;
  if (this->nalflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->nalflag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dhc.guild_member_t)
  return target;
}

size_t guild_member_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dhc.guild_member_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 honors = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->honors_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _honors_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 mission_rewards = 17;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->mission_rewards_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mission_rewards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 gongpo_rewards = 22;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->gongpo_rewards_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _gongpo_rewards_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string player_name = 5;
  if (this->player_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->player_name());
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint64 guild_guid = 2;
  if (this->guild_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guild_guid());
  }

  // uint64 player_guid = 3;
  if (this->player_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  // int32 player_iocn_id = 4;
  if (this->player_iocn_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->player_iocn_id());
  }

  // int32 player_level = 6;
  if (this->player_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->player_level());
  }

  // int32 bf = 7;
  if (this->bf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bf());
  }

  // int32 zhiwu = 8;
  if (this->zhiwu() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->zhiwu());
  }

  // uint64 last_sign_time = 10;
  if (this->last_sign_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->last_sign_time());
  }

  // int32 sign_flag = 9;
  if (this->sign_flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sign_flag());
  }

  // int32 contribution = 12;
  if (this->contribution() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->contribution());
  }

  // uint64 join_time = 11;
  if (this->join_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->join_time());
  }

  // int32 mnum = 14;
  if (this->mnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mnum());
  }

  // int32 mbnum = 15;
  if (this->mbnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mbnum());
  }

  // uint64 last_mbtime = 16;
  if (this->last_mbtime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->last_mbtime());
  }

  // int32 msg_count = 18;
  if (this->msg_count() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msg_count());
  }

  // int32 player_vip = 19;
  if (this->player_vip() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->player_vip());
  }

  // uint64 offline_time = 21;
  if (this->offline_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offline_time());
  }

  // int32 player_achieve = 20;
  if (this->player_achieve() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->player_achieve());
  }

  // int32 map_star = 23;
  if (this->map_star() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->map_star());
  }

  // int32 nalflag = 24;
  if (this->nalflag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nalflag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void guild_member_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dhc.guild_member_t)
  GOOGLE_DCHECK_NE(&from, this);
  const guild_member_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const guild_member_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dhc.guild_member_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dhc.guild_member_t)
    MergeFrom(*source);
  }
}

void guild_member_t::MergeFrom(const guild_member_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dhc.guild_member_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  honors_.MergeFrom(from.honors_);
  mission_rewards_.MergeFrom(from.mission_rewards_);
  gongpo_rewards_.MergeFrom(from.gongpo_rewards_);
  if (from.player_name().size() > 0) {

    player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.guild_guid() != 0) {
    set_guild_guid(from.guild_guid());
  }
  if (from.player_guid() != 0) {
    set_player_guid(from.player_guid());
  }
  if (from.player_iocn_id() != 0) {
    set_player_iocn_id(from.player_iocn_id());
  }
  if (from.player_level() != 0) {
    set_player_level(from.player_level());
  }
  if (from.bf() != 0) {
    set_bf(from.bf());
  }
  if (from.zhiwu() != 0) {
    set_zhiwu(from.zhiwu());
  }
  if (from.last_sign_time() != 0) {
    set_last_sign_time(from.last_sign_time());
  }
  if (from.sign_flag() != 0) {
    set_sign_flag(from.sign_flag());
  }
  if (from.contribution() != 0) {
    set_contribution(from.contribution());
  }
  if (from.join_time() != 0) {
    set_join_time(from.join_time());
  }
  if (from.mnum() != 0) {
    set_mnum(from.mnum());
  }
  if (from.mbnum() != 0) {
    set_mbnum(from.mbnum());
  }
  if (from.last_mbtime() != 0) {
    set_last_mbtime(from.last_mbtime());
  }
  if (from.msg_count() != 0) {
    set_msg_count(from.msg_count());
  }
  if (from.player_vip() != 0) {
    set_player_vip(from.player_vip());
  }
  if (from.offline_time() != 0) {
    set_offline_time(from.offline_time());
  }
  if (from.player_achieve() != 0) {
    set_player_achieve(from.player_achieve());
  }
  if (from.map_star() != 0) {
    set_map_star(from.map_star());
  }
  if (from.nalflag() != 0) {
    set_nalflag(from.nalflag());
  }
}

void guild_member_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dhc.guild_member_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void guild_member_t::CopyFrom(const guild_member_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dhc.guild_member_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool guild_member_t::IsInitialized() const {
  return true;
}

void guild_member_t::Swap(guild_member_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void guild_member_t::InternalSwap(guild_member_t* other) {
  using std::swap;
  honors_.InternalSwap(&other->honors_);
  mission_rewards_.InternalSwap(&other->mission_rewards_);
  gongpo_rewards_.InternalSwap(&other->gongpo_rewards_);
  player_name_.Swap(&other->player_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(guild_guid_, other->guild_guid_);
  swap(player_guid_, other->player_guid_);
  swap(player_iocn_id_, other->player_iocn_id_);
  swap(player_level_, other->player_level_);
  swap(bf_, other->bf_);
  swap(zhiwu_, other->zhiwu_);
  swap(last_sign_time_, other->last_sign_time_);
  swap(sign_flag_, other->sign_flag_);
  swap(contribution_, other->contribution_);
  swap(join_time_, other->join_time_);
  swap(mnum_, other->mnum_);
  swap(mbnum_, other->mbnum_);
  swap(last_mbtime_, other->last_mbtime_);
  swap(msg_count_, other->msg_count_);
  swap(player_vip_, other->player_vip_);
  swap(offline_time_, other->offline_time_);
  swap(player_achieve_, other->player_achieve_);
  swap(map_star_, other->map_star_);
  swap(nalflag_, other->nalflag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata guild_member_t::GetMetadata() const {
  protobuf_guild_5fmember_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_guild_5fmember_2eeproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dhc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dhc::guild_member_t* Arena::CreateMaybeMessage< ::dhc::guild_member_t >(Arena* arena) {
  return Arena::CreateInternal< ::dhc::guild_member_t >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
