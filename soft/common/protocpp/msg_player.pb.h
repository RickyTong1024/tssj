// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_player.proto

#ifndef PROTOBUF_INCLUDED_msg_5fplayer_2eproto
#define PROTOBUF_INCLUDED_msg_5fplayer_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "player.eproto.pb.h"
#include "role.eproto.pb.h"
#include "equip.eproto.pb.h"
#include "post.eproto.pb.h"
#include "sport.eproto.pb.h"
#include "guild.eproto.pb.h"
#include "guild_member.eproto.pb.h"
#include "guild_event.eproto.pb.h"
#include "rank.eproto.pb.h"
#include "social.eproto.pb.h"
#include "treasure.eproto.pb.h"
#include "treasure_report.eproto.pb.h"
#include "guild_mission.eproto.pb.h"
#include "guild_message.eproto.pb.h"
#include "guild_red.eproto.pb.h"
#include "guild_box.eproto.pb.h"
#include "pet.eproto.pb.h"
#include "guild_arrange.eproto.pb.h"
#include "guild_fight.eproto.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_msg_5fplayer_2eproto 

namespace protobuf_msg_5fplayer_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[286];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_msg_5fplayer_2eproto
namespace protocol {
namespace game {
class cmsg_active_reward;
class cmsg_active_rewardDefaultTypeInternal;
extern cmsg_active_rewardDefaultTypeInternal _cmsg_active_reward_default_instance_;
class cmsg_active_score_reward;
class cmsg_active_score_rewardDefaultTypeInternal;
extern cmsg_active_score_rewardDefaultTypeInternal _cmsg_active_score_reward_default_instance_;
class cmsg_bingyuan_fight;
class cmsg_bingyuan_fightDefaultTypeInternal;
extern cmsg_bingyuan_fightDefaultTypeInternal _cmsg_bingyuan_fight_default_instance_;
class cmsg_boss_saodang;
class cmsg_boss_saodangDefaultTypeInternal;
extern cmsg_boss_saodangDefaultTypeInternal _cmsg_boss_saodang_default_instance_;
class cmsg_chat_ex;
class cmsg_chat_exDefaultTypeInternal;
extern cmsg_chat_exDefaultTypeInternal _cmsg_chat_ex_default_instance_;
class cmsg_chenghao_on;
class cmsg_chenghao_onDefaultTypeInternal;
extern cmsg_chenghao_onDefaultTypeInternal _cmsg_chenghao_on_default_instance_;
class cmsg_chouka;
class cmsg_choukaDefaultTypeInternal;
extern cmsg_choukaDefaultTypeInternal _cmsg_chouka_default_instance_;
class cmsg_client_login;
class cmsg_client_loginDefaultTypeInternal;
extern cmsg_client_loginDefaultTypeInternal _cmsg_client_login_default_instance_;
class cmsg_common;
class cmsg_commonDefaultTypeInternal;
extern cmsg_commonDefaultTypeInternal _cmsg_common_default_instance_;
class cmsg_common_ex;
class cmsg_common_exDefaultTypeInternal;
extern cmsg_common_exDefaultTypeInternal _cmsg_common_ex_default_instance_;
class cmsg_dress_buy;
class cmsg_dress_buyDefaultTypeInternal;
extern cmsg_dress_buyDefaultTypeInternal _cmsg_dress_buy_default_instance_;
class cmsg_dress_off;
class cmsg_dress_offDefaultTypeInternal;
extern cmsg_dress_offDefaultTypeInternal _cmsg_dress_off_default_instance_;
class cmsg_dress_on;
class cmsg_dress_onDefaultTypeInternal;
extern cmsg_dress_onDefaultTypeInternal _cmsg_dress_on_default_instance_;
class cmsg_dress_unlock;
class cmsg_dress_unlockDefaultTypeInternal;
extern cmsg_dress_unlockDefaultTypeInternal _cmsg_dress_unlock_default_instance_;
class cmsg_dress_unlock_achieve;
class cmsg_dress_unlock_achieveDefaultTypeInternal;
extern cmsg_dress_unlock_achieveDefaultTypeInternal _cmsg_dress_unlock_achieve_default_instance_;
class cmsg_ds_fight;
class cmsg_ds_fightDefaultTypeInternal;
extern cmsg_ds_fightDefaultTypeInternal _cmsg_ds_fight_default_instance_;
class cmsg_duixing;
class cmsg_duixingDefaultTypeInternal;
extern cmsg_duixingDefaultTypeInternal _cmsg_duixing_default_instance_;
class cmsg_duixing_on;
class cmsg_duixing_onDefaultTypeInternal;
extern cmsg_duixing_onDefaultTypeInternal _cmsg_duixing_on_default_instance_;
class cmsg_equip_auto_enhance;
class cmsg_equip_auto_enhanceDefaultTypeInternal;
extern cmsg_equip_auto_enhanceDefaultTypeInternal _cmsg_equip_auto_enhance_default_instance_;
class cmsg_equip_enhance;
class cmsg_equip_enhanceDefaultTypeInternal;
extern cmsg_equip_enhanceDefaultTypeInternal _cmsg_equip_enhance_default_instance_;
class cmsg_equip_gaizao;
class cmsg_equip_gaizaoDefaultTypeInternal;
extern cmsg_equip_gaizaoDefaultTypeInternal _cmsg_equip_gaizao_default_instance_;
class cmsg_equip_gaizao_buy;
class cmsg_equip_gaizao_buyDefaultTypeInternal;
extern cmsg_equip_gaizao_buyDefaultTypeInternal _cmsg_equip_gaizao_buy_default_instance_;
class cmsg_equip_init;
class cmsg_equip_initDefaultTypeInternal;
extern cmsg_equip_initDefaultTypeInternal _cmsg_equip_init_default_instance_;
class cmsg_equip_jinlian;
class cmsg_equip_jinlianDefaultTypeInternal;
extern cmsg_equip_jinlianDefaultTypeInternal _cmsg_equip_jinlian_default_instance_;
class cmsg_equip_lock;
class cmsg_equip_lockDefaultTypeInternal;
extern cmsg_equip_lockDefaultTypeInternal _cmsg_equip_lock_default_instance_;
class cmsg_equip_ronglian;
class cmsg_equip_ronglianDefaultTypeInternal;
extern cmsg_equip_ronglianDefaultTypeInternal _cmsg_equip_ronglian_default_instance_;
class cmsg_equip_sell;
class cmsg_equip_sellDefaultTypeInternal;
extern cmsg_equip_sellDefaultTypeInternal _cmsg_equip_sell_default_instance_;
class cmsg_equip_star;
class cmsg_equip_starDefaultTypeInternal;
extern cmsg_equip_starDefaultTypeInternal _cmsg_equip_star_default_instance_;
class cmsg_equip_suipian;
class cmsg_equip_suipianDefaultTypeInternal;
extern cmsg_equip_suipianDefaultTypeInternal _cmsg_equip_suipian_default_instance_;
class cmsg_gm_command;
class cmsg_gm_commandDefaultTypeInternal;
extern cmsg_gm_commandDefaultTypeInternal _cmsg_gm_command_default_instance_;
class cmsg_guanghuan_init;
class cmsg_guanghuan_initDefaultTypeInternal;
extern cmsg_guanghuan_initDefaultTypeInternal _cmsg_guanghuan_init_default_instance_;
class cmsg_guanghuan_level;
class cmsg_guanghuan_levelDefaultTypeInternal;
extern cmsg_guanghuan_levelDefaultTypeInternal _cmsg_guanghuan_level_default_instance_;
class cmsg_guanghuan_on;
class cmsg_guanghuan_onDefaultTypeInternal;
extern cmsg_guanghuan_onDefaultTypeInternal _cmsg_guanghuan_on_default_instance_;
class cmsg_guild_agree;
class cmsg_guild_agreeDefaultTypeInternal;
extern cmsg_guild_agreeDefaultTypeInternal _cmsg_guild_agree_default_instance_;
class cmsg_guild_apply;
class cmsg_guild_applyDefaultTypeInternal;
extern cmsg_guild_applyDefaultTypeInternal _cmsg_guild_apply_default_instance_;
class cmsg_guild_change_member_duty;
class cmsg_guild_change_member_dutyDefaultTypeInternal;
extern cmsg_guild_change_member_dutyDefaultTypeInternal _cmsg_guild_change_member_duty_default_instance_;
class cmsg_guild_create;
class cmsg_guild_createDefaultTypeInternal;
extern cmsg_guild_createDefaultTypeInternal _cmsg_guild_create_default_instance_;
class cmsg_guild_fight;
class cmsg_guild_fightDefaultTypeInternal;
extern cmsg_guild_fightDefaultTypeInternal _cmsg_guild_fight_default_instance_;
class cmsg_guild_join;
class cmsg_guild_joinDefaultTypeInternal;
extern cmsg_guild_joinDefaultTypeInternal _cmsg_guild_join_default_instance_;
class cmsg_guild_keji;
class cmsg_guild_kejiDefaultTypeInternal;
extern cmsg_guild_kejiDefaultTypeInternal _cmsg_guild_keji_default_instance_;
class cmsg_guild_kick_member;
class cmsg_guild_kick_memberDefaultTypeInternal;
extern cmsg_guild_kick_memberDefaultTypeInternal _cmsg_guild_kick_member_default_instance_;
class cmsg_guild_look_zhanji;
class cmsg_guild_look_zhanjiDefaultTypeInternal;
extern cmsg_guild_look_zhanjiDefaultTypeInternal _cmsg_guild_look_zhanji_default_instance_;
class cmsg_guild_look_zhankuang;
class cmsg_guild_look_zhankuangDefaultTypeInternal;
extern cmsg_guild_look_zhankuangDefaultTypeInternal _cmsg_guild_look_zhankuang_default_instance_;
class cmsg_guild_message_add;
class cmsg_guild_message_addDefaultTypeInternal;
extern cmsg_guild_message_addDefaultTypeInternal _cmsg_guild_message_add_default_instance_;
class cmsg_guild_message_delete;
class cmsg_guild_message_deleteDefaultTypeInternal;
extern cmsg_guild_message_deleteDefaultTypeInternal _cmsg_guild_message_delete_default_instance_;
class cmsg_guild_message_top;
class cmsg_guild_message_topDefaultTypeInternal;
extern cmsg_guild_message_topDefaultTypeInternal _cmsg_guild_message_top_default_instance_;
class cmsg_guild_mission_ceng_reward;
class cmsg_guild_mission_ceng_rewardDefaultTypeInternal;
extern cmsg_guild_mission_ceng_rewardDefaultTypeInternal _cmsg_guild_mission_ceng_reward_default_instance_;
class cmsg_guild_mission_complete_reward;
class cmsg_guild_mission_complete_rewardDefaultTypeInternal;
extern cmsg_guild_mission_complete_rewardDefaultTypeInternal _cmsg_guild_mission_complete_reward_default_instance_;
class cmsg_guild_mission_complete_reward_view;
class cmsg_guild_mission_complete_reward_viewDefaultTypeInternal;
extern cmsg_guild_mission_complete_reward_viewDefaultTypeInternal _cmsg_guild_mission_complete_reward_view_default_instance_;
class cmsg_guild_mission_fight_end;
class cmsg_guild_mission_fight_endDefaultTypeInternal;
extern cmsg_guild_mission_fight_endDefaultTypeInternal _cmsg_guild_mission_fight_end_default_instance_;
class cmsg_guild_modify_bulletin;
class cmsg_guild_modify_bulletinDefaultTypeInternal;
extern cmsg_guild_modify_bulletinDefaultTypeInternal _cmsg_guild_modify_bulletin_default_instance_;
class cmsg_guild_modify_icon;
class cmsg_guild_modify_iconDefaultTypeInternal;
extern cmsg_guild_modify_iconDefaultTypeInternal _cmsg_guild_modify_icon_default_instance_;
class cmsg_guild_pvp_bushu;
class cmsg_guild_pvp_bushuDefaultTypeInternal;
extern cmsg_guild_pvp_bushuDefaultTypeInternal _cmsg_guild_pvp_bushu_default_instance_;
class cmsg_guild_pvp_reward;
class cmsg_guild_pvp_rewardDefaultTypeInternal;
extern cmsg_guild_pvp_rewardDefaultTypeInternal _cmsg_guild_pvp_reward_default_instance_;
class cmsg_guild_query;
class cmsg_guild_queryDefaultTypeInternal;
extern cmsg_guild_queryDefaultTypeInternal _cmsg_guild_query_default_instance_;
class cmsg_guild_red_deliver;
class cmsg_guild_red_deliverDefaultTypeInternal;
extern cmsg_guild_red_deliverDefaultTypeInternal _cmsg_guild_red_deliver_default_instance_;
class cmsg_guild_red_rob;
class cmsg_guild_red_robDefaultTypeInternal;
extern cmsg_guild_red_robDefaultTypeInternal _cmsg_guild_red_rob_default_instance_;
class cmsg_guild_red_target;
class cmsg_guild_red_targetDefaultTypeInternal;
extern cmsg_guild_red_targetDefaultTypeInternal _cmsg_guild_red_target_default_instance_;
class cmsg_guild_set_join_condition;
class cmsg_guild_set_join_conditionDefaultTypeInternal;
extern cmsg_guild_set_join_conditionDefaultTypeInternal _cmsg_guild_set_join_condition_default_instance_;
class cmsg_guild_shop_buy;
class cmsg_guild_shop_buyDefaultTypeInternal;
extern cmsg_guild_shop_buyDefaultTypeInternal _cmsg_guild_shop_buy_default_instance_;
class cmsg_guild_sign_in;
class cmsg_guild_sign_inDefaultTypeInternal;
extern cmsg_guild_sign_inDefaultTypeInternal _cmsg_guild_sign_in_default_instance_;
class cmsg_guild_sign_reward;
class cmsg_guild_sign_rewardDefaultTypeInternal;
extern cmsg_guild_sign_rewardDefaultTypeInternal _cmsg_guild_sign_reward_default_instance_;
class cmsg_item_apply;
class cmsg_item_applyDefaultTypeInternal;
extern cmsg_item_applyDefaultTypeInternal _cmsg_item_apply_default_instance_;
class cmsg_item_direct_buy;
class cmsg_item_direct_buyDefaultTypeInternal;
extern cmsg_item_direct_buyDefaultTypeInternal _cmsg_item_direct_buy_default_instance_;
class cmsg_item_fenjie;
class cmsg_item_fenjieDefaultTypeInternal;
extern cmsg_item_fenjieDefaultTypeInternal _cmsg_item_fenjie_default_instance_;
class cmsg_item_sell;
class cmsg_item_sellDefaultTypeInternal;
extern cmsg_item_sellDefaultTypeInternal _cmsg_item_sell_default_instance_;
class cmsg_item_sell_all;
class cmsg_item_sell_allDefaultTypeInternal;
extern cmsg_item_sell_allDefaultTypeInternal _cmsg_item_sell_all_default_instance_;
class cmsg_libao;
class cmsg_libaoDefaultTypeInternal;
extern cmsg_libaoDefaultTypeInternal _cmsg_libao_default_instance_;
class cmsg_mission_fight_end;
class cmsg_mission_fight_endDefaultTypeInternal;
extern cmsg_mission_fight_endDefaultTypeInternal _cmsg_mission_fight_end_default_instance_;
class cmsg_mission_first;
class cmsg_mission_firstDefaultTypeInternal;
extern cmsg_mission_firstDefaultTypeInternal _cmsg_mission_first_default_instance_;
class cmsg_mission_goumai;
class cmsg_mission_goumaiDefaultTypeInternal;
extern cmsg_mission_goumaiDefaultTypeInternal _cmsg_mission_goumai_default_instance_;
class cmsg_mission_reward;
class cmsg_mission_rewardDefaultTypeInternal;
extern cmsg_mission_rewardDefaultTypeInternal _cmsg_mission_reward_default_instance_;
class cmsg_mission_saodang;
class cmsg_mission_saodangDefaultTypeInternal;
extern cmsg_mission_saodangDefaultTypeInternal _cmsg_mission_saodang_default_instance_;
class cmsg_ore_fight_end;
class cmsg_ore_fight_endDefaultTypeInternal;
extern cmsg_ore_fight_endDefaultTypeInternal _cmsg_ore_fight_end_default_instance_;
class cmsg_pet_duihuan;
class cmsg_pet_duihuanDefaultTypeInternal;
extern cmsg_pet_duihuanDefaultTypeInternal _cmsg_pet_duihuan_default_instance_;
class cmsg_pet_guard;
class cmsg_pet_guardDefaultTypeInternal;
extern cmsg_pet_guardDefaultTypeInternal _cmsg_pet_guard_default_instance_;
class cmsg_pet_init;
class cmsg_pet_initDefaultTypeInternal;
extern cmsg_pet_initDefaultTypeInternal _cmsg_pet_init_default_instance_;
class cmsg_pet_jinjie;
class cmsg_pet_jinjieDefaultTypeInternal;
extern cmsg_pet_jinjieDefaultTypeInternal _cmsg_pet_jinjie_default_instance_;
class cmsg_pet_level;
class cmsg_pet_levelDefaultTypeInternal;
extern cmsg_pet_levelDefaultTypeInternal _cmsg_pet_level_default_instance_;
class cmsg_pet_on;
class cmsg_pet_onDefaultTypeInternal;
extern cmsg_pet_onDefaultTypeInternal _cmsg_pet_on_default_instance_;
class cmsg_pet_star;
class cmsg_pet_starDefaultTypeInternal;
extern cmsg_pet_starDefaultTypeInternal _cmsg_pet_star_default_instance_;
class cmsg_player_look;
class cmsg_player_lookDefaultTypeInternal;
extern cmsg_player_lookDefaultTypeInternal _cmsg_player_look_default_instance_;
class cmsg_player_nalflag;
class cmsg_player_nalflagDefaultTypeInternal;
extern cmsg_player_nalflagDefaultTypeInternal _cmsg_player_nalflag_default_instance_;
class cmsg_player_name;
class cmsg_player_nameDefaultTypeInternal;
extern cmsg_player_nameDefaultTypeInternal _cmsg_player_name_default_instance_;
class cmsg_player_task;
class cmsg_player_taskDefaultTypeInternal;
extern cmsg_player_taskDefaultTypeInternal _cmsg_player_task_default_instance_;
class cmsg_player_template;
class cmsg_player_templateDefaultTypeInternal;
extern cmsg_player_templateDefaultTypeInternal _cmsg_player_template_default_instance_;
class cmsg_player_zsname;
class cmsg_player_zsnameDefaultTypeInternal;
extern cmsg_player_zsnameDefaultTypeInternal _cmsg_player_zsname_default_instance_;
class cmsg_post_get;
class cmsg_post_getDefaultTypeInternal;
extern cmsg_post_getDefaultTypeInternal _cmsg_post_get_default_instance_;
class cmsg_post_view;
class cmsg_post_viewDefaultTypeInternal;
extern cmsg_post_viewDefaultTypeInternal _cmsg_post_view_default_instance_;
class cmsg_pvp_fight_end;
class cmsg_pvp_fight_endDefaultTypeInternal;
extern cmsg_pvp_fight_endDefaultTypeInternal _cmsg_pvp_fight_end_default_instance_;
class cmsg_qiecuo;
class cmsg_qiecuoDefaultTypeInternal;
extern cmsg_qiecuoDefaultTypeInternal _cmsg_qiecuo_default_instance_;
class cmsg_qiyu_fight_end;
class cmsg_qiyu_fight_endDefaultTypeInternal;
extern cmsg_qiyu_fight_endDefaultTypeInternal _cmsg_qiyu_fight_end_default_instance_;
class cmsg_random_event_get;
class cmsg_random_event_getDefaultTypeInternal;
extern cmsg_random_event_getDefaultTypeInternal _cmsg_random_event_get_default_instance_;
class cmsg_rank_view;
class cmsg_rank_viewDefaultTypeInternal;
extern cmsg_rank_viewDefaultTypeInternal _cmsg_rank_view_default_instance_;
class cmsg_recharge;
class cmsg_rechargeDefaultTypeInternal;
extern cmsg_rechargeDefaultTypeInternal _cmsg_recharge_default_instance_;
class cmsg_role_all_equip;
class cmsg_role_all_equipDefaultTypeInternal;
extern cmsg_role_all_equipDefaultTypeInternal _cmsg_role_all_equip_default_instance_;
class cmsg_role_bskillup;
class cmsg_role_bskillupDefaultTypeInternal;
extern cmsg_role_bskillupDefaultTypeInternal _cmsg_role_bskillup_default_instance_;
class cmsg_role_dress_off;
class cmsg_role_dress_offDefaultTypeInternal;
extern cmsg_role_dress_offDefaultTypeInternal _cmsg_role_dress_off_default_instance_;
class cmsg_role_dress_on;
class cmsg_role_dress_onDefaultTypeInternal;
extern cmsg_role_dress_onDefaultTypeInternal _cmsg_role_dress_on_default_instance_;
class cmsg_role_duihuan;
class cmsg_role_duihuanDefaultTypeInternal;
extern cmsg_role_duihuanDefaultTypeInternal _cmsg_role_duihuan_default_instance_;
class cmsg_role_equip;
class cmsg_role_equipDefaultTypeInternal;
extern cmsg_role_equipDefaultTypeInternal _cmsg_role_equip_default_instance_;
class cmsg_role_fj;
class cmsg_role_fjDefaultTypeInternal;
extern cmsg_role_fjDefaultTypeInternal _cmsg_role_fj_default_instance_;
class cmsg_role_huiyi_chou;
class cmsg_role_huiyi_chouDefaultTypeInternal;
extern cmsg_role_huiyi_chouDefaultTypeInternal _cmsg_role_huiyi_chou_default_instance_;
class cmsg_role_huiyi_fanpai;
class cmsg_role_huiyi_fanpaiDefaultTypeInternal;
extern cmsg_role_huiyi_fanpaiDefaultTypeInternal _cmsg_role_huiyi_fanpai_default_instance_;
class cmsg_role_huiyi_jihuo;
class cmsg_role_huiyi_jihuoDefaultTypeInternal;
extern cmsg_role_huiyi_jihuoDefaultTypeInternal _cmsg_role_huiyi_jihuo_default_instance_;
class cmsg_role_init;
class cmsg_role_initDefaultTypeInternal;
extern cmsg_role_initDefaultTypeInternal _cmsg_role_init_default_instance_;
class cmsg_role_jinjie;
class cmsg_role_jinjieDefaultTypeInternal;
extern cmsg_role_jinjieDefaultTypeInternal _cmsg_role_jinjie_default_instance_;
class cmsg_role_shengpin;
class cmsg_role_shengpinDefaultTypeInternal;
extern cmsg_role_shengpinDefaultTypeInternal _cmsg_role_shengpin_default_instance_;
class cmsg_role_skillup;
class cmsg_role_skillupDefaultTypeInternal;
extern cmsg_role_skillupDefaultTypeInternal _cmsg_role_skillup_default_instance_;
class cmsg_role_suipian;
class cmsg_role_suipianDefaultTypeInternal;
extern cmsg_role_suipianDefaultTypeInternal _cmsg_role_suipian_default_instance_;
class cmsg_role_suipian_gaizao;
class cmsg_role_suipian_gaizaoDefaultTypeInternal;
extern cmsg_role_suipian_gaizaoDefaultTypeInternal _cmsg_role_suipian_gaizao_default_instance_;
class cmsg_role_tupo;
class cmsg_role_tupoDefaultTypeInternal;
extern cmsg_role_tupoDefaultTypeInternal _cmsg_role_tupo_default_instance_;
class cmsg_role_upgrade;
class cmsg_role_upgradeDefaultTypeInternal;
extern cmsg_role_upgradeDefaultTypeInternal _cmsg_role_upgrade_default_instance_;
class cmsg_role_xq_look;
class cmsg_role_xq_lookDefaultTypeInternal;
extern cmsg_role_xq_lookDefaultTypeInternal _cmsg_role_xq_look_default_instance_;
class cmsg_role_yh_look;
class cmsg_role_yh_lookDefaultTypeInternal;
extern cmsg_role_yh_lookDefaultTypeInternal _cmsg_role_yh_look_default_instance_;
class cmsg_role_yh_select;
class cmsg_role_yh_selectDefaultTypeInternal;
extern cmsg_role_yh_selectDefaultTypeInternal _cmsg_role_yh_select_default_instance_;
class cmsg_shop_buy;
class cmsg_shop_buyDefaultTypeInternal;
extern cmsg_shop_buyDefaultTypeInternal _cmsg_shop_buy_default_instance_;
class cmsg_shop_refresh;
class cmsg_shop_refreshDefaultTypeInternal;
extern cmsg_shop_refreshDefaultTypeInternal _cmsg_shop_refresh_default_instance_;
class cmsg_shop_xg;
class cmsg_shop_xgDefaultTypeInternal;
extern cmsg_shop_xgDefaultTypeInternal _cmsg_shop_xg_default_instance_;
class cmsg_social_add;
class cmsg_social_addDefaultTypeInternal;
extern cmsg_social_addDefaultTypeInternal _cmsg_social_add_default_instance_;
class cmsg_social_agree;
class cmsg_social_agreeDefaultTypeInternal;
extern cmsg_social_agreeDefaultTypeInternal _cmsg_social_agree_default_instance_;
class cmsg_social_delete;
class cmsg_social_deleteDefaultTypeInternal;
extern cmsg_social_deleteDefaultTypeInternal _cmsg_social_delete_default_instance_;
class cmsg_social_invite_active;
class cmsg_social_invite_activeDefaultTypeInternal;
extern cmsg_social_invite_activeDefaultTypeInternal _cmsg_social_invite_active_default_instance_;
class cmsg_social_song;
class cmsg_social_songDefaultTypeInternal;
extern cmsg_social_songDefaultTypeInternal _cmsg_social_song_default_instance_;
class cmsg_sport_fight_end;
class cmsg_sport_fight_endDefaultTypeInternal;
extern cmsg_sport_fight_endDefaultTypeInternal _cmsg_sport_fight_end_default_instance_;
class cmsg_sport_saodang;
class cmsg_sport_saodangDefaultTypeInternal;
extern cmsg_sport_saodangDefaultTypeInternal _cmsg_sport_saodang_default_instance_;
class cmsg_sport_shop_buy;
class cmsg_sport_shop_buyDefaultTypeInternal;
extern cmsg_sport_shop_buyDefaultTypeInternal _cmsg_sport_shop_buy_default_instance_;
class cmsg_team_invite_friend;
class cmsg_team_invite_friendDefaultTypeInternal;
extern cmsg_team_invite_friendDefaultTypeInternal _cmsg_team_invite_friend_default_instance_;
class cmsg_treasure_buy;
class cmsg_treasure_buyDefaultTypeInternal;
extern cmsg_treasure_buyDefaultTypeInternal _cmsg_treasure_buy_default_instance_;
class cmsg_treasure_enhance;
class cmsg_treasure_enhanceDefaultTypeInternal;
extern cmsg_treasure_enhanceDefaultTypeInternal _cmsg_treasure_enhance_default_instance_;
class cmsg_treasure_equip;
class cmsg_treasure_equipDefaultTypeInternal;
extern cmsg_treasure_equipDefaultTypeInternal _cmsg_treasure_equip_default_instance_;
class cmsg_treasure_fight;
class cmsg_treasure_fightDefaultTypeInternal;
extern cmsg_treasure_fightDefaultTypeInternal _cmsg_treasure_fight_default_instance_;
class cmsg_treasure_fight_end;
class cmsg_treasure_fight_endDefaultTypeInternal;
extern cmsg_treasure_fight_endDefaultTypeInternal _cmsg_treasure_fight_end_default_instance_;
class cmsg_treasure_hecheng;
class cmsg_treasure_hechengDefaultTypeInternal;
extern cmsg_treasure_hechengDefaultTypeInternal _cmsg_treasure_hecheng_default_instance_;
class cmsg_treasure_init;
class cmsg_treasure_initDefaultTypeInternal;
extern cmsg_treasure_initDefaultTypeInternal _cmsg_treasure_init_default_instance_;
class cmsg_treasure_jinlian;
class cmsg_treasure_jinlianDefaultTypeInternal;
extern cmsg_treasure_jinlianDefaultTypeInternal _cmsg_treasure_jinlian_default_instance_;
class cmsg_treasure_lock;
class cmsg_treasure_lockDefaultTypeInternal;
extern cmsg_treasure_lockDefaultTypeInternal _cmsg_treasure_lock_default_instance_;
class cmsg_treasure_protect;
class cmsg_treasure_protectDefaultTypeInternal;
extern cmsg_treasure_protectDefaultTypeInternal _cmsg_treasure_protect_default_instance_;
class cmsg_treasure_report_ex;
class cmsg_treasure_report_exDefaultTypeInternal;
extern cmsg_treasure_report_exDefaultTypeInternal _cmsg_treasure_report_ex_default_instance_;
class cmsg_treasure_rob_view;
class cmsg_treasure_rob_viewDefaultTypeInternal;
extern cmsg_treasure_rob_viewDefaultTypeInternal _cmsg_treasure_rob_view_default_instance_;
class cmsg_treasure_ronglian;
class cmsg_treasure_ronglianDefaultTypeInternal;
extern cmsg_treasure_ronglianDefaultTypeInternal _cmsg_treasure_ronglian_default_instance_;
class cmsg_treasure_saodang;
class cmsg_treasure_saodangDefaultTypeInternal;
extern cmsg_treasure_saodangDefaultTypeInternal _cmsg_treasure_saodang_default_instance_;
class cmsg_treasure_star;
class cmsg_treasure_starDefaultTypeInternal;
extern cmsg_treasure_starDefaultTypeInternal _cmsg_treasure_star_default_instance_;
class cmsg_treasure_yijian_saodang;
class cmsg_treasure_yijian_saodangDefaultTypeInternal;
extern cmsg_treasure_yijian_saodangDefaultTypeInternal _cmsg_treasure_yijian_saodang_default_instance_;
class cmsg_treasure_zhuzao;
class cmsg_treasure_zhuzaoDefaultTypeInternal;
extern cmsg_treasure_zhuzaoDefaultTypeInternal _cmsg_treasure_zhuzao_default_instance_;
class cmsg_ttt_fight_end;
class cmsg_ttt_fight_endDefaultTypeInternal;
extern cmsg_ttt_fight_endDefaultTypeInternal _cmsg_ttt_fight_end_default_instance_;
class cmsg_ttt_value;
class cmsg_ttt_valueDefaultTypeInternal;
extern cmsg_ttt_valueDefaultTypeInternal _cmsg_ttt_value_default_instance_;
class cmsg_vip_reward;
class cmsg_vip_rewardDefaultTypeInternal;
extern cmsg_vip_rewardDefaultTypeInternal _cmsg_vip_reward_default_instance_;
class cmsg_xjbz_get;
class cmsg_xjbz_getDefaultTypeInternal;
extern cmsg_xjbz_getDefaultTypeInternal _cmsg_xjbz_get_default_instance_;
class cmsg_yb_look_ex;
class cmsg_yb_look_exDefaultTypeInternal;
extern cmsg_yb_look_exDefaultTypeInternal _cmsg_yb_look_ex_default_instance_;
class cmsg_yb_ybq_fight_end;
class cmsg_yb_ybq_fight_endDefaultTypeInternal;
extern cmsg_yb_ybq_fight_endDefaultTypeInternal _cmsg_yb_ybq_fight_end_default_instance_;
class cmsg_zhenxing;
class cmsg_zhenxingDefaultTypeInternal;
extern cmsg_zhenxingDefaultTypeInternal _cmsg_zhenxing_default_instance_;
class msg_common;
class msg_commonDefaultTypeInternal;
extern msg_commonDefaultTypeInternal _msg_common_default_instance_;
class msg_common_ex;
class msg_common_exDefaultTypeInternal;
extern msg_common_exDefaultTypeInternal _msg_common_ex_default_instance_;
class msg_fight_bo;
class msg_fight_boDefaultTypeInternal;
extern msg_fight_boDefaultTypeInternal _msg_fight_bo_default_instance_;
class msg_fight_role;
class msg_fight_roleDefaultTypeInternal;
extern msg_fight_roleDefaultTypeInternal _msg_fight_role_default_instance_;
class msg_fight_state;
class msg_fight_stateDefaultTypeInternal;
extern msg_fight_stateDefaultTypeInternal _msg_fight_state_default_instance_;
class msg_fight_text;
class msg_fight_textDefaultTypeInternal;
extern msg_fight_textDefaultTypeInternal _msg_fight_text_default_instance_;
class msg_fight_tick;
class msg_fight_tickDefaultTypeInternal;
extern msg_fight_tickDefaultTypeInternal _msg_fight_tick_default_instance_;
class msg_guild_arrange;
class msg_guild_arrangeDefaultTypeInternal;
extern msg_guild_arrangeDefaultTypeInternal _msg_guild_arrange_default_instance_;
class msg_guild_fight;
class msg_guild_fightDefaultTypeInternal;
extern msg_guild_fightDefaultTypeInternal _msg_guild_fight_default_instance_;
class msg_guild_fight_info;
class msg_guild_fight_infoDefaultTypeInternal;
extern msg_guild_fight_infoDefaultTypeInternal _msg_guild_fight_info_default_instance_;
class msg_guild_member_info;
class msg_guild_member_infoDefaultTypeInternal;
extern msg_guild_member_infoDefaultTypeInternal _msg_guild_member_info_default_instance_;
class msg_guild_zhanji;
class msg_guild_zhanjiDefaultTypeInternal;
extern msg_guild_zhanjiDefaultTypeInternal _msg_guild_zhanji_default_instance_;
class msg_social_player;
class msg_social_playerDefaultTypeInternal;
extern msg_social_playerDefaultTypeInternal _msg_social_player_default_instance_;
class msg_sport_player;
class msg_sport_playerDefaultTypeInternal;
extern msg_sport_playerDefaultTypeInternal _msg_sport_player_default_instance_;
class msg_yb_info;
class msg_yb_infoDefaultTypeInternal;
extern msg_yb_infoDefaultTypeInternal _msg_yb_info_default_instance_;
class msg_yb_player;
class msg_yb_playerDefaultTypeInternal;
extern msg_yb_playerDefaultTypeInternal _msg_yb_player_default_instance_;
class msg_ybq_info;
class msg_ybq_infoDefaultTypeInternal;
extern msg_ybq_infoDefaultTypeInternal _msg_ybq_info_default_instance_;
class pmsg_chat;
class pmsg_chatDefaultTypeInternal;
extern pmsg_chatDefaultTypeInternal _pmsg_chat_default_instance_;
class smsg_active_reward;
class smsg_active_rewardDefaultTypeInternal;
extern smsg_active_rewardDefaultTypeInternal _smsg_active_reward_default_instance_;
class smsg_active_score_reward;
class smsg_active_score_rewardDefaultTypeInternal;
extern smsg_active_score_rewardDefaultTypeInternal _smsg_active_score_reward_default_instance_;
class smsg_bingyuan_fight_end;
class smsg_bingyuan_fight_endDefaultTypeInternal;
extern smsg_bingyuan_fight_endDefaultTypeInternal _smsg_bingyuan_fight_end_default_instance_;
class smsg_boss_active_look;
class smsg_boss_active_lookDefaultTypeInternal;
extern smsg_boss_active_lookDefaultTypeInternal _smsg_boss_active_look_default_instance_;
class smsg_boss_fight_end;
class smsg_boss_fight_endDefaultTypeInternal;
extern smsg_boss_fight_endDefaultTypeInternal _smsg_boss_fight_end_default_instance_;
class smsg_boss_look;
class smsg_boss_lookDefaultTypeInternal;
extern smsg_boss_lookDefaultTypeInternal _smsg_boss_look_default_instance_;
class smsg_boss_rank;
class smsg_boss_rankDefaultTypeInternal;
extern smsg_boss_rankDefaultTypeInternal _smsg_boss_rank_default_instance_;
class smsg_boss_saodang;
class smsg_boss_saodangDefaultTypeInternal;
extern smsg_boss_saodangDefaultTypeInternal _smsg_boss_saodang_default_instance_;
class smsg_chat;
class smsg_chatDefaultTypeInternal;
extern smsg_chatDefaultTypeInternal _smsg_chat_default_instance_;
class smsg_chouka;
class smsg_choukaDefaultTypeInternal;
extern smsg_choukaDefaultTypeInternal _smsg_chouka_default_instance_;
class smsg_client_login;
class smsg_client_loginDefaultTypeInternal;
extern smsg_client_loginDefaultTypeInternal _smsg_client_login_default_instance_;
class smsg_daily_sign;
class smsg_daily_signDefaultTypeInternal;
extern smsg_daily_signDefaultTypeInternal _smsg_daily_sign_default_instance_;
class smsg_dj_reward;
class smsg_dj_rewardDefaultTypeInternal;
extern smsg_dj_rewardDefaultTypeInternal _smsg_dj_reward_default_instance_;
class smsg_ds_fight_end;
class smsg_ds_fight_endDefaultTypeInternal;
extern smsg_ds_fight_endDefaultTypeInternal _smsg_ds_fight_end_default_instance_;
class smsg_equip_gaizao;
class smsg_equip_gaizaoDefaultTypeInternal;
extern smsg_equip_gaizaoDefaultTypeInternal _smsg_equip_gaizao_default_instance_;
class smsg_equip_init;
class smsg_equip_initDefaultTypeInternal;
extern smsg_equip_initDefaultTypeInternal _smsg_equip_init_default_instance_;
class smsg_equip_suipian;
class smsg_equip_suipianDefaultTypeInternal;
extern smsg_equip_suipianDefaultTypeInternal _smsg_equip_suipian_default_instance_;
class smsg_first_recharge;
class smsg_first_rechargeDefaultTypeInternal;
extern smsg_first_rechargeDefaultTypeInternal _smsg_first_recharge_default_instance_;
class smsg_gm_command;
class smsg_gm_commandDefaultTypeInternal;
extern smsg_gm_commandDefaultTypeInternal _smsg_gm_command_default_instance_;
class smsg_guild_activity;
class smsg_guild_activityDefaultTypeInternal;
extern smsg_guild_activityDefaultTypeInternal _smsg_guild_activity_default_instance_;
class smsg_guild_data;
class smsg_guild_dataDefaultTypeInternal;
extern smsg_guild_dataDefaultTypeInternal _smsg_guild_data_default_instance_;
class smsg_guild_fight;
class smsg_guild_fightDefaultTypeInternal;
extern smsg_guild_fightDefaultTypeInternal _smsg_guild_fight_default_instance_;
class smsg_guild_fight_pvp_look;
class smsg_guild_fight_pvp_lookDefaultTypeInternal;
extern smsg_guild_fight_pvp_lookDefaultTypeInternal _smsg_guild_fight_pvp_look_default_instance_;
class smsg_guild_list_recommend;
class smsg_guild_list_recommendDefaultTypeInternal;
extern smsg_guild_list_recommendDefaultTypeInternal _smsg_guild_list_recommend_default_instance_;
class smsg_guild_look_zhanji;
class smsg_guild_look_zhanjiDefaultTypeInternal;
extern smsg_guild_look_zhanjiDefaultTypeInternal _smsg_guild_look_zhanji_default_instance_;
class smsg_guild_look_zhankuang;
class smsg_guild_look_zhankuangDefaultTypeInternal;
extern smsg_guild_look_zhankuangDefaultTypeInternal _smsg_guild_look_zhankuang_default_instance_;
class smsg_guild_member_view;
class smsg_guild_member_viewDefaultTypeInternal;
extern smsg_guild_member_viewDefaultTypeInternal _smsg_guild_member_view_default_instance_;
class smsg_guild_message_view;
class smsg_guild_message_viewDefaultTypeInternal;
extern smsg_guild_message_viewDefaultTypeInternal _smsg_guild_message_view_default_instance_;
class smsg_guild_mission_complete_reward;
class smsg_guild_mission_complete_rewardDefaultTypeInternal;
extern smsg_guild_mission_complete_rewardDefaultTypeInternal _smsg_guild_mission_complete_reward_default_instance_;
class smsg_guild_mission_complete_reward_view;
class smsg_guild_mission_complete_reward_viewDefaultTypeInternal;
extern smsg_guild_mission_complete_reward_viewDefaultTypeInternal _smsg_guild_mission_complete_reward_view_default_instance_;
class smsg_guild_mission_fight_end;
class smsg_guild_mission_fight_endDefaultTypeInternal;
extern smsg_guild_mission_fight_endDefaultTypeInternal _smsg_guild_mission_fight_end_default_instance_;
class smsg_guild_mission_look;
class smsg_guild_mission_lookDefaultTypeInternal;
extern smsg_guild_mission_lookDefaultTypeInternal _smsg_guild_mission_look_default_instance_;
class smsg_guild_mission_ranking;
class smsg_guild_mission_rankingDefaultTypeInternal;
extern smsg_guild_mission_rankingDefaultTypeInternal _smsg_guild_mission_ranking_default_instance_;
class smsg_guild_ranking;
class smsg_guild_rankingDefaultTypeInternal;
extern smsg_guild_rankingDefaultTypeInternal _smsg_guild_ranking_default_instance_;
class smsg_guild_red_deliver;
class smsg_guild_red_deliverDefaultTypeInternal;
extern smsg_guild_red_deliverDefaultTypeInternal _smsg_guild_red_deliver_default_instance_;
class smsg_guild_red_rob;
class smsg_guild_red_robDefaultTypeInternal;
extern smsg_guild_red_robDefaultTypeInternal _smsg_guild_red_rob_default_instance_;
class smsg_guild_red_view;
class smsg_guild_red_viewDefaultTypeInternal;
extern smsg_guild_red_viewDefaultTypeInternal _smsg_guild_red_view_default_instance_;
class smsg_gundong;
class smsg_gundongDefaultTypeInternal;
extern smsg_gundongDefaultTypeInternal _smsg_gundong_default_instance_;
class smsg_gundong_server;
class smsg_gundong_serverDefaultTypeInternal;
extern smsg_gundong_serverDefaultTypeInternal _smsg_gundong_server_default_instance_;
class smsg_hbb_fight_end;
class smsg_hbb_fight_endDefaultTypeInternal;
extern smsg_hbb_fight_endDefaultTypeInternal _smsg_hbb_fight_end_default_instance_;
class smsg_hbb_look;
class smsg_hbb_lookDefaultTypeInternal;
extern smsg_hbb_lookDefaultTypeInternal _smsg_hbb_look_default_instance_;
class smsg_item_apply;
class smsg_item_applyDefaultTypeInternal;
extern smsg_item_applyDefaultTypeInternal _smsg_item_apply_default_instance_;
class smsg_libao;
class smsg_libaoDefaultTypeInternal;
extern smsg_libaoDefaultTypeInternal _smsg_libao_default_instance_;
class smsg_mission_fight_end;
class smsg_mission_fight_endDefaultTypeInternal;
extern smsg_mission_fight_endDefaultTypeInternal _smsg_mission_fight_end_default_instance_;
class smsg_mission_first;
class smsg_mission_firstDefaultTypeInternal;
extern smsg_mission_firstDefaultTypeInternal _smsg_mission_first_default_instance_;
class smsg_mission_saodang;
class smsg_mission_saodangDefaultTypeInternal;
extern smsg_mission_saodangDefaultTypeInternal _smsg_mission_saodang_default_instance_;
class smsg_online_reward;
class smsg_online_rewardDefaultTypeInternal;
extern smsg_online_rewardDefaultTypeInternal _smsg_online_reward_default_instance_;
class smsg_ore_fight_end;
class smsg_ore_fight_endDefaultTypeInternal;
extern smsg_ore_fight_endDefaultTypeInternal _smsg_ore_fight_end_default_instance_;
class smsg_pet_duihuan;
class smsg_pet_duihuanDefaultTypeInternal;
extern smsg_pet_duihuanDefaultTypeInternal _smsg_pet_duihuan_default_instance_;
class smsg_pet_init;
class smsg_pet_initDefaultTypeInternal;
extern smsg_pet_initDefaultTypeInternal _smsg_pet_init_default_instance_;
class smsg_player_check;
class smsg_player_checkDefaultTypeInternal;
extern smsg_player_checkDefaultTypeInternal _smsg_player_check_default_instance_;
class smsg_player_look;
class smsg_player_lookDefaultTypeInternal;
extern smsg_player_lookDefaultTypeInternal _smsg_player_look_default_instance_;
class smsg_player_name;
class smsg_player_nameDefaultTypeInternal;
extern smsg_player_nameDefaultTypeInternal _smsg_player_name_default_instance_;
class smsg_post_get;
class smsg_post_getDefaultTypeInternal;
extern smsg_post_getDefaultTypeInternal _smsg_post_get_default_instance_;
class smsg_post_look;
class smsg_post_lookDefaultTypeInternal;
extern smsg_post_lookDefaultTypeInternal _smsg_post_look_default_instance_;
class smsg_post_view;
class smsg_post_viewDefaultTypeInternal;
extern smsg_post_viewDefaultTypeInternal _smsg_post_view_default_instance_;
class smsg_pvp_fight_end;
class smsg_pvp_fight_endDefaultTypeInternal;
extern smsg_pvp_fight_endDefaultTypeInternal _smsg_pvp_fight_end_default_instance_;
class smsg_pvp_view;
class smsg_pvp_viewDefaultTypeInternal;
extern smsg_pvp_viewDefaultTypeInternal _smsg_pvp_view_default_instance_;
class smsg_qiecuo;
class smsg_qiecuoDefaultTypeInternal;
extern smsg_qiecuoDefaultTypeInternal _smsg_qiecuo_default_instance_;
class smsg_qiyu_check;
class smsg_qiyu_checkDefaultTypeInternal;
extern smsg_qiyu_checkDefaultTypeInternal _smsg_qiyu_check_default_instance_;
class smsg_qiyu_fight_end;
class smsg_qiyu_fight_endDefaultTypeInternal;
extern smsg_qiyu_fight_endDefaultTypeInternal _smsg_qiyu_fight_end_default_instance_;
class smsg_random_event_get;
class smsg_random_event_getDefaultTypeInternal;
extern smsg_random_event_getDefaultTypeInternal _smsg_random_event_get_default_instance_;
class smsg_random_event_look;
class smsg_random_event_lookDefaultTypeInternal;
extern smsg_random_event_lookDefaultTypeInternal _smsg_random_event_look_default_instance_;
class smsg_rank_view;
class smsg_rank_viewDefaultTypeInternal;
extern smsg_rank_viewDefaultTypeInternal _smsg_rank_view_default_instance_;
class smsg_recharge_check_ex;
class smsg_recharge_check_exDefaultTypeInternal;
extern smsg_recharge_check_exDefaultTypeInternal _smsg_recharge_check_ex_default_instance_;
class smsg_role_duihuan;
class smsg_role_duihuanDefaultTypeInternal;
extern smsg_role_duihuanDefaultTypeInternal _smsg_role_duihuan_default_instance_;
class smsg_role_huiyi_chou;
class smsg_role_huiyi_chouDefaultTypeInternal;
extern smsg_role_huiyi_chouDefaultTypeInternal _smsg_role_huiyi_chou_default_instance_;
class smsg_role_huiyi_rank;
class smsg_role_huiyi_rankDefaultTypeInternal;
extern smsg_role_huiyi_rankDefaultTypeInternal _smsg_role_huiyi_rank_default_instance_;
class smsg_role_huiyi_zhanpu;
class smsg_role_huiyi_zhanpuDefaultTypeInternal;
extern smsg_role_huiyi_zhanpuDefaultTypeInternal _smsg_role_huiyi_zhanpu_default_instance_;
class smsg_role_init;
class smsg_role_initDefaultTypeInternal;
extern smsg_role_initDefaultTypeInternal _smsg_role_init_default_instance_;
class smsg_role_skillup;
class smsg_role_skillupDefaultTypeInternal;
extern smsg_role_skillupDefaultTypeInternal _smsg_role_skillup_default_instance_;
class smsg_role_xq_look;
class smsg_role_xq_lookDefaultTypeInternal;
extern smsg_role_xq_lookDefaultTypeInternal _smsg_role_xq_look_default_instance_;
class smsg_role_yh_look;
class smsg_role_yh_lookDefaultTypeInternal;
extern smsg_role_yh_lookDefaultTypeInternal _smsg_role_yh_look_default_instance_;
class smsg_role_yh_select;
class smsg_role_yh_selectDefaultTypeInternal;
extern smsg_role_yh_selectDefaultTypeInternal _smsg_role_yh_select_default_instance_;
class smsg_shop_buy;
class smsg_shop_buyDefaultTypeInternal;
extern smsg_shop_buyDefaultTypeInternal _smsg_shop_buy_default_instance_;
class smsg_shop_refresh;
class smsg_shop_refreshDefaultTypeInternal;
extern smsg_shop_refreshDefaultTypeInternal _smsg_shop_refresh_default_instance_;
class smsg_social_add;
class smsg_social_addDefaultTypeInternal;
extern smsg_social_addDefaultTypeInternal _smsg_social_add_default_instance_;
class smsg_social_agree;
class smsg_social_agreeDefaultTypeInternal;
extern smsg_social_agreeDefaultTypeInternal _smsg_social_agree_default_instance_;
class smsg_social_delete;
class smsg_social_deleteDefaultTypeInternal;
extern smsg_social_deleteDefaultTypeInternal _smsg_social_delete_default_instance_;
class smsg_social_look;
class smsg_social_lookDefaultTypeInternal;
extern smsg_social_lookDefaultTypeInternal _smsg_social_look_default_instance_;
class smsg_social_look_new;
class smsg_social_look_newDefaultTypeInternal;
extern smsg_social_look_newDefaultTypeInternal _smsg_social_look_new_default_instance_;
class smsg_social_rand;
class smsg_social_randDefaultTypeInternal;
extern smsg_social_randDefaultTypeInternal _smsg_social_rand_default_instance_;
class smsg_social_shou;
class smsg_social_shouDefaultTypeInternal;
extern smsg_social_shouDefaultTypeInternal _smsg_social_shou_default_instance_;
class smsg_social_song;
class smsg_social_songDefaultTypeInternal;
extern smsg_social_songDefaultTypeInternal _smsg_social_song_default_instance_;
class smsg_sport_fight_end;
class smsg_sport_fight_endDefaultTypeInternal;
extern smsg_sport_fight_endDefaultTypeInternal _smsg_sport_fight_end_default_instance_;
class smsg_sport_look;
class smsg_sport_lookDefaultTypeInternal;
extern smsg_sport_lookDefaultTypeInternal _smsg_sport_look_default_instance_;
class smsg_sport_saodang;
class smsg_sport_saodangDefaultTypeInternal;
extern smsg_sport_saodangDefaultTypeInternal _smsg_sport_saodang_default_instance_;
class smsg_sport_shop_buy;
class smsg_sport_shop_buyDefaultTypeInternal;
extern smsg_sport_shop_buyDefaultTypeInternal _smsg_sport_shop_buy_default_instance_;
class smsg_sport_shop_list;
class smsg_sport_shop_listDefaultTypeInternal;
extern smsg_sport_shop_listDefaultTypeInternal _smsg_sport_shop_list_default_instance_;
class smsg_sport_top;
class smsg_sport_topDefaultTypeInternal;
extern smsg_sport_topDefaultTypeInternal _smsg_sport_top_default_instance_;
class smsg_success;
class smsg_successDefaultTypeInternal;
extern smsg_successDefaultTypeInternal _smsg_success_default_instance_;
class smsg_team_friend_view;
class smsg_team_friend_viewDefaultTypeInternal;
extern smsg_team_friend_viewDefaultTypeInternal _smsg_team_friend_view_default_instance_;
class smsg_treasure_fight;
class smsg_treasure_fightDefaultTypeInternal;
extern smsg_treasure_fightDefaultTypeInternal _smsg_treasure_fight_default_instance_;
class smsg_treasure_fight_end;
class smsg_treasure_fight_endDefaultTypeInternal;
extern smsg_treasure_fight_endDefaultTypeInternal _smsg_treasure_fight_end_default_instance_;
class smsg_treasure_hecheng;
class smsg_treasure_hechengDefaultTypeInternal;
extern smsg_treasure_hechengDefaultTypeInternal _smsg_treasure_hecheng_default_instance_;
class smsg_treasure_init;
class smsg_treasure_initDefaultTypeInternal;
extern smsg_treasure_initDefaultTypeInternal _smsg_treasure_init_default_instance_;
class smsg_treasure_jinlian;
class smsg_treasure_jinlianDefaultTypeInternal;
extern smsg_treasure_jinlianDefaultTypeInternal _smsg_treasure_jinlian_default_instance_;
class smsg_treasure_point;
class smsg_treasure_pointDefaultTypeInternal;
extern smsg_treasure_pointDefaultTypeInternal _smsg_treasure_point_default_instance_;
class smsg_treasure_protect;
class smsg_treasure_protectDefaultTypeInternal;
extern smsg_treasure_protectDefaultTypeInternal _smsg_treasure_protect_default_instance_;
class smsg_treasure_report;
class smsg_treasure_reportDefaultTypeInternal;
extern smsg_treasure_reportDefaultTypeInternal _smsg_treasure_report_default_instance_;
class smsg_treasure_rob_view;
class smsg_treasure_rob_viewDefaultTypeInternal;
extern smsg_treasure_rob_viewDefaultTypeInternal _smsg_treasure_rob_view_default_instance_;
class smsg_treasure_saodang;
class smsg_treasure_saodangDefaultTypeInternal;
extern smsg_treasure_saodangDefaultTypeInternal _smsg_treasure_saodang_default_instance_;
class smsg_treasure_star;
class smsg_treasure_starDefaultTypeInternal;
extern smsg_treasure_starDefaultTypeInternal _smsg_treasure_star_default_instance_;
class smsg_treasure_yijian_saodang;
class smsg_treasure_yijian_saodangDefaultTypeInternal;
extern smsg_treasure_yijian_saodangDefaultTypeInternal _smsg_treasure_yijian_saodang_default_instance_;
class smsg_treasure_zhuzao;
class smsg_treasure_zhuzaoDefaultTypeInternal;
extern smsg_treasure_zhuzaoDefaultTypeInternal _smsg_treasure_zhuzao_default_instance_;
class smsg_ttt_fight_end;
class smsg_ttt_fight_endDefaultTypeInternal;
extern smsg_ttt_fight_endDefaultTypeInternal _smsg_ttt_fight_end_default_instance_;
class smsg_ttt_sanxing;
class smsg_ttt_sanxingDefaultTypeInternal;
extern smsg_ttt_sanxingDefaultTypeInternal _smsg_ttt_sanxing_default_instance_;
class smsg_ttt_value_look;
class smsg_ttt_value_lookDefaultTypeInternal;
extern smsg_ttt_value_lookDefaultTypeInternal _smsg_ttt_value_look_default_instance_;
class smsg_vip_reward;
class smsg_vip_rewardDefaultTypeInternal;
extern smsg_vip_rewardDefaultTypeInternal _smsg_vip_reward_default_instance_;
class smsg_xjbz_get;
class smsg_xjbz_getDefaultTypeInternal;
extern smsg_xjbz_getDefaultTypeInternal _smsg_xjbz_get_default_instance_;
class smsg_yb_look;
class smsg_yb_lookDefaultTypeInternal;
extern smsg_yb_lookDefaultTypeInternal _smsg_yb_look_default_instance_;
class smsg_yb_refresh;
class smsg_yb_refreshDefaultTypeInternal;
extern smsg_yb_refreshDefaultTypeInternal _smsg_yb_refresh_default_instance_;
class smsg_yb_reward;
class smsg_yb_rewardDefaultTypeInternal;
extern smsg_yb_rewardDefaultTypeInternal _smsg_yb_reward_default_instance_;
class smsg_yb_ybq_fight_end;
class smsg_yb_ybq_fight_endDefaultTypeInternal;
extern smsg_yb_ybq_fight_endDefaultTypeInternal _smsg_yb_ybq_fight_end_default_instance_;
class tmsg_guild_pvp_load;
class tmsg_guild_pvp_loadDefaultTypeInternal;
extern tmsg_guild_pvp_loadDefaultTypeInternal _tmsg_guild_pvp_load_default_instance_;
class tmsg_guild_pvp_load_fight;
class tmsg_guild_pvp_load_fightDefaultTypeInternal;
extern tmsg_guild_pvp_load_fightDefaultTypeInternal _tmsg_guild_pvp_load_fight_default_instance_;
}  // namespace game
}  // namespace protocol
namespace google {
namespace protobuf {
template<> ::protocol::game::cmsg_active_reward* Arena::CreateMaybeMessage<::protocol::game::cmsg_active_reward>(Arena*);
template<> ::protocol::game::cmsg_active_score_reward* Arena::CreateMaybeMessage<::protocol::game::cmsg_active_score_reward>(Arena*);
template<> ::protocol::game::cmsg_bingyuan_fight* Arena::CreateMaybeMessage<::protocol::game::cmsg_bingyuan_fight>(Arena*);
template<> ::protocol::game::cmsg_boss_saodang* Arena::CreateMaybeMessage<::protocol::game::cmsg_boss_saodang>(Arena*);
template<> ::protocol::game::cmsg_chat_ex* Arena::CreateMaybeMessage<::protocol::game::cmsg_chat_ex>(Arena*);
template<> ::protocol::game::cmsg_chenghao_on* Arena::CreateMaybeMessage<::protocol::game::cmsg_chenghao_on>(Arena*);
template<> ::protocol::game::cmsg_chouka* Arena::CreateMaybeMessage<::protocol::game::cmsg_chouka>(Arena*);
template<> ::protocol::game::cmsg_client_login* Arena::CreateMaybeMessage<::protocol::game::cmsg_client_login>(Arena*);
template<> ::protocol::game::cmsg_common* Arena::CreateMaybeMessage<::protocol::game::cmsg_common>(Arena*);
template<> ::protocol::game::cmsg_common_ex* Arena::CreateMaybeMessage<::protocol::game::cmsg_common_ex>(Arena*);
template<> ::protocol::game::cmsg_dress_buy* Arena::CreateMaybeMessage<::protocol::game::cmsg_dress_buy>(Arena*);
template<> ::protocol::game::cmsg_dress_off* Arena::CreateMaybeMessage<::protocol::game::cmsg_dress_off>(Arena*);
template<> ::protocol::game::cmsg_dress_on* Arena::CreateMaybeMessage<::protocol::game::cmsg_dress_on>(Arena*);
template<> ::protocol::game::cmsg_dress_unlock* Arena::CreateMaybeMessage<::protocol::game::cmsg_dress_unlock>(Arena*);
template<> ::protocol::game::cmsg_dress_unlock_achieve* Arena::CreateMaybeMessage<::protocol::game::cmsg_dress_unlock_achieve>(Arena*);
template<> ::protocol::game::cmsg_ds_fight* Arena::CreateMaybeMessage<::protocol::game::cmsg_ds_fight>(Arena*);
template<> ::protocol::game::cmsg_duixing* Arena::CreateMaybeMessage<::protocol::game::cmsg_duixing>(Arena*);
template<> ::protocol::game::cmsg_duixing_on* Arena::CreateMaybeMessage<::protocol::game::cmsg_duixing_on>(Arena*);
template<> ::protocol::game::cmsg_equip_auto_enhance* Arena::CreateMaybeMessage<::protocol::game::cmsg_equip_auto_enhance>(Arena*);
template<> ::protocol::game::cmsg_equip_enhance* Arena::CreateMaybeMessage<::protocol::game::cmsg_equip_enhance>(Arena*);
template<> ::protocol::game::cmsg_equip_gaizao* Arena::CreateMaybeMessage<::protocol::game::cmsg_equip_gaizao>(Arena*);
template<> ::protocol::game::cmsg_equip_gaizao_buy* Arena::CreateMaybeMessage<::protocol::game::cmsg_equip_gaizao_buy>(Arena*);
template<> ::protocol::game::cmsg_equip_init* Arena::CreateMaybeMessage<::protocol::game::cmsg_equip_init>(Arena*);
template<> ::protocol::game::cmsg_equip_jinlian* Arena::CreateMaybeMessage<::protocol::game::cmsg_equip_jinlian>(Arena*);
template<> ::protocol::game::cmsg_equip_lock* Arena::CreateMaybeMessage<::protocol::game::cmsg_equip_lock>(Arena*);
template<> ::protocol::game::cmsg_equip_ronglian* Arena::CreateMaybeMessage<::protocol::game::cmsg_equip_ronglian>(Arena*);
template<> ::protocol::game::cmsg_equip_sell* Arena::CreateMaybeMessage<::protocol::game::cmsg_equip_sell>(Arena*);
template<> ::protocol::game::cmsg_equip_star* Arena::CreateMaybeMessage<::protocol::game::cmsg_equip_star>(Arena*);
template<> ::protocol::game::cmsg_equip_suipian* Arena::CreateMaybeMessage<::protocol::game::cmsg_equip_suipian>(Arena*);
template<> ::protocol::game::cmsg_gm_command* Arena::CreateMaybeMessage<::protocol::game::cmsg_gm_command>(Arena*);
template<> ::protocol::game::cmsg_guanghuan_init* Arena::CreateMaybeMessage<::protocol::game::cmsg_guanghuan_init>(Arena*);
template<> ::protocol::game::cmsg_guanghuan_level* Arena::CreateMaybeMessage<::protocol::game::cmsg_guanghuan_level>(Arena*);
template<> ::protocol::game::cmsg_guanghuan_on* Arena::CreateMaybeMessage<::protocol::game::cmsg_guanghuan_on>(Arena*);
template<> ::protocol::game::cmsg_guild_agree* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_agree>(Arena*);
template<> ::protocol::game::cmsg_guild_apply* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_apply>(Arena*);
template<> ::protocol::game::cmsg_guild_change_member_duty* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_change_member_duty>(Arena*);
template<> ::protocol::game::cmsg_guild_create* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_create>(Arena*);
template<> ::protocol::game::cmsg_guild_fight* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_fight>(Arena*);
template<> ::protocol::game::cmsg_guild_join* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_join>(Arena*);
template<> ::protocol::game::cmsg_guild_keji* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_keji>(Arena*);
template<> ::protocol::game::cmsg_guild_kick_member* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_kick_member>(Arena*);
template<> ::protocol::game::cmsg_guild_look_zhanji* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_look_zhanji>(Arena*);
template<> ::protocol::game::cmsg_guild_look_zhankuang* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_look_zhankuang>(Arena*);
template<> ::protocol::game::cmsg_guild_message_add* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_message_add>(Arena*);
template<> ::protocol::game::cmsg_guild_message_delete* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_message_delete>(Arena*);
template<> ::protocol::game::cmsg_guild_message_top* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_message_top>(Arena*);
template<> ::protocol::game::cmsg_guild_mission_ceng_reward* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_mission_ceng_reward>(Arena*);
template<> ::protocol::game::cmsg_guild_mission_complete_reward* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_mission_complete_reward>(Arena*);
template<> ::protocol::game::cmsg_guild_mission_complete_reward_view* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_mission_complete_reward_view>(Arena*);
template<> ::protocol::game::cmsg_guild_mission_fight_end* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_mission_fight_end>(Arena*);
template<> ::protocol::game::cmsg_guild_modify_bulletin* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_modify_bulletin>(Arena*);
template<> ::protocol::game::cmsg_guild_modify_icon* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_modify_icon>(Arena*);
template<> ::protocol::game::cmsg_guild_pvp_bushu* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_pvp_bushu>(Arena*);
template<> ::protocol::game::cmsg_guild_pvp_reward* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_pvp_reward>(Arena*);
template<> ::protocol::game::cmsg_guild_query* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_query>(Arena*);
template<> ::protocol::game::cmsg_guild_red_deliver* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_red_deliver>(Arena*);
template<> ::protocol::game::cmsg_guild_red_rob* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_red_rob>(Arena*);
template<> ::protocol::game::cmsg_guild_red_target* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_red_target>(Arena*);
template<> ::protocol::game::cmsg_guild_set_join_condition* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_set_join_condition>(Arena*);
template<> ::protocol::game::cmsg_guild_shop_buy* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_shop_buy>(Arena*);
template<> ::protocol::game::cmsg_guild_sign_in* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_sign_in>(Arena*);
template<> ::protocol::game::cmsg_guild_sign_reward* Arena::CreateMaybeMessage<::protocol::game::cmsg_guild_sign_reward>(Arena*);
template<> ::protocol::game::cmsg_item_apply* Arena::CreateMaybeMessage<::protocol::game::cmsg_item_apply>(Arena*);
template<> ::protocol::game::cmsg_item_direct_buy* Arena::CreateMaybeMessage<::protocol::game::cmsg_item_direct_buy>(Arena*);
template<> ::protocol::game::cmsg_item_fenjie* Arena::CreateMaybeMessage<::protocol::game::cmsg_item_fenjie>(Arena*);
template<> ::protocol::game::cmsg_item_sell* Arena::CreateMaybeMessage<::protocol::game::cmsg_item_sell>(Arena*);
template<> ::protocol::game::cmsg_item_sell_all* Arena::CreateMaybeMessage<::protocol::game::cmsg_item_sell_all>(Arena*);
template<> ::protocol::game::cmsg_libao* Arena::CreateMaybeMessage<::protocol::game::cmsg_libao>(Arena*);
template<> ::protocol::game::cmsg_mission_fight_end* Arena::CreateMaybeMessage<::protocol::game::cmsg_mission_fight_end>(Arena*);
template<> ::protocol::game::cmsg_mission_first* Arena::CreateMaybeMessage<::protocol::game::cmsg_mission_first>(Arena*);
template<> ::protocol::game::cmsg_mission_goumai* Arena::CreateMaybeMessage<::protocol::game::cmsg_mission_goumai>(Arena*);
template<> ::protocol::game::cmsg_mission_reward* Arena::CreateMaybeMessage<::protocol::game::cmsg_mission_reward>(Arena*);
template<> ::protocol::game::cmsg_mission_saodang* Arena::CreateMaybeMessage<::protocol::game::cmsg_mission_saodang>(Arena*);
template<> ::protocol::game::cmsg_ore_fight_end* Arena::CreateMaybeMessage<::protocol::game::cmsg_ore_fight_end>(Arena*);
template<> ::protocol::game::cmsg_pet_duihuan* Arena::CreateMaybeMessage<::protocol::game::cmsg_pet_duihuan>(Arena*);
template<> ::protocol::game::cmsg_pet_guard* Arena::CreateMaybeMessage<::protocol::game::cmsg_pet_guard>(Arena*);
template<> ::protocol::game::cmsg_pet_init* Arena::CreateMaybeMessage<::protocol::game::cmsg_pet_init>(Arena*);
template<> ::protocol::game::cmsg_pet_jinjie* Arena::CreateMaybeMessage<::protocol::game::cmsg_pet_jinjie>(Arena*);
template<> ::protocol::game::cmsg_pet_level* Arena::CreateMaybeMessage<::protocol::game::cmsg_pet_level>(Arena*);
template<> ::protocol::game::cmsg_pet_on* Arena::CreateMaybeMessage<::protocol::game::cmsg_pet_on>(Arena*);
template<> ::protocol::game::cmsg_pet_star* Arena::CreateMaybeMessage<::protocol::game::cmsg_pet_star>(Arena*);
template<> ::protocol::game::cmsg_player_look* Arena::CreateMaybeMessage<::protocol::game::cmsg_player_look>(Arena*);
template<> ::protocol::game::cmsg_player_nalflag* Arena::CreateMaybeMessage<::protocol::game::cmsg_player_nalflag>(Arena*);
template<> ::protocol::game::cmsg_player_name* Arena::CreateMaybeMessage<::protocol::game::cmsg_player_name>(Arena*);
template<> ::protocol::game::cmsg_player_task* Arena::CreateMaybeMessage<::protocol::game::cmsg_player_task>(Arena*);
template<> ::protocol::game::cmsg_player_template* Arena::CreateMaybeMessage<::protocol::game::cmsg_player_template>(Arena*);
template<> ::protocol::game::cmsg_player_zsname* Arena::CreateMaybeMessage<::protocol::game::cmsg_player_zsname>(Arena*);
template<> ::protocol::game::cmsg_post_get* Arena::CreateMaybeMessage<::protocol::game::cmsg_post_get>(Arena*);
template<> ::protocol::game::cmsg_post_view* Arena::CreateMaybeMessage<::protocol::game::cmsg_post_view>(Arena*);
template<> ::protocol::game::cmsg_pvp_fight_end* Arena::CreateMaybeMessage<::protocol::game::cmsg_pvp_fight_end>(Arena*);
template<> ::protocol::game::cmsg_qiecuo* Arena::CreateMaybeMessage<::protocol::game::cmsg_qiecuo>(Arena*);
template<> ::protocol::game::cmsg_qiyu_fight_end* Arena::CreateMaybeMessage<::protocol::game::cmsg_qiyu_fight_end>(Arena*);
template<> ::protocol::game::cmsg_random_event_get* Arena::CreateMaybeMessage<::protocol::game::cmsg_random_event_get>(Arena*);
template<> ::protocol::game::cmsg_rank_view* Arena::CreateMaybeMessage<::protocol::game::cmsg_rank_view>(Arena*);
template<> ::protocol::game::cmsg_recharge* Arena::CreateMaybeMessage<::protocol::game::cmsg_recharge>(Arena*);
template<> ::protocol::game::cmsg_role_all_equip* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_all_equip>(Arena*);
template<> ::protocol::game::cmsg_role_bskillup* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_bskillup>(Arena*);
template<> ::protocol::game::cmsg_role_dress_off* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_dress_off>(Arena*);
template<> ::protocol::game::cmsg_role_dress_on* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_dress_on>(Arena*);
template<> ::protocol::game::cmsg_role_duihuan* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_duihuan>(Arena*);
template<> ::protocol::game::cmsg_role_equip* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_equip>(Arena*);
template<> ::protocol::game::cmsg_role_fj* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_fj>(Arena*);
template<> ::protocol::game::cmsg_role_huiyi_chou* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_huiyi_chou>(Arena*);
template<> ::protocol::game::cmsg_role_huiyi_fanpai* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_huiyi_fanpai>(Arena*);
template<> ::protocol::game::cmsg_role_huiyi_jihuo* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_huiyi_jihuo>(Arena*);
template<> ::protocol::game::cmsg_role_init* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_init>(Arena*);
template<> ::protocol::game::cmsg_role_jinjie* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_jinjie>(Arena*);
template<> ::protocol::game::cmsg_role_shengpin* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_shengpin>(Arena*);
template<> ::protocol::game::cmsg_role_skillup* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_skillup>(Arena*);
template<> ::protocol::game::cmsg_role_suipian* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_suipian>(Arena*);
template<> ::protocol::game::cmsg_role_suipian_gaizao* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_suipian_gaizao>(Arena*);
template<> ::protocol::game::cmsg_role_tupo* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_tupo>(Arena*);
template<> ::protocol::game::cmsg_role_upgrade* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_upgrade>(Arena*);
template<> ::protocol::game::cmsg_role_xq_look* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_xq_look>(Arena*);
template<> ::protocol::game::cmsg_role_yh_look* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_yh_look>(Arena*);
template<> ::protocol::game::cmsg_role_yh_select* Arena::CreateMaybeMessage<::protocol::game::cmsg_role_yh_select>(Arena*);
template<> ::protocol::game::cmsg_shop_buy* Arena::CreateMaybeMessage<::protocol::game::cmsg_shop_buy>(Arena*);
template<> ::protocol::game::cmsg_shop_refresh* Arena::CreateMaybeMessage<::protocol::game::cmsg_shop_refresh>(Arena*);
template<> ::protocol::game::cmsg_shop_xg* Arena::CreateMaybeMessage<::protocol::game::cmsg_shop_xg>(Arena*);
template<> ::protocol::game::cmsg_social_add* Arena::CreateMaybeMessage<::protocol::game::cmsg_social_add>(Arena*);
template<> ::protocol::game::cmsg_social_agree* Arena::CreateMaybeMessage<::protocol::game::cmsg_social_agree>(Arena*);
template<> ::protocol::game::cmsg_social_delete* Arena::CreateMaybeMessage<::protocol::game::cmsg_social_delete>(Arena*);
template<> ::protocol::game::cmsg_social_invite_active* Arena::CreateMaybeMessage<::protocol::game::cmsg_social_invite_active>(Arena*);
template<> ::protocol::game::cmsg_social_song* Arena::CreateMaybeMessage<::protocol::game::cmsg_social_song>(Arena*);
template<> ::protocol::game::cmsg_sport_fight_end* Arena::CreateMaybeMessage<::protocol::game::cmsg_sport_fight_end>(Arena*);
template<> ::protocol::game::cmsg_sport_saodang* Arena::CreateMaybeMessage<::protocol::game::cmsg_sport_saodang>(Arena*);
template<> ::protocol::game::cmsg_sport_shop_buy* Arena::CreateMaybeMessage<::protocol::game::cmsg_sport_shop_buy>(Arena*);
template<> ::protocol::game::cmsg_team_invite_friend* Arena::CreateMaybeMessage<::protocol::game::cmsg_team_invite_friend>(Arena*);
template<> ::protocol::game::cmsg_treasure_buy* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_buy>(Arena*);
template<> ::protocol::game::cmsg_treasure_enhance* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_enhance>(Arena*);
template<> ::protocol::game::cmsg_treasure_equip* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_equip>(Arena*);
template<> ::protocol::game::cmsg_treasure_fight* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_fight>(Arena*);
template<> ::protocol::game::cmsg_treasure_fight_end* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_fight_end>(Arena*);
template<> ::protocol::game::cmsg_treasure_hecheng* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_hecheng>(Arena*);
template<> ::protocol::game::cmsg_treasure_init* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_init>(Arena*);
template<> ::protocol::game::cmsg_treasure_jinlian* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_jinlian>(Arena*);
template<> ::protocol::game::cmsg_treasure_lock* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_lock>(Arena*);
template<> ::protocol::game::cmsg_treasure_protect* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_protect>(Arena*);
template<> ::protocol::game::cmsg_treasure_report_ex* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_report_ex>(Arena*);
template<> ::protocol::game::cmsg_treasure_rob_view* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_rob_view>(Arena*);
template<> ::protocol::game::cmsg_treasure_ronglian* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_ronglian>(Arena*);
template<> ::protocol::game::cmsg_treasure_saodang* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_saodang>(Arena*);
template<> ::protocol::game::cmsg_treasure_star* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_star>(Arena*);
template<> ::protocol::game::cmsg_treasure_yijian_saodang* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_yijian_saodang>(Arena*);
template<> ::protocol::game::cmsg_treasure_zhuzao* Arena::CreateMaybeMessage<::protocol::game::cmsg_treasure_zhuzao>(Arena*);
template<> ::protocol::game::cmsg_ttt_fight_end* Arena::CreateMaybeMessage<::protocol::game::cmsg_ttt_fight_end>(Arena*);
template<> ::protocol::game::cmsg_ttt_value* Arena::CreateMaybeMessage<::protocol::game::cmsg_ttt_value>(Arena*);
template<> ::protocol::game::cmsg_vip_reward* Arena::CreateMaybeMessage<::protocol::game::cmsg_vip_reward>(Arena*);
template<> ::protocol::game::cmsg_xjbz_get* Arena::CreateMaybeMessage<::protocol::game::cmsg_xjbz_get>(Arena*);
template<> ::protocol::game::cmsg_yb_look_ex* Arena::CreateMaybeMessage<::protocol::game::cmsg_yb_look_ex>(Arena*);
template<> ::protocol::game::cmsg_yb_ybq_fight_end* Arena::CreateMaybeMessage<::protocol::game::cmsg_yb_ybq_fight_end>(Arena*);
template<> ::protocol::game::cmsg_zhenxing* Arena::CreateMaybeMessage<::protocol::game::cmsg_zhenxing>(Arena*);
template<> ::protocol::game::msg_common* Arena::CreateMaybeMessage<::protocol::game::msg_common>(Arena*);
template<> ::protocol::game::msg_common_ex* Arena::CreateMaybeMessage<::protocol::game::msg_common_ex>(Arena*);
template<> ::protocol::game::msg_fight_bo* Arena::CreateMaybeMessage<::protocol::game::msg_fight_bo>(Arena*);
template<> ::protocol::game::msg_fight_role* Arena::CreateMaybeMessage<::protocol::game::msg_fight_role>(Arena*);
template<> ::protocol::game::msg_fight_state* Arena::CreateMaybeMessage<::protocol::game::msg_fight_state>(Arena*);
template<> ::protocol::game::msg_fight_text* Arena::CreateMaybeMessage<::protocol::game::msg_fight_text>(Arena*);
template<> ::protocol::game::msg_fight_tick* Arena::CreateMaybeMessage<::protocol::game::msg_fight_tick>(Arena*);
template<> ::protocol::game::msg_guild_arrange* Arena::CreateMaybeMessage<::protocol::game::msg_guild_arrange>(Arena*);
template<> ::protocol::game::msg_guild_fight* Arena::CreateMaybeMessage<::protocol::game::msg_guild_fight>(Arena*);
template<> ::protocol::game::msg_guild_fight_info* Arena::CreateMaybeMessage<::protocol::game::msg_guild_fight_info>(Arena*);
template<> ::protocol::game::msg_guild_member_info* Arena::CreateMaybeMessage<::protocol::game::msg_guild_member_info>(Arena*);
template<> ::protocol::game::msg_guild_zhanji* Arena::CreateMaybeMessage<::protocol::game::msg_guild_zhanji>(Arena*);
template<> ::protocol::game::msg_social_player* Arena::CreateMaybeMessage<::protocol::game::msg_social_player>(Arena*);
template<> ::protocol::game::msg_sport_player* Arena::CreateMaybeMessage<::protocol::game::msg_sport_player>(Arena*);
template<> ::protocol::game::msg_yb_info* Arena::CreateMaybeMessage<::protocol::game::msg_yb_info>(Arena*);
template<> ::protocol::game::msg_yb_player* Arena::CreateMaybeMessage<::protocol::game::msg_yb_player>(Arena*);
template<> ::protocol::game::msg_ybq_info* Arena::CreateMaybeMessage<::protocol::game::msg_ybq_info>(Arena*);
template<> ::protocol::game::pmsg_chat* Arena::CreateMaybeMessage<::protocol::game::pmsg_chat>(Arena*);
template<> ::protocol::game::smsg_active_reward* Arena::CreateMaybeMessage<::protocol::game::smsg_active_reward>(Arena*);
template<> ::protocol::game::smsg_active_score_reward* Arena::CreateMaybeMessage<::protocol::game::smsg_active_score_reward>(Arena*);
template<> ::protocol::game::smsg_bingyuan_fight_end* Arena::CreateMaybeMessage<::protocol::game::smsg_bingyuan_fight_end>(Arena*);
template<> ::protocol::game::smsg_boss_active_look* Arena::CreateMaybeMessage<::protocol::game::smsg_boss_active_look>(Arena*);
template<> ::protocol::game::smsg_boss_fight_end* Arena::CreateMaybeMessage<::protocol::game::smsg_boss_fight_end>(Arena*);
template<> ::protocol::game::smsg_boss_look* Arena::CreateMaybeMessage<::protocol::game::smsg_boss_look>(Arena*);
template<> ::protocol::game::smsg_boss_rank* Arena::CreateMaybeMessage<::protocol::game::smsg_boss_rank>(Arena*);
template<> ::protocol::game::smsg_boss_saodang* Arena::CreateMaybeMessage<::protocol::game::smsg_boss_saodang>(Arena*);
template<> ::protocol::game::smsg_chat* Arena::CreateMaybeMessage<::protocol::game::smsg_chat>(Arena*);
template<> ::protocol::game::smsg_chouka* Arena::CreateMaybeMessage<::protocol::game::smsg_chouka>(Arena*);
template<> ::protocol::game::smsg_client_login* Arena::CreateMaybeMessage<::protocol::game::smsg_client_login>(Arena*);
template<> ::protocol::game::smsg_daily_sign* Arena::CreateMaybeMessage<::protocol::game::smsg_daily_sign>(Arena*);
template<> ::protocol::game::smsg_dj_reward* Arena::CreateMaybeMessage<::protocol::game::smsg_dj_reward>(Arena*);
template<> ::protocol::game::smsg_ds_fight_end* Arena::CreateMaybeMessage<::protocol::game::smsg_ds_fight_end>(Arena*);
template<> ::protocol::game::smsg_equip_gaizao* Arena::CreateMaybeMessage<::protocol::game::smsg_equip_gaizao>(Arena*);
template<> ::protocol::game::smsg_equip_init* Arena::CreateMaybeMessage<::protocol::game::smsg_equip_init>(Arena*);
template<> ::protocol::game::smsg_equip_suipian* Arena::CreateMaybeMessage<::protocol::game::smsg_equip_suipian>(Arena*);
template<> ::protocol::game::smsg_first_recharge* Arena::CreateMaybeMessage<::protocol::game::smsg_first_recharge>(Arena*);
template<> ::protocol::game::smsg_gm_command* Arena::CreateMaybeMessage<::protocol::game::smsg_gm_command>(Arena*);
template<> ::protocol::game::smsg_guild_activity* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_activity>(Arena*);
template<> ::protocol::game::smsg_guild_data* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_data>(Arena*);
template<> ::protocol::game::smsg_guild_fight* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_fight>(Arena*);
template<> ::protocol::game::smsg_guild_fight_pvp_look* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_fight_pvp_look>(Arena*);
template<> ::protocol::game::smsg_guild_list_recommend* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_list_recommend>(Arena*);
template<> ::protocol::game::smsg_guild_look_zhanji* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_look_zhanji>(Arena*);
template<> ::protocol::game::smsg_guild_look_zhankuang* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_look_zhankuang>(Arena*);
template<> ::protocol::game::smsg_guild_member_view* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_member_view>(Arena*);
template<> ::protocol::game::smsg_guild_message_view* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_message_view>(Arena*);
template<> ::protocol::game::smsg_guild_mission_complete_reward* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_mission_complete_reward>(Arena*);
template<> ::protocol::game::smsg_guild_mission_complete_reward_view* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_mission_complete_reward_view>(Arena*);
template<> ::protocol::game::smsg_guild_mission_fight_end* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_mission_fight_end>(Arena*);
template<> ::protocol::game::smsg_guild_mission_look* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_mission_look>(Arena*);
template<> ::protocol::game::smsg_guild_mission_ranking* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_mission_ranking>(Arena*);
template<> ::protocol::game::smsg_guild_ranking* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_ranking>(Arena*);
template<> ::protocol::game::smsg_guild_red_deliver* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_red_deliver>(Arena*);
template<> ::protocol::game::smsg_guild_red_rob* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_red_rob>(Arena*);
template<> ::protocol::game::smsg_guild_red_view* Arena::CreateMaybeMessage<::protocol::game::smsg_guild_red_view>(Arena*);
template<> ::protocol::game::smsg_gundong* Arena::CreateMaybeMessage<::protocol::game::smsg_gundong>(Arena*);
template<> ::protocol::game::smsg_gundong_server* Arena::CreateMaybeMessage<::protocol::game::smsg_gundong_server>(Arena*);
template<> ::protocol::game::smsg_hbb_fight_end* Arena::CreateMaybeMessage<::protocol::game::smsg_hbb_fight_end>(Arena*);
template<> ::protocol::game::smsg_hbb_look* Arena::CreateMaybeMessage<::protocol::game::smsg_hbb_look>(Arena*);
template<> ::protocol::game::smsg_item_apply* Arena::CreateMaybeMessage<::protocol::game::smsg_item_apply>(Arena*);
template<> ::protocol::game::smsg_libao* Arena::CreateMaybeMessage<::protocol::game::smsg_libao>(Arena*);
template<> ::protocol::game::smsg_mission_fight_end* Arena::CreateMaybeMessage<::protocol::game::smsg_mission_fight_end>(Arena*);
template<> ::protocol::game::smsg_mission_first* Arena::CreateMaybeMessage<::protocol::game::smsg_mission_first>(Arena*);
template<> ::protocol::game::smsg_mission_saodang* Arena::CreateMaybeMessage<::protocol::game::smsg_mission_saodang>(Arena*);
template<> ::protocol::game::smsg_online_reward* Arena::CreateMaybeMessage<::protocol::game::smsg_online_reward>(Arena*);
template<> ::protocol::game::smsg_ore_fight_end* Arena::CreateMaybeMessage<::protocol::game::smsg_ore_fight_end>(Arena*);
template<> ::protocol::game::smsg_pet_duihuan* Arena::CreateMaybeMessage<::protocol::game::smsg_pet_duihuan>(Arena*);
template<> ::protocol::game::smsg_pet_init* Arena::CreateMaybeMessage<::protocol::game::smsg_pet_init>(Arena*);
template<> ::protocol::game::smsg_player_check* Arena::CreateMaybeMessage<::protocol::game::smsg_player_check>(Arena*);
template<> ::protocol::game::smsg_player_look* Arena::CreateMaybeMessage<::protocol::game::smsg_player_look>(Arena*);
template<> ::protocol::game::smsg_player_name* Arena::CreateMaybeMessage<::protocol::game::smsg_player_name>(Arena*);
template<> ::protocol::game::smsg_post_get* Arena::CreateMaybeMessage<::protocol::game::smsg_post_get>(Arena*);
template<> ::protocol::game::smsg_post_look* Arena::CreateMaybeMessage<::protocol::game::smsg_post_look>(Arena*);
template<> ::protocol::game::smsg_post_view* Arena::CreateMaybeMessage<::protocol::game::smsg_post_view>(Arena*);
template<> ::protocol::game::smsg_pvp_fight_end* Arena::CreateMaybeMessage<::protocol::game::smsg_pvp_fight_end>(Arena*);
template<> ::protocol::game::smsg_pvp_view* Arena::CreateMaybeMessage<::protocol::game::smsg_pvp_view>(Arena*);
template<> ::protocol::game::smsg_qiecuo* Arena::CreateMaybeMessage<::protocol::game::smsg_qiecuo>(Arena*);
template<> ::protocol::game::smsg_qiyu_check* Arena::CreateMaybeMessage<::protocol::game::smsg_qiyu_check>(Arena*);
template<> ::protocol::game::smsg_qiyu_fight_end* Arena::CreateMaybeMessage<::protocol::game::smsg_qiyu_fight_end>(Arena*);
template<> ::protocol::game::smsg_random_event_get* Arena::CreateMaybeMessage<::protocol::game::smsg_random_event_get>(Arena*);
template<> ::protocol::game::smsg_random_event_look* Arena::CreateMaybeMessage<::protocol::game::smsg_random_event_look>(Arena*);
template<> ::protocol::game::smsg_rank_view* Arena::CreateMaybeMessage<::protocol::game::smsg_rank_view>(Arena*);
template<> ::protocol::game::smsg_recharge_check_ex* Arena::CreateMaybeMessage<::protocol::game::smsg_recharge_check_ex>(Arena*);
template<> ::protocol::game::smsg_role_duihuan* Arena::CreateMaybeMessage<::protocol::game::smsg_role_duihuan>(Arena*);
template<> ::protocol::game::smsg_role_huiyi_chou* Arena::CreateMaybeMessage<::protocol::game::smsg_role_huiyi_chou>(Arena*);
template<> ::protocol::game::smsg_role_huiyi_rank* Arena::CreateMaybeMessage<::protocol::game::smsg_role_huiyi_rank>(Arena*);
template<> ::protocol::game::smsg_role_huiyi_zhanpu* Arena::CreateMaybeMessage<::protocol::game::smsg_role_huiyi_zhanpu>(Arena*);
template<> ::protocol::game::smsg_role_init* Arena::CreateMaybeMessage<::protocol::game::smsg_role_init>(Arena*);
template<> ::protocol::game::smsg_role_skillup* Arena::CreateMaybeMessage<::protocol::game::smsg_role_skillup>(Arena*);
template<> ::protocol::game::smsg_role_xq_look* Arena::CreateMaybeMessage<::protocol::game::smsg_role_xq_look>(Arena*);
template<> ::protocol::game::smsg_role_yh_look* Arena::CreateMaybeMessage<::protocol::game::smsg_role_yh_look>(Arena*);
template<> ::protocol::game::smsg_role_yh_select* Arena::CreateMaybeMessage<::protocol::game::smsg_role_yh_select>(Arena*);
template<> ::protocol::game::smsg_shop_buy* Arena::CreateMaybeMessage<::protocol::game::smsg_shop_buy>(Arena*);
template<> ::protocol::game::smsg_shop_refresh* Arena::CreateMaybeMessage<::protocol::game::smsg_shop_refresh>(Arena*);
template<> ::protocol::game::smsg_social_add* Arena::CreateMaybeMessage<::protocol::game::smsg_social_add>(Arena*);
template<> ::protocol::game::smsg_social_agree* Arena::CreateMaybeMessage<::protocol::game::smsg_social_agree>(Arena*);
template<> ::protocol::game::smsg_social_delete* Arena::CreateMaybeMessage<::protocol::game::smsg_social_delete>(Arena*);
template<> ::protocol::game::smsg_social_look* Arena::CreateMaybeMessage<::protocol::game::smsg_social_look>(Arena*);
template<> ::protocol::game::smsg_social_look_new* Arena::CreateMaybeMessage<::protocol::game::smsg_social_look_new>(Arena*);
template<> ::protocol::game::smsg_social_rand* Arena::CreateMaybeMessage<::protocol::game::smsg_social_rand>(Arena*);
template<> ::protocol::game::smsg_social_shou* Arena::CreateMaybeMessage<::protocol::game::smsg_social_shou>(Arena*);
template<> ::protocol::game::smsg_social_song* Arena::CreateMaybeMessage<::protocol::game::smsg_social_song>(Arena*);
template<> ::protocol::game::smsg_sport_fight_end* Arena::CreateMaybeMessage<::protocol::game::smsg_sport_fight_end>(Arena*);
template<> ::protocol::game::smsg_sport_look* Arena::CreateMaybeMessage<::protocol::game::smsg_sport_look>(Arena*);
template<> ::protocol::game::smsg_sport_saodang* Arena::CreateMaybeMessage<::protocol::game::smsg_sport_saodang>(Arena*);
template<> ::protocol::game::smsg_sport_shop_buy* Arena::CreateMaybeMessage<::protocol::game::smsg_sport_shop_buy>(Arena*);
template<> ::protocol::game::smsg_sport_shop_list* Arena::CreateMaybeMessage<::protocol::game::smsg_sport_shop_list>(Arena*);
template<> ::protocol::game::smsg_sport_top* Arena::CreateMaybeMessage<::protocol::game::smsg_sport_top>(Arena*);
template<> ::protocol::game::smsg_success* Arena::CreateMaybeMessage<::protocol::game::smsg_success>(Arena*);
template<> ::protocol::game::smsg_team_friend_view* Arena::CreateMaybeMessage<::protocol::game::smsg_team_friend_view>(Arena*);
template<> ::protocol::game::smsg_treasure_fight* Arena::CreateMaybeMessage<::protocol::game::smsg_treasure_fight>(Arena*);
template<> ::protocol::game::smsg_treasure_fight_end* Arena::CreateMaybeMessage<::protocol::game::smsg_treasure_fight_end>(Arena*);
template<> ::protocol::game::smsg_treasure_hecheng* Arena::CreateMaybeMessage<::protocol::game::smsg_treasure_hecheng>(Arena*);
template<> ::protocol::game::smsg_treasure_init* Arena::CreateMaybeMessage<::protocol::game::smsg_treasure_init>(Arena*);
template<> ::protocol::game::smsg_treasure_jinlian* Arena::CreateMaybeMessage<::protocol::game::smsg_treasure_jinlian>(Arena*);
template<> ::protocol::game::smsg_treasure_point* Arena::CreateMaybeMessage<::protocol::game::smsg_treasure_point>(Arena*);
template<> ::protocol::game::smsg_treasure_protect* Arena::CreateMaybeMessage<::protocol::game::smsg_treasure_protect>(Arena*);
template<> ::protocol::game::smsg_treasure_report* Arena::CreateMaybeMessage<::protocol::game::smsg_treasure_report>(Arena*);
template<> ::protocol::game::smsg_treasure_rob_view* Arena::CreateMaybeMessage<::protocol::game::smsg_treasure_rob_view>(Arena*);
template<> ::protocol::game::smsg_treasure_saodang* Arena::CreateMaybeMessage<::protocol::game::smsg_treasure_saodang>(Arena*);
template<> ::protocol::game::smsg_treasure_star* Arena::CreateMaybeMessage<::protocol::game::smsg_treasure_star>(Arena*);
template<> ::protocol::game::smsg_treasure_yijian_saodang* Arena::CreateMaybeMessage<::protocol::game::smsg_treasure_yijian_saodang>(Arena*);
template<> ::protocol::game::smsg_treasure_zhuzao* Arena::CreateMaybeMessage<::protocol::game::smsg_treasure_zhuzao>(Arena*);
template<> ::protocol::game::smsg_ttt_fight_end* Arena::CreateMaybeMessage<::protocol::game::smsg_ttt_fight_end>(Arena*);
template<> ::protocol::game::smsg_ttt_sanxing* Arena::CreateMaybeMessage<::protocol::game::smsg_ttt_sanxing>(Arena*);
template<> ::protocol::game::smsg_ttt_value_look* Arena::CreateMaybeMessage<::protocol::game::smsg_ttt_value_look>(Arena*);
template<> ::protocol::game::smsg_vip_reward* Arena::CreateMaybeMessage<::protocol::game::smsg_vip_reward>(Arena*);
template<> ::protocol::game::smsg_xjbz_get* Arena::CreateMaybeMessage<::protocol::game::smsg_xjbz_get>(Arena*);
template<> ::protocol::game::smsg_yb_look* Arena::CreateMaybeMessage<::protocol::game::smsg_yb_look>(Arena*);
template<> ::protocol::game::smsg_yb_refresh* Arena::CreateMaybeMessage<::protocol::game::smsg_yb_refresh>(Arena*);
template<> ::protocol::game::smsg_yb_reward* Arena::CreateMaybeMessage<::protocol::game::smsg_yb_reward>(Arena*);
template<> ::protocol::game::smsg_yb_ybq_fight_end* Arena::CreateMaybeMessage<::protocol::game::smsg_yb_ybq_fight_end>(Arena*);
template<> ::protocol::game::tmsg_guild_pvp_load* Arena::CreateMaybeMessage<::protocol::game::tmsg_guild_pvp_load>(Arena*);
template<> ::protocol::game::tmsg_guild_pvp_load_fight* Arena::CreateMaybeMessage<::protocol::game::tmsg_guild_pvp_load_fight>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protocol {
namespace game {

// ===================================================================

class msg_common : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_common) */ {
 public:
  msg_common();
  virtual ~msg_common();

  msg_common(const msg_common& from);

  inline msg_common& operator=(const msg_common& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_common(msg_common&& from) noexcept
    : msg_common() {
    *this = ::std::move(from);
  }

  inline msg_common& operator=(msg_common&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_common& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_common* internal_default_instance() {
    return reinterpret_cast<const msg_common*>(
               &_msg_common_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(msg_common* other);
  friend void swap(msg_common& a, msg_common& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_common* New() const final {
    return CreateMaybeMessage<msg_common>(NULL);
  }

  msg_common* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_common>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_common& from);
  void MergeFrom(const msg_common& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_common* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sig = 2;
  void clear_sig();
  static const int kSigFieldNumber = 2;
  const ::std::string& sig() const;
  void set_sig(const ::std::string& value);
  #if LANG_CXX11
  void set_sig(::std::string&& value);
  #endif
  void set_sig(const char* value);
  void set_sig(const char* value, size_t size);
  ::std::string* mutable_sig();
  ::std::string* release_sig();
  void set_allocated_sig(::std::string* sig);

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // int32 pck_id = 3;
  void clear_pck_id();
  static const int kPckIdFieldNumber = 3;
  ::google::protobuf::int32 pck_id() const;
  void set_pck_id(::google::protobuf::int32 value);

  // int32 pck_gold = 4;
  void clear_pck_gold();
  static const int kPckGoldFieldNumber = 4;
  ::google::protobuf::int32 pck_gold() const;
  void set_pck_gold(::google::protobuf::int32 value);

  // int32 pck_jewel = 5;
  void clear_pck_jewel();
  static const int kPckJewelFieldNumber = 5;
  ::google::protobuf::int32 pck_jewel() const;
  void set_pck_jewel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_common)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sig_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 pck_id_;
  ::google::protobuf::int32 pck_gold_;
  ::google::protobuf::int32 pck_jewel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_common_ex : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_common_ex) */ {
 public:
  msg_common_ex();
  virtual ~msg_common_ex();

  msg_common_ex(const msg_common_ex& from);

  inline msg_common_ex& operator=(const msg_common_ex& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_common_ex(msg_common_ex&& from) noexcept
    : msg_common_ex() {
    *this = ::std::move(from);
  }

  inline msg_common_ex& operator=(msg_common_ex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_common_ex& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_common_ex* internal_default_instance() {
    return reinterpret_cast<const msg_common_ex*>(
               &_msg_common_ex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(msg_common_ex* other);
  friend void swap(msg_common_ex& a, msg_common_ex& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_common_ex* New() const final {
    return CreateMaybeMessage<msg_common_ex>(NULL);
  }

  msg_common_ex* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_common_ex>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_common_ex& from);
  void MergeFrom(const msg_common_ex& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_common_ex* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sig = 2;
  void clear_sig();
  static const int kSigFieldNumber = 2;
  const ::std::string& sig() const;
  void set_sig(const ::std::string& value);
  #if LANG_CXX11
  void set_sig(::std::string&& value);
  #endif
  void set_sig(const char* value);
  void set_sig(const char* value, size_t size);
  ::std::string* mutable_sig();
  ::std::string* release_sig();
  void set_allocated_sig(::std::string* sig);

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_common_ex)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sig_;
  ::google::protobuf::uint64 guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_common : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_common) */ {
 public:
  cmsg_common();
  virtual ~cmsg_common();

  cmsg_common(const cmsg_common& from);

  inline cmsg_common& operator=(const cmsg_common& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_common(cmsg_common&& from) noexcept
    : cmsg_common() {
    *this = ::std::move(from);
  }

  inline cmsg_common& operator=(cmsg_common&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_common& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_common* internal_default_instance() {
    return reinterpret_cast<const cmsg_common*>(
               &_cmsg_common_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(cmsg_common* other);
  friend void swap(cmsg_common& a, cmsg_common& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_common* New() const final {
    return CreateMaybeMessage<cmsg_common>(NULL);
  }

  cmsg_common* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_common>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_common& from);
  void MergeFrom(const cmsg_common& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_common* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_common)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_common_ex : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_common_ex) */ {
 public:
  cmsg_common_ex();
  virtual ~cmsg_common_ex();

  cmsg_common_ex(const cmsg_common_ex& from);

  inline cmsg_common_ex& operator=(const cmsg_common_ex& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_common_ex(cmsg_common_ex&& from) noexcept
    : cmsg_common_ex() {
    *this = ::std::move(from);
  }

  inline cmsg_common_ex& operator=(cmsg_common_ex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_common_ex& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_common_ex* internal_default_instance() {
    return reinterpret_cast<const cmsg_common_ex*>(
               &_cmsg_common_ex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(cmsg_common_ex* other);
  friend void swap(cmsg_common_ex& a, cmsg_common_ex& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_common_ex* New() const final {
    return CreateMaybeMessage<cmsg_common_ex>(NULL);
  }

  cmsg_common_ex* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_common_ex>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_common_ex& from);
  void MergeFrom(const cmsg_common_ex& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_common_ex* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common_ex comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common_ex& _internal_comm() const;
  public:
  const ::protocol::game::msg_common_ex& comm() const;
  ::protocol::game::msg_common_ex* release_comm();
  ::protocol::game::msg_common_ex* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common_ex* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_common_ex)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common_ex* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_client_login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_client_login) */ {
 public:
  cmsg_client_login();
  virtual ~cmsg_client_login();

  cmsg_client_login(const cmsg_client_login& from);

  inline cmsg_client_login& operator=(const cmsg_client_login& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_client_login(cmsg_client_login&& from) noexcept
    : cmsg_client_login() {
    *this = ::std::move(from);
  }

  inline cmsg_client_login& operator=(cmsg_client_login&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_client_login& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_client_login* internal_default_instance() {
    return reinterpret_cast<const cmsg_client_login*>(
               &_cmsg_client_login_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(cmsg_client_login* other);
  friend void swap(cmsg_client_login& a, cmsg_client_login& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_client_login* New() const final {
    return CreateMaybeMessage<cmsg_client_login>(NULL);
  }

  cmsg_client_login* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_client_login>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_client_login& from);
  void MergeFrom(const cmsg_client_login& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_client_login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  const ::std::string& serverid() const;
  void set_serverid(const ::std::string& value);
  #if LANG_CXX11
  void set_serverid(::std::string&& value);
  #endif
  void set_serverid(const char* value);
  void set_serverid(const char* value, size_t size);
  ::std::string* mutable_serverid();
  ::std::string* release_serverid();
  void set_allocated_serverid(::std::string* serverid);

  // string extra = 4;
  void clear_extra();
  static const int kExtraFieldNumber = 4;
  const ::std::string& extra() const;
  void set_extra(const ::std::string& value);
  #if LANG_CXX11
  void set_extra(::std::string&& value);
  #endif
  void set_extra(const char* value);
  void set_extra(const char* value, size_t size);
  ::std::string* mutable_extra();
  ::std::string* release_extra();
  void set_allocated_extra(::std::string* extra);

  // string device = 5;
  void clear_device();
  static const int kDeviceFieldNumber = 5;
  const ::std::string& device() const;
  void set_device(const ::std::string& value);
  #if LANG_CXX11
  void set_device(::std::string&& value);
  #endif
  void set_device(const char* value);
  void set_device(const char* value, size_t size);
  ::std::string* mutable_device();
  ::std::string* release_device();
  void set_allocated_device(::std::string* device);

  // string platform = 7;
  void clear_platform();
  static const int kPlatformFieldNumber = 7;
  const ::std::string& platform() const;
  void set_platform(const ::std::string& value);
  #if LANG_CXX11
  void set_platform(::std::string&& value);
  #endif
  void set_platform(const char* value);
  void set_platform(const char* value, size_t size);
  ::std::string* mutable_platform();
  ::std::string* release_platform();
  void set_allocated_platform(::std::string* platform);

  // int32 version = 6;
  void clear_version();
  static const int kVersionFieldNumber = 6;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // int32 lang_ver = 8;
  void clear_lang_ver();
  static const int kLangVerFieldNumber = 8;
  ::google::protobuf::int32 lang_ver() const;
  void set_lang_ver(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_client_login)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr serverid_;
  ::google::protobuf::internal::ArenaStringPtr extra_;
  ::google::protobuf::internal::ArenaStringPtr device_;
  ::google::protobuf::internal::ArenaStringPtr platform_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 lang_ver_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_client_login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_client_login) */ {
 public:
  smsg_client_login();
  virtual ~smsg_client_login();

  smsg_client_login(const smsg_client_login& from);

  inline smsg_client_login& operator=(const smsg_client_login& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_client_login(smsg_client_login&& from) noexcept
    : smsg_client_login() {
    *this = ::std::move(from);
  }

  inline smsg_client_login& operator=(smsg_client_login&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_client_login& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_client_login* internal_default_instance() {
    return reinterpret_cast<const smsg_client_login*>(
               &_smsg_client_login_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(smsg_client_login* other);
  friend void swap(smsg_client_login& a, smsg_client_login& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_client_login* New() const final {
    return CreateMaybeMessage<smsg_client_login>(NULL);
  }

  smsg_client_login* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_client_login>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_client_login& from);
  void MergeFrom(const smsg_client_login& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_client_login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.role_t roles = 4;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 4;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // repeated .dhc.equip_t equips = 5;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 5;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.pet_t pets = 6;
  int pets_size() const;
  void clear_pets();
  static const int kPetsFieldNumber = 6;
  ::dhc::pet_t* mutable_pets(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >*
      mutable_pets();
  const ::dhc::pet_t& pets(int index) const;
  ::dhc::pet_t* add_pets();
  const ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >&
      pets() const;

  // repeated .protocol.game.smsg_chat chats = 9;
  int chats_size() const;
  void clear_chats();
  static const int kChatsFieldNumber = 9;
  ::protocol::game::smsg_chat* mutable_chats(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_chat >*
      mutable_chats();
  const ::protocol::game::smsg_chat& chats(int index) const;
  ::protocol::game::smsg_chat* add_chats();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_chat >&
      chats() const;

  // repeated .protocol.game.smsg_chat guild_chats = 10;
  int guild_chats_size() const;
  void clear_guild_chats();
  static const int kGuildChatsFieldNumber = 10;
  ::protocol::game::smsg_chat* mutable_guild_chats(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_chat >*
      mutable_guild_chats();
  const ::protocol::game::smsg_chat& guild_chats(int index) const;
  ::protocol::game::smsg_chat* add_guild_chats();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_chat >&
      guild_chats() const;

  // repeated .dhc.treasure_t treasures = 11;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 11;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // string sig = 2;
  void clear_sig();
  static const int kSigFieldNumber = 2;
  const ::std::string& sig() const;
  void set_sig(const ::std::string& value);
  #if LANG_CXX11
  void set_sig(::std::string&& value);
  #endif
  void set_sig(const char* value);
  void set_sig(const char* value, size_t size);
  ::std::string* mutable_sig();
  ::std::string* release_sig();
  void set_allocated_sig(::std::string* sig);

  // string device = 14;
  void clear_device();
  static const int kDeviceFieldNumber = 14;
  const ::std::string& device() const;
  void set_device(const ::std::string& value);
  #if LANG_CXX11
  void set_device(::std::string&& value);
  #endif
  void set_device(const char* value);
  void set_device(const char* value, size_t size);
  ::std::string* mutable_device();
  ::std::string* release_device();
  void set_allocated_device(::std::string* device);

  // .dhc.player_t player = 3;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 3;
  private:
  const ::dhc::player_t& _internal_player() const;
  public:
  const ::dhc::player_t& player() const;
  ::dhc::player_t* release_player();
  ::dhc::player_t* mutable_player();
  void set_allocated_player(::dhc::player_t* player);

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint64 server_time = 7;
  void clear_server_time();
  static const int kServerTimeFieldNumber = 7;
  ::google::protobuf::uint64 server_time() const;
  void set_server_time(::google::protobuf::uint64 value);

  // uint64 start_time = 8;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 8;
  ::google::protobuf::uint64 start_time() const;
  void set_start_time(::google::protobuf::uint64 value);

  // uint64 guild_time = 12;
  void clear_guild_time();
  static const int kGuildTimeFieldNumber = 12;
  ::google::protobuf::uint64 guild_time() const;
  void set_guild_time(::google::protobuf::uint64 value);

  // uint64 device_time = 15;
  void clear_device_time();
  static const int kDeviceTimeFieldNumber = 15;
  ::google::protobuf::uint64 device_time() const;
  void set_device_time(::google::protobuf::uint64 value);

  // int32 is_new = 13;
  void clear_is_new();
  static const int kIsNewFieldNumber = 13;
  ::google::protobuf::int32 is_new() const;
  void set_is_new(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_client_login)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::pet_t > pets_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_chat > chats_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_chat > guild_chats_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::internal::ArenaStringPtr sig_;
  ::google::protobuf::internal::ArenaStringPtr device_;
  ::dhc::player_t* player_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 server_time_;
  ::google::protobuf::uint64 start_time_;
  ::google::protobuf::uint64 guild_time_;
  ::google::protobuf::uint64 device_time_;
  ::google::protobuf::int32 is_new_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_player_name : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_player_name) */ {
 public:
  cmsg_player_name();
  virtual ~cmsg_player_name();

  cmsg_player_name(const cmsg_player_name& from);

  inline cmsg_player_name& operator=(const cmsg_player_name& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_player_name(cmsg_player_name&& from) noexcept
    : cmsg_player_name() {
    *this = ::std::move(from);
  }

  inline cmsg_player_name& operator=(cmsg_player_name&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_player_name& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_player_name* internal_default_instance() {
    return reinterpret_cast<const cmsg_player_name*>(
               &_cmsg_player_name_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(cmsg_player_name* other);
  friend void swap(cmsg_player_name& a, cmsg_player_name& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_player_name* New() const final {
    return CreateMaybeMessage<cmsg_player_name>(NULL);
  }

  cmsg_player_name* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_player_name>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_player_name& from);
  void MergeFrom(const cmsg_player_name& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_player_name* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_player_name)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_player_nalflag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_player_nalflag) */ {
 public:
  cmsg_player_nalflag();
  virtual ~cmsg_player_nalflag();

  cmsg_player_nalflag(const cmsg_player_nalflag& from);

  inline cmsg_player_nalflag& operator=(const cmsg_player_nalflag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_player_nalflag(cmsg_player_nalflag&& from) noexcept
    : cmsg_player_nalflag() {
    *this = ::std::move(from);
  }

  inline cmsg_player_nalflag& operator=(cmsg_player_nalflag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_player_nalflag& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_player_nalflag* internal_default_instance() {
    return reinterpret_cast<const cmsg_player_nalflag*>(
               &_cmsg_player_nalflag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(cmsg_player_nalflag* other);
  friend void swap(cmsg_player_nalflag& a, cmsg_player_nalflag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_player_nalflag* New() const final {
    return CreateMaybeMessage<cmsg_player_nalflag>(NULL);
  }

  cmsg_player_nalflag* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_player_nalflag>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_player_nalflag& from);
  void MergeFrom(const cmsg_player_nalflag& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_player_nalflag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 nalflag = 2;
  void clear_nalflag();
  static const int kNalflagFieldNumber = 2;
  ::google::protobuf::int32 nalflag() const;
  void set_nalflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_player_nalflag)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 nalflag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_player_name : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_player_name) */ {
 public:
  smsg_player_name();
  virtual ~smsg_player_name();

  smsg_player_name(const smsg_player_name& from);

  inline smsg_player_name& operator=(const smsg_player_name& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_player_name(smsg_player_name&& from) noexcept
    : smsg_player_name() {
    *this = ::std::move(from);
  }

  inline smsg_player_name& operator=(smsg_player_name&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_player_name& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_player_name* internal_default_instance() {
    return reinterpret_cast<const smsg_player_name*>(
               &_smsg_player_name_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(smsg_player_name* other);
  friend void swap(smsg_player_name& a, smsg_player_name& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_player_name* New() const final {
    return CreateMaybeMessage<smsg_player_name>(NULL);
  }

  smsg_player_name* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_player_name>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_player_name& from);
  void MergeFrom(const smsg_player_name& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_player_name* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 code_stat = 1;
  void clear_code_stat();
  static const int kCodeStatFieldNumber = 1;
  ::google::protobuf::int32 code_stat() const;
  void set_code_stat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_player_name)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 code_stat_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_success : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_success) */ {
 public:
  smsg_success();
  virtual ~smsg_success();

  smsg_success(const smsg_success& from);

  inline smsg_success& operator=(const smsg_success& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_success(smsg_success&& from) noexcept
    : smsg_success() {
    *this = ::std::move(from);
  }

  inline smsg_success& operator=(smsg_success&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_success& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_success* internal_default_instance() {
    return reinterpret_cast<const smsg_success*>(
               &_smsg_success_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(smsg_success* other);
  friend void swap(smsg_success& a, smsg_success& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_success* New() const final {
    return CreateMaybeMessage<smsg_success>(NULL);
  }

  smsg_success* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_success>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_success& from);
  void MergeFrom(const smsg_success& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_success* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_success)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool success_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_player_zsname : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_player_zsname) */ {
 public:
  cmsg_player_zsname();
  virtual ~cmsg_player_zsname();

  cmsg_player_zsname(const cmsg_player_zsname& from);

  inline cmsg_player_zsname& operator=(const cmsg_player_zsname& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_player_zsname(cmsg_player_zsname&& from) noexcept
    : cmsg_player_zsname() {
    *this = ::std::move(from);
  }

  inline cmsg_player_zsname& operator=(cmsg_player_zsname&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_player_zsname& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_player_zsname* internal_default_instance() {
    return reinterpret_cast<const cmsg_player_zsname*>(
               &_cmsg_player_zsname_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(cmsg_player_zsname* other);
  friend void swap(cmsg_player_zsname& a, cmsg_player_zsname& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_player_zsname* New() const final {
    return CreateMaybeMessage<cmsg_player_zsname>(NULL);
  }

  cmsg_player_zsname* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_player_zsname>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_player_zsname& from);
  void MergeFrom(const cmsg_player_zsname& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_player_zsname* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string zsname = 2;
  void clear_zsname();
  static const int kZsnameFieldNumber = 2;
  const ::std::string& zsname() const;
  void set_zsname(const ::std::string& value);
  #if LANG_CXX11
  void set_zsname(::std::string&& value);
  #endif
  void set_zsname(const char* value);
  void set_zsname(const char* value, size_t size);
  ::std::string* mutable_zsname();
  ::std::string* release_zsname();
  void set_allocated_zsname(::std::string* zsname);

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_player_zsname)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr zsname_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_player_template : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_player_template) */ {
 public:
  cmsg_player_template();
  virtual ~cmsg_player_template();

  cmsg_player_template(const cmsg_player_template& from);

  inline cmsg_player_template& operator=(const cmsg_player_template& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_player_template(cmsg_player_template&& from) noexcept
    : cmsg_player_template() {
    *this = ::std::move(from);
  }

  inline cmsg_player_template& operator=(cmsg_player_template&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_player_template& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_player_template* internal_default_instance() {
    return reinterpret_cast<const cmsg_player_template*>(
               &_cmsg_player_template_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(cmsg_player_template* other);
  friend void swap(cmsg_player_template& a, cmsg_player_template& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_player_template* New() const final {
    return CreateMaybeMessage<cmsg_player_template>(NULL);
  }

  cmsg_player_template* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_player_template>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_player_template& from);
  void MergeFrom(const cmsg_player_template& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_player_template* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 template_id = 2;
  void clear_template_id();
  static const int kTemplateIdFieldNumber = 2;
  ::google::protobuf::int32 template_id() const;
  void set_template_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_player_template)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 template_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_fight_text : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_fight_text) */ {
 public:
  msg_fight_text();
  virtual ~msg_fight_text();

  msg_fight_text(const msg_fight_text& from);

  inline msg_fight_text& operator=(const msg_fight_text& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_fight_text(msg_fight_text&& from) noexcept
    : msg_fight_text() {
    *this = ::std::move(from);
  }

  inline msg_fight_text& operator=(msg_fight_text&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_fight_text& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_fight_text* internal_default_instance() {
    return reinterpret_cast<const msg_fight_text*>(
               &_msg_fight_text_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(msg_fight_text* other);
  friend void swap(msg_fight_text& a, msg_fight_text& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_fight_text* New() const final {
    return CreateMaybeMessage<msg_fight_text>(NULL);
  }

  msg_fight_text* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_fight_text>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_fight_text& from);
  void MergeFrom(const msg_fight_text& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_fight_text* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.msg_fight_bo bos = 2;
  int bos_size() const;
  void clear_bos();
  static const int kBosFieldNumber = 2;
  ::protocol::game::msg_fight_bo* mutable_bos(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_fight_bo >*
      mutable_bos();
  const ::protocol::game::msg_fight_bo& bos(int index) const;
  ::protocol::game::msg_fight_bo* add_bos();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_fight_bo >&
      bos() const;

  // .protocol.game.msg_fight_state end_state = 3;
  bool has_end_state() const;
  void clear_end_state();
  static const int kEndStateFieldNumber = 3;
  private:
  const ::protocol::game::msg_fight_state& _internal_end_state() const;
  public:
  const ::protocol::game::msg_fight_state& end_state() const;
  ::protocol::game::msg_fight_state* release_end_state();
  ::protocol::game::msg_fight_state* mutable_end_state();
  void set_allocated_end_state(::protocol::game::msg_fight_state* end_state);

  // int32 fight_type = 1;
  void clear_fight_type();
  static const int kFightTypeFieldNumber = 1;
  ::google::protobuf::int32 fight_type() const;
  void set_fight_type(::google::protobuf::int32 value);

  // bool can_jump = 4;
  void clear_can_jump();
  static const int kCanJumpFieldNumber = 4;
  bool can_jump() const;
  void set_can_jump(bool value);

  // int32 fail_type = 5;
  void clear_fail_type();
  static const int kFailTypeFieldNumber = 5;
  ::google::protobuf::int32 fail_type() const;
  void set_fail_type(::google::protobuf::int32 value);

  // int32 fail_param = 6;
  void clear_fail_param();
  static const int kFailParamFieldNumber = 6;
  ::google::protobuf::int32 fail_param() const;
  void set_fail_param(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_fight_text)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_fight_bo > bos_;
  ::protocol::game::msg_fight_state* end_state_;
  ::google::protobuf::int32 fight_type_;
  bool can_jump_;
  ::google::protobuf::int32 fail_type_;
  ::google::protobuf::int32 fail_param_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_fight_bo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_fight_bo) */ {
 public:
  msg_fight_bo();
  virtual ~msg_fight_bo();

  msg_fight_bo(const msg_fight_bo& from);

  inline msg_fight_bo& operator=(const msg_fight_bo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_fight_bo(msg_fight_bo&& from) noexcept
    : msg_fight_bo() {
    *this = ::std::move(from);
  }

  inline msg_fight_bo& operator=(msg_fight_bo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_fight_bo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_fight_bo* internal_default_instance() {
    return reinterpret_cast<const msg_fight_bo*>(
               &_msg_fight_bo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(msg_fight_bo* other);
  friend void swap(msg_fight_bo& a, msg_fight_bo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_fight_bo* New() const final {
    return CreateMaybeMessage<msg_fight_bo>(NULL);
  }

  msg_fight_bo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_fight_bo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_fight_bo& from);
  void MergeFrom(const msg_fight_bo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_fight_bo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.msg_fight_tick ticks = 2;
  int ticks_size() const;
  void clear_ticks();
  static const int kTicksFieldNumber = 2;
  ::protocol::game::msg_fight_tick* mutable_ticks(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_fight_tick >*
      mutable_ticks();
  const ::protocol::game::msg_fight_tick& ticks(int index) const;
  ::protocol::game::msg_fight_tick* add_ticks();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_fight_tick >&
      ticks() const;

  // .protocol.game.msg_fight_state bo_state = 1;
  bool has_bo_state() const;
  void clear_bo_state();
  static const int kBoStateFieldNumber = 1;
  private:
  const ::protocol::game::msg_fight_state& _internal_bo_state() const;
  public:
  const ::protocol::game::msg_fight_state& bo_state() const;
  ::protocol::game::msg_fight_state* release_bo_state();
  ::protocol::game::msg_fight_state* mutable_bo_state();
  void set_allocated_bo_state(::protocol::game::msg_fight_state* bo_state);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_fight_bo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_fight_tick > ticks_;
  ::protocol::game::msg_fight_state* bo_state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_fight_state : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_fight_state) */ {
 public:
  msg_fight_state();
  virtual ~msg_fight_state();

  msg_fight_state(const msg_fight_state& from);

  inline msg_fight_state& operator=(const msg_fight_state& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_fight_state(msg_fight_state&& from) noexcept
    : msg_fight_state() {
    *this = ::std::move(from);
  }

  inline msg_fight_state& operator=(msg_fight_state&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_fight_state& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_fight_state* internal_default_instance() {
    return reinterpret_cast<const msg_fight_state*>(
               &_msg_fight_state_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(msg_fight_state* other);
  friend void swap(msg_fight_state& a, msg_fight_state& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_fight_state* New() const final {
    return CreateMaybeMessage<msg_fight_state>(NULL);
  }

  msg_fight_state* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_fight_state>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_fight_state& from);
  void MergeFrom(const msg_fight_state& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_fight_state* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.msg_fight_role roles = 1;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 1;
  ::protocol::game::msg_fight_role* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_fight_role >*
      mutable_roles();
  const ::protocol::game::msg_fight_role& roles(int index) const;
  ::protocol::game::msg_fight_role* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_fight_role >&
      roles() const;

  // @@protoc_insertion_point(class_scope:protocol.game.msg_fight_state)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_fight_role > roles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_fight_role : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_fight_role) */ {
 public:
  msg_fight_role();
  virtual ~msg_fight_role();

  msg_fight_role(const msg_fight_role& from);

  inline msg_fight_role& operator=(const msg_fight_role& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_fight_role(msg_fight_role&& from) noexcept
    : msg_fight_role() {
    *this = ::std::move(from);
  }

  inline msg_fight_role& operator=(msg_fight_role&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_fight_role& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_fight_role* internal_default_instance() {
    return reinterpret_cast<const msg_fight_role*>(
               &_msg_fight_role_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(msg_fight_role* other);
  friend void swap(msg_fight_role& a, msg_fight_role& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_fight_role* New() const final {
    return CreateMaybeMessage<msg_fight_role>(NULL);
  }

  msg_fight_role* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_fight_role>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_fight_role& from);
  void MergeFrom(const msg_fight_role& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_fight_role* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 buff_ids = 7;
  int buff_ids_size() const;
  void clear_buff_ids();
  static const int kBuffIdsFieldNumber = 7;
  ::google::protobuf::int32 buff_ids(int index) const;
  void set_buff_ids(int index, ::google::protobuf::int32 value);
  void add_buff_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      buff_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_buff_ids();

  // int32 site = 1;
  void clear_site();
  static const int kSiteFieldNumber = 1;
  ::google::protobuf::int32 site() const;
  void set_site(::google::protobuf::int32 value);

  // int32 duiwei = 2;
  void clear_duiwei();
  static const int kDuiweiFieldNumber = 2;
  ::google::protobuf::int32 duiwei() const;
  void set_duiwei(::google::protobuf::int32 value);

  // double max_hp = 4;
  void clear_max_hp();
  static const int kMaxHpFieldNumber = 4;
  double max_hp() const;
  void set_max_hp(double value);

  // int32 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 nengliang = 6;
  void clear_nengliang();
  static const int kNengliangFieldNumber = 6;
  ::google::protobuf::int32 nengliang() const;
  void set_nengliang(::google::protobuf::int32 value);

  // double cur_hp = 5;
  void clear_cur_hp();
  static const int kCurHpFieldNumber = 5;
  double cur_hp() const;
  void set_cur_hp(double value);

  // int32 jlevel = 8;
  void clear_jlevel();
  static const int kJlevelFieldNumber = 8;
  ::google::protobuf::int32 jlevel() const;
  void set_jlevel(::google::protobuf::int32 value);

  // int32 glevel = 9;
  void clear_glevel();
  static const int kGlevelFieldNumber = 9;
  ::google::protobuf::int32 glevel() const;
  void set_glevel(::google::protobuf::int32 value);

  // int32 pinzhi = 10;
  void clear_pinzhi();
  static const int kPinzhiFieldNumber = 10;
  ::google::protobuf::int32 pinzhi() const;
  void set_pinzhi(::google::protobuf::int32 value);

  // int32 dress_id = 11;
  void clear_dress_id();
  static const int kDressIdFieldNumber = 11;
  ::google::protobuf::int32 dress_id() const;
  void set_dress_id(::google::protobuf::int32 value);

  // int32 guanghuan_id = 12;
  void clear_guanghuan_id();
  static const int kGuanghuanIdFieldNumber = 12;
  ::google::protobuf::int32 guanghuan_id() const;
  void set_guanghuan_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_fight_role)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > buff_ids_;
  mutable int _buff_ids_cached_byte_size_;
  ::google::protobuf::int32 site_;
  ::google::protobuf::int32 duiwei_;
  double max_hp_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 nengliang_;
  double cur_hp_;
  ::google::protobuf::int32 jlevel_;
  ::google::protobuf::int32 glevel_;
  ::google::protobuf::int32 pinzhi_;
  ::google::protobuf::int32 dress_id_;
  ::google::protobuf::int32 guanghuan_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_fight_tick : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_fight_tick) */ {
 public:
  msg_fight_tick();
  virtual ~msg_fight_tick();

  msg_fight_tick(const msg_fight_tick& from);

  inline msg_fight_tick& operator=(const msg_fight_tick& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_fight_tick(msg_fight_tick&& from) noexcept
    : msg_fight_tick() {
    *this = ::std::move(from);
  }

  inline msg_fight_tick& operator=(msg_fight_tick&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_fight_tick& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_fight_tick* internal_default_instance() {
    return reinterpret_cast<const msg_fight_tick*>(
               &_msg_fight_tick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(msg_fight_tick* other);
  friend void swap(msg_fight_tick& a, msg_fight_tick& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_fight_tick* New() const final {
    return CreateMaybeMessage<msg_fight_tick>(NULL);
  }

  msg_fight_tick* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_fight_tick>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_fight_tick& from);
  void MergeFrom(const msg_fight_tick& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_fight_tick* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 values = 2;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 2;
  ::google::protobuf::int32 values(int index) const;
  void set_values(int index, ::google::protobuf::int32 value);
  void add_values(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_values();

  // repeated double dvalues = 3;
  int dvalues_size() const;
  void clear_dvalues();
  static const int kDvaluesFieldNumber = 3;
  double dvalues(int index) const;
  void set_dvalues(int index, double value);
  void add_dvalues(double value);
  const ::google::protobuf::RepeatedField< double >&
      dvalues() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_dvalues();

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_fight_tick)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > values_;
  mutable int _values_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > dvalues_;
  mutable int _dvalues_cached_byte_size_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_mission_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_mission_fight_end) */ {
 public:
  cmsg_mission_fight_end();
  virtual ~cmsg_mission_fight_end();

  cmsg_mission_fight_end(const cmsg_mission_fight_end& from);

  inline cmsg_mission_fight_end& operator=(const cmsg_mission_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_mission_fight_end(cmsg_mission_fight_end&& from) noexcept
    : cmsg_mission_fight_end() {
    *this = ::std::move(from);
  }

  inline cmsg_mission_fight_end& operator=(cmsg_mission_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_mission_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_mission_fight_end* internal_default_instance() {
    return reinterpret_cast<const cmsg_mission_fight_end*>(
               &_cmsg_mission_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(cmsg_mission_fight_end* other);
  friend void swap(cmsg_mission_fight_end& a, cmsg_mission_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_mission_fight_end* New() const final {
    return CreateMaybeMessage<cmsg_mission_fight_end>(NULL);
  }

  cmsg_mission_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_mission_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_mission_fight_end& from);
  void MergeFrom(const cmsg_mission_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_mission_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 mission_id = 2;
  void clear_mission_id();
  static const int kMissionIdFieldNumber = 2;
  ::google::protobuf::int32 mission_id() const;
  void set_mission_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_mission_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 mission_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_mission_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_mission_fight_end) */ {
 public:
  smsg_mission_fight_end();
  virtual ~smsg_mission_fight_end();

  smsg_mission_fight_end(const smsg_mission_fight_end& from);

  inline smsg_mission_fight_end& operator=(const smsg_mission_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_mission_fight_end(smsg_mission_fight_end&& from) noexcept
    : smsg_mission_fight_end() {
    *this = ::std::move(from);
  }

  inline smsg_mission_fight_end& operator=(smsg_mission_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_mission_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_mission_fight_end* internal_default_instance() {
    return reinterpret_cast<const smsg_mission_fight_end*>(
               &_smsg_mission_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(smsg_mission_fight_end* other);
  friend void swap(smsg_mission_fight_end& a, smsg_mission_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_mission_fight_end* New() const final {
    return CreateMaybeMessage<smsg_mission_fight_end>(NULL);
  }

  smsg_mission_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_mission_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_mission_fight_end& from);
  void MergeFrom(const smsg_mission_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_mission_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 4;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 4;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 5;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 5;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 6;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 6;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 7;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 7;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.equip_t equips = 8;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 8;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 9;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 9;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 10;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 10;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 star = 3;
  void clear_star();
  static const int kStarFieldNumber = 3;
  ::google::protobuf::int32 star() const;
  void set_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_mission_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 star_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_mission_saodang : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_mission_saodang) */ {
 public:
  cmsg_mission_saodang();
  virtual ~cmsg_mission_saodang();

  cmsg_mission_saodang(const cmsg_mission_saodang& from);

  inline cmsg_mission_saodang& operator=(const cmsg_mission_saodang& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_mission_saodang(cmsg_mission_saodang&& from) noexcept
    : cmsg_mission_saodang() {
    *this = ::std::move(from);
  }

  inline cmsg_mission_saodang& operator=(cmsg_mission_saodang&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_mission_saodang& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_mission_saodang* internal_default_instance() {
    return reinterpret_cast<const cmsg_mission_saodang*>(
               &_cmsg_mission_saodang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(cmsg_mission_saodang* other);
  friend void swap(cmsg_mission_saodang& a, cmsg_mission_saodang& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_mission_saodang* New() const final {
    return CreateMaybeMessage<cmsg_mission_saodang>(NULL);
  }

  cmsg_mission_saodang* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_mission_saodang>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_mission_saodang& from);
  void MergeFrom(const cmsg_mission_saodang& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_mission_saodang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 mission_id = 2;
  void clear_mission_id();
  static const int kMissionIdFieldNumber = 2;
  ::google::protobuf::int32 mission_id() const;
  void set_mission_id(::google::protobuf::int32 value);

  // int32 num = 3;
  void clear_num();
  static const int kNumFieldNumber = 3;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_mission_saodang)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 mission_id_;
  ::google::protobuf::int32 num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_mission_saodang : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_mission_saodang) */ {
 public:
  smsg_mission_saodang();
  virtual ~smsg_mission_saodang();

  smsg_mission_saodang(const smsg_mission_saodang& from);

  inline smsg_mission_saodang& operator=(const smsg_mission_saodang& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_mission_saodang(smsg_mission_saodang&& from) noexcept
    : smsg_mission_saodang() {
    *this = ::std::move(from);
  }

  inline smsg_mission_saodang& operator=(smsg_mission_saodang&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_mission_saodang& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_mission_saodang* internal_default_instance() {
    return reinterpret_cast<const smsg_mission_saodang*>(
               &_smsg_mission_saodang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(smsg_mission_saodang* other);
  friend void swap(smsg_mission_saodang& a, smsg_mission_saodang& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_mission_saodang* New() const final {
    return CreateMaybeMessage<smsg_mission_saodang>(NULL);
  }

  smsg_mission_saodang* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_mission_saodang>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_mission_saodang& from);
  void MergeFrom(const smsg_mission_saodang& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_mission_saodang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.smsg_mission_fight_end saodangs = 1;
  int saodangs_size() const;
  void clear_saodangs();
  static const int kSaodangsFieldNumber = 1;
  ::protocol::game::smsg_mission_fight_end* mutable_saodangs(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_mission_fight_end >*
      mutable_saodangs();
  const ::protocol::game::smsg_mission_fight_end& saodangs(int index) const;
  ::protocol::game::smsg_mission_fight_end* add_saodangs();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_mission_fight_end >&
      saodangs() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_mission_saodang)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_mission_fight_end > saodangs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_mission_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_mission_reward) */ {
 public:
  cmsg_mission_reward();
  virtual ~cmsg_mission_reward();

  cmsg_mission_reward(const cmsg_mission_reward& from);

  inline cmsg_mission_reward& operator=(const cmsg_mission_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_mission_reward(cmsg_mission_reward&& from) noexcept
    : cmsg_mission_reward() {
    *this = ::std::move(from);
  }

  inline cmsg_mission_reward& operator=(cmsg_mission_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_mission_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_mission_reward* internal_default_instance() {
    return reinterpret_cast<const cmsg_mission_reward*>(
               &_cmsg_mission_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(cmsg_mission_reward* other);
  friend void swap(cmsg_mission_reward& a, cmsg_mission_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_mission_reward* New() const final {
    return CreateMaybeMessage<cmsg_mission_reward>(NULL);
  }

  cmsg_mission_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_mission_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_mission_reward& from);
  void MergeFrom(const cmsg_mission_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_mission_reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 map_id = 2;
  void clear_map_id();
  static const int kMapIdFieldNumber = 2;
  ::google::protobuf::int32 map_id() const;
  void set_map_id(::google::protobuf::int32 value);

  // int32 reward_id = 3;
  void clear_reward_id();
  static const int kRewardIdFieldNumber = 3;
  ::google::protobuf::int32 reward_id() const;
  void set_reward_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_mission_reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 map_id_;
  ::google::protobuf::int32 reward_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_mission_first : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_mission_first) */ {
 public:
  cmsg_mission_first();
  virtual ~cmsg_mission_first();

  cmsg_mission_first(const cmsg_mission_first& from);

  inline cmsg_mission_first& operator=(const cmsg_mission_first& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_mission_first(cmsg_mission_first&& from) noexcept
    : cmsg_mission_first() {
    *this = ::std::move(from);
  }

  inline cmsg_mission_first& operator=(cmsg_mission_first&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_mission_first& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_mission_first* internal_default_instance() {
    return reinterpret_cast<const cmsg_mission_first*>(
               &_cmsg_mission_first_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(cmsg_mission_first* other);
  friend void swap(cmsg_mission_first& a, cmsg_mission_first& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_mission_first* New() const final {
    return CreateMaybeMessage<cmsg_mission_first>(NULL);
  }

  cmsg_mission_first* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_mission_first>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_mission_first& from);
  void MergeFrom(const cmsg_mission_first& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_mission_first* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 mission_id = 2;
  void clear_mission_id();
  static const int kMissionIdFieldNumber = 2;
  ::google::protobuf::int32 mission_id() const;
  void set_mission_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_mission_first)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 mission_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_mission_first : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_mission_first) */ {
 public:
  smsg_mission_first();
  virtual ~smsg_mission_first();

  smsg_mission_first(const smsg_mission_first& from);

  inline smsg_mission_first& operator=(const smsg_mission_first& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_mission_first(smsg_mission_first&& from) noexcept
    : smsg_mission_first() {
    *this = ::std::move(from);
  }

  inline smsg_mission_first& operator=(smsg_mission_first&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_mission_first& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_mission_first* internal_default_instance() {
    return reinterpret_cast<const smsg_mission_first*>(
               &_smsg_mission_first_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(smsg_mission_first* other);
  friend void swap(smsg_mission_first& a, smsg_mission_first& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_mission_first* New() const final {
    return CreateMaybeMessage<smsg_mission_first>(NULL);
  }

  smsg_mission_first* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_mission_first>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_mission_first& from);
  void MergeFrom(const smsg_mission_first& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_mission_first* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 1;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 1;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 2;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 2;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 3;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 3;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 4;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 4;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.equip_t equips = 5;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 5;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 6;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 6;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 7;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 7;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_mission_first)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_zhenxing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_zhenxing) */ {
 public:
  cmsg_zhenxing();
  virtual ~cmsg_zhenxing();

  cmsg_zhenxing(const cmsg_zhenxing& from);

  inline cmsg_zhenxing& operator=(const cmsg_zhenxing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_zhenxing(cmsg_zhenxing&& from) noexcept
    : cmsg_zhenxing() {
    *this = ::std::move(from);
  }

  inline cmsg_zhenxing& operator=(cmsg_zhenxing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_zhenxing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_zhenxing* internal_default_instance() {
    return reinterpret_cast<const cmsg_zhenxing*>(
               &_cmsg_zhenxing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(cmsg_zhenxing* other);
  friend void swap(cmsg_zhenxing& a, cmsg_zhenxing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_zhenxing* New() const final {
    return CreateMaybeMessage<cmsg_zhenxing>(NULL);
  }

  cmsg_zhenxing* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_zhenxing>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_zhenxing& from);
  void MergeFrom(const cmsg_zhenxing& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_zhenxing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 role_guid = 2;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 2;
  ::google::protobuf::uint64 role_guid() const;
  void set_role_guid(::google::protobuf::uint64 value);

  // int32 index = 3;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_zhenxing)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 role_guid_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_duixing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_duixing) */ {
 public:
  cmsg_duixing();
  virtual ~cmsg_duixing();

  cmsg_duixing(const cmsg_duixing& from);

  inline cmsg_duixing& operator=(const cmsg_duixing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_duixing(cmsg_duixing&& from) noexcept
    : cmsg_duixing() {
    *this = ::std::move(from);
  }

  inline cmsg_duixing& operator=(cmsg_duixing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_duixing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_duixing* internal_default_instance() {
    return reinterpret_cast<const cmsg_duixing*>(
               &_cmsg_duixing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(cmsg_duixing* other);
  friend void swap(cmsg_duixing& a, cmsg_duixing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_duixing* New() const final {
    return CreateMaybeMessage<cmsg_duixing>(NULL);
  }

  cmsg_duixing* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_duixing>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_duixing& from);
  void MergeFrom(const cmsg_duixing& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_duixing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 src_site = 2;
  void clear_src_site();
  static const int kSrcSiteFieldNumber = 2;
  ::google::protobuf::int32 src_site() const;
  void set_src_site(::google::protobuf::int32 value);

  // int32 dest_site = 3;
  void clear_dest_site();
  static const int kDestSiteFieldNumber = 3;
  ::google::protobuf::int32 dest_site() const;
  void set_dest_site(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_duixing)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 src_site_;
  ::google::protobuf::int32 dest_site_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_duixing_on : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_duixing_on) */ {
 public:
  cmsg_duixing_on();
  virtual ~cmsg_duixing_on();

  cmsg_duixing_on(const cmsg_duixing_on& from);

  inline cmsg_duixing_on& operator=(const cmsg_duixing_on& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_duixing_on(cmsg_duixing_on&& from) noexcept
    : cmsg_duixing_on() {
    *this = ::std::move(from);
  }

  inline cmsg_duixing_on& operator=(cmsg_duixing_on&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_duixing_on& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_duixing_on* internal_default_instance() {
    return reinterpret_cast<const cmsg_duixing_on*>(
               &_cmsg_duixing_on_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(cmsg_duixing_on* other);
  friend void swap(cmsg_duixing_on& a, cmsg_duixing_on& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_duixing_on* New() const final {
    return CreateMaybeMessage<cmsg_duixing_on>(NULL);
  }

  cmsg_duixing_on* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_duixing_on>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_duixing_on& from);
  void MergeFrom(const cmsg_duixing_on& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_duixing_on* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_duixing_on)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_equip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_equip) */ {
 public:
  cmsg_role_equip();
  virtual ~cmsg_role_equip();

  cmsg_role_equip(const cmsg_role_equip& from);

  inline cmsg_role_equip& operator=(const cmsg_role_equip& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_equip(cmsg_role_equip&& from) noexcept
    : cmsg_role_equip() {
    *this = ::std::move(from);
  }

  inline cmsg_role_equip& operator=(cmsg_role_equip&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_equip& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_equip* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_equip*>(
               &_cmsg_role_equip_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(cmsg_role_equip* other);
  friend void swap(cmsg_role_equip& a, cmsg_role_equip& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_equip* New() const final {
    return CreateMaybeMessage<cmsg_role_equip>(NULL);
  }

  cmsg_role_equip* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_equip>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_equip& from);
  void MergeFrom(const cmsg_role_equip& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_equip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 index = 3;
  int index_size() const;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::int32 index(int index) const;
  void set_index(int index, ::google::protobuf::int32 value);
  void add_index(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      index() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_index();

  // repeated uint64 equip_guid = 4;
  int equip_guid_size() const;
  void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 4;
  ::google::protobuf::uint64 equip_guid(int index) const;
  void set_equip_guid(int index, ::google::protobuf::uint64 value);
  void add_equip_guid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equip_guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equip_guid();

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 role_guid = 2;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 2;
  ::google::protobuf::uint64 role_guid() const;
  void set_role_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_equip)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > index_;
  mutable int _index_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equip_guid_;
  mutable int _equip_guid_cached_byte_size_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 role_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guanghuan_on : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guanghuan_on) */ {
 public:
  cmsg_guanghuan_on();
  virtual ~cmsg_guanghuan_on();

  cmsg_guanghuan_on(const cmsg_guanghuan_on& from);

  inline cmsg_guanghuan_on& operator=(const cmsg_guanghuan_on& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guanghuan_on(cmsg_guanghuan_on&& from) noexcept
    : cmsg_guanghuan_on() {
    *this = ::std::move(from);
  }

  inline cmsg_guanghuan_on& operator=(cmsg_guanghuan_on&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guanghuan_on& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guanghuan_on* internal_default_instance() {
    return reinterpret_cast<const cmsg_guanghuan_on*>(
               &_cmsg_guanghuan_on_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(cmsg_guanghuan_on* other);
  friend void swap(cmsg_guanghuan_on& a, cmsg_guanghuan_on& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guanghuan_on* New() const final {
    return CreateMaybeMessage<cmsg_guanghuan_on>(NULL);
  }

  cmsg_guanghuan_on* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guanghuan_on>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guanghuan_on& from);
  void MergeFrom(const cmsg_guanghuan_on& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guanghuan_on* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guanghuan_on)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guanghuan_level : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guanghuan_level) */ {
 public:
  cmsg_guanghuan_level();
  virtual ~cmsg_guanghuan_level();

  cmsg_guanghuan_level(const cmsg_guanghuan_level& from);

  inline cmsg_guanghuan_level& operator=(const cmsg_guanghuan_level& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guanghuan_level(cmsg_guanghuan_level&& from) noexcept
    : cmsg_guanghuan_level() {
    *this = ::std::move(from);
  }

  inline cmsg_guanghuan_level& operator=(cmsg_guanghuan_level&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guanghuan_level& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guanghuan_level* internal_default_instance() {
    return reinterpret_cast<const cmsg_guanghuan_level*>(
               &_cmsg_guanghuan_level_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(cmsg_guanghuan_level* other);
  friend void swap(cmsg_guanghuan_level& a, cmsg_guanghuan_level& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guanghuan_level* New() const final {
    return CreateMaybeMessage<cmsg_guanghuan_level>(NULL);
  }

  cmsg_guanghuan_level* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guanghuan_level>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guanghuan_level& from);
  void MergeFrom(const cmsg_guanghuan_level& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guanghuan_level* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guanghuan_level)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guanghuan_init : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guanghuan_init) */ {
 public:
  cmsg_guanghuan_init();
  virtual ~cmsg_guanghuan_init();

  cmsg_guanghuan_init(const cmsg_guanghuan_init& from);

  inline cmsg_guanghuan_init& operator=(const cmsg_guanghuan_init& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guanghuan_init(cmsg_guanghuan_init&& from) noexcept
    : cmsg_guanghuan_init() {
    *this = ::std::move(from);
  }

  inline cmsg_guanghuan_init& operator=(cmsg_guanghuan_init&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guanghuan_init& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guanghuan_init* internal_default_instance() {
    return reinterpret_cast<const cmsg_guanghuan_init*>(
               &_cmsg_guanghuan_init_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(cmsg_guanghuan_init* other);
  friend void swap(cmsg_guanghuan_init& a, cmsg_guanghuan_init& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guanghuan_init* New() const final {
    return CreateMaybeMessage<cmsg_guanghuan_init>(NULL);
  }

  cmsg_guanghuan_init* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guanghuan_init>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guanghuan_init& from);
  void MergeFrom(const cmsg_guanghuan_init& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guanghuan_init* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guanghuan_init)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_all_equip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_all_equip) */ {
 public:
  cmsg_role_all_equip();
  virtual ~cmsg_role_all_equip();

  cmsg_role_all_equip(const cmsg_role_all_equip& from);

  inline cmsg_role_all_equip& operator=(const cmsg_role_all_equip& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_all_equip(cmsg_role_all_equip&& from) noexcept
    : cmsg_role_all_equip() {
    *this = ::std::move(from);
  }

  inline cmsg_role_all_equip& operator=(cmsg_role_all_equip&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_all_equip& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_all_equip* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_all_equip*>(
               &_cmsg_role_all_equip_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(cmsg_role_all_equip* other);
  friend void swap(cmsg_role_all_equip& a, cmsg_role_all_equip& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_all_equip* New() const final {
    return CreateMaybeMessage<cmsg_role_all_equip>(NULL);
  }

  cmsg_role_all_equip* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_all_equip>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_all_equip& from);
  void MergeFrom(const cmsg_role_all_equip& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_all_equip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 equip_index = 3;
  int equip_index_size() const;
  void clear_equip_index();
  static const int kEquipIndexFieldNumber = 3;
  ::google::protobuf::int32 equip_index(int index) const;
  void set_equip_index(int index, ::google::protobuf::int32 value);
  void add_equip_index(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      equip_index() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_equip_index();

  // repeated uint64 equip_guid = 4;
  int equip_guid_size() const;
  void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 4;
  ::google::protobuf::uint64 equip_guid(int index) const;
  void set_equip_guid(int index, ::google::protobuf::uint64 value);
  void add_equip_guid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equip_guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equip_guid();

  // repeated int32 treasure_index = 5;
  int treasure_index_size() const;
  void clear_treasure_index();
  static const int kTreasureIndexFieldNumber = 5;
  ::google::protobuf::int32 treasure_index(int index) const;
  void set_treasure_index(int index, ::google::protobuf::int32 value);
  void add_treasure_index(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      treasure_index() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_treasure_index();

  // repeated uint64 treasure_guid = 6;
  int treasure_guid_size() const;
  void clear_treasure_guid();
  static const int kTreasureGuidFieldNumber = 6;
  ::google::protobuf::uint64 treasure_guid(int index) const;
  void set_treasure_guid(int index, ::google::protobuf::uint64 value);
  void add_treasure_guid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      treasure_guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_treasure_guid();

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 role_guid = 2;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 2;
  ::google::protobuf::uint64 role_guid() const;
  void set_role_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_all_equip)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > equip_index_;
  mutable int _equip_index_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equip_guid_;
  mutable int _equip_guid_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > treasure_index_;
  mutable int _treasure_index_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > treasure_guid_;
  mutable int _treasure_guid_cached_byte_size_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 role_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_chouka : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_chouka) */ {
 public:
  cmsg_chouka();
  virtual ~cmsg_chouka();

  cmsg_chouka(const cmsg_chouka& from);

  inline cmsg_chouka& operator=(const cmsg_chouka& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_chouka(cmsg_chouka&& from) noexcept
    : cmsg_chouka() {
    *this = ::std::move(from);
  }

  inline cmsg_chouka& operator=(cmsg_chouka&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_chouka& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_chouka* internal_default_instance() {
    return reinterpret_cast<const cmsg_chouka*>(
               &_cmsg_chouka_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(cmsg_chouka* other);
  friend void swap(cmsg_chouka& a, cmsg_chouka& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_chouka* New() const final {
    return CreateMaybeMessage<cmsg_chouka>(NULL);
  }

  cmsg_chouka* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_chouka>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_chouka& from);
  void MergeFrom(const cmsg_chouka& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_chouka* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_chouka)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_chouka : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_chouka) */ {
 public:
  smsg_chouka();
  virtual ~smsg_chouka();

  smsg_chouka(const smsg_chouka& from);

  inline smsg_chouka& operator=(const smsg_chouka& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_chouka(smsg_chouka&& from) noexcept
    : smsg_chouka() {
    *this = ::std::move(from);
  }

  inline smsg_chouka& operator=(smsg_chouka&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_chouka& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_chouka* internal_default_instance() {
    return reinterpret_cast<const smsg_chouka*>(
               &_smsg_chouka_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(smsg_chouka* other);
  friend void swap(smsg_chouka& a, smsg_chouka& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_chouka* New() const final {
    return CreateMaybeMessage<smsg_chouka>(NULL);
  }

  smsg_chouka* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_chouka>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_chouka& from);
  void MergeFrom(const smsg_chouka& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_chouka* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 item_ids = 6;
  int item_ids_size() const;
  void clear_item_ids();
  static const int kItemIdsFieldNumber = 6;
  ::google::protobuf::int32 item_ids(int index) const;
  void set_item_ids(int index, ::google::protobuf::int32 value);
  void add_item_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item_ids();

  // repeated int32 item_nums = 7;
  int item_nums_size() const;
  void clear_item_nums();
  static const int kItemNumsFieldNumber = 7;
  ::google::protobuf::int32 item_nums(int index) const;
  void set_item_nums(int index, ::google::protobuf::int32 value);
  void add_item_nums(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      item_nums() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_item_nums();

  // repeated .dhc.role_t roles = 8;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 8;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // uint64 ck2_free_time = 3;
  void clear_ck2_free_time();
  static const int kCk2FreeTimeFieldNumber = 3;
  ::google::protobuf::uint64 ck2_free_time() const;
  void set_ck2_free_time(::google::protobuf::uint64 value);

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 jewel = 5;
  void clear_jewel();
  static const int kJewelFieldNumber = 5;
  ::google::protobuf::int32 jewel() const;
  void set_jewel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_chouka)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_ids_;
  mutable int _item_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > item_nums_;
  mutable int _item_nums_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::uint64 ck2_free_time_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 jewel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_upgrade : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_upgrade) */ {
 public:
  cmsg_role_upgrade();
  virtual ~cmsg_role_upgrade();

  cmsg_role_upgrade(const cmsg_role_upgrade& from);

  inline cmsg_role_upgrade& operator=(const cmsg_role_upgrade& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_upgrade(cmsg_role_upgrade&& from) noexcept
    : cmsg_role_upgrade() {
    *this = ::std::move(from);
  }

  inline cmsg_role_upgrade& operator=(cmsg_role_upgrade&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_upgrade& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_upgrade* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_upgrade*>(
               &_cmsg_role_upgrade_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(cmsg_role_upgrade* other);
  friend void swap(cmsg_role_upgrade& a, cmsg_role_upgrade& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_upgrade* New() const final {
    return CreateMaybeMessage<cmsg_role_upgrade>(NULL);
  }

  cmsg_role_upgrade* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_upgrade>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_upgrade& from);
  void MergeFrom(const cmsg_role_upgrade& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_upgrade* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 role_guid = 2;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 2;
  ::google::protobuf::uint64 role_guid() const;
  void set_role_guid(::google::protobuf::uint64 value);

  // int32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_upgrade)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 role_guid_;
  ::google::protobuf::int32 level_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_tupo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_tupo) */ {
 public:
  cmsg_role_tupo();
  virtual ~cmsg_role_tupo();

  cmsg_role_tupo(const cmsg_role_tupo& from);

  inline cmsg_role_tupo& operator=(const cmsg_role_tupo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_tupo(cmsg_role_tupo&& from) noexcept
    : cmsg_role_tupo() {
    *this = ::std::move(from);
  }

  inline cmsg_role_tupo& operator=(cmsg_role_tupo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_tupo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_tupo* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_tupo*>(
               &_cmsg_role_tupo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(cmsg_role_tupo* other);
  friend void swap(cmsg_role_tupo& a, cmsg_role_tupo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_tupo* New() const final {
    return CreateMaybeMessage<cmsg_role_tupo>(NULL);
  }

  cmsg_role_tupo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_tupo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_tupo& from);
  void MergeFrom(const cmsg_role_tupo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_tupo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 role_guid = 2;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 2;
  ::google::protobuf::uint64 role_guid() const;
  void set_role_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_tupo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 role_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_jinjie : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_jinjie) */ {
 public:
  cmsg_role_jinjie();
  virtual ~cmsg_role_jinjie();

  cmsg_role_jinjie(const cmsg_role_jinjie& from);

  inline cmsg_role_jinjie& operator=(const cmsg_role_jinjie& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_jinjie(cmsg_role_jinjie&& from) noexcept
    : cmsg_role_jinjie() {
    *this = ::std::move(from);
  }

  inline cmsg_role_jinjie& operator=(cmsg_role_jinjie&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_jinjie& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_jinjie* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_jinjie*>(
               &_cmsg_role_jinjie_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(cmsg_role_jinjie* other);
  friend void swap(cmsg_role_jinjie& a, cmsg_role_jinjie& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_jinjie* New() const final {
    return CreateMaybeMessage<cmsg_role_jinjie>(NULL);
  }

  cmsg_role_jinjie* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_jinjie>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_jinjie& from);
  void MergeFrom(const cmsg_role_jinjie& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_jinjie* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 role_guid = 2;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 2;
  ::google::protobuf::uint64 role_guid() const;
  void set_role_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_jinjie)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 role_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_suipian : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_suipian) */ {
 public:
  cmsg_role_suipian();
  virtual ~cmsg_role_suipian();

  cmsg_role_suipian(const cmsg_role_suipian& from);

  inline cmsg_role_suipian& operator=(const cmsg_role_suipian& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_suipian(cmsg_role_suipian&& from) noexcept
    : cmsg_role_suipian() {
    *this = ::std::move(from);
  }

  inline cmsg_role_suipian& operator=(cmsg_role_suipian&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_suipian& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_suipian* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_suipian*>(
               &_cmsg_role_suipian_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(cmsg_role_suipian* other);
  friend void swap(cmsg_role_suipian& a, cmsg_role_suipian& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_suipian* New() const final {
    return CreateMaybeMessage<cmsg_role_suipian>(NULL);
  }

  cmsg_role_suipian* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_suipian>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_suipian& from);
  void MergeFrom(const cmsg_role_suipian& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_suipian* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint32 item_id = 2;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_suipian)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint32 item_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_duihuan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_duihuan) */ {
 public:
  cmsg_role_duihuan();
  virtual ~cmsg_role_duihuan();

  cmsg_role_duihuan(const cmsg_role_duihuan& from);

  inline cmsg_role_duihuan& operator=(const cmsg_role_duihuan& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_duihuan(cmsg_role_duihuan&& from) noexcept
    : cmsg_role_duihuan() {
    *this = ::std::move(from);
  }

  inline cmsg_role_duihuan& operator=(cmsg_role_duihuan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_duihuan& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_duihuan* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_duihuan*>(
               &_cmsg_role_duihuan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(cmsg_role_duihuan* other);
  friend void swap(cmsg_role_duihuan& a, cmsg_role_duihuan& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_duihuan* New() const final {
    return CreateMaybeMessage<cmsg_role_duihuan>(NULL);
  }

  cmsg_role_duihuan* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_duihuan>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_duihuan& from);
  void MergeFrom(const cmsg_role_duihuan& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_duihuan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint32 item_id = 2;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_duihuan)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint32 item_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_role_duihuan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_role_duihuan) */ {
 public:
  smsg_role_duihuan();
  virtual ~smsg_role_duihuan();

  smsg_role_duihuan(const smsg_role_duihuan& from);

  inline smsg_role_duihuan& operator=(const smsg_role_duihuan& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_role_duihuan(smsg_role_duihuan&& from) noexcept
    : smsg_role_duihuan() {
    *this = ::std::move(from);
  }

  inline smsg_role_duihuan& operator=(smsg_role_duihuan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_role_duihuan& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_role_duihuan* internal_default_instance() {
    return reinterpret_cast<const smsg_role_duihuan*>(
               &_smsg_role_duihuan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(smsg_role_duihuan* other);
  friend void swap(smsg_role_duihuan& a, smsg_role_duihuan& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_role_duihuan* New() const final {
    return CreateMaybeMessage<smsg_role_duihuan>(NULL);
  }

  smsg_role_duihuan* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_role_duihuan>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_role_duihuan& from);
  void MergeFrom(const smsg_role_duihuan& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_role_duihuan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .dhc.role_t role = 1;
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 1;
  private:
  const ::dhc::role_t& _internal_role() const;
  public:
  const ::dhc::role_t& role() const;
  ::dhc::role_t* release_role();
  ::dhc::role_t* mutable_role();
  void set_allocated_role(::dhc::role_t* role);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_role_duihuan)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::dhc::role_t* role_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_skillup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_skillup) */ {
 public:
  cmsg_role_skillup();
  virtual ~cmsg_role_skillup();

  cmsg_role_skillup(const cmsg_role_skillup& from);

  inline cmsg_role_skillup& operator=(const cmsg_role_skillup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_skillup(cmsg_role_skillup&& from) noexcept
    : cmsg_role_skillup() {
    *this = ::std::move(from);
  }

  inline cmsg_role_skillup& operator=(cmsg_role_skillup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_skillup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_skillup* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_skillup*>(
               &_cmsg_role_skillup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(cmsg_role_skillup* other);
  friend void swap(cmsg_role_skillup& a, cmsg_role_skillup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_skillup* New() const final {
    return CreateMaybeMessage<cmsg_role_skillup>(NULL);
  }

  cmsg_role_skillup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_skillup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_skillup& from);
  void MergeFrom(const cmsg_role_skillup& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_skillup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 role_guid = 2;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 2;
  ::google::protobuf::uint64 role_guid() const;
  void set_role_guid(::google::protobuf::uint64 value);

  // int32 index = 4;
  void clear_index();
  static const int kIndexFieldNumber = 4;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_skillup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 role_guid_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_role_skillup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_role_skillup) */ {
 public:
  smsg_role_skillup();
  virtual ~smsg_role_skillup();

  smsg_role_skillup(const smsg_role_skillup& from);

  inline smsg_role_skillup& operator=(const smsg_role_skillup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_role_skillup(smsg_role_skillup&& from) noexcept
    : smsg_role_skillup() {
    *this = ::std::move(from);
  }

  inline smsg_role_skillup& operator=(smsg_role_skillup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_role_skillup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_role_skillup* internal_default_instance() {
    return reinterpret_cast<const smsg_role_skillup*>(
               &_smsg_role_skillup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(smsg_role_skillup* other);
  friend void swap(smsg_role_skillup& a, smsg_role_skillup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_role_skillup* New() const final {
    return CreateMaybeMessage<smsg_role_skillup>(NULL);
  }

  smsg_role_skillup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_role_skillup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_role_skillup& from);
  void MergeFrom(const smsg_role_skillup& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_role_skillup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 exp = 1;
  void clear_exp();
  static const int kExpFieldNumber = 1;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // int32 num = 2;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_role_skillup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_shengpin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_shengpin) */ {
 public:
  cmsg_role_shengpin();
  virtual ~cmsg_role_shengpin();

  cmsg_role_shengpin(const cmsg_role_shengpin& from);

  inline cmsg_role_shengpin& operator=(const cmsg_role_shengpin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_shengpin(cmsg_role_shengpin&& from) noexcept
    : cmsg_role_shengpin() {
    *this = ::std::move(from);
  }

  inline cmsg_role_shengpin& operator=(cmsg_role_shengpin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_shengpin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_shengpin* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_shengpin*>(
               &_cmsg_role_shengpin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(cmsg_role_shengpin* other);
  friend void swap(cmsg_role_shengpin& a, cmsg_role_shengpin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_shengpin* New() const final {
    return CreateMaybeMessage<cmsg_role_shengpin>(NULL);
  }

  cmsg_role_shengpin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_shengpin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_shengpin& from);
  void MergeFrom(const cmsg_role_shengpin& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_shengpin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 role_guid = 2;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 2;
  ::google::protobuf::uint64 role_guid() const;
  void set_role_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_shengpin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 role_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_bskillup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_bskillup) */ {
 public:
  cmsg_role_bskillup();
  virtual ~cmsg_role_bskillup();

  cmsg_role_bskillup(const cmsg_role_bskillup& from);

  inline cmsg_role_bskillup& operator=(const cmsg_role_bskillup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_bskillup(cmsg_role_bskillup&& from) noexcept
    : cmsg_role_bskillup() {
    *this = ::std::move(from);
  }

  inline cmsg_role_bskillup& operator=(cmsg_role_bskillup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_bskillup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_bskillup* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_bskillup*>(
               &_cmsg_role_bskillup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(cmsg_role_bskillup* other);
  friend void swap(cmsg_role_bskillup& a, cmsg_role_bskillup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_bskillup* New() const final {
    return CreateMaybeMessage<cmsg_role_bskillup>(NULL);
  }

  cmsg_role_bskillup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_bskillup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_bskillup& from);
  void MergeFrom(const cmsg_role_bskillup& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_bskillup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 role_guid = 2;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 2;
  ::google::protobuf::uint64 role_guid() const;
  void set_role_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_bskillup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 role_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_dress_on : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_dress_on) */ {
 public:
  cmsg_role_dress_on();
  virtual ~cmsg_role_dress_on();

  cmsg_role_dress_on(const cmsg_role_dress_on& from);

  inline cmsg_role_dress_on& operator=(const cmsg_role_dress_on& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_dress_on(cmsg_role_dress_on&& from) noexcept
    : cmsg_role_dress_on() {
    *this = ::std::move(from);
  }

  inline cmsg_role_dress_on& operator=(cmsg_role_dress_on&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_dress_on& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_dress_on* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_dress_on*>(
               &_cmsg_role_dress_on_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(cmsg_role_dress_on* other);
  friend void swap(cmsg_role_dress_on& a, cmsg_role_dress_on& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_dress_on* New() const final {
    return CreateMaybeMessage<cmsg_role_dress_on>(NULL);
  }

  cmsg_role_dress_on* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_dress_on>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_dress_on& from);
  void MergeFrom(const cmsg_role_dress_on& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_dress_on* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 role_guid = 2;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 2;
  ::google::protobuf::uint64 role_guid() const;
  void set_role_guid(::google::protobuf::uint64 value);

  // int32 dress_id = 3;
  void clear_dress_id();
  static const int kDressIdFieldNumber = 3;
  ::google::protobuf::int32 dress_id() const;
  void set_dress_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_dress_on)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 role_guid_;
  ::google::protobuf::int32 dress_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_dress_off : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_dress_off) */ {
 public:
  cmsg_role_dress_off();
  virtual ~cmsg_role_dress_off();

  cmsg_role_dress_off(const cmsg_role_dress_off& from);

  inline cmsg_role_dress_off& operator=(const cmsg_role_dress_off& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_dress_off(cmsg_role_dress_off&& from) noexcept
    : cmsg_role_dress_off() {
    *this = ::std::move(from);
  }

  inline cmsg_role_dress_off& operator=(cmsg_role_dress_off&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_dress_off& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_dress_off* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_dress_off*>(
               &_cmsg_role_dress_off_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(cmsg_role_dress_off* other);
  friend void swap(cmsg_role_dress_off& a, cmsg_role_dress_off& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_dress_off* New() const final {
    return CreateMaybeMessage<cmsg_role_dress_off>(NULL);
  }

  cmsg_role_dress_off* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_dress_off>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_dress_off& from);
  void MergeFrom(const cmsg_role_dress_off& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_dress_off* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 role_guid = 2;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 2;
  ::google::protobuf::uint64 role_guid() const;
  void set_role_guid(::google::protobuf::uint64 value);

  // int32 dress_id = 3;
  void clear_dress_id();
  static const int kDressIdFieldNumber = 3;
  ::google::protobuf::int32 dress_id() const;
  void set_dress_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_dress_off)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 role_guid_;
  ::google::protobuf::int32 dress_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_init : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_init) */ {
 public:
  cmsg_role_init();
  virtual ~cmsg_role_init();

  cmsg_role_init(const cmsg_role_init& from);

  inline cmsg_role_init& operator=(const cmsg_role_init& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_init(cmsg_role_init&& from) noexcept
    : cmsg_role_init() {
    *this = ::std::move(from);
  }

  inline cmsg_role_init& operator=(cmsg_role_init&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_init& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_init* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_init*>(
               &_cmsg_role_init_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(cmsg_role_init* other);
  friend void swap(cmsg_role_init& a, cmsg_role_init& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_init* New() const final {
    return CreateMaybeMessage<cmsg_role_init>(NULL);
  }

  cmsg_role_init* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_init>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_init& from);
  void MergeFrom(const cmsg_role_init& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_init* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 role_guid = 2;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 2;
  ::google::protobuf::uint64 role_guid() const;
  void set_role_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_init)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 role_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_fj : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_fj) */ {
 public:
  cmsg_role_fj();
  virtual ~cmsg_role_fj();

  cmsg_role_fj(const cmsg_role_fj& from);

  inline cmsg_role_fj& operator=(const cmsg_role_fj& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_fj(cmsg_role_fj&& from) noexcept
    : cmsg_role_fj() {
    *this = ::std::move(from);
  }

  inline cmsg_role_fj& operator=(cmsg_role_fj&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_fj& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_fj* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_fj*>(
               &_cmsg_role_fj_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(cmsg_role_fj* other);
  friend void swap(cmsg_role_fj& a, cmsg_role_fj& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_fj* New() const final {
    return CreateMaybeMessage<cmsg_role_fj>(NULL);
  }

  cmsg_role_fj* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_fj>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_fj& from);
  void MergeFrom(const cmsg_role_fj& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_fj* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 role_guid = 2;
  int role_guid_size() const;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 2;
  ::google::protobuf::uint64 role_guid(int index) const;
  void set_role_guid(int index, ::google::protobuf::uint64 value);
  void add_role_guid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      role_guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_role_guid();

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_fj)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > role_guid_;
  mutable int _role_guid_cached_byte_size_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_role_init : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_role_init) */ {
 public:
  smsg_role_init();
  virtual ~smsg_role_init();

  smsg_role_init(const smsg_role_init& from);

  inline smsg_role_init& operator=(const smsg_role_init& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_role_init(smsg_role_init&& from) noexcept
    : smsg_role_init() {
    *this = ::std::move(from);
  }

  inline smsg_role_init& operator=(smsg_role_init&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_role_init& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_role_init* internal_default_instance() {
    return reinterpret_cast<const smsg_role_init*>(
               &_smsg_role_init_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(smsg_role_init* other);
  friend void swap(smsg_role_init& a, smsg_role_init& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_role_init* New() const final {
    return CreateMaybeMessage<smsg_role_init>(NULL);
  }

  smsg_role_init* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_role_init>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_role_init& from);
  void MergeFrom(const smsg_role_init& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_role_init* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 1;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 1;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 2;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 2;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 3;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 3;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 4;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 4;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.equip_t equips = 6;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 6;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 7;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 7;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 8;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 8;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // int32 yuanli = 5;
  void clear_yuanli();
  static const int kYuanliFieldNumber = 5;
  ::google::protobuf::int32 yuanli() const;
  void set_yuanli(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_role_init)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::int32 yuanli_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_xq_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_xq_look) */ {
 public:
  cmsg_role_xq_look();
  virtual ~cmsg_role_xq_look();

  cmsg_role_xq_look(const cmsg_role_xq_look& from);

  inline cmsg_role_xq_look& operator=(const cmsg_role_xq_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_xq_look(cmsg_role_xq_look&& from) noexcept
    : cmsg_role_xq_look() {
    *this = ::std::move(from);
  }

  inline cmsg_role_xq_look& operator=(cmsg_role_xq_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_xq_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_xq_look* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_xq_look*>(
               &_cmsg_role_xq_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(cmsg_role_xq_look* other);
  friend void swap(cmsg_role_xq_look& a, cmsg_role_xq_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_xq_look* New() const final {
    return CreateMaybeMessage<cmsg_role_xq_look>(NULL);
  }

  cmsg_role_xq_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_xq_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_xq_look& from);
  void MergeFrom(const cmsg_role_xq_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_xq_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_xq_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_role_xq_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_role_xq_look) */ {
 public:
  smsg_role_xq_look();
  virtual ~smsg_role_xq_look();

  smsg_role_xq_look(const smsg_role_xq_look& from);

  inline smsg_role_xq_look& operator=(const smsg_role_xq_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_role_xq_look(smsg_role_xq_look&& from) noexcept
    : smsg_role_xq_look() {
    *this = ::std::move(from);
  }

  inline smsg_role_xq_look& operator=(smsg_role_xq_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_role_xq_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_role_xq_look* internal_default_instance() {
    return reinterpret_cast<const smsg_role_xq_look*>(
               &_smsg_role_xq_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(smsg_role_xq_look* other);
  friend void swap(smsg_role_xq_look& a, smsg_role_xq_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_role_xq_look* New() const final {
    return CreateMaybeMessage<smsg_role_xq_look>(NULL);
  }

  smsg_role_xq_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_role_xq_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_role_xq_look& from);
  void MergeFrom(const smsg_role_xq_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_role_xq_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 guid = 1;
  int guid_size() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid(int index) const;
  void set_guid(int index, ::google::protobuf::uint64 value);
  void add_guid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guid();

  // repeated int32 xq = 2;
  int xq_size() const;
  void clear_xq();
  static const int kXqFieldNumber = 2;
  ::google::protobuf::int32 xq(int index) const;
  void set_xq(int index, ::google::protobuf::int32 value);
  void add_xq(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      xq() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_xq();

  // int32 jb = 3;
  void clear_jb();
  static const int kJbFieldNumber = 3;
  ::google::protobuf::int32 jb() const;
  void set_jb(::google::protobuf::int32 value);

  // int32 zs = 4;
  void clear_zs();
  static const int kZsFieldNumber = 4;
  ::google::protobuf::int32 zs() const;
  void set_zs(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_role_xq_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guid_;
  mutable int _guid_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > xq_;
  mutable int _xq_cached_byte_size_;
  ::google::protobuf::int32 jb_;
  ::google::protobuf::int32 zs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_yh_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_yh_look) */ {
 public:
  cmsg_role_yh_look();
  virtual ~cmsg_role_yh_look();

  cmsg_role_yh_look(const cmsg_role_yh_look& from);

  inline cmsg_role_yh_look& operator=(const cmsg_role_yh_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_yh_look(cmsg_role_yh_look&& from) noexcept
    : cmsg_role_yh_look() {
    *this = ::std::move(from);
  }

  inline cmsg_role_yh_look& operator=(cmsg_role_yh_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_yh_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_yh_look* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_yh_look*>(
               &_cmsg_role_yh_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(cmsg_role_yh_look* other);
  friend void swap(cmsg_role_yh_look& a, cmsg_role_yh_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_yh_look* New() const final {
    return CreateMaybeMessage<cmsg_role_yh_look>(NULL);
  }

  cmsg_role_yh_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_yh_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_yh_look& from);
  void MergeFrom(const cmsg_role_yh_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_yh_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_yh_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_role_yh_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_role_yh_look) */ {
 public:
  smsg_role_yh_look();
  virtual ~smsg_role_yh_look();

  smsg_role_yh_look(const smsg_role_yh_look& from);

  inline smsg_role_yh_look& operator=(const smsg_role_yh_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_role_yh_look(smsg_role_yh_look&& from) noexcept
    : smsg_role_yh_look() {
    *this = ::std::move(from);
  }

  inline smsg_role_yh_look& operator=(smsg_role_yh_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_role_yh_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_role_yh_look* internal_default_instance() {
    return reinterpret_cast<const smsg_role_yh_look*>(
               &_smsg_role_yh_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(smsg_role_yh_look* other);
  friend void swap(smsg_role_yh_look& a, smsg_role_yh_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_role_yh_look* New() const final {
    return CreateMaybeMessage<smsg_role_yh_look>(NULL);
  }

  smsg_role_yh_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_role_yh_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_role_yh_look& from);
  void MergeFrom(const smsg_role_yh_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_role_yh_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 guid = 1;
  int guid_size() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid(int index) const;
  void set_guid(int index, ::google::protobuf::uint64 value);
  void add_guid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guid();

  // repeated int32 pos = 2;
  int pos_size() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::google::protobuf::int32 pos(int index) const;
  void set_pos(int index, ::google::protobuf::int32 value);
  void add_pos(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pos() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pos();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_role_yh_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guid_;
  mutable int _guid_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pos_;
  mutable int _pos_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_yh_select : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_yh_select) */ {
 public:
  cmsg_role_yh_select();
  virtual ~cmsg_role_yh_select();

  cmsg_role_yh_select(const cmsg_role_yh_select& from);

  inline cmsg_role_yh_select& operator=(const cmsg_role_yh_select& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_yh_select(cmsg_role_yh_select&& from) noexcept
    : cmsg_role_yh_select() {
    *this = ::std::move(from);
  }

  inline cmsg_role_yh_select& operator=(cmsg_role_yh_select&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_yh_select& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_yh_select* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_yh_select*>(
               &_cmsg_role_yh_select_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(cmsg_role_yh_select* other);
  friend void swap(cmsg_role_yh_select& a, cmsg_role_yh_select& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_yh_select* New() const final {
    return CreateMaybeMessage<cmsg_role_yh_select>(NULL);
  }

  cmsg_role_yh_select* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_yh_select>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_yh_select& from);
  void MergeFrom(const cmsg_role_yh_select& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_yh_select* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // int32 index = 3;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_yh_select)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_role_yh_select : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_role_yh_select) */ {
 public:
  smsg_role_yh_select();
  virtual ~smsg_role_yh_select();

  smsg_role_yh_select(const smsg_role_yh_select& from);

  inline smsg_role_yh_select& operator=(const smsg_role_yh_select& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_role_yh_select(smsg_role_yh_select&& from) noexcept
    : smsg_role_yh_select() {
    *this = ::std::move(from);
  }

  inline smsg_role_yh_select& operator=(smsg_role_yh_select&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_role_yh_select& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_role_yh_select* internal_default_instance() {
    return reinterpret_cast<const smsg_role_yh_select*>(
               &_smsg_role_yh_select_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(smsg_role_yh_select* other);
  friend void swap(smsg_role_yh_select& a, smsg_role_yh_select& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_role_yh_select* New() const final {
    return CreateMaybeMessage<smsg_role_yh_select>(NULL);
  }

  smsg_role_yh_select* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_role_yh_select>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_role_yh_select& from);
  void MergeFrom(const smsg_role_yh_select& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_role_yh_select* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // int32 xq = 2;
  void clear_xq();
  static const int kXqFieldNumber = 2;
  ::google::protobuf::int32 xq() const;
  void set_xq(::google::protobuf::int32 value);

  // int32 jewel = 3;
  void clear_jewel();
  static const int kJewelFieldNumber = 3;
  ::google::protobuf::int32 jewel() const;
  void set_jewel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_role_yh_select)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 xq_;
  ::google::protobuf::int32 jewel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_huiyi_chou : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_huiyi_chou) */ {
 public:
  cmsg_role_huiyi_chou();
  virtual ~cmsg_role_huiyi_chou();

  cmsg_role_huiyi_chou(const cmsg_role_huiyi_chou& from);

  inline cmsg_role_huiyi_chou& operator=(const cmsg_role_huiyi_chou& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_huiyi_chou(cmsg_role_huiyi_chou&& from) noexcept
    : cmsg_role_huiyi_chou() {
    *this = ::std::move(from);
  }

  inline cmsg_role_huiyi_chou& operator=(cmsg_role_huiyi_chou&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_huiyi_chou& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_huiyi_chou* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_huiyi_chou*>(
               &_cmsg_role_huiyi_chou_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(cmsg_role_huiyi_chou* other);
  friend void swap(cmsg_role_huiyi_chou& a, cmsg_role_huiyi_chou& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_huiyi_chou* New() const final {
    return CreateMaybeMessage<cmsg_role_huiyi_chou>(NULL);
  }

  cmsg_role_huiyi_chou* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_huiyi_chou>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_huiyi_chou& from);
  void MergeFrom(const cmsg_role_huiyi_chou& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_huiyi_chou* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_huiyi_chou)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_role_huiyi_chou : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_role_huiyi_chou) */ {
 public:
  smsg_role_huiyi_chou();
  virtual ~smsg_role_huiyi_chou();

  smsg_role_huiyi_chou(const smsg_role_huiyi_chou& from);

  inline smsg_role_huiyi_chou& operator=(const smsg_role_huiyi_chou& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_role_huiyi_chou(smsg_role_huiyi_chou&& from) noexcept
    : smsg_role_huiyi_chou() {
    *this = ::std::move(from);
  }

  inline smsg_role_huiyi_chou& operator=(smsg_role_huiyi_chou&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_role_huiyi_chou& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_role_huiyi_chou* internal_default_instance() {
    return reinterpret_cast<const smsg_role_huiyi_chou*>(
               &_smsg_role_huiyi_chou_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(smsg_role_huiyi_chou* other);
  friend void swap(smsg_role_huiyi_chou& a, smsg_role_huiyi_chou& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_role_huiyi_chou* New() const final {
    return CreateMaybeMessage<smsg_role_huiyi_chou>(NULL);
  }

  smsg_role_huiyi_chou* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_role_huiyi_chou>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_role_huiyi_chou& from);
  void MergeFrom(const smsg_role_huiyi_chou& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_role_huiyi_chou* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ids = 1;
  int ids_size() const;
  void clear_ids();
  static const int kIdsFieldNumber = 1;
  ::google::protobuf::int32 ids(int index) const;
  void set_ids(int index, ::google::protobuf::int32 value);
  void add_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_role_huiyi_chou)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ids_;
  mutable int _ids_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_huiyi_jihuo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_huiyi_jihuo) */ {
 public:
  cmsg_role_huiyi_jihuo();
  virtual ~cmsg_role_huiyi_jihuo();

  cmsg_role_huiyi_jihuo(const cmsg_role_huiyi_jihuo& from);

  inline cmsg_role_huiyi_jihuo& operator=(const cmsg_role_huiyi_jihuo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_huiyi_jihuo(cmsg_role_huiyi_jihuo&& from) noexcept
    : cmsg_role_huiyi_jihuo() {
    *this = ::std::move(from);
  }

  inline cmsg_role_huiyi_jihuo& operator=(cmsg_role_huiyi_jihuo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_huiyi_jihuo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_huiyi_jihuo* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_huiyi_jihuo*>(
               &_cmsg_role_huiyi_jihuo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(cmsg_role_huiyi_jihuo* other);
  friend void swap(cmsg_role_huiyi_jihuo& a, cmsg_role_huiyi_jihuo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_huiyi_jihuo* New() const final {
    return CreateMaybeMessage<cmsg_role_huiyi_jihuo>(NULL);
  }

  cmsg_role_huiyi_jihuo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_huiyi_jihuo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_huiyi_jihuo& from);
  void MergeFrom(const cmsg_role_huiyi_jihuo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_huiyi_jihuo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_huiyi_jihuo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_role_huiyi_zhanpu : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_role_huiyi_zhanpu) */ {
 public:
  smsg_role_huiyi_zhanpu();
  virtual ~smsg_role_huiyi_zhanpu();

  smsg_role_huiyi_zhanpu(const smsg_role_huiyi_zhanpu& from);

  inline smsg_role_huiyi_zhanpu& operator=(const smsg_role_huiyi_zhanpu& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_role_huiyi_zhanpu(smsg_role_huiyi_zhanpu&& from) noexcept
    : smsg_role_huiyi_zhanpu() {
    *this = ::std::move(from);
  }

  inline smsg_role_huiyi_zhanpu& operator=(smsg_role_huiyi_zhanpu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_role_huiyi_zhanpu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_role_huiyi_zhanpu* internal_default_instance() {
    return reinterpret_cast<const smsg_role_huiyi_zhanpu*>(
               &_smsg_role_huiyi_zhanpu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(smsg_role_huiyi_zhanpu* other);
  friend void swap(smsg_role_huiyi_zhanpu& a, smsg_role_huiyi_zhanpu& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_role_huiyi_zhanpu* New() const final {
    return CreateMaybeMessage<smsg_role_huiyi_zhanpu>(NULL);
  }

  smsg_role_huiyi_zhanpu* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_role_huiyi_zhanpu>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_role_huiyi_zhanpu& from);
  void MergeFrom(const smsg_role_huiyi_zhanpu& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_role_huiyi_zhanpu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ids = 1;
  int ids_size() const;
  void clear_ids();
  static const int kIdsFieldNumber = 1;
  ::google::protobuf::int32 ids(int index) const;
  void set_ids(int index, ::google::protobuf::int32 value);
  void add_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_role_huiyi_zhanpu)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ids_;
  mutable int _ids_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_huiyi_fanpai : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_huiyi_fanpai) */ {
 public:
  cmsg_role_huiyi_fanpai();
  virtual ~cmsg_role_huiyi_fanpai();

  cmsg_role_huiyi_fanpai(const cmsg_role_huiyi_fanpai& from);

  inline cmsg_role_huiyi_fanpai& operator=(const cmsg_role_huiyi_fanpai& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_huiyi_fanpai(cmsg_role_huiyi_fanpai&& from) noexcept
    : cmsg_role_huiyi_fanpai() {
    *this = ::std::move(from);
  }

  inline cmsg_role_huiyi_fanpai& operator=(cmsg_role_huiyi_fanpai&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_huiyi_fanpai& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_huiyi_fanpai* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_huiyi_fanpai*>(
               &_cmsg_role_huiyi_fanpai_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(cmsg_role_huiyi_fanpai* other);
  friend void swap(cmsg_role_huiyi_fanpai& a, cmsg_role_huiyi_fanpai& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_huiyi_fanpai* New() const final {
    return CreateMaybeMessage<cmsg_role_huiyi_fanpai>(NULL);
  }

  cmsg_role_huiyi_fanpai* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_huiyi_fanpai>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_huiyi_fanpai& from);
  void MergeFrom(const cmsg_role_huiyi_fanpai& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_huiyi_fanpai* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_huiyi_fanpai)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_role_huiyi_rank : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_role_huiyi_rank) */ {
 public:
  smsg_role_huiyi_rank();
  virtual ~smsg_role_huiyi_rank();

  smsg_role_huiyi_rank(const smsg_role_huiyi_rank& from);

  inline smsg_role_huiyi_rank& operator=(const smsg_role_huiyi_rank& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_role_huiyi_rank(smsg_role_huiyi_rank&& from) noexcept
    : smsg_role_huiyi_rank() {
    *this = ::std::move(from);
  }

  inline smsg_role_huiyi_rank& operator=(smsg_role_huiyi_rank&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_role_huiyi_rank& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_role_huiyi_rank* internal_default_instance() {
    return reinterpret_cast<const smsg_role_huiyi_rank*>(
               &_smsg_role_huiyi_rank_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(smsg_role_huiyi_rank* other);
  friend void swap(smsg_role_huiyi_rank& a, smsg_role_huiyi_rank& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_role_huiyi_rank* New() const final {
    return CreateMaybeMessage<smsg_role_huiyi_rank>(NULL);
  }

  smsg_role_huiyi_rank* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_role_huiyi_rank>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_role_huiyi_rank& from);
  void MergeFrom(const smsg_role_huiyi_rank& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_role_huiyi_rank* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .dhc.rank_t rank_list = 1;
  bool has_rank_list() const;
  void clear_rank_list();
  static const int kRankListFieldNumber = 1;
  private:
  const ::dhc::rank_t& _internal_rank_list() const;
  public:
  const ::dhc::rank_t& rank_list() const;
  ::dhc::rank_t* release_rank_list();
  ::dhc::rank_t* mutable_rank_list();
  void set_allocated_rank_list(::dhc::rank_t* rank_list);

  // int32 rank = 2;
  void clear_rank();
  static const int kRankFieldNumber = 2;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_role_huiyi_rank)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::dhc::rank_t* rank_list_;
  ::google::protobuf::int32 rank_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_role_suipian_gaizao : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_role_suipian_gaizao) */ {
 public:
  cmsg_role_suipian_gaizao();
  virtual ~cmsg_role_suipian_gaizao();

  cmsg_role_suipian_gaizao(const cmsg_role_suipian_gaizao& from);

  inline cmsg_role_suipian_gaizao& operator=(const cmsg_role_suipian_gaizao& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_role_suipian_gaizao(cmsg_role_suipian_gaizao&& from) noexcept
    : cmsg_role_suipian_gaizao() {
    *this = ::std::move(from);
  }

  inline cmsg_role_suipian_gaizao& operator=(cmsg_role_suipian_gaizao&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_role_suipian_gaizao& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_role_suipian_gaizao* internal_default_instance() {
    return reinterpret_cast<const cmsg_role_suipian_gaizao*>(
               &_cmsg_role_suipian_gaizao_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(cmsg_role_suipian_gaizao* other);
  friend void swap(cmsg_role_suipian_gaizao& a, cmsg_role_suipian_gaizao& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_role_suipian_gaizao* New() const final {
    return CreateMaybeMessage<cmsg_role_suipian_gaizao>(NULL);
  }

  cmsg_role_suipian_gaizao* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_role_suipian_gaizao>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_role_suipian_gaizao& from);
  void MergeFrom(const cmsg_role_suipian_gaizao& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_role_suipian_gaizao* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 src_suipian = 2;
  void clear_src_suipian();
  static const int kSrcSuipianFieldNumber = 2;
  ::google::protobuf::int32 src_suipian() const;
  void set_src_suipian(::google::protobuf::int32 value);

  // int32 src_num = 3;
  void clear_src_num();
  static const int kSrcNumFieldNumber = 3;
  ::google::protobuf::int32 src_num() const;
  void set_src_num(::google::protobuf::int32 value);

  // int32 target_suipian = 4;
  void clear_target_suipian();
  static const int kTargetSuipianFieldNumber = 4;
  ::google::protobuf::int32 target_suipian() const;
  void set_target_suipian(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_role_suipian_gaizao)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 src_suipian_;
  ::google::protobuf::int32 src_num_;
  ::google::protobuf::int32 target_suipian_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_equip_enhance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_equip_enhance) */ {
 public:
  cmsg_equip_enhance();
  virtual ~cmsg_equip_enhance();

  cmsg_equip_enhance(const cmsg_equip_enhance& from);

  inline cmsg_equip_enhance& operator=(const cmsg_equip_enhance& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_equip_enhance(cmsg_equip_enhance&& from) noexcept
    : cmsg_equip_enhance() {
    *this = ::std::move(from);
  }

  inline cmsg_equip_enhance& operator=(cmsg_equip_enhance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_equip_enhance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_equip_enhance* internal_default_instance() {
    return reinterpret_cast<const cmsg_equip_enhance*>(
               &_cmsg_equip_enhance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(cmsg_equip_enhance* other);
  friend void swap(cmsg_equip_enhance& a, cmsg_equip_enhance& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_equip_enhance* New() const final {
    return CreateMaybeMessage<cmsg_equip_enhance>(NULL);
  }

  cmsg_equip_enhance* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_equip_enhance>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_equip_enhance& from);
  void MergeFrom(const cmsg_equip_enhance& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_equip_enhance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 equip_guid = 2;
  void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 2;
  ::google::protobuf::uint64 equip_guid() const;
  void set_equip_guid(::google::protobuf::uint64 value);

  // int32 enhance_num = 3;
  void clear_enhance_num();
  static const int kEnhanceNumFieldNumber = 3;
  ::google::protobuf::int32 enhance_num() const;
  void set_enhance_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_equip_enhance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 equip_guid_;
  ::google::protobuf::int32 enhance_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_equip_auto_enhance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_equip_auto_enhance) */ {
 public:
  cmsg_equip_auto_enhance();
  virtual ~cmsg_equip_auto_enhance();

  cmsg_equip_auto_enhance(const cmsg_equip_auto_enhance& from);

  inline cmsg_equip_auto_enhance& operator=(const cmsg_equip_auto_enhance& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_equip_auto_enhance(cmsg_equip_auto_enhance&& from) noexcept
    : cmsg_equip_auto_enhance() {
    *this = ::std::move(from);
  }

  inline cmsg_equip_auto_enhance& operator=(cmsg_equip_auto_enhance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_equip_auto_enhance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_equip_auto_enhance* internal_default_instance() {
    return reinterpret_cast<const cmsg_equip_auto_enhance*>(
               &_cmsg_equip_auto_enhance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(cmsg_equip_auto_enhance* other);
  friend void swap(cmsg_equip_auto_enhance& a, cmsg_equip_auto_enhance& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_equip_auto_enhance* New() const final {
    return CreateMaybeMessage<cmsg_equip_auto_enhance>(NULL);
  }

  cmsg_equip_auto_enhance* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_equip_auto_enhance>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_equip_auto_enhance& from);
  void MergeFrom(const cmsg_equip_auto_enhance& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_equip_auto_enhance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 equip_guid = 2;
  int equip_guid_size() const;
  void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 2;
  ::google::protobuf::uint64 equip_guid(int index) const;
  void set_equip_guid(int index, ::google::protobuf::uint64 value);
  void add_equip_guid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equip_guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equip_guid();

  // repeated int32 enhance_num = 3;
  int enhance_num_size() const;
  void clear_enhance_num();
  static const int kEnhanceNumFieldNumber = 3;
  ::google::protobuf::int32 enhance_num(int index) const;
  void set_enhance_num(int index, ::google::protobuf::int32 value);
  void add_enhance_num(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      enhance_num() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_enhance_num();

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_equip_auto_enhance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equip_guid_;
  mutable int _equip_guid_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > enhance_num_;
  mutable int _enhance_num_cached_byte_size_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_equip_sell : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_equip_sell) */ {
 public:
  cmsg_equip_sell();
  virtual ~cmsg_equip_sell();

  cmsg_equip_sell(const cmsg_equip_sell& from);

  inline cmsg_equip_sell& operator=(const cmsg_equip_sell& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_equip_sell(cmsg_equip_sell&& from) noexcept
    : cmsg_equip_sell() {
    *this = ::std::move(from);
  }

  inline cmsg_equip_sell& operator=(cmsg_equip_sell&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_equip_sell& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_equip_sell* internal_default_instance() {
    return reinterpret_cast<const cmsg_equip_sell*>(
               &_cmsg_equip_sell_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(cmsg_equip_sell* other);
  friend void swap(cmsg_equip_sell& a, cmsg_equip_sell& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_equip_sell* New() const final {
    return CreateMaybeMessage<cmsg_equip_sell>(NULL);
  }

  cmsg_equip_sell* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_equip_sell>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_equip_sell& from);
  void MergeFrom(const cmsg_equip_sell& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_equip_sell* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 equip_guids = 2;
  int equip_guids_size() const;
  void clear_equip_guids();
  static const int kEquipGuidsFieldNumber = 2;
  ::google::protobuf::uint64 equip_guids(int index) const;
  void set_equip_guids(int index, ::google::protobuf::uint64 value);
  void add_equip_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equip_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equip_guids();

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_equip_sell)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equip_guids_;
  mutable int _equip_guids_cached_byte_size_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_equip_init : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_equip_init) */ {
 public:
  cmsg_equip_init();
  virtual ~cmsg_equip_init();

  cmsg_equip_init(const cmsg_equip_init& from);

  inline cmsg_equip_init& operator=(const cmsg_equip_init& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_equip_init(cmsg_equip_init&& from) noexcept
    : cmsg_equip_init() {
    *this = ::std::move(from);
  }

  inline cmsg_equip_init& operator=(cmsg_equip_init&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_equip_init& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_equip_init* internal_default_instance() {
    return reinterpret_cast<const cmsg_equip_init*>(
               &_cmsg_equip_init_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(cmsg_equip_init* other);
  friend void swap(cmsg_equip_init& a, cmsg_equip_init& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_equip_init* New() const final {
    return CreateMaybeMessage<cmsg_equip_init>(NULL);
  }

  cmsg_equip_init* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_equip_init>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_equip_init& from);
  void MergeFrom(const cmsg_equip_init& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_equip_init* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 equip_guids = 2;
  void clear_equip_guids();
  static const int kEquipGuidsFieldNumber = 2;
  ::google::protobuf::uint64 equip_guids() const;
  void set_equip_guids(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_equip_init)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 equip_guids_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_equip_init : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_equip_init) */ {
 public:
  smsg_equip_init();
  virtual ~smsg_equip_init();

  smsg_equip_init(const smsg_equip_init& from);

  inline smsg_equip_init& operator=(const smsg_equip_init& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_equip_init(smsg_equip_init&& from) noexcept
    : smsg_equip_init() {
    *this = ::std::move(from);
  }

  inline smsg_equip_init& operator=(smsg_equip_init&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_equip_init& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_equip_init* internal_default_instance() {
    return reinterpret_cast<const smsg_equip_init*>(
               &_smsg_equip_init_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  void Swap(smsg_equip_init* other);
  friend void swap(smsg_equip_init& a, smsg_equip_init& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_equip_init* New() const final {
    return CreateMaybeMessage<smsg_equip_init>(NULL);
  }

  smsg_equip_init* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_equip_init>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_equip_init& from);
  void MergeFrom(const smsg_equip_init& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_equip_init* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 1;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 1;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 2;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 2;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 3;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 3;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 4;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 4;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.equip_t equips = 5;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 5;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 6;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 6;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 7;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 7;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_equip_init)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_equip_suipian : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_equip_suipian) */ {
 public:
  cmsg_equip_suipian();
  virtual ~cmsg_equip_suipian();

  cmsg_equip_suipian(const cmsg_equip_suipian& from);

  inline cmsg_equip_suipian& operator=(const cmsg_equip_suipian& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_equip_suipian(cmsg_equip_suipian&& from) noexcept
    : cmsg_equip_suipian() {
    *this = ::std::move(from);
  }

  inline cmsg_equip_suipian& operator=(cmsg_equip_suipian&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_equip_suipian& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_equip_suipian* internal_default_instance() {
    return reinterpret_cast<const cmsg_equip_suipian*>(
               &_cmsg_equip_suipian_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(cmsg_equip_suipian* other);
  friend void swap(cmsg_equip_suipian& a, cmsg_equip_suipian& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_equip_suipian* New() const final {
    return CreateMaybeMessage<cmsg_equip_suipian>(NULL);
  }

  cmsg_equip_suipian* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_equip_suipian>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_equip_suipian& from);
  void MergeFrom(const cmsg_equip_suipian& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_equip_suipian* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint32 item_id = 2;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_equip_suipian)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint32 item_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_equip_suipian : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_equip_suipian) */ {
 public:
  smsg_equip_suipian();
  virtual ~smsg_equip_suipian();

  smsg_equip_suipian(const smsg_equip_suipian& from);

  inline smsg_equip_suipian& operator=(const smsg_equip_suipian& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_equip_suipian(smsg_equip_suipian&& from) noexcept
    : smsg_equip_suipian() {
    *this = ::std::move(from);
  }

  inline smsg_equip_suipian& operator=(smsg_equip_suipian&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_equip_suipian& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_equip_suipian* internal_default_instance() {
    return reinterpret_cast<const smsg_equip_suipian*>(
               &_smsg_equip_suipian_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(smsg_equip_suipian* other);
  friend void swap(smsg_equip_suipian& a, smsg_equip_suipian& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_equip_suipian* New() const final {
    return CreateMaybeMessage<smsg_equip_suipian>(NULL);
  }

  smsg_equip_suipian* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_equip_suipian>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_equip_suipian& from);
  void MergeFrom(const smsg_equip_suipian& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_equip_suipian* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .dhc.equip_t equip = 1;
  bool has_equip() const;
  void clear_equip();
  static const int kEquipFieldNumber = 1;
  private:
  const ::dhc::equip_t& _internal_equip() const;
  public:
  const ::dhc::equip_t& equip() const;
  ::dhc::equip_t* release_equip();
  ::dhc::equip_t* mutable_equip();
  void set_allocated_equip(::dhc::equip_t* equip);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_equip_suipian)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::dhc::equip_t* equip_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_equip_ronglian : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_equip_ronglian) */ {
 public:
  cmsg_equip_ronglian();
  virtual ~cmsg_equip_ronglian();

  cmsg_equip_ronglian(const cmsg_equip_ronglian& from);

  inline cmsg_equip_ronglian& operator=(const cmsg_equip_ronglian& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_equip_ronglian(cmsg_equip_ronglian&& from) noexcept
    : cmsg_equip_ronglian() {
    *this = ::std::move(from);
  }

  inline cmsg_equip_ronglian& operator=(cmsg_equip_ronglian&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_equip_ronglian& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_equip_ronglian* internal_default_instance() {
    return reinterpret_cast<const cmsg_equip_ronglian*>(
               &_cmsg_equip_ronglian_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  void Swap(cmsg_equip_ronglian* other);
  friend void swap(cmsg_equip_ronglian& a, cmsg_equip_ronglian& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_equip_ronglian* New() const final {
    return CreateMaybeMessage<cmsg_equip_ronglian>(NULL);
  }

  cmsg_equip_ronglian* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_equip_ronglian>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_equip_ronglian& from);
  void MergeFrom(const cmsg_equip_ronglian& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_equip_ronglian* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 equip_guid = 2;
  void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 2;
  ::google::protobuf::uint64 equip_guid() const;
  void set_equip_guid(::google::protobuf::uint64 value);

  // int32 suipian_id = 3;
  void clear_suipian_id();
  static const int kSuipianIdFieldNumber = 3;
  ::google::protobuf::int32 suipian_id() const;
  void set_suipian_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_equip_ronglian)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 equip_guid_;
  ::google::protobuf::int32 suipian_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_gm_command : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_gm_command) */ {
 public:
  cmsg_gm_command();
  virtual ~cmsg_gm_command();

  cmsg_gm_command(const cmsg_gm_command& from);

  inline cmsg_gm_command& operator=(const cmsg_gm_command& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_gm_command(cmsg_gm_command&& from) noexcept
    : cmsg_gm_command() {
    *this = ::std::move(from);
  }

  inline cmsg_gm_command& operator=(cmsg_gm_command&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_gm_command& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_gm_command* internal_default_instance() {
    return reinterpret_cast<const cmsg_gm_command*>(
               &_cmsg_gm_command_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  void Swap(cmsg_gm_command* other);
  friend void swap(cmsg_gm_command& a, cmsg_gm_command& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_gm_command* New() const final {
    return CreateMaybeMessage<cmsg_gm_command>(NULL);
  }

  cmsg_gm_command* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_gm_command>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_gm_command& from);
  void MergeFrom(const cmsg_gm_command& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_gm_command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_gm_command)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_gm_command : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_gm_command) */ {
 public:
  smsg_gm_command();
  virtual ~smsg_gm_command();

  smsg_gm_command(const smsg_gm_command& from);

  inline smsg_gm_command& operator=(const smsg_gm_command& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_gm_command(smsg_gm_command&& from) noexcept
    : smsg_gm_command() {
    *this = ::std::move(from);
  }

  inline smsg_gm_command& operator=(smsg_gm_command&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_gm_command& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_gm_command* internal_default_instance() {
    return reinterpret_cast<const smsg_gm_command*>(
               &_smsg_gm_command_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(smsg_gm_command* other);
  friend void swap(smsg_gm_command& a, smsg_gm_command& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_gm_command* New() const final {
    return CreateMaybeMessage<smsg_gm_command>(NULL);
  }

  smsg_gm_command* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_gm_command>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_gm_command& from);
  void MergeFrom(const smsg_gm_command& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_gm_command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.role_t roles = 5;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 5;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // repeated .dhc.equip_t equips = 6;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 6;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 7;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 7;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated int32 types = 8;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 8;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 9;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 9;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 10;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 10;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 11;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 11;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.pet_t pets = 12;
  int pets_size() const;
  void clear_pets();
  static const int kPetsFieldNumber = 12;
  ::dhc::pet_t* mutable_pets(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >*
      mutable_pets();
  const ::dhc::pet_t& pets(int index) const;
  ::dhc::pet_t* add_pets();
  const ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >&
      pets() const;

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 value1 = 2;
  void clear_value1();
  static const int kValue1FieldNumber = 2;
  ::google::protobuf::int32 value1() const;
  void set_value1(::google::protobuf::int32 value);

  // int32 value2 = 3;
  void clear_value2();
  static const int kValue2FieldNumber = 3;
  ::google::protobuf::int32 value2() const;
  void set_value2(::google::protobuf::int32 value);

  // int32 value3 = 4;
  void clear_value3();
  static const int kValue3FieldNumber = 4;
  ::google::protobuf::int32 value3() const;
  void set_value3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_gm_command)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::pet_t > pets_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value1_;
  ::google::protobuf::int32 value2_;
  ::google::protobuf::int32 value3_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_equip_gaizao : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_equip_gaizao) */ {
 public:
  cmsg_equip_gaizao();
  virtual ~cmsg_equip_gaizao();

  cmsg_equip_gaizao(const cmsg_equip_gaizao& from);

  inline cmsg_equip_gaizao& operator=(const cmsg_equip_gaizao& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_equip_gaizao(cmsg_equip_gaizao&& from) noexcept
    : cmsg_equip_gaizao() {
    *this = ::std::move(from);
  }

  inline cmsg_equip_gaizao& operator=(cmsg_equip_gaizao&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_equip_gaizao& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_equip_gaizao* internal_default_instance() {
    return reinterpret_cast<const cmsg_equip_gaizao*>(
               &_cmsg_equip_gaizao_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(cmsg_equip_gaizao* other);
  friend void swap(cmsg_equip_gaizao& a, cmsg_equip_gaizao& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_equip_gaizao* New() const final {
    return CreateMaybeMessage<cmsg_equip_gaizao>(NULL);
  }

  cmsg_equip_gaizao* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_equip_gaizao>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_equip_gaizao& from);
  void MergeFrom(const cmsg_equip_gaizao& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_equip_gaizao* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 suos = 3;
  int suos_size() const;
  void clear_suos();
  static const int kSuosFieldNumber = 3;
  ::google::protobuf::int32 suos(int index) const;
  void set_suos(int index, ::google::protobuf::int32 value);
  void add_suos(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      suos() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_suos();

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 equip_guid = 2;
  void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 2;
  ::google::protobuf::uint64 equip_guid() const;
  void set_equip_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_equip_gaizao)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > suos_;
  mutable int _suos_cached_byte_size_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 equip_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_equip_gaizao : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_equip_gaizao) */ {
 public:
  smsg_equip_gaizao();
  virtual ~smsg_equip_gaizao();

  smsg_equip_gaizao(const smsg_equip_gaizao& from);

  inline smsg_equip_gaizao& operator=(const smsg_equip_gaizao& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_equip_gaizao(smsg_equip_gaizao&& from) noexcept
    : smsg_equip_gaizao() {
    *this = ::std::move(from);
  }

  inline smsg_equip_gaizao& operator=(smsg_equip_gaizao&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_equip_gaizao& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_equip_gaizao* internal_default_instance() {
    return reinterpret_cast<const smsg_equip_gaizao*>(
               &_smsg_equip_gaizao_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  void Swap(smsg_equip_gaizao* other);
  friend void swap(smsg_equip_gaizao& a, smsg_equip_gaizao& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_equip_gaizao* New() const final {
    return CreateMaybeMessage<smsg_equip_gaizao>(NULL);
  }

  smsg_equip_gaizao* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_equip_gaizao>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_equip_gaizao& from);
  void MergeFrom(const smsg_equip_gaizao& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_equip_gaizao* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .dhc.equip_t equip = 1;
  bool has_equip() const;
  void clear_equip();
  static const int kEquipFieldNumber = 1;
  private:
  const ::dhc::equip_t& _internal_equip() const;
  public:
  const ::dhc::equip_t& equip() const;
  ::dhc::equip_t* release_equip();
  ::dhc::equip_t* mutable_equip();
  void set_allocated_equip(::dhc::equip_t* equip);

  // int32 num = 2;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_equip_gaizao)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::dhc::equip_t* equip_;
  ::google::protobuf::int32 num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_equip_gaizao_buy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_equip_gaizao_buy) */ {
 public:
  cmsg_equip_gaizao_buy();
  virtual ~cmsg_equip_gaizao_buy();

  cmsg_equip_gaizao_buy(const cmsg_equip_gaizao_buy& from);

  inline cmsg_equip_gaizao_buy& operator=(const cmsg_equip_gaizao_buy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_equip_gaizao_buy(cmsg_equip_gaizao_buy&& from) noexcept
    : cmsg_equip_gaizao_buy() {
    *this = ::std::move(from);
  }

  inline cmsg_equip_gaizao_buy& operator=(cmsg_equip_gaizao_buy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_equip_gaizao_buy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_equip_gaizao_buy* internal_default_instance() {
    return reinterpret_cast<const cmsg_equip_gaizao_buy*>(
               &_cmsg_equip_gaizao_buy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(cmsg_equip_gaizao_buy* other);
  friend void swap(cmsg_equip_gaizao_buy& a, cmsg_equip_gaizao_buy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_equip_gaizao_buy* New() const final {
    return CreateMaybeMessage<cmsg_equip_gaizao_buy>(NULL);
  }

  cmsg_equip_gaizao_buy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_equip_gaizao_buy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_equip_gaizao_buy& from);
  void MergeFrom(const cmsg_equip_gaizao_buy& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_equip_gaizao_buy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_equip_gaizao_buy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_equip_lock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_equip_lock) */ {
 public:
  cmsg_equip_lock();
  virtual ~cmsg_equip_lock();

  cmsg_equip_lock(const cmsg_equip_lock& from);

  inline cmsg_equip_lock& operator=(const cmsg_equip_lock& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_equip_lock(cmsg_equip_lock&& from) noexcept
    : cmsg_equip_lock() {
    *this = ::std::move(from);
  }

  inline cmsg_equip_lock& operator=(cmsg_equip_lock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_equip_lock& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_equip_lock* internal_default_instance() {
    return reinterpret_cast<const cmsg_equip_lock*>(
               &_cmsg_equip_lock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  void Swap(cmsg_equip_lock* other);
  friend void swap(cmsg_equip_lock& a, cmsg_equip_lock& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_equip_lock* New() const final {
    return CreateMaybeMessage<cmsg_equip_lock>(NULL);
  }

  cmsg_equip_lock* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_equip_lock>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_equip_lock& from);
  void MergeFrom(const cmsg_equip_lock& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_equip_lock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 equip_guid = 2;
  void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 2;
  ::google::protobuf::uint64 equip_guid() const;
  void set_equip_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_equip_lock)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 equip_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_equip_star : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_equip_star) */ {
 public:
  cmsg_equip_star();
  virtual ~cmsg_equip_star();

  cmsg_equip_star(const cmsg_equip_star& from);

  inline cmsg_equip_star& operator=(const cmsg_equip_star& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_equip_star(cmsg_equip_star&& from) noexcept
    : cmsg_equip_star() {
    *this = ::std::move(from);
  }

  inline cmsg_equip_star& operator=(cmsg_equip_star&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_equip_star& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_equip_star* internal_default_instance() {
    return reinterpret_cast<const cmsg_equip_star*>(
               &_cmsg_equip_star_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(cmsg_equip_star* other);
  friend void swap(cmsg_equip_star& a, cmsg_equip_star& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_equip_star* New() const final {
    return CreateMaybeMessage<cmsg_equip_star>(NULL);
  }

  cmsg_equip_star* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_equip_star>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_equip_star& from);
  void MergeFrom(const cmsg_equip_star& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_equip_star* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 star_guid = 2;
  void clear_star_guid();
  static const int kStarGuidFieldNumber = 2;
  ::google::protobuf::uint64 star_guid() const;
  void set_star_guid(::google::protobuf::uint64 value);

  // uint64 equip_guid = 3;
  void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 3;
  ::google::protobuf::uint64 equip_guid() const;
  void set_equip_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_equip_star)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 star_guid_;
  ::google::protobuf::uint64 equip_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_equip_jinlian : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_equip_jinlian) */ {
 public:
  cmsg_equip_jinlian();
  virtual ~cmsg_equip_jinlian();

  cmsg_equip_jinlian(const cmsg_equip_jinlian& from);

  inline cmsg_equip_jinlian& operator=(const cmsg_equip_jinlian& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_equip_jinlian(cmsg_equip_jinlian&& from) noexcept
    : cmsg_equip_jinlian() {
    *this = ::std::move(from);
  }

  inline cmsg_equip_jinlian& operator=(cmsg_equip_jinlian&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_equip_jinlian& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_equip_jinlian* internal_default_instance() {
    return reinterpret_cast<const cmsg_equip_jinlian*>(
               &_cmsg_equip_jinlian_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  void Swap(cmsg_equip_jinlian* other);
  friend void swap(cmsg_equip_jinlian& a, cmsg_equip_jinlian& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_equip_jinlian* New() const final {
    return CreateMaybeMessage<cmsg_equip_jinlian>(NULL);
  }

  cmsg_equip_jinlian* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_equip_jinlian>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_equip_jinlian& from);
  void MergeFrom(const cmsg_equip_jinlian& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_equip_jinlian* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 equip_guid = 2;
  void clear_equip_guid();
  static const int kEquipGuidFieldNumber = 2;
  ::google::protobuf::uint64 equip_guid() const;
  void set_equip_guid(::google::protobuf::uint64 value);

  // int32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_equip_jinlian)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 equip_guid_;
  ::google::protobuf::int32 level_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_item_sell : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_item_sell) */ {
 public:
  cmsg_item_sell();
  virtual ~cmsg_item_sell();

  cmsg_item_sell(const cmsg_item_sell& from);

  inline cmsg_item_sell& operator=(const cmsg_item_sell& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_item_sell(cmsg_item_sell&& from) noexcept
    : cmsg_item_sell() {
    *this = ::std::move(from);
  }

  inline cmsg_item_sell& operator=(cmsg_item_sell&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_item_sell& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_item_sell* internal_default_instance() {
    return reinterpret_cast<const cmsg_item_sell*>(
               &_cmsg_item_sell_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  void Swap(cmsg_item_sell* other);
  friend void swap(cmsg_item_sell& a, cmsg_item_sell& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_item_sell* New() const final {
    return CreateMaybeMessage<cmsg_item_sell>(NULL);
  }

  cmsg_item_sell* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_item_sell>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_item_sell& from);
  void MergeFrom(const cmsg_item_sell& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_item_sell* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint32 item_id = 2;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // int32 item_num = 3;
  void clear_item_num();
  static const int kItemNumFieldNumber = 3;
  ::google::protobuf::int32 item_num() const;
  void set_item_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_item_sell)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::int32 item_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_item_sell_all : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_item_sell_all) */ {
 public:
  cmsg_item_sell_all();
  virtual ~cmsg_item_sell_all();

  cmsg_item_sell_all(const cmsg_item_sell_all& from);

  inline cmsg_item_sell_all& operator=(const cmsg_item_sell_all& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_item_sell_all(cmsg_item_sell_all&& from) noexcept
    : cmsg_item_sell_all() {
    *this = ::std::move(from);
  }

  inline cmsg_item_sell_all& operator=(cmsg_item_sell_all&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_item_sell_all& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_item_sell_all* internal_default_instance() {
    return reinterpret_cast<const cmsg_item_sell_all*>(
               &_cmsg_item_sell_all_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(cmsg_item_sell_all* other);
  friend void swap(cmsg_item_sell_all& a, cmsg_item_sell_all& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_item_sell_all* New() const final {
    return CreateMaybeMessage<cmsg_item_sell_all>(NULL);
  }

  cmsg_item_sell_all* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_item_sell_all>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_item_sell_all& from);
  void MergeFrom(const cmsg_item_sell_all& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_item_sell_all* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 item_ids = 2;
  int item_ids_size() const;
  void clear_item_ids();
  static const int kItemIdsFieldNumber = 2;
  ::google::protobuf::uint32 item_ids(int index) const;
  void set_item_ids(int index, ::google::protobuf::uint32 value);
  void add_item_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      item_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_item_ids();

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_item_sell_all)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > item_ids_;
  mutable int _item_ids_cached_byte_size_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_item_apply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_item_apply) */ {
 public:
  cmsg_item_apply();
  virtual ~cmsg_item_apply();

  cmsg_item_apply(const cmsg_item_apply& from);

  inline cmsg_item_apply& operator=(const cmsg_item_apply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_item_apply(cmsg_item_apply&& from) noexcept
    : cmsg_item_apply() {
    *this = ::std::move(from);
  }

  inline cmsg_item_apply& operator=(cmsg_item_apply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_item_apply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_item_apply* internal_default_instance() {
    return reinterpret_cast<const cmsg_item_apply*>(
               &_cmsg_item_apply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(cmsg_item_apply* other);
  friend void swap(cmsg_item_apply& a, cmsg_item_apply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_item_apply* New() const final {
    return CreateMaybeMessage<cmsg_item_apply>(NULL);
  }

  cmsg_item_apply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_item_apply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_item_apply& from);
  void MergeFrom(const cmsg_item_apply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_item_apply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint32 item_id = 2;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // int32 item_count = 3;
  void clear_item_count();
  static const int kItemCountFieldNumber = 3;
  ::google::protobuf::int32 item_count() const;
  void set_item_count(::google::protobuf::int32 value);

  // int32 item_index = 4;
  void clear_item_index();
  static const int kItemIndexFieldNumber = 4;
  ::google::protobuf::int32 item_index() const;
  void set_item_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_item_apply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::int32 item_count_;
  ::google::protobuf::int32 item_index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_item_apply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_item_apply) */ {
 public:
  smsg_item_apply();
  virtual ~smsg_item_apply();

  smsg_item_apply(const smsg_item_apply& from);

  inline smsg_item_apply& operator=(const smsg_item_apply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_item_apply(smsg_item_apply&& from) noexcept
    : smsg_item_apply() {
    *this = ::std::move(from);
  }

  inline smsg_item_apply& operator=(smsg_item_apply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_item_apply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_item_apply* internal_default_instance() {
    return reinterpret_cast<const smsg_item_apply*>(
               &_smsg_item_apply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  void Swap(smsg_item_apply* other);
  friend void swap(smsg_item_apply& a, smsg_item_apply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_item_apply* New() const final {
    return CreateMaybeMessage<smsg_item_apply>(NULL);
  }

  smsg_item_apply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_item_apply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_item_apply& from);
  void MergeFrom(const smsg_item_apply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_item_apply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 1;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 1;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 2;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 2;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 3;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 3;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 4;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 4;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.role_t roles = 5;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 5;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // repeated .dhc.equip_t equips = 6;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 6;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 7;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 7;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated int32 role_ids = 8;
  int role_ids_size() const;
  void clear_role_ids();
  static const int kRoleIdsFieldNumber = 8;
  ::google::protobuf::int32 role_ids(int index) const;
  void set_role_ids(int index, ::google::protobuf::int32 value);
  void add_role_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      role_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_role_ids();

  // repeated .dhc.pet_t pets = 9;
  int pets_size() const;
  void clear_pets();
  static const int kPetsFieldNumber = 9;
  ::dhc::pet_t* mutable_pets(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >*
      mutable_pets();
  const ::dhc::pet_t& pets(int index) const;
  ::dhc::pet_t* add_pets();
  const ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >&
      pets() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_item_apply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > role_ids_;
  mutable int _role_ids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::pet_t > pets_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_item_fenjie : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_item_fenjie) */ {
 public:
  cmsg_item_fenjie();
  virtual ~cmsg_item_fenjie();

  cmsg_item_fenjie(const cmsg_item_fenjie& from);

  inline cmsg_item_fenjie& operator=(const cmsg_item_fenjie& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_item_fenjie(cmsg_item_fenjie&& from) noexcept
    : cmsg_item_fenjie() {
    *this = ::std::move(from);
  }

  inline cmsg_item_fenjie& operator=(cmsg_item_fenjie&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_item_fenjie& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_item_fenjie* internal_default_instance() {
    return reinterpret_cast<const cmsg_item_fenjie*>(
               &_cmsg_item_fenjie_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  void Swap(cmsg_item_fenjie* other);
  friend void swap(cmsg_item_fenjie& a, cmsg_item_fenjie& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_item_fenjie* New() const final {
    return CreateMaybeMessage<cmsg_item_fenjie>(NULL);
  }

  cmsg_item_fenjie* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_item_fenjie>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_item_fenjie& from);
  void MergeFrom(const cmsg_item_fenjie& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_item_fenjie* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 item_id = 2;
  int item_id_size() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint32 item_id(int index) const;
  void set_item_id(int index, ::google::protobuf::uint32 value);
  void add_item_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      item_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_item_id();

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_item_fenjie)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > item_id_;
  mutable int _item_id_cached_byte_size_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_item_direct_buy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_item_direct_buy) */ {
 public:
  cmsg_item_direct_buy();
  virtual ~cmsg_item_direct_buy();

  cmsg_item_direct_buy(const cmsg_item_direct_buy& from);

  inline cmsg_item_direct_buy& operator=(const cmsg_item_direct_buy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_item_direct_buy(cmsg_item_direct_buy&& from) noexcept
    : cmsg_item_direct_buy() {
    *this = ::std::move(from);
  }

  inline cmsg_item_direct_buy& operator=(cmsg_item_direct_buy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_item_direct_buy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_item_direct_buy* internal_default_instance() {
    return reinterpret_cast<const cmsg_item_direct_buy*>(
               &_cmsg_item_direct_buy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  void Swap(cmsg_item_direct_buy* other);
  friend void swap(cmsg_item_direct_buy& a, cmsg_item_direct_buy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_item_direct_buy* New() const final {
    return CreateMaybeMessage<cmsg_item_direct_buy>(NULL);
  }

  cmsg_item_direct_buy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_item_direct_buy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_item_direct_buy& from);
  void MergeFrom(const cmsg_item_direct_buy& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_item_direct_buy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 item_id = 2;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::int32 item_id() const;
  void set_item_id(::google::protobuf::int32 value);

  // int32 item_count = 3;
  void clear_item_count();
  static const int kItemCountFieldNumber = 3;
  ::google::protobuf::int32 item_count() const;
  void set_item_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_item_direct_buy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 item_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_player_task : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_player_task) */ {
 public:
  cmsg_player_task();
  virtual ~cmsg_player_task();

  cmsg_player_task(const cmsg_player_task& from);

  inline cmsg_player_task& operator=(const cmsg_player_task& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_player_task(cmsg_player_task&& from) noexcept
    : cmsg_player_task() {
    *this = ::std::move(from);
  }

  inline cmsg_player_task& operator=(cmsg_player_task&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_player_task& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_player_task* internal_default_instance() {
    return reinterpret_cast<const cmsg_player_task*>(
               &_cmsg_player_task_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  void Swap(cmsg_player_task* other);
  friend void swap(cmsg_player_task& a, cmsg_player_task& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_player_task* New() const final {
    return CreateMaybeMessage<cmsg_player_task>(NULL);
  }

  cmsg_player_task* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_player_task>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_player_task& from);
  void MergeFrom(const cmsg_player_task& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_player_task* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint32 task_id = 2;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 2;
  ::google::protobuf::uint32 task_id() const;
  void set_task_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_player_task)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint32 task_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_shop_refresh : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_shop_refresh) */ {
 public:
  cmsg_shop_refresh();
  virtual ~cmsg_shop_refresh();

  cmsg_shop_refresh(const cmsg_shop_refresh& from);

  inline cmsg_shop_refresh& operator=(const cmsg_shop_refresh& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_shop_refresh(cmsg_shop_refresh&& from) noexcept
    : cmsg_shop_refresh() {
    *this = ::std::move(from);
  }

  inline cmsg_shop_refresh& operator=(cmsg_shop_refresh&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_shop_refresh& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_shop_refresh* internal_default_instance() {
    return reinterpret_cast<const cmsg_shop_refresh*>(
               &_cmsg_shop_refresh_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  void Swap(cmsg_shop_refresh* other);
  friend void swap(cmsg_shop_refresh& a, cmsg_shop_refresh& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_shop_refresh* New() const final {
    return CreateMaybeMessage<cmsg_shop_refresh>(NULL);
  }

  cmsg_shop_refresh* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_shop_refresh>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_shop_refresh& from);
  void MergeFrom(const cmsg_shop_refresh& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_shop_refresh* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_shop_refresh)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_shop_refresh : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_shop_refresh) */ {
 public:
  smsg_shop_refresh();
  virtual ~smsg_shop_refresh();

  smsg_shop_refresh(const smsg_shop_refresh& from);

  inline smsg_shop_refresh& operator=(const smsg_shop_refresh& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_shop_refresh(smsg_shop_refresh&& from) noexcept
    : smsg_shop_refresh() {
    *this = ::std::move(from);
  }

  inline smsg_shop_refresh& operator=(smsg_shop_refresh&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_shop_refresh& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_shop_refresh* internal_default_instance() {
    return reinterpret_cast<const smsg_shop_refresh*>(
               &_smsg_shop_refresh_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  void Swap(smsg_shop_refresh* other);
  friend void swap(smsg_shop_refresh& a, smsg_shop_refresh& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_shop_refresh* New() const final {
    return CreateMaybeMessage<smsg_shop_refresh>(NULL);
  }

  smsg_shop_refresh* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_shop_refresh>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_shop_refresh& from);
  void MergeFrom(const smsg_shop_refresh& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_shop_refresh* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 shop1_ids = 1;
  int shop1_ids_size() const;
  void clear_shop1_ids();
  static const int kShop1IdsFieldNumber = 1;
  ::google::protobuf::uint32 shop1_ids(int index) const;
  void set_shop1_ids(int index, ::google::protobuf::uint32 value);
  void add_shop1_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      shop1_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_shop1_ids();

  // repeated int32 shop1_sell = 2;
  int shop1_sell_size() const;
  void clear_shop1_sell();
  static const int kShop1SellFieldNumber = 2;
  ::google::protobuf::int32 shop1_sell(int index) const;
  void set_shop1_sell(int index, ::google::protobuf::int32 value);
  void add_shop1_sell(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shop1_sell() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shop1_sell();

  // repeated uint32 shop2_ids = 3;
  int shop2_ids_size() const;
  void clear_shop2_ids();
  static const int kShop2IdsFieldNumber = 3;
  ::google::protobuf::uint32 shop2_ids(int index) const;
  void set_shop2_ids(int index, ::google::protobuf::uint32 value);
  void add_shop2_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      shop2_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_shop2_ids();

  // repeated int32 shop2_sell = 4;
  int shop2_sell_size() const;
  void clear_shop2_sell();
  static const int kShop2SellFieldNumber = 4;
  ::google::protobuf::int32 shop2_sell(int index) const;
  void set_shop2_sell(int index, ::google::protobuf::int32 value);
  void add_shop2_sell(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shop2_sell() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shop2_sell();

  // repeated uint32 shop3_ids = 5;
  int shop3_ids_size() const;
  void clear_shop3_ids();
  static const int kShop3IdsFieldNumber = 5;
  ::google::protobuf::uint32 shop3_ids(int index) const;
  void set_shop3_ids(int index, ::google::protobuf::uint32 value);
  void add_shop3_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      shop3_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_shop3_ids();

  // repeated int32 shop3_sell = 6;
  int shop3_sell_size() const;
  void clear_shop3_sell();
  static const int kShop3SellFieldNumber = 6;
  ::google::protobuf::int32 shop3_sell(int index) const;
  void set_shop3_sell(int index, ::google::protobuf::int32 value);
  void add_shop3_sell(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shop3_sell() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shop3_sell();

  // repeated uint32 guild_shop_ids = 7;
  int guild_shop_ids_size() const;
  void clear_guild_shop_ids();
  static const int kGuildShopIdsFieldNumber = 7;
  ::google::protobuf::uint32 guild_shop_ids(int index) const;
  void set_guild_shop_ids(int index, ::google::protobuf::uint32 value);
  void add_guild_shop_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      guild_shop_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_guild_shop_ids();

  // repeated int32 guild_shop_sell = 8;
  int guild_shop_sell_size() const;
  void clear_guild_shop_sell();
  static const int kGuildShopSellFieldNumber = 8;
  ::google::protobuf::int32 guild_shop_sell(int index) const;
  void set_guild_shop_sell(int index, ::google::protobuf::int32 value);
  void add_guild_shop_sell(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guild_shop_sell() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guild_shop_sell();

  // repeated uint32 shop4_ids = 9;
  int shop4_ids_size() const;
  void clear_shop4_ids();
  static const int kShop4IdsFieldNumber = 9;
  ::google::protobuf::uint32 shop4_ids(int index) const;
  void set_shop4_ids(int index, ::google::protobuf::uint32 value);
  void add_shop4_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      shop4_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_shop4_ids();

  // repeated int32 shop4_sell = 10;
  int shop4_sell_size() const;
  void clear_shop4_sell();
  static const int kShop4SellFieldNumber = 10;
  ::google::protobuf::int32 shop4_sell(int index) const;
  void set_shop4_sell(int index, ::google::protobuf::int32 value);
  void add_shop4_sell(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shop4_sell() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shop4_sell();

  // repeated uint32 shoppet_ids = 11;
  int shoppet_ids_size() const;
  void clear_shoppet_ids();
  static const int kShoppetIdsFieldNumber = 11;
  ::google::protobuf::uint32 shoppet_ids(int index) const;
  void set_shoppet_ids(int index, ::google::protobuf::uint32 value);
  void add_shoppet_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      shoppet_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_shoppet_ids();

  // repeated int32 shoppet_sell = 12;
  int shoppet_sell_size() const;
  void clear_shoppet_sell();
  static const int kShoppetSellFieldNumber = 12;
  ::google::protobuf::int32 shoppet_sell(int index) const;
  void set_shoppet_sell(int index, ::google::protobuf::int32 value);
  void add_shoppet_sell(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shoppet_sell() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shoppet_sell();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_shop_refresh)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > shop1_ids_;
  mutable int _shop1_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shop1_sell_;
  mutable int _shop1_sell_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > shop2_ids_;
  mutable int _shop2_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shop2_sell_;
  mutable int _shop2_sell_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > shop3_ids_;
  mutable int _shop3_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shop3_sell_;
  mutable int _shop3_sell_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > guild_shop_ids_;
  mutable int _guild_shop_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guild_shop_sell_;
  mutable int _guild_shop_sell_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > shop4_ids_;
  mutable int _shop4_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shop4_sell_;
  mutable int _shop4_sell_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > shoppet_ids_;
  mutable int _shoppet_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shoppet_sell_;
  mutable int _shoppet_sell_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_shop_buy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_shop_buy) */ {
 public:
  cmsg_shop_buy();
  virtual ~cmsg_shop_buy();

  cmsg_shop_buy(const cmsg_shop_buy& from);

  inline cmsg_shop_buy& operator=(const cmsg_shop_buy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_shop_buy(cmsg_shop_buy&& from) noexcept
    : cmsg_shop_buy() {
    *this = ::std::move(from);
  }

  inline cmsg_shop_buy& operator=(cmsg_shop_buy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_shop_buy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_shop_buy* internal_default_instance() {
    return reinterpret_cast<const cmsg_shop_buy*>(
               &_cmsg_shop_buy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  void Swap(cmsg_shop_buy* other);
  friend void swap(cmsg_shop_buy& a, cmsg_shop_buy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_shop_buy* New() const final {
    return CreateMaybeMessage<cmsg_shop_buy>(NULL);
  }

  cmsg_shop_buy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_shop_buy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_shop_buy& from);
  void MergeFrom(const cmsg_shop_buy& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_shop_buy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 gezi = 3;
  void clear_gezi();
  static const int kGeziFieldNumber = 3;
  ::google::protobuf::int32 gezi() const;
  void set_gezi(::google::protobuf::int32 value);

  // int32 item_id = 4;
  void clear_item_id();
  static const int kItemIdFieldNumber = 4;
  ::google::protobuf::int32 item_id() const;
  void set_item_id(::google::protobuf::int32 value);

  // int32 num = 5;
  void clear_num();
  static const int kNumFieldNumber = 5;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_shop_buy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 gezi_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_shop_buy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_shop_buy) */ {
 public:
  smsg_shop_buy();
  virtual ~smsg_shop_buy();

  smsg_shop_buy(const smsg_shop_buy& from);

  inline smsg_shop_buy& operator=(const smsg_shop_buy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_shop_buy(smsg_shop_buy&& from) noexcept
    : smsg_shop_buy() {
    *this = ::std::move(from);
  }

  inline smsg_shop_buy& operator=(smsg_shop_buy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_shop_buy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_shop_buy* internal_default_instance() {
    return reinterpret_cast<const smsg_shop_buy*>(
               &_smsg_shop_buy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  void Swap(smsg_shop_buy* other);
  friend void swap(smsg_shop_buy& a, smsg_shop_buy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_shop_buy* New() const final {
    return CreateMaybeMessage<smsg_shop_buy>(NULL);
  }

  smsg_shop_buy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_shop_buy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_shop_buy& from);
  void MergeFrom(const smsg_shop_buy& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_shop_buy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 1;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 1;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 2;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 2;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 3;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 3;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 4;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 4;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.equip_t equips = 5;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 5;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 6;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 6;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 7;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 7;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_shop_buy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_shop_xg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_shop_xg) */ {
 public:
  cmsg_shop_xg();
  virtual ~cmsg_shop_xg();

  cmsg_shop_xg(const cmsg_shop_xg& from);

  inline cmsg_shop_xg& operator=(const cmsg_shop_xg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_shop_xg(cmsg_shop_xg&& from) noexcept
    : cmsg_shop_xg() {
    *this = ::std::move(from);
  }

  inline cmsg_shop_xg& operator=(cmsg_shop_xg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_shop_xg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_shop_xg* internal_default_instance() {
    return reinterpret_cast<const cmsg_shop_xg*>(
               &_cmsg_shop_xg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  void Swap(cmsg_shop_xg* other);
  friend void swap(cmsg_shop_xg& a, cmsg_shop_xg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_shop_xg* New() const final {
    return CreateMaybeMessage<cmsg_shop_xg>(NULL);
  }

  cmsg_shop_xg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_shop_xg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_shop_xg& from);
  void MergeFrom(const cmsg_shop_xg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_shop_xg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 shop_id = 2;
  void clear_shop_id();
  static const int kShopIdFieldNumber = 2;
  ::google::protobuf::int32 shop_id() const;
  void set_shop_id(::google::protobuf::int32 value);

  // int32 shop_num = 3;
  void clear_shop_num();
  static const int kShopNumFieldNumber = 3;
  ::google::protobuf::int32 shop_num() const;
  void set_shop_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_shop_xg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 shop_id_;
  ::google::protobuf::int32 shop_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_active_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_active_reward) */ {
 public:
  cmsg_active_reward();
  virtual ~cmsg_active_reward();

  cmsg_active_reward(const cmsg_active_reward& from);

  inline cmsg_active_reward& operator=(const cmsg_active_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_active_reward(cmsg_active_reward&& from) noexcept
    : cmsg_active_reward() {
    *this = ::std::move(from);
  }

  inline cmsg_active_reward& operator=(cmsg_active_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_active_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_active_reward* internal_default_instance() {
    return reinterpret_cast<const cmsg_active_reward*>(
               &_cmsg_active_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  void Swap(cmsg_active_reward* other);
  friend void swap(cmsg_active_reward& a, cmsg_active_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_active_reward* New() const final {
    return CreateMaybeMessage<cmsg_active_reward>(NULL);
  }

  cmsg_active_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_active_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_active_reward& from);
  void MergeFrom(const cmsg_active_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_active_reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_active_reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_active_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_active_reward) */ {
 public:
  smsg_active_reward();
  virtual ~smsg_active_reward();

  smsg_active_reward(const smsg_active_reward& from);

  inline smsg_active_reward& operator=(const smsg_active_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_active_reward(smsg_active_reward&& from) noexcept
    : smsg_active_reward() {
    *this = ::std::move(from);
  }

  inline smsg_active_reward& operator=(smsg_active_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_active_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_active_reward* internal_default_instance() {
    return reinterpret_cast<const smsg_active_reward*>(
               &_smsg_active_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  void Swap(smsg_active_reward* other);
  friend void swap(smsg_active_reward& a, smsg_active_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_active_reward* New() const final {
    return CreateMaybeMessage<smsg_active_reward>(NULL);
  }

  smsg_active_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_active_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_active_reward& from);
  void MergeFrom(const smsg_active_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_active_reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 1;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 1;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 2;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 2;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 3;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 3;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 4;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 4;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.treasure_t treasures = 5;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 5;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.equip_t equips = 6;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 6;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.role_t roles = 7;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 7;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_active_reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_active_score_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_active_score_reward) */ {
 public:
  cmsg_active_score_reward();
  virtual ~cmsg_active_score_reward();

  cmsg_active_score_reward(const cmsg_active_score_reward& from);

  inline cmsg_active_score_reward& operator=(const cmsg_active_score_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_active_score_reward(cmsg_active_score_reward&& from) noexcept
    : cmsg_active_score_reward() {
    *this = ::std::move(from);
  }

  inline cmsg_active_score_reward& operator=(cmsg_active_score_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_active_score_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_active_score_reward* internal_default_instance() {
    return reinterpret_cast<const cmsg_active_score_reward*>(
               &_cmsg_active_score_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  void Swap(cmsg_active_score_reward* other);
  friend void swap(cmsg_active_score_reward& a, cmsg_active_score_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_active_score_reward* New() const final {
    return CreateMaybeMessage<cmsg_active_score_reward>(NULL);
  }

  cmsg_active_score_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_active_score_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_active_score_reward& from);
  void MergeFrom(const cmsg_active_score_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_active_score_reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 reward_id = 2;
  void clear_reward_id();
  static const int kRewardIdFieldNumber = 2;
  ::google::protobuf::int32 reward_id() const;
  void set_reward_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_active_score_reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 reward_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_active_score_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_active_score_reward) */ {
 public:
  smsg_active_score_reward();
  virtual ~smsg_active_score_reward();

  smsg_active_score_reward(const smsg_active_score_reward& from);

  inline smsg_active_score_reward& operator=(const smsg_active_score_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_active_score_reward(smsg_active_score_reward&& from) noexcept
    : smsg_active_score_reward() {
    *this = ::std::move(from);
  }

  inline smsg_active_score_reward& operator=(smsg_active_score_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_active_score_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_active_score_reward* internal_default_instance() {
    return reinterpret_cast<const smsg_active_score_reward*>(
               &_smsg_active_score_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  void Swap(smsg_active_score_reward* other);
  friend void swap(smsg_active_score_reward& a, smsg_active_score_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_active_score_reward* New() const final {
    return CreateMaybeMessage<smsg_active_score_reward>(NULL);
  }

  smsg_active_score_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_active_score_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_active_score_reward& from);
  void MergeFrom(const smsg_active_score_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_active_score_reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 1;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 1;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 2;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 2;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 3;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 3;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 4;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 4;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.treasure_t treasures = 5;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 5;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.equip_t equips = 6;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 6;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.role_t roles = 7;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 7;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_active_score_reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_post_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_post_look) */ {
 public:
  smsg_post_look();
  virtual ~smsg_post_look();

  smsg_post_look(const smsg_post_look& from);

  inline smsg_post_look& operator=(const smsg_post_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_post_look(smsg_post_look&& from) noexcept
    : smsg_post_look() {
    *this = ::std::move(from);
  }

  inline smsg_post_look& operator=(smsg_post_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_post_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_post_look* internal_default_instance() {
    return reinterpret_cast<const smsg_post_look*>(
               &_smsg_post_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  void Swap(smsg_post_look* other);
  friend void swap(smsg_post_look& a, smsg_post_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_post_look* New() const final {
    return CreateMaybeMessage<smsg_post_look>(NULL);
  }

  smsg_post_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_post_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_post_look& from);
  void MergeFrom(const smsg_post_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_post_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.post_t posts = 1;
  int posts_size() const;
  void clear_posts();
  static const int kPostsFieldNumber = 1;
  ::dhc::post_t* mutable_posts(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::post_t >*
      mutable_posts();
  const ::dhc::post_t& posts(int index) const;
  ::dhc::post_t* add_posts();
  const ::google::protobuf::RepeatedPtrField< ::dhc::post_t >&
      posts() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_post_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::post_t > posts_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_post_get : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_post_get) */ {
 public:
  cmsg_post_get();
  virtual ~cmsg_post_get();

  cmsg_post_get(const cmsg_post_get& from);

  inline cmsg_post_get& operator=(const cmsg_post_get& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_post_get(cmsg_post_get&& from) noexcept
    : cmsg_post_get() {
    *this = ::std::move(from);
  }

  inline cmsg_post_get& operator=(cmsg_post_get&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_post_get& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_post_get* internal_default_instance() {
    return reinterpret_cast<const cmsg_post_get*>(
               &_cmsg_post_get_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  void Swap(cmsg_post_get* other);
  friend void swap(cmsg_post_get& a, cmsg_post_get& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_post_get* New() const final {
    return CreateMaybeMessage<cmsg_post_get>(NULL);
  }

  cmsg_post_get* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_post_get>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_post_get& from);
  void MergeFrom(const cmsg_post_get& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_post_get* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 post_guid = 2;
  void clear_post_guid();
  static const int kPostGuidFieldNumber = 2;
  ::google::protobuf::uint64 post_guid() const;
  void set_post_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_post_get)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 post_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_post_get : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_post_get) */ {
 public:
  smsg_post_get();
  virtual ~smsg_post_get();

  smsg_post_get(const smsg_post_get& from);

  inline smsg_post_get& operator=(const smsg_post_get& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_post_get(smsg_post_get&& from) noexcept
    : smsg_post_get() {
    *this = ::std::move(from);
  }

  inline smsg_post_get& operator=(smsg_post_get&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_post_get& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_post_get* internal_default_instance() {
    return reinterpret_cast<const smsg_post_get*>(
               &_smsg_post_get_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  void Swap(smsg_post_get* other);
  friend void swap(smsg_post_get& a, smsg_post_get& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_post_get* New() const final {
    return CreateMaybeMessage<smsg_post_get>(NULL);
  }

  smsg_post_get* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_post_get>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_post_get& from);
  void MergeFrom(const smsg_post_get& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_post_get* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.equip_t equips = 1;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 1;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 2;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 2;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 3;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 3;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // repeated int32 types = 4;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 4;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 5;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 5;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 6;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 6;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 7;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 7;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.pet_t pets = 8;
  int pets_size() const;
  void clear_pets();
  static const int kPetsFieldNumber = 8;
  ::dhc::pet_t* mutable_pets(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >*
      mutable_pets();
  const ::dhc::pet_t& pets(int index) const;
  ::dhc::pet_t* add_pets();
  const ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >&
      pets() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_post_get)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::pet_t > pets_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_post_view : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_post_view) */ {
 public:
  cmsg_post_view();
  virtual ~cmsg_post_view();

  cmsg_post_view(const cmsg_post_view& from);

  inline cmsg_post_view& operator=(const cmsg_post_view& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_post_view(cmsg_post_view&& from) noexcept
    : cmsg_post_view() {
    *this = ::std::move(from);
  }

  inline cmsg_post_view& operator=(cmsg_post_view&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_post_view& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_post_view* internal_default_instance() {
    return reinterpret_cast<const cmsg_post_view*>(
               &_cmsg_post_view_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  void Swap(cmsg_post_view* other);
  friend void swap(cmsg_post_view& a, cmsg_post_view& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_post_view* New() const final {
    return CreateMaybeMessage<cmsg_post_view>(NULL);
  }

  cmsg_post_view* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_post_view>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_post_view& from);
  void MergeFrom(const cmsg_post_view& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_post_view* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 post_guid = 2;
  void clear_post_guid();
  static const int kPostGuidFieldNumber = 2;
  ::google::protobuf::uint64 post_guid() const;
  void set_post_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_post_view)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 post_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_post_view : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_post_view) */ {
 public:
  smsg_post_view();
  virtual ~smsg_post_view();

  smsg_post_view(const smsg_post_view& from);

  inline smsg_post_view& operator=(const smsg_post_view& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_post_view(smsg_post_view&& from) noexcept
    : smsg_post_view() {
    *this = ::std::move(from);
  }

  inline smsg_post_view& operator=(smsg_post_view&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_post_view& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_post_view* internal_default_instance() {
    return reinterpret_cast<const smsg_post_view*>(
               &_smsg_post_view_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  void Swap(smsg_post_view* other);
  friend void swap(smsg_post_view& a, smsg_post_view& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_post_view* New() const final {
    return CreateMaybeMessage<smsg_post_view>(NULL);
  }

  smsg_post_view* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_post_view>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_post_view& from);
  void MergeFrom(const smsg_post_view& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_post_view* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 post_guid = 1;
  void clear_post_guid();
  static const int kPostGuidFieldNumber = 1;
  ::google::protobuf::uint64 post_guid() const;
  void set_post_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_post_view)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 post_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_sport_player : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_sport_player) */ {
 public:
  msg_sport_player();
  virtual ~msg_sport_player();

  msg_sport_player(const msg_sport_player& from);

  inline msg_sport_player& operator=(const msg_sport_player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_sport_player(msg_sport_player&& from) noexcept
    : msg_sport_player() {
    *this = ::std::move(from);
  }

  inline msg_sport_player& operator=(msg_sport_player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_sport_player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_sport_player* internal_default_instance() {
    return reinterpret_cast<const msg_sport_player*>(
               &_msg_sport_player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  void Swap(msg_sport_player* other);
  friend void swap(msg_sport_player& a, msg_sport_player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_sport_player* New() const final {
    return CreateMaybeMessage<msg_sport_player>(NULL);
  }

  msg_sport_player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_sport_player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_sport_player& from);
  void MergeFrom(const msg_sport_player& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_sport_player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes player_name = 3;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 3;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const void* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // uint64 player_guid = 1;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 1;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // int32 player_template = 2;
  void clear_player_template();
  static const int kPlayerTemplateFieldNumber = 2;
  ::google::protobuf::int32 player_template() const;
  void set_player_template(::google::protobuf::int32 value);

  // int32 player_level = 4;
  void clear_player_level();
  static const int kPlayerLevelFieldNumber = 4;
  ::google::protobuf::int32 player_level() const;
  void set_player_level(::google::protobuf::int32 value);

  // int32 player_bat_eff = 5;
  void clear_player_bat_eff();
  static const int kPlayerBatEffFieldNumber = 5;
  ::google::protobuf::int32 player_bat_eff() const;
  void set_player_bat_eff(::google::protobuf::int32 value);

  // int32 player_rank = 6;
  void clear_player_rank();
  static const int kPlayerRankFieldNumber = 6;
  ::google::protobuf::int32 player_rank() const;
  void set_player_rank(::google::protobuf::int32 value);

  // int32 player_isnpc = 7;
  void clear_player_isnpc();
  static const int kPlayerIsnpcFieldNumber = 7;
  ::google::protobuf::int32 player_isnpc() const;
  void set_player_isnpc(::google::protobuf::int32 value);

  // int32 player_vip = 8;
  void clear_player_vip();
  static const int kPlayerVipFieldNumber = 8;
  ::google::protobuf::int32 player_vip() const;
  void set_player_vip(::google::protobuf::int32 value);

  // int32 player_achieve = 9;
  void clear_player_achieve();
  static const int kPlayerAchieveFieldNumber = 9;
  ::google::protobuf::int32 player_achieve() const;
  void set_player_achieve(::google::protobuf::int32 value);

  // int32 player_chenghao = 10;
  void clear_player_chenghao();
  static const int kPlayerChenghaoFieldNumber = 10;
  ::google::protobuf::int32 player_chenghao() const;
  void set_player_chenghao(::google::protobuf::int32 value);

  // int32 player_nalflag = 11;
  void clear_player_nalflag();
  static const int kPlayerNalflagFieldNumber = 11;
  ::google::protobuf::int32 player_nalflag() const;
  void set_player_nalflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_sport_player)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::uint64 player_guid_;
  ::google::protobuf::int32 player_template_;
  ::google::protobuf::int32 player_level_;
  ::google::protobuf::int32 player_bat_eff_;
  ::google::protobuf::int32 player_rank_;
  ::google::protobuf::int32 player_isnpc_;
  ::google::protobuf::int32 player_vip_;
  ::google::protobuf::int32 player_achieve_;
  ::google::protobuf::int32 player_chenghao_;
  ::google::protobuf::int32 player_nalflag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_sport_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_sport_look) */ {
 public:
  smsg_sport_look();
  virtual ~smsg_sport_look();

  smsg_sport_look(const smsg_sport_look& from);

  inline smsg_sport_look& operator=(const smsg_sport_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_sport_look(smsg_sport_look&& from) noexcept
    : smsg_sport_look() {
    *this = ::std::move(from);
  }

  inline smsg_sport_look& operator=(smsg_sport_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_sport_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_sport_look* internal_default_instance() {
    return reinterpret_cast<const smsg_sport_look*>(
               &_smsg_sport_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  void Swap(smsg_sport_look* other);
  friend void swap(smsg_sport_look& a, smsg_sport_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_sport_look* New() const final {
    return CreateMaybeMessage<smsg_sport_look>(NULL);
  }

  smsg_sport_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_sport_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_sport_look& from);
  void MergeFrom(const smsg_sport_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_sport_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.msg_sport_player players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  ::protocol::game::msg_sport_player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_sport_player >*
      mutable_players();
  const ::protocol::game::msg_sport_player& players(int index) const;
  ::protocol::game::msg_sport_player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_sport_player >&
      players() const;

  // repeated .dhc.sport_t sports = 4;
  int sports_size() const;
  void clear_sports();
  static const int kSportsFieldNumber = 4;
  ::dhc::sport_t* mutable_sports(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::sport_t >*
      mutable_sports();
  const ::dhc::sport_t& sports(int index) const;
  ::dhc::sport_t* add_sports();
  const ::google::protobuf::RepeatedPtrField< ::dhc::sport_t >&
      sports() const;

  // int32 rank = 2;
  void clear_rank();
  static const int kRankFieldNumber = 2;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // int32 last_rank = 5;
  void clear_last_rank();
  static const int kLastRankFieldNumber = 5;
  ::google::protobuf::int32 last_rank() const;
  void set_last_rank(::google::protobuf::int32 value);

  // int32 can_get = 6;
  void clear_can_get();
  static const int kCanGetFieldNumber = 6;
  ::google::protobuf::int32 can_get() const;
  void set_can_get(::google::protobuf::int32 value);

  // int32 max_rank = 7;
  void clear_max_rank();
  static const int kMaxRankFieldNumber = 7;
  ::google::protobuf::int32 max_rank() const;
  void set_max_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_sport_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_sport_player > players_;
  ::google::protobuf::RepeatedPtrField< ::dhc::sport_t > sports_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 last_rank_;
  ::google::protobuf::int32 can_get_;
  ::google::protobuf::int32 max_rank_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_sport_top : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_sport_top) */ {
 public:
  smsg_sport_top();
  virtual ~smsg_sport_top();

  smsg_sport_top(const smsg_sport_top& from);

  inline smsg_sport_top& operator=(const smsg_sport_top& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_sport_top(smsg_sport_top&& from) noexcept
    : smsg_sport_top() {
    *this = ::std::move(from);
  }

  inline smsg_sport_top& operator=(smsg_sport_top&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_sport_top& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_sport_top* internal_default_instance() {
    return reinterpret_cast<const smsg_sport_top*>(
               &_smsg_sport_top_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  void Swap(smsg_sport_top* other);
  friend void swap(smsg_sport_top& a, smsg_sport_top& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_sport_top* New() const final {
    return CreateMaybeMessage<smsg_sport_top>(NULL);
  }

  smsg_sport_top* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_sport_top>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_sport_top& from);
  void MergeFrom(const smsg_sport_top& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_sport_top* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.msg_sport_player players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  ::protocol::game::msg_sport_player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_sport_player >*
      mutable_players();
  const ::protocol::game::msg_sport_player& players(int index) const;
  ::protocol::game::msg_sport_player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_sport_player >&
      players() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_sport_top)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_sport_player > players_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_sport_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_sport_fight_end) */ {
 public:
  cmsg_sport_fight_end();
  virtual ~cmsg_sport_fight_end();

  cmsg_sport_fight_end(const cmsg_sport_fight_end& from);

  inline cmsg_sport_fight_end& operator=(const cmsg_sport_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_sport_fight_end(cmsg_sport_fight_end&& from) noexcept
    : cmsg_sport_fight_end() {
    *this = ::std::move(from);
  }

  inline cmsg_sport_fight_end& operator=(cmsg_sport_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_sport_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_sport_fight_end* internal_default_instance() {
    return reinterpret_cast<const cmsg_sport_fight_end*>(
               &_cmsg_sport_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  void Swap(cmsg_sport_fight_end* other);
  friend void swap(cmsg_sport_fight_end& a, cmsg_sport_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_sport_fight_end* New() const final {
    return CreateMaybeMessage<cmsg_sport_fight_end>(NULL);
  }

  cmsg_sport_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_sport_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_sport_fight_end& from);
  void MergeFrom(const cmsg_sport_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_sport_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_sport_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_sport_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_sport_fight_end) */ {
 public:
  smsg_sport_fight_end();
  virtual ~smsg_sport_fight_end();

  smsg_sport_fight_end(const smsg_sport_fight_end& from);

  inline smsg_sport_fight_end& operator=(const smsg_sport_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_sport_fight_end(smsg_sport_fight_end&& from) noexcept
    : smsg_sport_fight_end() {
    *this = ::std::move(from);
  }

  inline smsg_sport_fight_end& operator=(smsg_sport_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_sport_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_sport_fight_end* internal_default_instance() {
    return reinterpret_cast<const smsg_sport_fight_end*>(
               &_smsg_sport_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  void Swap(smsg_sport_fight_end* other);
  friend void swap(smsg_sport_fight_end& a, smsg_sport_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_sport_fight_end* New() const final {
    return CreateMaybeMessage<smsg_sport_fight_end>(NULL);
  }

  smsg_sport_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_sport_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_sport_fight_end& from);
  void MergeFrom(const smsg_sport_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_sport_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 6;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 6;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 7;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 7;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 8;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 8;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 9;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 9;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.equip_t equips = 10;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 10;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 11;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 11;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 12;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 12;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 cid = 3;
  void clear_cid();
  static const int kCidFieldNumber = 3;
  ::google::protobuf::int32 cid() const;
  void set_cid(::google::protobuf::int32 value);

  // int32 pgold = 4;
  void clear_pgold();
  static const int kPgoldFieldNumber = 4;
  ::google::protobuf::int32 pgold() const;
  void set_pgold(::google::protobuf::int32 value);

  // int32 max_rank = 5;
  void clear_max_rank();
  static const int kMaxRankFieldNumber = 5;
  ::google::protobuf::int32 max_rank() const;
  void set_max_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_sport_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 cid_;
  ::google::protobuf::int32 pgold_;
  ::google::protobuf::int32 max_rank_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_sport_saodang : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_sport_saodang) */ {
 public:
  cmsg_sport_saodang();
  virtual ~cmsg_sport_saodang();

  cmsg_sport_saodang(const cmsg_sport_saodang& from);

  inline cmsg_sport_saodang& operator=(const cmsg_sport_saodang& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_sport_saodang(cmsg_sport_saodang&& from) noexcept
    : cmsg_sport_saodang() {
    *this = ::std::move(from);
  }

  inline cmsg_sport_saodang& operator=(cmsg_sport_saodang&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_sport_saodang& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_sport_saodang* internal_default_instance() {
    return reinterpret_cast<const cmsg_sport_saodang*>(
               &_cmsg_sport_saodang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  void Swap(cmsg_sport_saodang* other);
  friend void swap(cmsg_sport_saodang& a, cmsg_sport_saodang& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_sport_saodang* New() const final {
    return CreateMaybeMessage<cmsg_sport_saodang>(NULL);
  }

  cmsg_sport_saodang* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_sport_saodang>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_sport_saodang& from);
  void MergeFrom(const cmsg_sport_saodang& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_sport_saodang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // int32 num = 3;
  void clear_num();
  static const int kNumFieldNumber = 3;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // bool use_item = 4;
  void clear_use_item();
  static const int kUseItemFieldNumber = 4;
  bool use_item() const;
  void set_use_item(bool value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_sport_saodang)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 num_;
  bool use_item_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_sport_saodang : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_sport_saodang) */ {
 public:
  smsg_sport_saodang();
  virtual ~smsg_sport_saodang();

  smsg_sport_saodang(const smsg_sport_saodang& from);

  inline smsg_sport_saodang& operator=(const smsg_sport_saodang& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_sport_saodang(smsg_sport_saodang&& from) noexcept
    : smsg_sport_saodang() {
    *this = ::std::move(from);
  }

  inline smsg_sport_saodang& operator=(smsg_sport_saodang&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_sport_saodang& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_sport_saodang* internal_default_instance() {
    return reinterpret_cast<const smsg_sport_saodang*>(
               &_smsg_sport_saodang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  void Swap(smsg_sport_saodang* other);
  friend void swap(smsg_sport_saodang& a, smsg_sport_saodang& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_sport_saodang* New() const final {
    return CreateMaybeMessage<smsg_sport_saodang>(NULL);
  }

  smsg_sport_saodang* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_sport_saodang>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_sport_saodang& from);
  void MergeFrom(const smsg_sport_saodang& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_sport_saodang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.smsg_sport_fight_end saodangs = 1;
  int saodangs_size() const;
  void clear_saodangs();
  static const int kSaodangsFieldNumber = 1;
  ::protocol::game::smsg_sport_fight_end* mutable_saodangs(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_sport_fight_end >*
      mutable_saodangs();
  const ::protocol::game::smsg_sport_fight_end& saodangs(int index) const;
  ::protocol::game::smsg_sport_fight_end* add_saodangs();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_sport_fight_end >&
      saodangs() const;

  // int32 item_num = 2;
  void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  ::google::protobuf::int32 item_num() const;
  void set_item_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_sport_saodang)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_sport_fight_end > saodangs_;
  ::google::protobuf::int32 item_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_sport_shop_list : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_sport_shop_list) */ {
 public:
  smsg_sport_shop_list();
  virtual ~smsg_sport_shop_list();

  smsg_sport_shop_list(const smsg_sport_shop_list& from);

  inline smsg_sport_shop_list& operator=(const smsg_sport_shop_list& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_sport_shop_list(smsg_sport_shop_list&& from) noexcept
    : smsg_sport_shop_list() {
    *this = ::std::move(from);
  }

  inline smsg_sport_shop_list& operator=(smsg_sport_shop_list&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_sport_shop_list& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_sport_shop_list* internal_default_instance() {
    return reinterpret_cast<const smsg_sport_shop_list*>(
               &_smsg_sport_shop_list_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  void Swap(smsg_sport_shop_list* other);
  friend void swap(smsg_sport_shop_list& a, smsg_sport_shop_list& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_sport_shop_list* New() const final {
    return CreateMaybeMessage<smsg_sport_shop_list>(NULL);
  }

  smsg_sport_shop_list* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_sport_shop_list>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_sport_shop_list& from);
  void MergeFrom(const smsg_sport_shop_list& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_sport_shop_list* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 shop_ids = 1;
  int shop_ids_size() const;
  void clear_shop_ids();
  static const int kShopIdsFieldNumber = 1;
  ::google::protobuf::uint32 shop_ids(int index) const;
  void set_shop_ids(int index, ::google::protobuf::uint32 value);
  void add_shop_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      shop_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_shop_ids();

  // repeated int32 shop_sells = 2;
  int shop_sells_size() const;
  void clear_shop_sells();
  static const int kShopSellsFieldNumber = 2;
  ::google::protobuf::int32 shop_sells(int index) const;
  void set_shop_sells(int index, ::google::protobuf::int32 value);
  void add_shop_sells(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shop_sells() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shop_sells();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_sport_shop_list)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > shop_ids_;
  mutable int _shop_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shop_sells_;
  mutable int _shop_sells_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_sport_shop_buy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_sport_shop_buy) */ {
 public:
  cmsg_sport_shop_buy();
  virtual ~cmsg_sport_shop_buy();

  cmsg_sport_shop_buy(const cmsg_sport_shop_buy& from);

  inline cmsg_sport_shop_buy& operator=(const cmsg_sport_shop_buy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_sport_shop_buy(cmsg_sport_shop_buy&& from) noexcept
    : cmsg_sport_shop_buy() {
    *this = ::std::move(from);
  }

  inline cmsg_sport_shop_buy& operator=(cmsg_sport_shop_buy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_sport_shop_buy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_sport_shop_buy* internal_default_instance() {
    return reinterpret_cast<const cmsg_sport_shop_buy*>(
               &_cmsg_sport_shop_buy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  void Swap(cmsg_sport_shop_buy* other);
  friend void swap(cmsg_sport_shop_buy& a, cmsg_sport_shop_buy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_sport_shop_buy* New() const final {
    return CreateMaybeMessage<cmsg_sport_shop_buy>(NULL);
  }

  cmsg_sport_shop_buy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_sport_shop_buy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_sport_shop_buy& from);
  void MergeFrom(const cmsg_sport_shop_buy& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_sport_shop_buy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_sport_shop_buy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_sport_shop_buy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_sport_shop_buy) */ {
 public:
  smsg_sport_shop_buy();
  virtual ~smsg_sport_shop_buy();

  smsg_sport_shop_buy(const smsg_sport_shop_buy& from);

  inline smsg_sport_shop_buy& operator=(const smsg_sport_shop_buy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_sport_shop_buy(smsg_sport_shop_buy&& from) noexcept
    : smsg_sport_shop_buy() {
    *this = ::std::move(from);
  }

  inline smsg_sport_shop_buy& operator=(smsg_sport_shop_buy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_sport_shop_buy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_sport_shop_buy* internal_default_instance() {
    return reinterpret_cast<const smsg_sport_shop_buy*>(
               &_smsg_sport_shop_buy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  void Swap(smsg_sport_shop_buy* other);
  friend void swap(smsg_sport_shop_buy& a, smsg_sport_shop_buy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_sport_shop_buy* New() const final {
    return CreateMaybeMessage<smsg_sport_shop_buy>(NULL);
  }

  smsg_sport_shop_buy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_sport_shop_buy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_sport_shop_buy& from);
  void MergeFrom(const smsg_sport_shop_buy& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_sport_shop_buy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.equip_t equips = 1;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 1;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 2;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 2;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_sport_shop_buy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_recharge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_recharge) */ {
 public:
  cmsg_recharge();
  virtual ~cmsg_recharge();

  cmsg_recharge(const cmsg_recharge& from);

  inline cmsg_recharge& operator=(const cmsg_recharge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_recharge(cmsg_recharge&& from) noexcept
    : cmsg_recharge() {
    *this = ::std::move(from);
  }

  inline cmsg_recharge& operator=(cmsg_recharge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_recharge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_recharge* internal_default_instance() {
    return reinterpret_cast<const cmsg_recharge*>(
               &_cmsg_recharge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  void Swap(cmsg_recharge* other);
  friend void swap(cmsg_recharge& a, cmsg_recharge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_recharge* New() const final {
    return CreateMaybeMessage<cmsg_recharge>(NULL);
  }

  cmsg_recharge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_recharge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_recharge& from);
  void MergeFrom(const cmsg_recharge& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_recharge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string code = 5;
  void clear_code();
  static const int kCodeFieldNumber = 5;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 huodong_id = 3;
  void clear_huodong_id();
  static const int kHuodongIdFieldNumber = 3;
  ::google::protobuf::int32 huodong_id() const;
  void set_huodong_id(::google::protobuf::int32 value);

  // int32 entry_id = 4;
  void clear_entry_id();
  static const int kEntryIdFieldNumber = 4;
  ::google::protobuf::int32 entry_id() const;
  void set_entry_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_recharge)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 huodong_id_;
  ::google::protobuf::int32 entry_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_first_recharge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_first_recharge) */ {
 public:
  smsg_first_recharge();
  virtual ~smsg_first_recharge();

  smsg_first_recharge(const smsg_first_recharge& from);

  inline smsg_first_recharge& operator=(const smsg_first_recharge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_first_recharge(smsg_first_recharge&& from) noexcept
    : smsg_first_recharge() {
    *this = ::std::move(from);
  }

  inline smsg_first_recharge& operator=(smsg_first_recharge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_first_recharge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_first_recharge* internal_default_instance() {
    return reinterpret_cast<const smsg_first_recharge*>(
               &_smsg_first_recharge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  void Swap(smsg_first_recharge* other);
  friend void swap(smsg_first_recharge& a, smsg_first_recharge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_first_recharge* New() const final {
    return CreateMaybeMessage<smsg_first_recharge>(NULL);
  }

  smsg_first_recharge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_first_recharge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_first_recharge& from);
  void MergeFrom(const smsg_first_recharge& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_first_recharge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.equip_t equips = 1;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 1;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 2;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 2;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 3;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 3;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // repeated int32 types = 4;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 4;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 5;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 5;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 6;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 6;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 7;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 7;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_first_recharge)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_vip_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_vip_reward) */ {
 public:
  cmsg_vip_reward();
  virtual ~cmsg_vip_reward();

  cmsg_vip_reward(const cmsg_vip_reward& from);

  inline cmsg_vip_reward& operator=(const cmsg_vip_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_vip_reward(cmsg_vip_reward&& from) noexcept
    : cmsg_vip_reward() {
    *this = ::std::move(from);
  }

  inline cmsg_vip_reward& operator=(cmsg_vip_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_vip_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_vip_reward* internal_default_instance() {
    return reinterpret_cast<const cmsg_vip_reward*>(
               &_cmsg_vip_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  void Swap(cmsg_vip_reward* other);
  friend void swap(cmsg_vip_reward& a, cmsg_vip_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_vip_reward* New() const final {
    return CreateMaybeMessage<cmsg_vip_reward>(NULL);
  }

  cmsg_vip_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_vip_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_vip_reward& from);
  void MergeFrom(const cmsg_vip_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_vip_reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 vip = 2;
  void clear_vip();
  static const int kVipFieldNumber = 2;
  ::google::protobuf::int32 vip() const;
  void set_vip(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_vip_reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 vip_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_vip_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_vip_reward) */ {
 public:
  smsg_vip_reward();
  virtual ~smsg_vip_reward();

  smsg_vip_reward(const smsg_vip_reward& from);

  inline smsg_vip_reward& operator=(const smsg_vip_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_vip_reward(smsg_vip_reward&& from) noexcept
    : smsg_vip_reward() {
    *this = ::std::move(from);
  }

  inline smsg_vip_reward& operator=(smsg_vip_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_vip_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_vip_reward* internal_default_instance() {
    return reinterpret_cast<const smsg_vip_reward*>(
               &_smsg_vip_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  void Swap(smsg_vip_reward* other);
  friend void swap(smsg_vip_reward& a, smsg_vip_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_vip_reward* New() const final {
    return CreateMaybeMessage<smsg_vip_reward>(NULL);
  }

  smsg_vip_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_vip_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_vip_reward& from);
  void MergeFrom(const smsg_vip_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_vip_reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.equip_t equips = 1;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 1;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 2;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 2;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 3;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 3;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // repeated int32 types = 4;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 4;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 5;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 5;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 6;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 6;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 7;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 7;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_vip_reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_dj_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_dj_reward) */ {
 public:
  smsg_dj_reward();
  virtual ~smsg_dj_reward();

  smsg_dj_reward(const smsg_dj_reward& from);

  inline smsg_dj_reward& operator=(const smsg_dj_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_dj_reward(smsg_dj_reward&& from) noexcept
    : smsg_dj_reward() {
    *this = ::std::move(from);
  }

  inline smsg_dj_reward& operator=(smsg_dj_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_dj_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_dj_reward* internal_default_instance() {
    return reinterpret_cast<const smsg_dj_reward*>(
               &_smsg_dj_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  void Swap(smsg_dj_reward* other);
  friend void swap(smsg_dj_reward& a, smsg_dj_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_dj_reward* New() const final {
    return CreateMaybeMessage<smsg_dj_reward>(NULL);
  }

  smsg_dj_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_dj_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_dj_reward& from);
  void MergeFrom(const smsg_dj_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_dj_reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 bs = 1;
  void clear_bs();
  static const int kBsFieldNumber = 1;
  ::google::protobuf::int32 bs() const;
  void set_bs(::google::protobuf::int32 value);

  // int32 gold = 2;
  void clear_gold();
  static const int kGoldFieldNumber = 2;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_dj_reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 bs_;
  ::google::protobuf::int32 gold_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_boss_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_boss_look) */ {
 public:
  smsg_boss_look();
  virtual ~smsg_boss_look();

  smsg_boss_look(const smsg_boss_look& from);

  inline smsg_boss_look& operator=(const smsg_boss_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_boss_look(smsg_boss_look&& from) noexcept
    : smsg_boss_look() {
    *this = ::std::move(from);
  }

  inline smsg_boss_look& operator=(smsg_boss_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_boss_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_boss_look* internal_default_instance() {
    return reinterpret_cast<const smsg_boss_look*>(
               &_smsg_boss_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  void Swap(smsg_boss_look* other);
  friend void swap(smsg_boss_look& a, smsg_boss_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_boss_look* New() const final {
    return CreateMaybeMessage<smsg_boss_look>(NULL);
  }

  smsg_boss_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_boss_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_boss_look& from);
  void MergeFrom(const smsg_boss_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_boss_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 cur_hp = 1;
  void clear_cur_hp();
  static const int kCurHpFieldNumber = 1;
  ::google::protobuf::int64 cur_hp() const;
  void set_cur_hp(::google::protobuf::int64 value);

  // int64 max_hp = 2;
  void clear_max_hp();
  static const int kMaxHpFieldNumber = 2;
  ::google::protobuf::int64 max_hp() const;
  void set_max_hp(::google::protobuf::int64 value);

  // int64 myhit = 3;
  void clear_myhit();
  static const int kMyhitFieldNumber = 3;
  ::google::protobuf::int64 myhit() const;
  void set_myhit(::google::protobuf::int64 value);

  // int32 num = 4;
  void clear_num();
  static const int kNumFieldNumber = 4;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // int32 rank = 5;
  void clear_rank();
  static const int kRankFieldNumber = 5;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // int64 tophit = 9;
  void clear_tophit();
  static const int kTophitFieldNumber = 9;
  ::google::protobuf::int64 tophit() const;
  void set_tophit(::google::protobuf::int64 value);

  // int32 level = 8;
  void clear_level();
  static const int kLevelFieldNumber = 8;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // int32 toprank = 10;
  void clear_toprank();
  static const int kToprankFieldNumber = 10;
  ::google::protobuf::int32 toprank() const;
  void set_toprank(::google::protobuf::int32 value);

  // int32 reward = 11;
  void clear_reward();
  static const int kRewardFieldNumber = 11;
  ::google::protobuf::int32 reward() const;
  void set_reward(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_boss_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 cur_hp_;
  ::google::protobuf::int64 max_hp_;
  ::google::protobuf::int64 myhit_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int64 tophit_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 toprank_;
  ::google::protobuf::int32 reward_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_boss_rank : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_boss_rank) */ {
 public:
  smsg_boss_rank();
  virtual ~smsg_boss_rank();

  smsg_boss_rank(const smsg_boss_rank& from);

  inline smsg_boss_rank& operator=(const smsg_boss_rank& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_boss_rank(smsg_boss_rank&& from) noexcept
    : smsg_boss_rank() {
    *this = ::std::move(from);
  }

  inline smsg_boss_rank& operator=(smsg_boss_rank&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_boss_rank& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_boss_rank* internal_default_instance() {
    return reinterpret_cast<const smsg_boss_rank*>(
               &_smsg_boss_rank_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  void Swap(smsg_boss_rank* other);
  friend void swap(smsg_boss_rank& a, smsg_boss_rank& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_boss_rank* New() const final {
    return CreateMaybeMessage<smsg_boss_rank>(NULL);
  }

  smsg_boss_rank* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_boss_rank>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_boss_rank& from);
  void MergeFrom(const smsg_boss_rank& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_boss_rank* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string total_names = 1;
  int total_names_size() const;
  void clear_total_names();
  static const int kTotalNamesFieldNumber = 1;
  const ::std::string& total_names(int index) const;
  ::std::string* mutable_total_names(int index);
  void set_total_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_total_names(int index, ::std::string&& value);
  #endif
  void set_total_names(int index, const char* value);
  void set_total_names(int index, const char* value, size_t size);
  ::std::string* add_total_names();
  void add_total_names(const ::std::string& value);
  #if LANG_CXX11
  void add_total_names(::std::string&& value);
  #endif
  void add_total_names(const char* value);
  void add_total_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& total_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_total_names();

  // repeated int32 total_templates = 2;
  int total_templates_size() const;
  void clear_total_templates();
  static const int kTotalTemplatesFieldNumber = 2;
  ::google::protobuf::int32 total_templates(int index) const;
  void set_total_templates(int index, ::google::protobuf::int32 value);
  void add_total_templates(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      total_templates() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_total_templates();

  // repeated int64 total_hits = 3;
  int total_hits_size() const;
  void clear_total_hits();
  static const int kTotalHitsFieldNumber = 3;
  ::google::protobuf::int64 total_hits(int index) const;
  void set_total_hits(int index, ::google::protobuf::int64 value);
  void add_total_hits(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      total_hits() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_total_hits();

  // repeated int32 total_levels = 4;
  int total_levels_size() const;
  void clear_total_levels();
  static const int kTotalLevelsFieldNumber = 4;
  ::google::protobuf::int32 total_levels(int index) const;
  void set_total_levels(int index, ::google::protobuf::int32 value);
  void add_total_levels(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      total_levels() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_total_levels();

  // repeated uint64 total_guids = 5;
  int total_guids_size() const;
  void clear_total_guids();
  static const int kTotalGuidsFieldNumber = 5;
  ::google::protobuf::uint64 total_guids(int index) const;
  void set_total_guids(int index, ::google::protobuf::uint64 value);
  void add_total_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      total_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_total_guids();

  // repeated int32 total_vips = 6;
  int total_vips_size() const;
  void clear_total_vips();
  static const int kTotalVipsFieldNumber = 6;
  ::google::protobuf::int32 total_vips(int index) const;
  void set_total_vips(int index, ::google::protobuf::int32 value);
  void add_total_vips(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      total_vips() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_total_vips();

  // repeated int32 total_achieves = 7;
  int total_achieves_size() const;
  void clear_total_achieves();
  static const int kTotalAchievesFieldNumber = 7;
  ::google::protobuf::int32 total_achieves(int index) const;
  void set_total_achieves(int index, ::google::protobuf::int32 value);
  void add_total_achieves(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      total_achieves() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_total_achieves();

  // repeated int32 total_chenghaos = 8;
  int total_chenghaos_size() const;
  void clear_total_chenghaos();
  static const int kTotalChenghaosFieldNumber = 8;
  ::google::protobuf::int32 total_chenghaos(int index) const;
  void set_total_chenghaos(int index, ::google::protobuf::int32 value);
  void add_total_chenghaos(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      total_chenghaos() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_total_chenghaos();

  // repeated int32 total_nalflags = 9;
  int total_nalflags_size() const;
  void clear_total_nalflags();
  static const int kTotalNalflagsFieldNumber = 9;
  ::google::protobuf::int32 total_nalflags(int index) const;
  void set_total_nalflags(int index, ::google::protobuf::int32 value);
  void add_total_nalflags(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      total_nalflags() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_total_nalflags();

  // repeated string top_names = 10;
  int top_names_size() const;
  void clear_top_names();
  static const int kTopNamesFieldNumber = 10;
  const ::std::string& top_names(int index) const;
  ::std::string* mutable_top_names(int index);
  void set_top_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_top_names(int index, ::std::string&& value);
  #endif
  void set_top_names(int index, const char* value);
  void set_top_names(int index, const char* value, size_t size);
  ::std::string* add_top_names();
  void add_top_names(const ::std::string& value);
  #if LANG_CXX11
  void add_top_names(::std::string&& value);
  #endif
  void add_top_names(const char* value);
  void add_top_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& top_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_top_names();

  // repeated int32 top_templates = 11;
  int top_templates_size() const;
  void clear_top_templates();
  static const int kTopTemplatesFieldNumber = 11;
  ::google::protobuf::int32 top_templates(int index) const;
  void set_top_templates(int index, ::google::protobuf::int32 value);
  void add_top_templates(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      top_templates() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_top_templates();

  // repeated int64 top_hits = 12;
  int top_hits_size() const;
  void clear_top_hits();
  static const int kTopHitsFieldNumber = 12;
  ::google::protobuf::int64 top_hits(int index) const;
  void set_top_hits(int index, ::google::protobuf::int64 value);
  void add_top_hits(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      top_hits() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_top_hits();

  // repeated int32 top_levels = 13;
  int top_levels_size() const;
  void clear_top_levels();
  static const int kTopLevelsFieldNumber = 13;
  ::google::protobuf::int32 top_levels(int index) const;
  void set_top_levels(int index, ::google::protobuf::int32 value);
  void add_top_levels(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      top_levels() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_top_levels();

  // repeated uint64 top_guids = 14;
  int top_guids_size() const;
  void clear_top_guids();
  static const int kTopGuidsFieldNumber = 14;
  ::google::protobuf::uint64 top_guids(int index) const;
  void set_top_guids(int index, ::google::protobuf::uint64 value);
  void add_top_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      top_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_top_guids();

  // repeated int32 top_vips = 15;
  int top_vips_size() const;
  void clear_top_vips();
  static const int kTopVipsFieldNumber = 15;
  ::google::protobuf::int32 top_vips(int index) const;
  void set_top_vips(int index, ::google::protobuf::int32 value);
  void add_top_vips(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      top_vips() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_top_vips();

  // repeated int32 top_achieves = 16;
  int top_achieves_size() const;
  void clear_top_achieves();
  static const int kTopAchievesFieldNumber = 16;
  ::google::protobuf::int32 top_achieves(int index) const;
  void set_top_achieves(int index, ::google::protobuf::int32 value);
  void add_top_achieves(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      top_achieves() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_top_achieves();

  // repeated int32 top_chenghaos = 17;
  int top_chenghaos_size() const;
  void clear_top_chenghaos();
  static const int kTopChenghaosFieldNumber = 17;
  ::google::protobuf::int32 top_chenghaos(int index) const;
  void set_top_chenghaos(int index, ::google::protobuf::int32 value);
  void add_top_chenghaos(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      top_chenghaos() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_top_chenghaos();

  // repeated int32 top_nalflag = 18;
  int top_nalflag_size() const;
  void clear_top_nalflag();
  static const int kTopNalflagFieldNumber = 18;
  ::google::protobuf::int32 top_nalflag(int index) const;
  void set_top_nalflag(int index, ::google::protobuf::int32 value);
  void add_top_nalflag(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      top_nalflag() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_top_nalflag();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_boss_rank)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> total_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > total_templates_;
  mutable int _total_templates_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > total_hits_;
  mutable int _total_hits_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > total_levels_;
  mutable int _total_levels_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > total_guids_;
  mutable int _total_guids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > total_vips_;
  mutable int _total_vips_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > total_achieves_;
  mutable int _total_achieves_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > total_chenghaos_;
  mutable int _total_chenghaos_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > total_nalflags_;
  mutable int _total_nalflags_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> top_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > top_templates_;
  mutable int _top_templates_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > top_hits_;
  mutable int _top_hits_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > top_levels_;
  mutable int _top_levels_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > top_guids_;
  mutable int _top_guids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > top_vips_;
  mutable int _top_vips_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > top_achieves_;
  mutable int _top_achieves_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > top_chenghaos_;
  mutable int _top_chenghaos_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > top_nalflag_;
  mutable int _top_nalflag_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_boss_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_boss_fight_end) */ {
 public:
  smsg_boss_fight_end();
  virtual ~smsg_boss_fight_end();

  smsg_boss_fight_end(const smsg_boss_fight_end& from);

  inline smsg_boss_fight_end& operator=(const smsg_boss_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_boss_fight_end(smsg_boss_fight_end&& from) noexcept
    : smsg_boss_fight_end() {
    *this = ::std::move(from);
  }

  inline smsg_boss_fight_end& operator=(smsg_boss_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_boss_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_boss_fight_end* internal_default_instance() {
    return reinterpret_cast<const smsg_boss_fight_end*>(
               &_smsg_boss_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    116;

  void Swap(smsg_boss_fight_end* other);
  friend void swap(smsg_boss_fight_end& a, smsg_boss_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_boss_fight_end* New() const final {
    return CreateMaybeMessage<smsg_boss_fight_end>(NULL);
  }

  smsg_boss_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_boss_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_boss_fight_end& from);
  void MergeFrom(const smsg_boss_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_boss_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 btop_rank = 4;
  void clear_btop_rank();
  static const int kBtopRankFieldNumber = 4;
  ::google::protobuf::int32 btop_rank() const;
  void set_btop_rank(::google::protobuf::int32 value);

  // int64 hit = 3;
  void clear_hit();
  static const int kHitFieldNumber = 3;
  ::google::protobuf::int64 hit() const;
  void set_hit(::google::protobuf::int64 value);

  // int32 bmax_rank = 5;
  void clear_bmax_rank();
  static const int kBmaxRankFieldNumber = 5;
  ::google::protobuf::int32 bmax_rank() const;
  void set_bmax_rank(::google::protobuf::int32 value);

  // int32 atop_rank = 6;
  void clear_atop_rank();
  static const int kAtopRankFieldNumber = 6;
  ::google::protobuf::int32 atop_rank() const;
  void set_atop_rank(::google::protobuf::int32 value);

  // int32 amax_rank = 7;
  void clear_amax_rank();
  static const int kAmaxRankFieldNumber = 7;
  ::google::protobuf::int32 amax_rank() const;
  void set_amax_rank(::google::protobuf::int32 value);

  // int32 medal = 8;
  void clear_medal();
  static const int kMedalFieldNumber = 8;
  ::google::protobuf::int32 medal() const;
  void set_medal(::google::protobuf::int32 value);

  // int32 hit_medal = 9;
  void clear_hit_medal();
  static const int kHitMedalFieldNumber = 9;
  ::google::protobuf::int32 hit_medal() const;
  void set_hit_medal(::google::protobuf::int32 value);

  // int32 baoji = 10;
  void clear_baoji();
  static const int kBaojiFieldNumber = 10;
  ::google::protobuf::int32 baoji() const;
  void set_baoji(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_boss_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 btop_rank_;
  ::google::protobuf::int64 hit_;
  ::google::protobuf::int32 bmax_rank_;
  ::google::protobuf::int32 atop_rank_;
  ::google::protobuf::int32 amax_rank_;
  ::google::protobuf::int32 medal_;
  ::google::protobuf::int32 hit_medal_;
  ::google::protobuf::int32 baoji_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_boss_active_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_boss_active_look) */ {
 public:
  smsg_boss_active_look();
  virtual ~smsg_boss_active_look();

  smsg_boss_active_look(const smsg_boss_active_look& from);

  inline smsg_boss_active_look& operator=(const smsg_boss_active_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_boss_active_look(smsg_boss_active_look&& from) noexcept
    : smsg_boss_active_look() {
    *this = ::std::move(from);
  }

  inline smsg_boss_active_look& operator=(smsg_boss_active_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_boss_active_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_boss_active_look* internal_default_instance() {
    return reinterpret_cast<const smsg_boss_active_look*>(
               &_smsg_boss_active_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    117;

  void Swap(smsg_boss_active_look* other);
  friend void swap(smsg_boss_active_look& a, smsg_boss_active_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_boss_active_look* New() const final {
    return CreateMaybeMessage<smsg_boss_active_look>(NULL);
  }

  smsg_boss_active_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_boss_active_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_boss_active_look& from);
  void MergeFrom(const smsg_boss_active_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_boss_active_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ids = 1;
  int ids_size() const;
  void clear_ids();
  static const int kIdsFieldNumber = 1;
  ::google::protobuf::int32 ids(int index) const;
  void set_ids(int index, ::google::protobuf::int32 value);
  void add_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ids();

  // repeated int64 nums = 2;
  int nums_size() const;
  void clear_nums();
  static const int kNumsFieldNumber = 2;
  ::google::protobuf::int64 nums(int index) const;
  void set_nums(int index, ::google::protobuf::int64 value);
  void add_nums(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      nums() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_nums();

  // repeated int32 rewards = 3;
  int rewards_size() const;
  void clear_rewards();
  static const int kRewardsFieldNumber = 3;
  ::google::protobuf::int32 rewards(int index) const;
  void set_rewards(int index, ::google::protobuf::int32 value);
  void add_rewards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rewards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rewards();

  // int32 level = 4;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_boss_active_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ids_;
  mutable int _ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > nums_;
  mutable int _nums_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rewards_;
  mutable int _rewards_cached_byte_size_;
  ::google::protobuf::int32 level_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_boss_saodang : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_boss_saodang) */ {
 public:
  cmsg_boss_saodang();
  virtual ~cmsg_boss_saodang();

  cmsg_boss_saodang(const cmsg_boss_saodang& from);

  inline cmsg_boss_saodang& operator=(const cmsg_boss_saodang& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_boss_saodang(cmsg_boss_saodang&& from) noexcept
    : cmsg_boss_saodang() {
    *this = ::std::move(from);
  }

  inline cmsg_boss_saodang& operator=(cmsg_boss_saodang&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_boss_saodang& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_boss_saodang* internal_default_instance() {
    return reinterpret_cast<const cmsg_boss_saodang*>(
               &_cmsg_boss_saodang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    118;

  void Swap(cmsg_boss_saodang* other);
  friend void swap(cmsg_boss_saodang& a, cmsg_boss_saodang& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_boss_saodang* New() const final {
    return CreateMaybeMessage<cmsg_boss_saodang>(NULL);
  }

  cmsg_boss_saodang* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_boss_saodang>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_boss_saodang& from);
  void MergeFrom(const cmsg_boss_saodang& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_boss_saodang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 num = 2;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // bool use_item = 3;
  void clear_use_item();
  static const int kUseItemFieldNumber = 3;
  bool use_item() const;
  void set_use_item(bool value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_boss_saodang)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 num_;
  bool use_item_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_boss_saodang : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_boss_saodang) */ {
 public:
  smsg_boss_saodang();
  virtual ~smsg_boss_saodang();

  smsg_boss_saodang(const smsg_boss_saodang& from);

  inline smsg_boss_saodang& operator=(const smsg_boss_saodang& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_boss_saodang(smsg_boss_saodang&& from) noexcept
    : smsg_boss_saodang() {
    *this = ::std::move(from);
  }

  inline smsg_boss_saodang& operator=(smsg_boss_saodang&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_boss_saodang& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_boss_saodang* internal_default_instance() {
    return reinterpret_cast<const smsg_boss_saodang*>(
               &_smsg_boss_saodang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    119;

  void Swap(smsg_boss_saodang* other);
  friend void swap(smsg_boss_saodang& a, smsg_boss_saodang& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_boss_saodang* New() const final {
    return CreateMaybeMessage<smsg_boss_saodang>(NULL);
  }

  smsg_boss_saodang* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_boss_saodang>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_boss_saodang& from);
  void MergeFrom(const smsg_boss_saodang& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_boss_saodang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 level = 1;
  int level_size() const;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level(int index) const;
  void set_level(int index, ::google::protobuf::int32 value);
  void add_level(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      level() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_level();

  // repeated int64 hit = 2;
  int hit_size() const;
  void clear_hit();
  static const int kHitFieldNumber = 2;
  ::google::protobuf::int64 hit(int index) const;
  void set_hit(int index, ::google::protobuf::int64 value);
  void add_hit(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      hit() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_hit();

  // repeated int32 medal = 3;
  int medal_size() const;
  void clear_medal();
  static const int kMedalFieldNumber = 3;
  ::google::protobuf::int32 medal(int index) const;
  void set_medal(int index, ::google::protobuf::int32 value);
  void add_medal(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      medal() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_medal();

  // repeated bool use_item = 4;
  int use_item_size() const;
  void clear_use_item();
  static const int kUseItemFieldNumber = 4;
  bool use_item(int index) const;
  void set_use_item(int index, bool value);
  void add_use_item(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      use_item() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_use_item();

  // int32 btop_rank = 5;
  void clear_btop_rank();
  static const int kBtopRankFieldNumber = 5;
  ::google::protobuf::int32 btop_rank() const;
  void set_btop_rank(::google::protobuf::int32 value);

  // int32 bmax_rank = 6;
  void clear_bmax_rank();
  static const int kBmaxRankFieldNumber = 6;
  ::google::protobuf::int32 bmax_rank() const;
  void set_bmax_rank(::google::protobuf::int32 value);

  // int32 atop_rank = 7;
  void clear_atop_rank();
  static const int kAtopRankFieldNumber = 7;
  ::google::protobuf::int32 atop_rank() const;
  void set_atop_rank(::google::protobuf::int32 value);

  // int32 amax_rank = 8;
  void clear_amax_rank();
  static const int kAmaxRankFieldNumber = 8;
  ::google::protobuf::int32 amax_rank() const;
  void set_amax_rank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_boss_saodang)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > level_;
  mutable int _level_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > hit_;
  mutable int _hit_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > medal_;
  mutable int _medal_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > use_item_;
  mutable int _use_item_cached_byte_size_;
  ::google::protobuf::int32 btop_rank_;
  ::google::protobuf::int32 bmax_rank_;
  ::google::protobuf::int32 atop_rank_;
  ::google::protobuf::int32 amax_rank_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_chat_ex : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_chat_ex) */ {
 public:
  cmsg_chat_ex();
  virtual ~cmsg_chat_ex();

  cmsg_chat_ex(const cmsg_chat_ex& from);

  inline cmsg_chat_ex& operator=(const cmsg_chat_ex& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_chat_ex(cmsg_chat_ex&& from) noexcept
    : cmsg_chat_ex() {
    *this = ::std::move(from);
  }

  inline cmsg_chat_ex& operator=(cmsg_chat_ex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_chat_ex& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_chat_ex* internal_default_instance() {
    return reinterpret_cast<const cmsg_chat_ex*>(
               &_cmsg_chat_ex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    120;

  void Swap(cmsg_chat_ex* other);
  friend void swap(cmsg_chat_ex& a, cmsg_chat_ex& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_chat_ex* New() const final {
    return CreateMaybeMessage<cmsg_chat_ex>(NULL);
  }

  cmsg_chat_ex* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_chat_ex>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_chat_ex& from);
  void MergeFrom(const cmsg_chat_ex& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_chat_ex* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 3;
  void clear_text();
  static const int kTextFieldNumber = 3;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // string color = 4;
  void clear_color();
  static const int kColorFieldNumber = 4;
  const ::std::string& color() const;
  void set_color(const ::std::string& value);
  #if LANG_CXX11
  void set_color(::std::string&& value);
  #endif
  void set_color(const char* value);
  void set_color(const char* value, size_t size);
  ::std::string* mutable_color();
  ::std::string* release_color();
  void set_allocated_color(::std::string* color);

  // string target_name = 5;
  void clear_target_name();
  static const int kTargetNameFieldNumber = 5;
  const ::std::string& target_name() const;
  void set_target_name(const ::std::string& value);
  #if LANG_CXX11
  void set_target_name(::std::string&& value);
  #endif
  void set_target_name(const char* value);
  void set_target_name(const char* value, size_t size);
  ::std::string* mutable_target_name();
  ::std::string* release_target_name();
  void set_allocated_target_name(::std::string* target_name);

  // .protocol.game.msg_common_ex comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common_ex& _internal_comm() const;
  public:
  const ::protocol::game::msg_common_ex& comm() const;
  ::protocol::game::msg_common_ex* release_comm();
  ::protocol::game::msg_common_ex* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common_ex* comm);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_chat_ex)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr color_;
  ::google::protobuf::internal::ArenaStringPtr target_name_;
  ::protocol::game::msg_common_ex* comm_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_chat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_chat) */ {
 public:
  smsg_chat();
  virtual ~smsg_chat();

  smsg_chat(const smsg_chat& from);

  inline smsg_chat& operator=(const smsg_chat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_chat(smsg_chat&& from) noexcept
    : smsg_chat() {
    *this = ::std::move(from);
  }

  inline smsg_chat& operator=(smsg_chat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_chat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_chat* internal_default_instance() {
    return reinterpret_cast<const smsg_chat*>(
               &_smsg_chat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    121;

  void Swap(smsg_chat* other);
  friend void swap(smsg_chat& a, smsg_chat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_chat* New() const final {
    return CreateMaybeMessage<smsg_chat>(NULL);
  }

  smsg_chat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_chat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_chat& from);
  void MergeFrom(const smsg_chat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_chat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string player_name = 2;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // string text = 7;
  void clear_text();
  static const int kTextFieldNumber = 7;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // string color = 9;
  void clear_color();
  static const int kColorFieldNumber = 9;
  const ::std::string& color() const;
  void set_color(const ::std::string& value);
  #if LANG_CXX11
  void set_color(::std::string&& value);
  #endif
  void set_color(const char* value);
  void set_color(const char* value, size_t size);
  ::std::string* mutable_color();
  ::std::string* release_color();
  void set_allocated_color(::std::string* color);

  // string target_name = 12;
  void clear_target_name();
  static const int kTargetNameFieldNumber = 12;
  const ::std::string& target_name() const;
  void set_target_name(const ::std::string& value);
  #if LANG_CXX11
  void set_target_name(::std::string&& value);
  #endif
  void set_target_name(const char* value);
  void set_target_name(const char* value, size_t size);
  ::std::string* mutable_target_name();
  ::std::string* release_target_name();
  void set_allocated_target_name(::std::string* target_name);

  // uint64 player_guid = 1;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 1;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // uint32 player_template = 3;
  void clear_player_template();
  static const int kPlayerTemplateFieldNumber = 3;
  ::google::protobuf::uint32 player_template() const;
  void set_player_template(::google::protobuf::uint32 value);

  // int32 vip = 4;
  void clear_vip();
  static const int kVipFieldNumber = 4;
  ::google::protobuf::int32 vip() const;
  void set_vip(::google::protobuf::int32 value);

  // int32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // int32 type = 6;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // uint64 time = 8;
  void clear_time();
  static const int kTimeFieldNumber = 8;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // uint64 target_guid = 11;
  void clear_target_guid();
  static const int kTargetGuidFieldNumber = 11;
  ::google::protobuf::uint64 target_guid() const;
  void set_target_guid(::google::protobuf::uint64 value);

  // int32 is_danmu = 10;
  void clear_is_danmu();
  static const int kIsDanmuFieldNumber = 10;
  ::google::protobuf::int32 is_danmu() const;
  void set_is_danmu(::google::protobuf::int32 value);

  // int32 chenghao = 13;
  void clear_chenghao();
  static const int kChenghaoFieldNumber = 13;
  ::google::protobuf::int32 chenghao() const;
  void set_chenghao(::google::protobuf::int32 value);

  // int32 nalflag = 14;
  void clear_nalflag();
  static const int kNalflagFieldNumber = 14;
  ::google::protobuf::int32 nalflag() const;
  void set_nalflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_chat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr color_;
  ::google::protobuf::internal::ArenaStringPtr target_name_;
  ::google::protobuf::uint64 player_guid_;
  ::google::protobuf::uint32 player_template_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::uint64 target_guid_;
  ::google::protobuf::int32 is_danmu_;
  ::google::protobuf::int32 chenghao_;
  ::google::protobuf::int32 nalflag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class pmsg_chat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.pmsg_chat) */ {
 public:
  pmsg_chat();
  virtual ~pmsg_chat();

  pmsg_chat(const pmsg_chat& from);

  inline pmsg_chat& operator=(const pmsg_chat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  pmsg_chat(pmsg_chat&& from) noexcept
    : pmsg_chat() {
    *this = ::std::move(from);
  }

  inline pmsg_chat& operator=(pmsg_chat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const pmsg_chat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const pmsg_chat* internal_default_instance() {
    return reinterpret_cast<const pmsg_chat*>(
               &_pmsg_chat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    122;

  void Swap(pmsg_chat* other);
  friend void swap(pmsg_chat& a, pmsg_chat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline pmsg_chat* New() const final {
    return CreateMaybeMessage<pmsg_chat>(NULL);
  }

  pmsg_chat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<pmsg_chat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const pmsg_chat& from);
  void MergeFrom(const pmsg_chat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(pmsg_chat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 player_guids = 2;
  int player_guids_size() const;
  void clear_player_guids();
  static const int kPlayerGuidsFieldNumber = 2;
  ::google::protobuf::uint64 player_guids(int index) const;
  void set_player_guids(int index, ::google::protobuf::uint64 value);
  void add_player_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_guids();

  // .protocol.game.smsg_chat msg_chat = 1;
  bool has_msg_chat() const;
  void clear_msg_chat();
  static const int kMsgChatFieldNumber = 1;
  private:
  const ::protocol::game::smsg_chat& _internal_msg_chat() const;
  public:
  const ::protocol::game::smsg_chat& msg_chat() const;
  ::protocol::game::smsg_chat* release_msg_chat();
  ::protocol::game::smsg_chat* mutable_msg_chat();
  void set_allocated_msg_chat(::protocol::game::smsg_chat* msg_chat);

  // @@protoc_insertion_point(class_scope:protocol.game.pmsg_chat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_guids_;
  mutable int _player_guids_cached_byte_size_;
  ::protocol::game::smsg_chat* msg_chat_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_online_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_online_reward) */ {
 public:
  smsg_online_reward();
  virtual ~smsg_online_reward();

  smsg_online_reward(const smsg_online_reward& from);

  inline smsg_online_reward& operator=(const smsg_online_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_online_reward(smsg_online_reward&& from) noexcept
    : smsg_online_reward() {
    *this = ::std::move(from);
  }

  inline smsg_online_reward& operator=(smsg_online_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_online_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_online_reward* internal_default_instance() {
    return reinterpret_cast<const smsg_online_reward*>(
               &_smsg_online_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    123;

  void Swap(smsg_online_reward* other);
  friend void swap(smsg_online_reward& a, smsg_online_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_online_reward* New() const final {
    return CreateMaybeMessage<smsg_online_reward>(NULL);
  }

  smsg_online_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_online_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_online_reward& from);
  void MergeFrom(const smsg_online_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_online_reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.equip_t equips = 1;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 1;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 2;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 2;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 3;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 3;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // repeated int32 types = 4;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 4;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 5;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 5;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 6;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 6;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 7;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 7;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_online_reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_daily_sign : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_daily_sign) */ {
 public:
  smsg_daily_sign();
  virtual ~smsg_daily_sign();

  smsg_daily_sign(const smsg_daily_sign& from);

  inline smsg_daily_sign& operator=(const smsg_daily_sign& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_daily_sign(smsg_daily_sign&& from) noexcept
    : smsg_daily_sign() {
    *this = ::std::move(from);
  }

  inline smsg_daily_sign& operator=(smsg_daily_sign&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_daily_sign& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_daily_sign* internal_default_instance() {
    return reinterpret_cast<const smsg_daily_sign*>(
               &_smsg_daily_sign_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    124;

  void Swap(smsg_daily_sign* other);
  friend void swap(smsg_daily_sign& a, smsg_daily_sign& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_daily_sign* New() const final {
    return CreateMaybeMessage<smsg_daily_sign>(NULL);
  }

  smsg_daily_sign* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_daily_sign>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_daily_sign& from);
  void MergeFrom(const smsg_daily_sign& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_daily_sign* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.equip_t equips = 1;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 1;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 2;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 2;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 3;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 3;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // repeated int32 types = 4;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 4;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 5;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 5;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 6;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 6;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 7;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 7;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_daily_sign)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_hbb_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_hbb_look) */ {
 public:
  smsg_hbb_look();
  virtual ~smsg_hbb_look();

  smsg_hbb_look(const smsg_hbb_look& from);

  inline smsg_hbb_look& operator=(const smsg_hbb_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_hbb_look(smsg_hbb_look&& from) noexcept
    : smsg_hbb_look() {
    *this = ::std::move(from);
  }

  inline smsg_hbb_look& operator=(smsg_hbb_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_hbb_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_hbb_look* internal_default_instance() {
    return reinterpret_cast<const smsg_hbb_look*>(
               &_smsg_hbb_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    125;

  void Swap(smsg_hbb_look* other);
  friend void swap(smsg_hbb_look& a, smsg_hbb_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_hbb_look* New() const final {
    return CreateMaybeMessage<smsg_hbb_look>(NULL);
  }

  smsg_hbb_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_hbb_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_hbb_look& from);
  void MergeFrom(const smsg_hbb_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_hbb_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 class_ids = 1;
  int class_ids_size() const;
  void clear_class_ids();
  static const int kClassIdsFieldNumber = 1;
  ::google::protobuf::uint32 class_ids(int index) const;
  void set_class_ids(int index, ::google::protobuf::uint32 value);
  void add_class_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      class_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_class_ids();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_hbb_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > class_ids_;
  mutable int _class_ids_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_hbb_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_hbb_fight_end) */ {
 public:
  smsg_hbb_fight_end();
  virtual ~smsg_hbb_fight_end();

  smsg_hbb_fight_end(const smsg_hbb_fight_end& from);

  inline smsg_hbb_fight_end& operator=(const smsg_hbb_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_hbb_fight_end(smsg_hbb_fight_end&& from) noexcept
    : smsg_hbb_fight_end() {
    *this = ::std::move(from);
  }

  inline smsg_hbb_fight_end& operator=(smsg_hbb_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_hbb_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_hbb_fight_end* internal_default_instance() {
    return reinterpret_cast<const smsg_hbb_fight_end*>(
               &_smsg_hbb_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    126;

  void Swap(smsg_hbb_fight_end* other);
  friend void swap(smsg_hbb_fight_end& a, smsg_hbb_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_hbb_fight_end* New() const final {
    return CreateMaybeMessage<smsg_hbb_fight_end>(NULL);
  }

  smsg_hbb_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_hbb_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_hbb_fight_end& from);
  void MergeFrom(const smsg_hbb_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_hbb_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 11;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 11;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 12;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 12;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 13;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 13;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 14;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 14;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated int32 class_ids = 15;
  int class_ids_size() const;
  void clear_class_ids();
  static const int kClassIdsFieldNumber = 15;
  ::google::protobuf::int32 class_ids(int index) const;
  void set_class_ids(int index, ::google::protobuf::int32 value);
  void add_class_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      class_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_class_ids();

  // repeated .dhc.equip_t equips = 16;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 16;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 17;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 17;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 18;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 18;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_hbb_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > class_ids_;
  mutable int _class_ids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_ttt_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_ttt_fight_end) */ {
 public:
  cmsg_ttt_fight_end();
  virtual ~cmsg_ttt_fight_end();

  cmsg_ttt_fight_end(const cmsg_ttt_fight_end& from);

  inline cmsg_ttt_fight_end& operator=(const cmsg_ttt_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_ttt_fight_end(cmsg_ttt_fight_end&& from) noexcept
    : cmsg_ttt_fight_end() {
    *this = ::std::move(from);
  }

  inline cmsg_ttt_fight_end& operator=(cmsg_ttt_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_ttt_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_ttt_fight_end* internal_default_instance() {
    return reinterpret_cast<const cmsg_ttt_fight_end*>(
               &_cmsg_ttt_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    127;

  void Swap(cmsg_ttt_fight_end* other);
  friend void swap(cmsg_ttt_fight_end& a, cmsg_ttt_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_ttt_fight_end* New() const final {
    return CreateMaybeMessage<cmsg_ttt_fight_end>(NULL);
  }

  cmsg_ttt_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_ttt_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_ttt_fight_end& from);
  void MergeFrom(const cmsg_ttt_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_ttt_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 nd = 2;
  void clear_nd();
  static const int kNdFieldNumber = 2;
  ::google::protobuf::int32 nd() const;
  void set_nd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_ttt_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 nd_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_ttt_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_ttt_fight_end) */ {
 public:
  smsg_ttt_fight_end();
  virtual ~smsg_ttt_fight_end();

  smsg_ttt_fight_end(const smsg_ttt_fight_end& from);

  inline smsg_ttt_fight_end& operator=(const smsg_ttt_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_ttt_fight_end(smsg_ttt_fight_end&& from) noexcept
    : smsg_ttt_fight_end() {
    *this = ::std::move(from);
  }

  inline smsg_ttt_fight_end& operator=(smsg_ttt_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_ttt_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_ttt_fight_end* internal_default_instance() {
    return reinterpret_cast<const smsg_ttt_fight_end*>(
               &_smsg_ttt_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    128;

  void Swap(smsg_ttt_fight_end* other);
  friend void swap(smsg_ttt_fight_end& a, smsg_ttt_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_ttt_fight_end* New() const final {
    return CreateMaybeMessage<smsg_ttt_fight_end>(NULL);
  }

  smsg_ttt_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_ttt_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_ttt_fight_end& from);
  void MergeFrom(const smsg_ttt_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_ttt_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 8;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 8;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 9;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 9;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 10;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 10;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 11;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 11;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.equip_t equips = 12;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 12;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 13;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 13;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 14;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 14;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 index = 3;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // int32 nd = 4;
  void clear_nd();
  static const int kNdFieldNumber = 4;
  ::google::protobuf::int32 nd() const;
  void set_nd(::google::protobuf::int32 value);

  // int32 mibao = 5;
  void clear_mibao();
  static const int kMibaoFieldNumber = 5;
  ::google::protobuf::int32 mibao() const;
  void set_mibao(::google::protobuf::int32 value);

  // int32 baoji1 = 6;
  void clear_baoji1();
  static const int kBaoji1FieldNumber = 6;
  ::google::protobuf::int32 baoji1() const;
  void set_baoji1(::google::protobuf::int32 value);

  // int32 baoji2 = 7;
  void clear_baoji2();
  static const int kBaoji2FieldNumber = 7;
  ::google::protobuf::int32 baoji2() const;
  void set_baoji2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_ttt_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 nd_;
  ::google::protobuf::int32 mibao_;
  ::google::protobuf::int32 baoji1_;
  ::google::protobuf::int32 baoji2_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_ttt_sanxing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_ttt_sanxing) */ {
 public:
  smsg_ttt_sanxing();
  virtual ~smsg_ttt_sanxing();

  smsg_ttt_sanxing(const smsg_ttt_sanxing& from);

  inline smsg_ttt_sanxing& operator=(const smsg_ttt_sanxing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_ttt_sanxing(smsg_ttt_sanxing&& from) noexcept
    : smsg_ttt_sanxing() {
    *this = ::std::move(from);
  }

  inline smsg_ttt_sanxing& operator=(smsg_ttt_sanxing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_ttt_sanxing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_ttt_sanxing* internal_default_instance() {
    return reinterpret_cast<const smsg_ttt_sanxing*>(
               &_smsg_ttt_sanxing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    129;

  void Swap(smsg_ttt_sanxing* other);
  friend void swap(smsg_ttt_sanxing& a, smsg_ttt_sanxing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_ttt_sanxing* New() const final {
    return CreateMaybeMessage<smsg_ttt_sanxing>(NULL);
  }

  smsg_ttt_sanxing* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_ttt_sanxing>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_ttt_sanxing& from);
  void MergeFrom(const smsg_ttt_sanxing& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_ttt_sanxing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.smsg_ttt_fight_end subs = 1;
  int subs_size() const;
  void clear_subs();
  static const int kSubsFieldNumber = 1;
  ::protocol::game::smsg_ttt_fight_end* mutable_subs(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_ttt_fight_end >*
      mutable_subs();
  const ::protocol::game::smsg_ttt_fight_end& subs(int index) const;
  ::protocol::game::smsg_ttt_fight_end* add_subs();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_ttt_fight_end >&
      subs() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_ttt_sanxing)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_ttt_fight_end > subs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_ttt_value_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_ttt_value_look) */ {
 public:
  smsg_ttt_value_look();
  virtual ~smsg_ttt_value_look();

  smsg_ttt_value_look(const smsg_ttt_value_look& from);

  inline smsg_ttt_value_look& operator=(const smsg_ttt_value_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_ttt_value_look(smsg_ttt_value_look&& from) noexcept
    : smsg_ttt_value_look() {
    *this = ::std::move(from);
  }

  inline smsg_ttt_value_look& operator=(smsg_ttt_value_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_ttt_value_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_ttt_value_look* internal_default_instance() {
    return reinterpret_cast<const smsg_ttt_value_look*>(
               &_smsg_ttt_value_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    130;

  void Swap(smsg_ttt_value_look* other);
  friend void swap(smsg_ttt_value_look& a, smsg_ttt_value_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_ttt_value_look* New() const final {
    return CreateMaybeMessage<smsg_ttt_value_look>(NULL);
  }

  smsg_ttt_value_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_ttt_value_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_ttt_value_look& from);
  void MergeFrom(const smsg_ttt_value_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_ttt_value_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ids = 1;
  int ids_size() const;
  void clear_ids();
  static const int kIdsFieldNumber = 1;
  ::google::protobuf::int32 ids(int index) const;
  void set_ids(int index, ::google::protobuf::int32 value);
  void add_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ids();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_ttt_value_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ids_;
  mutable int _ids_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_ttt_value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_ttt_value) */ {
 public:
  cmsg_ttt_value();
  virtual ~cmsg_ttt_value();

  cmsg_ttt_value(const cmsg_ttt_value& from);

  inline cmsg_ttt_value& operator=(const cmsg_ttt_value& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_ttt_value(cmsg_ttt_value&& from) noexcept
    : cmsg_ttt_value() {
    *this = ::std::move(from);
  }

  inline cmsg_ttt_value& operator=(cmsg_ttt_value&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_ttt_value& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_ttt_value* internal_default_instance() {
    return reinterpret_cast<const cmsg_ttt_value*>(
               &_cmsg_ttt_value_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    131;

  void Swap(cmsg_ttt_value* other);
  friend void swap(cmsg_ttt_value& a, cmsg_ttt_value& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_ttt_value* New() const final {
    return CreateMaybeMessage<cmsg_ttt_value>(NULL);
  }

  cmsg_ttt_value* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_ttt_value>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_ttt_value& from);
  void MergeFrom(const cmsg_ttt_value& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_ttt_value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_ttt_value)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_qiyu_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_qiyu_fight_end) */ {
 public:
  cmsg_qiyu_fight_end();
  virtual ~cmsg_qiyu_fight_end();

  cmsg_qiyu_fight_end(const cmsg_qiyu_fight_end& from);

  inline cmsg_qiyu_fight_end& operator=(const cmsg_qiyu_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_qiyu_fight_end(cmsg_qiyu_fight_end&& from) noexcept
    : cmsg_qiyu_fight_end() {
    *this = ::std::move(from);
  }

  inline cmsg_qiyu_fight_end& operator=(cmsg_qiyu_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_qiyu_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_qiyu_fight_end* internal_default_instance() {
    return reinterpret_cast<const cmsg_qiyu_fight_end*>(
               &_cmsg_qiyu_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    132;

  void Swap(cmsg_qiyu_fight_end* other);
  friend void swap(cmsg_qiyu_fight_end& a, cmsg_qiyu_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_qiyu_fight_end* New() const final {
    return CreateMaybeMessage<cmsg_qiyu_fight_end>(NULL);
  }

  cmsg_qiyu_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_qiyu_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_qiyu_fight_end& from);
  void MergeFrom(const cmsg_qiyu_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_qiyu_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_qiyu_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_qiyu_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_qiyu_fight_end) */ {
 public:
  smsg_qiyu_fight_end();
  virtual ~smsg_qiyu_fight_end();

  smsg_qiyu_fight_end(const smsg_qiyu_fight_end& from);

  inline smsg_qiyu_fight_end& operator=(const smsg_qiyu_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_qiyu_fight_end(smsg_qiyu_fight_end&& from) noexcept
    : smsg_qiyu_fight_end() {
    *this = ::std::move(from);
  }

  inline smsg_qiyu_fight_end& operator=(smsg_qiyu_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_qiyu_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_qiyu_fight_end* internal_default_instance() {
    return reinterpret_cast<const smsg_qiyu_fight_end*>(
               &_smsg_qiyu_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    133;

  void Swap(smsg_qiyu_fight_end* other);
  friend void swap(smsg_qiyu_fight_end& a, smsg_qiyu_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_qiyu_fight_end* New() const final {
    return CreateMaybeMessage<smsg_qiyu_fight_end>(NULL);
  }

  smsg_qiyu_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_qiyu_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_qiyu_fight_end& from);
  void MergeFrom(const smsg_qiyu_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_qiyu_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 3;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 3;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 4;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 4;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 5;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 5;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 6;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 6;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.equip_t equips = 7;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 7;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 8;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 8;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 9;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 9;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_qiyu_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_qiyu_check : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_qiyu_check) */ {
 public:
  smsg_qiyu_check();
  virtual ~smsg_qiyu_check();

  smsg_qiyu_check(const smsg_qiyu_check& from);

  inline smsg_qiyu_check& operator=(const smsg_qiyu_check& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_qiyu_check(smsg_qiyu_check&& from) noexcept
    : smsg_qiyu_check() {
    *this = ::std::move(from);
  }

  inline smsg_qiyu_check& operator=(smsg_qiyu_check&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_qiyu_check& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_qiyu_check* internal_default_instance() {
    return reinterpret_cast<const smsg_qiyu_check*>(
               &_smsg_qiyu_check_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    134;

  void Swap(smsg_qiyu_check* other);
  friend void swap(smsg_qiyu_check& a, smsg_qiyu_check& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_qiyu_check* New() const final {
    return CreateMaybeMessage<smsg_qiyu_check>(NULL);
  }

  smsg_qiyu_check* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_qiyu_check>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_qiyu_check& from);
  void MergeFrom(const smsg_qiyu_check& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_qiyu_check* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 qiyu_mission = 1;
  int qiyu_mission_size() const;
  void clear_qiyu_mission();
  static const int kQiyuMissionFieldNumber = 1;
  ::google::protobuf::int32 qiyu_mission(int index) const;
  void set_qiyu_mission(int index, ::google::protobuf::int32 value);
  void add_qiyu_mission(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      qiyu_mission() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_qiyu_mission();

  // repeated int32 qiyu_hard = 2;
  int qiyu_hard_size() const;
  void clear_qiyu_hard();
  static const int kQiyuHardFieldNumber = 2;
  ::google::protobuf::int32 qiyu_hard(int index) const;
  void set_qiyu_hard(int index, ::google::protobuf::int32 value);
  void add_qiyu_hard(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      qiyu_hard() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_qiyu_hard();

  // repeated int32 qiyu_suc = 3;
  int qiyu_suc_size() const;
  void clear_qiyu_suc();
  static const int kQiyuSucFieldNumber = 3;
  ::google::protobuf::int32 qiyu_suc(int index) const;
  void set_qiyu_suc(int index, ::google::protobuf::int32 value);
  void add_qiyu_suc(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      qiyu_suc() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_qiyu_suc();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_qiyu_check)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > qiyu_mission_;
  mutable int _qiyu_mission_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > qiyu_hard_;
  mutable int _qiyu_hard_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > qiyu_suc_;
  mutable int _qiyu_suc_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_player_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_player_look) */ {
 public:
  cmsg_player_look();
  virtual ~cmsg_player_look();

  cmsg_player_look(const cmsg_player_look& from);

  inline cmsg_player_look& operator=(const cmsg_player_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_player_look(cmsg_player_look&& from) noexcept
    : cmsg_player_look() {
    *this = ::std::move(from);
  }

  inline cmsg_player_look& operator=(cmsg_player_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_player_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_player_look* internal_default_instance() {
    return reinterpret_cast<const cmsg_player_look*>(
               &_cmsg_player_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    135;

  void Swap(cmsg_player_look* other);
  friend void swap(cmsg_player_look& a, cmsg_player_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_player_look* New() const final {
    return CreateMaybeMessage<cmsg_player_look>(NULL);
  }

  cmsg_player_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_player_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_player_look& from);
  void MergeFrom(const cmsg_player_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_player_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 target_guid = 2;
  void clear_target_guid();
  static const int kTargetGuidFieldNumber = 2;
  ::google::protobuf::uint64 target_guid() const;
  void set_target_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_player_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 target_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_player_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_player_look) */ {
 public:
  smsg_player_look();
  virtual ~smsg_player_look();

  smsg_player_look(const smsg_player_look& from);

  inline smsg_player_look& operator=(const smsg_player_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_player_look(smsg_player_look&& from) noexcept
    : smsg_player_look() {
    *this = ::std::move(from);
  }

  inline smsg_player_look& operator=(smsg_player_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_player_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_player_look* internal_default_instance() {
    return reinterpret_cast<const smsg_player_look*>(
               &_smsg_player_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    136;

  void Swap(smsg_player_look* other);
  friend void swap(smsg_player_look& a, smsg_player_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_player_look* New() const final {
    return CreateMaybeMessage<smsg_player_look>(NULL);
  }

  smsg_player_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_player_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_player_look& from);
  void MergeFrom(const smsg_player_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_player_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.role_t roles = 6;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 6;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // repeated int32 roles_sx = 7;
  int roles_sx_size() const;
  void clear_roles_sx();
  static const int kRolesSxFieldNumber = 7;
  ::google::protobuf::int32 roles_sx(int index) const;
  void set_roles_sx(int index, ::google::protobuf::int32 value);
  void add_roles_sx(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roles_sx() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roles_sx();

  // repeated .dhc.equip_t equips = 8;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 8;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 9;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 9;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.pet_t pets = 10;
  int pets_size() const;
  void clear_pets();
  static const int kPetsFieldNumber = 10;
  ::dhc::pet_t* mutable_pets(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >*
      mutable_pets();
  const ::dhc::pet_t& pets(int index) const;
  ::dhc::pet_t* add_pets();
  const ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >&
      pets() const;

  // repeated int32 pets_sx = 11;
  int pets_sx_size() const;
  void clear_pets_sx();
  static const int kPetsSxFieldNumber = 11;
  ::google::protobuf::int32 pets_sx(int index) const;
  void set_pets_sx(int index, ::google::protobuf::int32 value);
  void add_pets_sx(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pets_sx() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pets_sx();

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string guild = 12;
  void clear_guild();
  static const int kGuildFieldNumber = 12;
  const ::std::string& guild() const;
  void set_guild(const ::std::string& value);
  #if LANG_CXX11
  void set_guild(::std::string&& value);
  #endif
  void set_guild(const char* value);
  void set_guild(const char* value, size_t size);
  ::std::string* mutable_guild();
  ::std::string* release_guild();
  void set_allocated_guild(::std::string* guild);

  // string serverid = 16;
  void clear_serverid();
  static const int kServeridFieldNumber = 16;
  const ::std::string& serverid() const;
  void set_serverid(const ::std::string& value);
  #if LANG_CXX11
  void set_serverid(::std::string&& value);
  #endif
  void set_serverid(const char* value);
  void set_serverid(const char* value, size_t size);
  ::std::string* mutable_serverid();
  ::std::string* release_serverid();
  void set_allocated_serverid(::std::string* serverid);

  // uint32 template_id = 1;
  void clear_template_id();
  static const int kTemplateIdFieldNumber = 1;
  ::google::protobuf::uint32 template_id() const;
  void set_template_id(::google::protobuf::uint32 value);

  // int32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // int32 bf = 4;
  void clear_bf();
  static const int kBfFieldNumber = 4;
  ::google::protobuf::int32 bf() const;
  void set_bf(::google::protobuf::int32 value);

  // int32 vip = 5;
  void clear_vip();
  static const int kVipFieldNumber = 5;
  ::google::protobuf::int32 vip() const;
  void set_vip(::google::protobuf::int32 value);

  // int32 achieves = 13;
  void clear_achieves();
  static const int kAchievesFieldNumber = 13;
  ::google::protobuf::int32 achieves() const;
  void set_achieves(::google::protobuf::int32 value);

  // int32 chenghao = 14;
  void clear_chenghao();
  static const int kChenghaoFieldNumber = 14;
  ::google::protobuf::int32 chenghao() const;
  void set_chenghao(::google::protobuf::int32 value);

  // uint64 guid = 15;
  void clear_guid();
  static const int kGuidFieldNumber = 15;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // int32 nalflag = 17;
  void clear_nalflag();
  static const int kNalflagFieldNumber = 17;
  ::google::protobuf::int32 nalflag() const;
  void set_nalflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_player_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roles_sx_;
  mutable int _roles_sx_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::pet_t > pets_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pets_sx_;
  mutable int _pets_sx_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr guild_;
  ::google::protobuf::internal::ArenaStringPtr serverid_;
  ::google::protobuf::uint32 template_id_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 bf_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 achieves_;
  ::google::protobuf::int32 chenghao_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 nalflag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_random_event_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_random_event_look) */ {
 public:
  smsg_random_event_look();
  virtual ~smsg_random_event_look();

  smsg_random_event_look(const smsg_random_event_look& from);

  inline smsg_random_event_look& operator=(const smsg_random_event_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_random_event_look(smsg_random_event_look&& from) noexcept
    : smsg_random_event_look() {
    *this = ::std::move(from);
  }

  inline smsg_random_event_look& operator=(smsg_random_event_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_random_event_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_random_event_look* internal_default_instance() {
    return reinterpret_cast<const smsg_random_event_look*>(
               &_smsg_random_event_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    137;

  void Swap(smsg_random_event_look* other);
  friend void swap(smsg_random_event_look& a, smsg_random_event_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_random_event_look* New() const final {
    return CreateMaybeMessage<smsg_random_event_look>(NULL);
  }

  smsg_random_event_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_random_event_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_random_event_look& from);
  void MergeFrom(const smsg_random_event_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_random_event_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_random_event_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_random_event_get : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_random_event_get) */ {
 public:
  cmsg_random_event_get();
  virtual ~cmsg_random_event_get();

  cmsg_random_event_get(const cmsg_random_event_get& from);

  inline cmsg_random_event_get& operator=(const cmsg_random_event_get& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_random_event_get(cmsg_random_event_get&& from) noexcept
    : cmsg_random_event_get() {
    *this = ::std::move(from);
  }

  inline cmsg_random_event_get& operator=(cmsg_random_event_get&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_random_event_get& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_random_event_get* internal_default_instance() {
    return reinterpret_cast<const cmsg_random_event_get*>(
               &_cmsg_random_event_get_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    138;

  void Swap(cmsg_random_event_get* other);
  friend void swap(cmsg_random_event_get& a, cmsg_random_event_get& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_random_event_get* New() const final {
    return CreateMaybeMessage<cmsg_random_event_get>(NULL);
  }

  cmsg_random_event_get* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_random_event_get>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_random_event_get& from);
  void MergeFrom(const cmsg_random_event_get& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_random_event_get* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_random_event_get)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_random_event_get : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_random_event_get) */ {
 public:
  smsg_random_event_get();
  virtual ~smsg_random_event_get();

  smsg_random_event_get(const smsg_random_event_get& from);

  inline smsg_random_event_get& operator=(const smsg_random_event_get& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_random_event_get(smsg_random_event_get&& from) noexcept
    : smsg_random_event_get() {
    *this = ::std::move(from);
  }

  inline smsg_random_event_get& operator=(smsg_random_event_get&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_random_event_get& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_random_event_get* internal_default_instance() {
    return reinterpret_cast<const smsg_random_event_get*>(
               &_smsg_random_event_get_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    139;

  void Swap(smsg_random_event_get* other);
  friend void swap(smsg_random_event_get& a, smsg_random_event_get& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_random_event_get* New() const final {
    return CreateMaybeMessage<smsg_random_event_get>(NULL);
  }

  smsg_random_event_get* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_random_event_get>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_random_event_get& from);
  void MergeFrom(const smsg_random_event_get& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_random_event_get* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 random_event_time = 1;
  void clear_random_event_time();
  static const int kRandomEventTimeFieldNumber = 1;
  ::google::protobuf::uint64 random_event_time() const;
  void set_random_event_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_random_event_get)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 random_event_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_gundong : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_gundong) */ {
 public:
  smsg_gundong();
  virtual ~smsg_gundong();

  smsg_gundong(const smsg_gundong& from);

  inline smsg_gundong& operator=(const smsg_gundong& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_gundong(smsg_gundong&& from) noexcept
    : smsg_gundong() {
    *this = ::std::move(from);
  }

  inline smsg_gundong& operator=(smsg_gundong&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_gundong& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_gundong* internal_default_instance() {
    return reinterpret_cast<const smsg_gundong*>(
               &_smsg_gundong_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    140;

  void Swap(smsg_gundong* other);
  friend void swap(smsg_gundong& a, smsg_gundong& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_gundong* New() const final {
    return CreateMaybeMessage<smsg_gundong>(NULL);
  }

  smsg_gundong* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_gundong>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_gundong& from);
  void MergeFrom(const smsg_gundong& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_gundong* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 1;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_gundong)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_gundong_server : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_gundong_server) */ {
 public:
  smsg_gundong_server();
  virtual ~smsg_gundong_server();

  smsg_gundong_server(const smsg_gundong_server& from);

  inline smsg_gundong_server& operator=(const smsg_gundong_server& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_gundong_server(smsg_gundong_server&& from) noexcept
    : smsg_gundong_server() {
    *this = ::std::move(from);
  }

  inline smsg_gundong_server& operator=(smsg_gundong_server&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_gundong_server& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_gundong_server* internal_default_instance() {
    return reinterpret_cast<const smsg_gundong_server*>(
               &_smsg_gundong_server_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    141;

  void Swap(smsg_gundong_server* other);
  friend void swap(smsg_gundong_server& a, smsg_gundong_server& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_gundong_server* New() const final {
    return CreateMaybeMessage<smsg_gundong_server>(NULL);
  }

  smsg_gundong_server* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_gundong_server>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_gundong_server& from);
  void MergeFrom(const smsg_gundong_server& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_gundong_server* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string gundong_Pars = 2;
  int gundong_pars_size() const;
  void clear_gundong_pars();
  static const int kGundongParsFieldNumber = 2;
  const ::std::string& gundong_pars(int index) const;
  ::std::string* mutable_gundong_pars(int index);
  void set_gundong_pars(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_gundong_pars(int index, ::std::string&& value);
  #endif
  void set_gundong_pars(int index, const char* value);
  void set_gundong_pars(int index, const char* value, size_t size);
  ::std::string* add_gundong_pars();
  void add_gundong_pars(const ::std::string& value);
  #if LANG_CXX11
  void add_gundong_pars(::std::string&& value);
  #endif
  void add_gundong_pars(const char* value);
  void add_gundong_pars(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& gundong_pars() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_gundong_pars();

  // string text = 1;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_gundong_server)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> gundong_pars_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_mission_goumai : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_mission_goumai) */ {
 public:
  cmsg_mission_goumai();
  virtual ~cmsg_mission_goumai();

  cmsg_mission_goumai(const cmsg_mission_goumai& from);

  inline cmsg_mission_goumai& operator=(const cmsg_mission_goumai& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_mission_goumai(cmsg_mission_goumai&& from) noexcept
    : cmsg_mission_goumai() {
    *this = ::std::move(from);
  }

  inline cmsg_mission_goumai& operator=(cmsg_mission_goumai&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_mission_goumai& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_mission_goumai* internal_default_instance() {
    return reinterpret_cast<const cmsg_mission_goumai*>(
               &_cmsg_mission_goumai_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    142;

  void Swap(cmsg_mission_goumai* other);
  friend void swap(cmsg_mission_goumai& a, cmsg_mission_goumai& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_mission_goumai* New() const final {
    return CreateMaybeMessage<cmsg_mission_goumai>(NULL);
  }

  cmsg_mission_goumai* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_mission_goumai>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_mission_goumai& from);
  void MergeFrom(const cmsg_mission_goumai& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_mission_goumai* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 mission_id = 2;
  void clear_mission_id();
  static const int kMissionIdFieldNumber = 2;
  ::google::protobuf::int32 mission_id() const;
  void set_mission_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_mission_goumai)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 mission_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_create : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_create) */ {
 public:
  cmsg_guild_create();
  virtual ~cmsg_guild_create();

  cmsg_guild_create(const cmsg_guild_create& from);

  inline cmsg_guild_create& operator=(const cmsg_guild_create& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_create(cmsg_guild_create&& from) noexcept
    : cmsg_guild_create() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_create& operator=(cmsg_guild_create&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_create& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_create* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_create*>(
               &_cmsg_guild_create_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    143;

  void Swap(cmsg_guild_create* other);
  friend void swap(cmsg_guild_create& a, cmsg_guild_create& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_create* New() const final {
    return CreateMaybeMessage<cmsg_guild_create>(NULL);
  }

  cmsg_guild_create* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_create>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_create& from);
  void MergeFrom(const cmsg_guild_create& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_create* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string guild_name = 2;
  void clear_guild_name();
  static const int kGuildNameFieldNumber = 2;
  const ::std::string& guild_name() const;
  void set_guild_name(const ::std::string& value);
  #if LANG_CXX11
  void set_guild_name(::std::string&& value);
  #endif
  void set_guild_name(const char* value);
  void set_guild_name(const char* value, size_t size);
  ::std::string* mutable_guild_name();
  ::std::string* release_guild_name();
  void set_allocated_guild_name(::std::string* guild_name);

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_create)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr guild_name_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_apply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_apply) */ {
 public:
  cmsg_guild_apply();
  virtual ~cmsg_guild_apply();

  cmsg_guild_apply(const cmsg_guild_apply& from);

  inline cmsg_guild_apply& operator=(const cmsg_guild_apply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_apply(cmsg_guild_apply&& from) noexcept
    : cmsg_guild_apply() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_apply& operator=(cmsg_guild_apply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_apply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_apply* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_apply*>(
               &_cmsg_guild_apply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    144;

  void Swap(cmsg_guild_apply* other);
  friend void swap(cmsg_guild_apply& a, cmsg_guild_apply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_apply* New() const final {
    return CreateMaybeMessage<cmsg_guild_apply>(NULL);
  }

  cmsg_guild_apply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_apply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_apply& from);
  void MergeFrom(const cmsg_guild_apply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_apply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 guild_guid = 2;
  void clear_guild_guid();
  static const int kGuildGuidFieldNumber = 2;
  ::google::protobuf::uint64 guild_guid() const;
  void set_guild_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_apply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 guild_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_agree : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_agree) */ {
 public:
  cmsg_guild_agree();
  virtual ~cmsg_guild_agree();

  cmsg_guild_agree(const cmsg_guild_agree& from);

  inline cmsg_guild_agree& operator=(const cmsg_guild_agree& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_agree(cmsg_guild_agree&& from) noexcept
    : cmsg_guild_agree() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_agree& operator=(cmsg_guild_agree&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_agree& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_agree* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_agree*>(
               &_cmsg_guild_agree_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    145;

  void Swap(cmsg_guild_agree* other);
  friend void swap(cmsg_guild_agree& a, cmsg_guild_agree& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_agree* New() const final {
    return CreateMaybeMessage<cmsg_guild_agree>(NULL);
  }

  cmsg_guild_agree* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_agree>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_agree& from);
  void MergeFrom(const cmsg_guild_agree& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_agree* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 player_guid = 2;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 2;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // bool argree = 3;
  void clear_argree();
  static const int kArgreeFieldNumber = 3;
  bool argree() const;
  void set_argree(bool value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_agree)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 player_guid_;
  bool argree_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_join : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_join) */ {
 public:
  cmsg_guild_join();
  virtual ~cmsg_guild_join();

  cmsg_guild_join(const cmsg_guild_join& from);

  inline cmsg_guild_join& operator=(const cmsg_guild_join& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_join(cmsg_guild_join&& from) noexcept
    : cmsg_guild_join() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_join& operator=(cmsg_guild_join&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_join& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_join* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_join*>(
               &_cmsg_guild_join_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    146;

  void Swap(cmsg_guild_join* other);
  friend void swap(cmsg_guild_join& a, cmsg_guild_join& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_join* New() const final {
    return CreateMaybeMessage<cmsg_guild_join>(NULL);
  }

  cmsg_guild_join* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_join>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_join& from);
  void MergeFrom(const cmsg_guild_join& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_join* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 guild_guid = 2;
  void clear_guild_guid();
  static const int kGuildGuidFieldNumber = 2;
  ::google::protobuf::uint64 guild_guid() const;
  void set_guild_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_join)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 guild_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_data) */ {
 public:
  smsg_guild_data();
  virtual ~smsg_guild_data();

  smsg_guild_data(const smsg_guild_data& from);

  inline smsg_guild_data& operator=(const smsg_guild_data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_data(smsg_guild_data&& from) noexcept
    : smsg_guild_data() {
    *this = ::std::move(from);
  }

  inline smsg_guild_data& operator=(smsg_guild_data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_data* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_data*>(
               &_smsg_guild_data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    147;

  void Swap(smsg_guild_data* other);
  friend void swap(smsg_guild_data& a, smsg_guild_data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_data* New() const final {
    return CreateMaybeMessage<smsg_guild_data>(NULL);
  }

  smsg_guild_data* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_data>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_data& from);
  void MergeFrom(const smsg_guild_data& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.guild_event_t guild_event = 3;
  int guild_event_size() const;
  void clear_guild_event();
  static const int kGuildEventFieldNumber = 3;
  ::dhc::guild_event_t* mutable_guild_event(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::guild_event_t >*
      mutable_guild_event();
  const ::dhc::guild_event_t& guild_event(int index) const;
  ::dhc::guild_event_t* add_guild_event();
  const ::google::protobuf::RepeatedPtrField< ::dhc::guild_event_t >&
      guild_event() const;

  // .dhc.guild_t guild = 1;
  bool has_guild() const;
  void clear_guild();
  static const int kGuildFieldNumber = 1;
  private:
  const ::dhc::guild_t& _internal_guild() const;
  public:
  const ::dhc::guild_t& guild() const;
  ::dhc::guild_t* release_guild();
  ::dhc::guild_t* mutable_guild();
  void set_allocated_guild(::dhc::guild_t* guild);

  // int32 zhiwu = 2;
  void clear_zhiwu();
  static const int kZhiwuFieldNumber = 2;
  ::google::protobuf::int32 zhiwu() const;
  void set_zhiwu(::google::protobuf::int32 value);

  // int32 success = 4;
  void clear_success();
  static const int kSuccessFieldNumber = 4;
  ::google::protobuf::int32 success() const;
  void set_success(::google::protobuf::int32 value);

  // int32 msg_count = 7;
  void clear_msg_count();
  static const int kMsgCountFieldNumber = 7;
  ::google::protobuf::int32 msg_count() const;
  void set_msg_count(::google::protobuf::int32 value);

  // bool can_mobai = 5;
  void clear_can_mobai();
  static const int kCanMobaiFieldNumber = 5;
  bool can_mobai() const;
  void set_can_mobai(bool value);

  // bool can_fight = 6;
  void clear_can_fight();
  static const int kCanFightFieldNumber = 6;
  bool can_fight() const;
  void set_can_fight(bool value);

  // bool has_apply = 8;
  void clear_has_apply();
  static const int kHasApplyFieldNumber = 8;
  bool has_apply() const;
  void set_has_apply(bool value);

  // bool has_hongbao = 9;
  void clear_has_hongbao();
  static const int kHasHongbaoFieldNumber = 9;
  bool has_hongbao() const;
  void set_has_hongbao(bool value);

  // bool guildpvp = 10;
  void clear_guildpvp();
  static const int kGuildpvpFieldNumber = 10;
  bool guildpvp() const;
  void set_guildpvp(bool value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::guild_event_t > guild_event_;
  ::dhc::guild_t* guild_;
  ::google::protobuf::int32 zhiwu_;
  ::google::protobuf::int32 success_;
  ::google::protobuf::int32 msg_count_;
  bool can_mobai_;
  bool can_fight_;
  bool has_apply_;
  bool has_hongbao_;
  bool guildpvp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_list_recommend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_list_recommend) */ {
 public:
  smsg_guild_list_recommend();
  virtual ~smsg_guild_list_recommend();

  smsg_guild_list_recommend(const smsg_guild_list_recommend& from);

  inline smsg_guild_list_recommend& operator=(const smsg_guild_list_recommend& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_list_recommend(smsg_guild_list_recommend&& from) noexcept
    : smsg_guild_list_recommend() {
    *this = ::std::move(from);
  }

  inline smsg_guild_list_recommend& operator=(smsg_guild_list_recommend&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_list_recommend& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_list_recommend* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_list_recommend*>(
               &_smsg_guild_list_recommend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    148;

  void Swap(smsg_guild_list_recommend* other);
  friend void swap(smsg_guild_list_recommend& a, smsg_guild_list_recommend& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_list_recommend* New() const final {
    return CreateMaybeMessage<smsg_guild_list_recommend>(NULL);
  }

  smsg_guild_list_recommend* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_list_recommend>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_list_recommend& from);
  void MergeFrom(const smsg_guild_list_recommend& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_list_recommend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 guild_guids = 1;
  int guild_guids_size() const;
  void clear_guild_guids();
  static const int kGuildGuidsFieldNumber = 1;
  ::google::protobuf::uint64 guild_guids(int index) const;
  void set_guild_guids(int index, ::google::protobuf::uint64 value);
  void add_guild_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guild_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guild_guids();

  // repeated string guild_names = 2;
  int guild_names_size() const;
  void clear_guild_names();
  static const int kGuildNamesFieldNumber = 2;
  const ::std::string& guild_names(int index) const;
  ::std::string* mutable_guild_names(int index);
  void set_guild_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_guild_names(int index, ::std::string&& value);
  #endif
  void set_guild_names(int index, const char* value);
  void set_guild_names(int index, const char* value, size_t size);
  ::std::string* add_guild_names();
  void add_guild_names(const ::std::string& value);
  #if LANG_CXX11
  void add_guild_names(::std::string&& value);
  #endif
  void add_guild_names(const char* value);
  void add_guild_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& guild_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_guild_names();

  // repeated int32 guild_levels = 3;
  int guild_levels_size() const;
  void clear_guild_levels();
  static const int kGuildLevelsFieldNumber = 3;
  ::google::protobuf::int32 guild_levels(int index) const;
  void set_guild_levels(int index, ::google::protobuf::int32 value);
  void add_guild_levels(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guild_levels() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guild_levels();

  // repeated int32 guild_members = 4;
  int guild_members_size() const;
  void clear_guild_members();
  static const int kGuildMembersFieldNumber = 4;
  ::google::protobuf::int32 guild_members(int index) const;
  void set_guild_members(int index, ::google::protobuf::int32 value);
  void add_guild_members(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guild_members() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guild_members();

  // repeated int32 guild_icons = 5;
  int guild_icons_size() const;
  void clear_guild_icons();
  static const int kGuildIconsFieldNumber = 5;
  ::google::protobuf::int32 guild_icons(int index) const;
  void set_guild_icons(int index, ::google::protobuf::int32 value);
  void add_guild_icons(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guild_icons() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guild_icons();

  // repeated uint64 apply_list = 6;
  int apply_list_size() const;
  void clear_apply_list();
  static const int kApplyListFieldNumber = 6;
  ::google::protobuf::uint64 apply_list(int index) const;
  void set_apply_list(int index, ::google::protobuf::uint64 value);
  void add_apply_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      apply_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_apply_list();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_list_recommend)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guild_guids_;
  mutable int _guild_guids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> guild_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guild_levels_;
  mutable int _guild_levels_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guild_members_;
  mutable int _guild_members_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guild_icons_;
  mutable int _guild_icons_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > apply_list_;
  mutable int _apply_list_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_query : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_query) */ {
 public:
  cmsg_guild_query();
  virtual ~cmsg_guild_query();

  cmsg_guild_query(const cmsg_guild_query& from);

  inline cmsg_guild_query& operator=(const cmsg_guild_query& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_query(cmsg_guild_query&& from) noexcept
    : cmsg_guild_query() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_query& operator=(cmsg_guild_query&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_query& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_query* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_query*>(
               &_cmsg_guild_query_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    149;

  void Swap(cmsg_guild_query* other);
  friend void swap(cmsg_guild_query& a, cmsg_guild_query& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_query* New() const final {
    return CreateMaybeMessage<cmsg_guild_query>(NULL);
  }

  cmsg_guild_query* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_query>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_query& from);
  void MergeFrom(const cmsg_guild_query& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_query* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string guild_name = 2;
  void clear_guild_name();
  static const int kGuildNameFieldNumber = 2;
  const ::std::string& guild_name() const;
  void set_guild_name(const ::std::string& value);
  #if LANG_CXX11
  void set_guild_name(::std::string&& value);
  #endif
  void set_guild_name(const char* value);
  void set_guild_name(const char* value, size_t size);
  ::std::string* mutable_guild_name();
  ::std::string* release_guild_name();
  void set_allocated_guild_name(::std::string* guild_name);

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_query)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr guild_name_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_modify_bulletin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_modify_bulletin) */ {
 public:
  cmsg_guild_modify_bulletin();
  virtual ~cmsg_guild_modify_bulletin();

  cmsg_guild_modify_bulletin(const cmsg_guild_modify_bulletin& from);

  inline cmsg_guild_modify_bulletin& operator=(const cmsg_guild_modify_bulletin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_modify_bulletin(cmsg_guild_modify_bulletin&& from) noexcept
    : cmsg_guild_modify_bulletin() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_modify_bulletin& operator=(cmsg_guild_modify_bulletin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_modify_bulletin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_modify_bulletin* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_modify_bulletin*>(
               &_cmsg_guild_modify_bulletin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    150;

  void Swap(cmsg_guild_modify_bulletin* other);
  friend void swap(cmsg_guild_modify_bulletin& a, cmsg_guild_modify_bulletin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_modify_bulletin* New() const final {
    return CreateMaybeMessage<cmsg_guild_modify_bulletin>(NULL);
  }

  cmsg_guild_modify_bulletin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_modify_bulletin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_modify_bulletin& from);
  void MergeFrom(const cmsg_guild_modify_bulletin& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_modify_bulletin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string bulletin = 2;
  void clear_bulletin();
  static const int kBulletinFieldNumber = 2;
  const ::std::string& bulletin() const;
  void set_bulletin(const ::std::string& value);
  #if LANG_CXX11
  void set_bulletin(::std::string&& value);
  #endif
  void set_bulletin(const char* value);
  void set_bulletin(const char* value, size_t size);
  ::std::string* mutable_bulletin();
  ::std::string* release_bulletin();
  void set_allocated_bulletin(::std::string* bulletin);

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_modify_bulletin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bulletin_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_modify_icon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_modify_icon) */ {
 public:
  cmsg_guild_modify_icon();
  virtual ~cmsg_guild_modify_icon();

  cmsg_guild_modify_icon(const cmsg_guild_modify_icon& from);

  inline cmsg_guild_modify_icon& operator=(const cmsg_guild_modify_icon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_modify_icon(cmsg_guild_modify_icon&& from) noexcept
    : cmsg_guild_modify_icon() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_modify_icon& operator=(cmsg_guild_modify_icon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_modify_icon& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_modify_icon* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_modify_icon*>(
               &_cmsg_guild_modify_icon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    151;

  void Swap(cmsg_guild_modify_icon* other);
  friend void swap(cmsg_guild_modify_icon& a, cmsg_guild_modify_icon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_modify_icon* New() const final {
    return CreateMaybeMessage<cmsg_guild_modify_icon>(NULL);
  }

  cmsg_guild_modify_icon* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_modify_icon>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_modify_icon& from);
  void MergeFrom(const cmsg_guild_modify_icon& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_modify_icon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 icon = 2;
  void clear_icon();
  static const int kIconFieldNumber = 2;
  ::google::protobuf::int32 icon() const;
  void set_icon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_modify_icon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 icon_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_change_member_duty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_change_member_duty) */ {
 public:
  cmsg_guild_change_member_duty();
  virtual ~cmsg_guild_change_member_duty();

  cmsg_guild_change_member_duty(const cmsg_guild_change_member_duty& from);

  inline cmsg_guild_change_member_duty& operator=(const cmsg_guild_change_member_duty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_change_member_duty(cmsg_guild_change_member_duty&& from) noexcept
    : cmsg_guild_change_member_duty() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_change_member_duty& operator=(cmsg_guild_change_member_duty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_change_member_duty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_change_member_duty* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_change_member_duty*>(
               &_cmsg_guild_change_member_duty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    152;

  void Swap(cmsg_guild_change_member_duty* other);
  friend void swap(cmsg_guild_change_member_duty& a, cmsg_guild_change_member_duty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_change_member_duty* New() const final {
    return CreateMaybeMessage<cmsg_guild_change_member_duty>(NULL);
  }

  cmsg_guild_change_member_duty* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_change_member_duty>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_change_member_duty& from);
  void MergeFrom(const cmsg_guild_change_member_duty& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_change_member_duty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 member_guid = 2;
  void clear_member_guid();
  static const int kMemberGuidFieldNumber = 2;
  ::google::protobuf::uint64 member_guid() const;
  void set_member_guid(::google::protobuf::uint64 value);

  // int32 new_duty = 3;
  void clear_new_duty();
  static const int kNewDutyFieldNumber = 3;
  ::google::protobuf::int32 new_duty() const;
  void set_new_duty(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_change_member_duty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 member_guid_;
  ::google::protobuf::int32 new_duty_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_kick_member : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_kick_member) */ {
 public:
  cmsg_guild_kick_member();
  virtual ~cmsg_guild_kick_member();

  cmsg_guild_kick_member(const cmsg_guild_kick_member& from);

  inline cmsg_guild_kick_member& operator=(const cmsg_guild_kick_member& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_kick_member(cmsg_guild_kick_member&& from) noexcept
    : cmsg_guild_kick_member() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_kick_member& operator=(cmsg_guild_kick_member&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_kick_member& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_kick_member* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_kick_member*>(
               &_cmsg_guild_kick_member_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    153;

  void Swap(cmsg_guild_kick_member* other);
  friend void swap(cmsg_guild_kick_member& a, cmsg_guild_kick_member& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_kick_member* New() const final {
    return CreateMaybeMessage<cmsg_guild_kick_member>(NULL);
  }

  cmsg_guild_kick_member* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_kick_member>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_kick_member& from);
  void MergeFrom(const cmsg_guild_kick_member& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_kick_member* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 member_guid = 2;
  void clear_member_guid();
  static const int kMemberGuidFieldNumber = 2;
  ::google::protobuf::uint64 member_guid() const;
  void set_member_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_kick_member)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 member_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_set_join_condition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_set_join_condition) */ {
 public:
  cmsg_guild_set_join_condition();
  virtual ~cmsg_guild_set_join_condition();

  cmsg_guild_set_join_condition(const cmsg_guild_set_join_condition& from);

  inline cmsg_guild_set_join_condition& operator=(const cmsg_guild_set_join_condition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_set_join_condition(cmsg_guild_set_join_condition&& from) noexcept
    : cmsg_guild_set_join_condition() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_set_join_condition& operator=(cmsg_guild_set_join_condition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_set_join_condition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_set_join_condition* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_set_join_condition*>(
               &_cmsg_guild_set_join_condition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    154;

  void Swap(cmsg_guild_set_join_condition* other);
  friend void swap(cmsg_guild_set_join_condition& a, cmsg_guild_set_join_condition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_set_join_condition* New() const final {
    return CreateMaybeMessage<cmsg_guild_set_join_condition>(NULL);
  }

  cmsg_guild_set_join_condition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_set_join_condition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_set_join_condition& from);
  void MergeFrom(const cmsg_guild_set_join_condition& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_set_join_condition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 min_bf = 2;
  void clear_min_bf();
  static const int kMinBfFieldNumber = 2;
  ::google::protobuf::int32 min_bf() const;
  void set_min_bf(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_set_join_condition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 min_bf_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_sign_in : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_sign_in) */ {
 public:
  cmsg_guild_sign_in();
  virtual ~cmsg_guild_sign_in();

  cmsg_guild_sign_in(const cmsg_guild_sign_in& from);

  inline cmsg_guild_sign_in& operator=(const cmsg_guild_sign_in& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_sign_in(cmsg_guild_sign_in&& from) noexcept
    : cmsg_guild_sign_in() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_sign_in& operator=(cmsg_guild_sign_in&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_sign_in& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_sign_in* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_sign_in*>(
               &_cmsg_guild_sign_in_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    155;

  void Swap(cmsg_guild_sign_in* other);
  friend void swap(cmsg_guild_sign_in& a, cmsg_guild_sign_in& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_sign_in* New() const final {
    return CreateMaybeMessage<cmsg_guild_sign_in>(NULL);
  }

  cmsg_guild_sign_in* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_sign_in>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_sign_in& from);
  void MergeFrom(const cmsg_guild_sign_in& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_sign_in* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 sign_in_type = 2;
  void clear_sign_in_type();
  static const int kSignInTypeFieldNumber = 2;
  ::google::protobuf::int32 sign_in_type() const;
  void set_sign_in_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_sign_in)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 sign_in_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_sign_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_sign_reward) */ {
 public:
  cmsg_guild_sign_reward();
  virtual ~cmsg_guild_sign_reward();

  cmsg_guild_sign_reward(const cmsg_guild_sign_reward& from);

  inline cmsg_guild_sign_reward& operator=(const cmsg_guild_sign_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_sign_reward(cmsg_guild_sign_reward&& from) noexcept
    : cmsg_guild_sign_reward() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_sign_reward& operator=(cmsg_guild_sign_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_sign_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_sign_reward* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_sign_reward*>(
               &_cmsg_guild_sign_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    156;

  void Swap(cmsg_guild_sign_reward* other);
  friend void swap(cmsg_guild_sign_reward& a, cmsg_guild_sign_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_sign_reward* New() const final {
    return CreateMaybeMessage<cmsg_guild_sign_reward>(NULL);
  }

  cmsg_guild_sign_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_sign_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_sign_reward& from);
  void MergeFrom(const cmsg_guild_sign_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_sign_reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_sign_reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_message_view : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_message_view) */ {
 public:
  smsg_guild_message_view();
  virtual ~smsg_guild_message_view();

  smsg_guild_message_view(const smsg_guild_message_view& from);

  inline smsg_guild_message_view& operator=(const smsg_guild_message_view& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_message_view(smsg_guild_message_view&& from) noexcept
    : smsg_guild_message_view() {
    *this = ::std::move(from);
  }

  inline smsg_guild_message_view& operator=(smsg_guild_message_view&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_message_view& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_message_view* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_message_view*>(
               &_smsg_guild_message_view_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    157;

  void Swap(smsg_guild_message_view* other);
  friend void swap(smsg_guild_message_view& a, smsg_guild_message_view& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_message_view* New() const final {
    return CreateMaybeMessage<smsg_guild_message_view>(NULL);
  }

  smsg_guild_message_view* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_message_view>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_message_view& from);
  void MergeFrom(const smsg_guild_message_view& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_message_view* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.guild_message_t msgs = 1;
  int msgs_size() const;
  void clear_msgs();
  static const int kMsgsFieldNumber = 1;
  ::dhc::guild_message_t* mutable_msgs(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::guild_message_t >*
      mutable_msgs();
  const ::dhc::guild_message_t& msgs(int index) const;
  ::dhc::guild_message_t* add_msgs();
  const ::google::protobuf::RepeatedPtrField< ::dhc::guild_message_t >&
      msgs() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_message_view)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::guild_message_t > msgs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_message_add : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_message_add) */ {
 public:
  cmsg_guild_message_add();
  virtual ~cmsg_guild_message_add();

  cmsg_guild_message_add(const cmsg_guild_message_add& from);

  inline cmsg_guild_message_add& operator=(const cmsg_guild_message_add& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_message_add(cmsg_guild_message_add&& from) noexcept
    : cmsg_guild_message_add() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_message_add& operator=(cmsg_guild_message_add&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_message_add& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_message_add* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_message_add*>(
               &_cmsg_guild_message_add_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    158;

  void Swap(cmsg_guild_message_add* other);
  friend void swap(cmsg_guild_message_add& a, cmsg_guild_message_add& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_message_add* New() const final {
    return CreateMaybeMessage<cmsg_guild_message_add>(NULL);
  }

  cmsg_guild_message_add* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_message_add>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_message_add& from);
  void MergeFrom(const cmsg_guild_message_add& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_message_add* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_message_add)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_message_delete : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_message_delete) */ {
 public:
  cmsg_guild_message_delete();
  virtual ~cmsg_guild_message_delete();

  cmsg_guild_message_delete(const cmsg_guild_message_delete& from);

  inline cmsg_guild_message_delete& operator=(const cmsg_guild_message_delete& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_message_delete(cmsg_guild_message_delete&& from) noexcept
    : cmsg_guild_message_delete() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_message_delete& operator=(cmsg_guild_message_delete&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_message_delete& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_message_delete* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_message_delete*>(
               &_cmsg_guild_message_delete_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    159;

  void Swap(cmsg_guild_message_delete* other);
  friend void swap(cmsg_guild_message_delete& a, cmsg_guild_message_delete& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_message_delete* New() const final {
    return CreateMaybeMessage<cmsg_guild_message_delete>(NULL);
  }

  cmsg_guild_message_delete* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_message_delete>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_message_delete& from);
  void MergeFrom(const cmsg_guild_message_delete& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_message_delete* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 msg_guid = 2;
  void clear_msg_guid();
  static const int kMsgGuidFieldNumber = 2;
  ::google::protobuf::uint64 msg_guid() const;
  void set_msg_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_message_delete)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 msg_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_message_top : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_message_top) */ {
 public:
  cmsg_guild_message_top();
  virtual ~cmsg_guild_message_top();

  cmsg_guild_message_top(const cmsg_guild_message_top& from);

  inline cmsg_guild_message_top& operator=(const cmsg_guild_message_top& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_message_top(cmsg_guild_message_top&& from) noexcept
    : cmsg_guild_message_top() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_message_top& operator=(cmsg_guild_message_top&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_message_top& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_message_top* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_message_top*>(
               &_cmsg_guild_message_top_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    160;

  void Swap(cmsg_guild_message_top* other);
  friend void swap(cmsg_guild_message_top& a, cmsg_guild_message_top& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_message_top* New() const final {
    return CreateMaybeMessage<cmsg_guild_message_top>(NULL);
  }

  cmsg_guild_message_top* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_message_top>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_message_top& from);
  void MergeFrom(const cmsg_guild_message_top& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_message_top* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 msg_guid = 2;
  void clear_msg_guid();
  static const int kMsgGuidFieldNumber = 2;
  ::google::protobuf::uint64 msg_guid() const;
  void set_msg_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_message_top)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 msg_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_member_view : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_member_view) */ {
 public:
  smsg_guild_member_view();
  virtual ~smsg_guild_member_view();

  smsg_guild_member_view(const smsg_guild_member_view& from);

  inline smsg_guild_member_view& operator=(const smsg_guild_member_view& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_member_view(smsg_guild_member_view&& from) noexcept
    : smsg_guild_member_view() {
    *this = ::std::move(from);
  }

  inline smsg_guild_member_view& operator=(smsg_guild_member_view&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_member_view& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_member_view* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_member_view*>(
               &_smsg_guild_member_view_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    161;

  void Swap(smsg_guild_member_view* other);
  friend void swap(smsg_guild_member_view& a, smsg_guild_member_view& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_member_view* New() const final {
    return CreateMaybeMessage<smsg_guild_member_view>(NULL);
  }

  smsg_guild_member_view* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_member_view>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_member_view& from);
  void MergeFrom(const smsg_guild_member_view& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_member_view* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.guild_member_t guild_members = 1;
  int guild_members_size() const;
  void clear_guild_members();
  static const int kGuildMembersFieldNumber = 1;
  ::dhc::guild_member_t* mutable_guild_members(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::guild_member_t >*
      mutable_guild_members();
  const ::dhc::guild_member_t& guild_members(int index) const;
  ::dhc::guild_member_t* add_guild_members();
  const ::google::protobuf::RepeatedPtrField< ::dhc::guild_member_t >&
      guild_members() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_member_view)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::guild_member_t > guild_members_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_ranking : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_ranking) */ {
 public:
  smsg_guild_ranking();
  virtual ~smsg_guild_ranking();

  smsg_guild_ranking(const smsg_guild_ranking& from);

  inline smsg_guild_ranking& operator=(const smsg_guild_ranking& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_ranking(smsg_guild_ranking&& from) noexcept
    : smsg_guild_ranking() {
    *this = ::std::move(from);
  }

  inline smsg_guild_ranking& operator=(smsg_guild_ranking&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_ranking& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_ranking* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_ranking*>(
               &_smsg_guild_ranking_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    162;

  void Swap(smsg_guild_ranking* other);
  friend void swap(smsg_guild_ranking& a, smsg_guild_ranking& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_ranking* New() const final {
    return CreateMaybeMessage<smsg_guild_ranking>(NULL);
  }

  smsg_guild_ranking* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_ranking>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_ranking& from);
  void MergeFrom(const smsg_guild_ranking& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_ranking* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string guild_names = 1;
  int guild_names_size() const;
  void clear_guild_names();
  static const int kGuildNamesFieldNumber = 1;
  const ::std::string& guild_names(int index) const;
  ::std::string* mutable_guild_names(int index);
  void set_guild_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_guild_names(int index, ::std::string&& value);
  #endif
  void set_guild_names(int index, const char* value);
  void set_guild_names(int index, const char* value, size_t size);
  ::std::string* add_guild_names();
  void add_guild_names(const ::std::string& value);
  #if LANG_CXX11
  void add_guild_names(::std::string&& value);
  #endif
  void add_guild_names(const char* value);
  void add_guild_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& guild_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_guild_names();

  // repeated int32 guild_levels = 2;
  int guild_levels_size() const;
  void clear_guild_levels();
  static const int kGuildLevelsFieldNumber = 2;
  ::google::protobuf::int32 guild_levels(int index) const;
  void set_guild_levels(int index, ::google::protobuf::int32 value);
  void add_guild_levels(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guild_levels() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guild_levels();

  // repeated int32 guild_members = 3;
  int guild_members_size() const;
  void clear_guild_members();
  static const int kGuildMembersFieldNumber = 3;
  ::google::protobuf::int32 guild_members(int index) const;
  void set_guild_members(int index, ::google::protobuf::int32 value);
  void add_guild_members(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guild_members() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guild_members();

  // repeated int32 guild_icons = 4;
  int guild_icons_size() const;
  void clear_guild_icons();
  static const int kGuildIconsFieldNumber = 4;
  ::google::protobuf::int32 guild_icons(int index) const;
  void set_guild_icons(int index, ::google::protobuf::int32 value);
  void add_guild_icons(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guild_icons() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guild_icons();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_ranking)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> guild_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guild_levels_;
  mutable int _guild_levels_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guild_members_;
  mutable int _guild_members_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guild_icons_;
  mutable int _guild_icons_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_mission_ranking : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_mission_ranking) */ {
 public:
  smsg_guild_mission_ranking();
  virtual ~smsg_guild_mission_ranking();

  smsg_guild_mission_ranking(const smsg_guild_mission_ranking& from);

  inline smsg_guild_mission_ranking& operator=(const smsg_guild_mission_ranking& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_mission_ranking(smsg_guild_mission_ranking&& from) noexcept
    : smsg_guild_mission_ranking() {
    *this = ::std::move(from);
  }

  inline smsg_guild_mission_ranking& operator=(smsg_guild_mission_ranking&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_mission_ranking& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_mission_ranking* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_mission_ranking*>(
               &_smsg_guild_mission_ranking_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    163;

  void Swap(smsg_guild_mission_ranking* other);
  friend void swap(smsg_guild_mission_ranking& a, smsg_guild_mission_ranking& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_mission_ranking* New() const final {
    return CreateMaybeMessage<smsg_guild_mission_ranking>(NULL);
  }

  smsg_guild_mission_ranking* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_mission_ranking>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_mission_ranking& from);
  void MergeFrom(const smsg_guild_mission_ranking& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_mission_ranking* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string guild_name = 1;
  int guild_name_size() const;
  void clear_guild_name();
  static const int kGuildNameFieldNumber = 1;
  const ::std::string& guild_name(int index) const;
  ::std::string* mutable_guild_name(int index);
  void set_guild_name(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_guild_name(int index, ::std::string&& value);
  #endif
  void set_guild_name(int index, const char* value);
  void set_guild_name(int index, const char* value, size_t size);
  ::std::string* add_guild_name();
  void add_guild_name(const ::std::string& value);
  #if LANG_CXX11
  void add_guild_name(::std::string&& value);
  #endif
  void add_guild_name(const char* value);
  void add_guild_name(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& guild_name() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_guild_name();

  // repeated int32 icon = 2;
  int icon_size() const;
  void clear_icon();
  static const int kIconFieldNumber = 2;
  ::google::protobuf::int32 icon(int index) const;
  void set_icon(int index, ::google::protobuf::int32 value);
  void add_icon(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      icon() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_icon();

  // repeated int32 ceng = 3;
  int ceng_size() const;
  void clear_ceng();
  static const int kCengFieldNumber = 3;
  ::google::protobuf::int32 ceng(int index) const;
  void set_ceng(int index, ::google::protobuf::int32 value);
  void add_ceng(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ceng() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ceng();

  // repeated int32 bot = 4;
  int bot_size() const;
  void clear_bot();
  static const int kBotFieldNumber = 4;
  ::google::protobuf::int32 bot(int index) const;
  void set_bot(int index, ::google::protobuf::int32 value);
  void add_bot(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      bot() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_bot();

  // repeated int64 hp = 5;
  int hp_size() const;
  void clear_hp();
  static const int kHpFieldNumber = 5;
  ::google::protobuf::int64 hp(int index) const;
  void set_hp(int index, ::google::protobuf::int64 value);
  void add_hp(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      hp() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_hp();

  // repeated int64 max_hp = 6;
  int max_hp_size() const;
  void clear_max_hp();
  static const int kMaxHpFieldNumber = 6;
  ::google::protobuf::int64 max_hp(int index) const;
  void set_max_hp(int index, ::google::protobuf::int64 value);
  void add_max_hp(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      max_hp() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_max_hp();

  // repeated int32 guild_level = 7;
  int guild_level_size() const;
  void clear_guild_level();
  static const int kGuildLevelFieldNumber = 7;
  ::google::protobuf::int32 guild_level(int index) const;
  void set_guild_level(int index, ::google::protobuf::int32 value);
  void add_guild_level(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guild_level() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guild_level();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_mission_ranking)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> guild_name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > icon_;
  mutable int _icon_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ceng_;
  mutable int _ceng_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > bot_;
  mutable int _bot_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > hp_;
  mutable int _hp_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > max_hp_;
  mutable int _max_hp_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guild_level_;
  mutable int _guild_level_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_activity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_activity) */ {
 public:
  smsg_guild_activity();
  virtual ~smsg_guild_activity();

  smsg_guild_activity(const smsg_guild_activity& from);

  inline smsg_guild_activity& operator=(const smsg_guild_activity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_activity(smsg_guild_activity&& from) noexcept
    : smsg_guild_activity() {
    *this = ::std::move(from);
  }

  inline smsg_guild_activity& operator=(smsg_guild_activity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_activity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_activity* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_activity*>(
               &_smsg_guild_activity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    164;

  void Swap(smsg_guild_activity* other);
  friend void swap(smsg_guild_activity& a, smsg_guild_activity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_activity* New() const final {
    return CreateMaybeMessage<smsg_guild_activity>(NULL);
  }

  smsg_guild_activity* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_activity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_activity& from);
  void MergeFrom(const smsg_guild_activity& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_activity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 mobai_ids = 2;
  int mobai_ids_size() const;
  void clear_mobai_ids();
  static const int kMobaiIdsFieldNumber = 2;
  ::google::protobuf::int32 mobai_ids(int index) const;
  void set_mobai_ids(int index, ::google::protobuf::int32 value);
  void add_mobai_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mobai_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mobai_ids();

  // int32 sign_flag = 1;
  void clear_sign_flag();
  static const int kSignFlagFieldNumber = 1;
  ::google::protobuf::int32 sign_flag() const;
  void set_sign_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_activity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mobai_ids_;
  mutable int _mobai_ids_cached_byte_size_;
  ::google::protobuf::int32 sign_flag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_shop_buy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_shop_buy) */ {
 public:
  cmsg_guild_shop_buy();
  virtual ~cmsg_guild_shop_buy();

  cmsg_guild_shop_buy(const cmsg_guild_shop_buy& from);

  inline cmsg_guild_shop_buy& operator=(const cmsg_guild_shop_buy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_shop_buy(cmsg_guild_shop_buy&& from) noexcept
    : cmsg_guild_shop_buy() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_shop_buy& operator=(cmsg_guild_shop_buy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_shop_buy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_shop_buy* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_shop_buy*>(
               &_cmsg_guild_shop_buy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    165;

  void Swap(cmsg_guild_shop_buy* other);
  friend void swap(cmsg_guild_shop_buy& a, cmsg_guild_shop_buy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_shop_buy* New() const final {
    return CreateMaybeMessage<cmsg_guild_shop_buy>(NULL);
  }

  cmsg_guild_shop_buy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_shop_buy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_shop_buy& from);
  void MergeFrom(const cmsg_guild_shop_buy& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_shop_buy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 shop_id = 2;
  void clear_shop_id();
  static const int kShopIdFieldNumber = 2;
  ::google::protobuf::int32 shop_id() const;
  void set_shop_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_shop_buy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 shop_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_mission_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_mission_look) */ {
 public:
  smsg_guild_mission_look();
  virtual ~smsg_guild_mission_look();

  smsg_guild_mission_look(const smsg_guild_mission_look& from);

  inline smsg_guild_mission_look& operator=(const smsg_guild_mission_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_mission_look(smsg_guild_mission_look&& from) noexcept
    : smsg_guild_mission_look() {
    *this = ::std::move(from);
  }

  inline smsg_guild_mission_look& operator=(smsg_guild_mission_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_mission_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_mission_look* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_mission_look*>(
               &_smsg_guild_mission_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    166;

  void Swap(smsg_guild_mission_look* other);
  friend void swap(smsg_guild_mission_look& a, smsg_guild_mission_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_mission_look* New() const final {
    return CreateMaybeMessage<smsg_guild_mission_look>(NULL);
  }

  smsg_guild_mission_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_mission_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_mission_look& from);
  void MergeFrom(const smsg_guild_mission_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_mission_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 mission_rewards = 5;
  int mission_rewards_size() const;
  void clear_mission_rewards();
  static const int kMissionRewardsFieldNumber = 5;
  ::google::protobuf::int32 mission_rewards(int index) const;
  void set_mission_rewards(int index, ::google::protobuf::int32 value);
  void add_mission_rewards(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mission_rewards() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mission_rewards();

  // .dhc.guild_mission_t mission = 1;
  bool has_mission() const;
  void clear_mission();
  static const int kMissionFieldNumber = 1;
  private:
  const ::dhc::guild_mission_t& _internal_mission() const;
  public:
  const ::dhc::guild_mission_t& mission() const;
  ::dhc::guild_mission_t* release_mission();
  ::dhc::guild_mission_t* mutable_mission();
  void set_allocated_mission(::dhc::guild_mission_t* mission);

  // int32 num = 2;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // int32 buy_num = 3;
  void clear_buy_num();
  static const int kBuyNumFieldNumber = 3;
  ::google::protobuf::int32 buy_num() const;
  void set_buy_num(::google::protobuf::int32 value);

  // uint64 last_time = 4;
  void clear_last_time();
  static const int kLastTimeFieldNumber = 4;
  ::google::protobuf::uint64 last_time() const;
  void set_last_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_mission_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mission_rewards_;
  mutable int _mission_rewards_cached_byte_size_;
  ::dhc::guild_mission_t* mission_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 buy_num_;
  ::google::protobuf::uint64 last_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_mission_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_mission_fight_end) */ {
 public:
  cmsg_guild_mission_fight_end();
  virtual ~cmsg_guild_mission_fight_end();

  cmsg_guild_mission_fight_end(const cmsg_guild_mission_fight_end& from);

  inline cmsg_guild_mission_fight_end& operator=(const cmsg_guild_mission_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_mission_fight_end(cmsg_guild_mission_fight_end&& from) noexcept
    : cmsg_guild_mission_fight_end() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_mission_fight_end& operator=(cmsg_guild_mission_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_mission_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_mission_fight_end* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_mission_fight_end*>(
               &_cmsg_guild_mission_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    167;

  void Swap(cmsg_guild_mission_fight_end* other);
  friend void swap(cmsg_guild_mission_fight_end& a, cmsg_guild_mission_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_mission_fight_end* New() const final {
    return CreateMaybeMessage<cmsg_guild_mission_fight_end>(NULL);
  }

  cmsg_guild_mission_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_mission_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_mission_fight_end& from);
  void MergeFrom(const cmsg_guild_mission_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_mission_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_mission_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_mission_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_mission_fight_end) */ {
 public:
  smsg_guild_mission_fight_end();
  virtual ~smsg_guild_mission_fight_end();

  smsg_guild_mission_fight_end(const smsg_guild_mission_fight_end& from);

  inline smsg_guild_mission_fight_end& operator=(const smsg_guild_mission_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_mission_fight_end(smsg_guild_mission_fight_end&& from) noexcept
    : smsg_guild_mission_fight_end() {
    *this = ::std::move(from);
  }

  inline smsg_guild_mission_fight_end& operator=(smsg_guild_mission_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_mission_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_mission_fight_end* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_mission_fight_end*>(
               &_smsg_guild_mission_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    168;

  void Swap(smsg_guild_mission_fight_end* other);
  friend void swap(smsg_guild_mission_fight_end& a, smsg_guild_mission_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_mission_fight_end* New() const final {
    return CreateMaybeMessage<smsg_guild_mission_fight_end>(NULL);
  }

  smsg_guild_mission_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_mission_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_mission_fight_end& from);
  void MergeFrom(const smsg_guild_mission_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_mission_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 contri = 3;
  void clear_contri();
  static const int kContriFieldNumber = 3;
  ::google::protobuf::int32 contri() const;
  void set_contri(::google::protobuf::int32 value);

  // double hit = 5;
  void clear_hit();
  static const int kHitFieldNumber = 5;
  double hit() const;
  void set_hit(double value);

  // int32 hit_contri = 4;
  void clear_hit_contri();
  static const int kHitContriFieldNumber = 4;
  ::google::protobuf::int32 hit_contri() const;
  void set_hit_contri(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_mission_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 contri_;
  double hit_;
  ::google::protobuf::int32 hit_contri_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_mission_complete_reward_view : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_mission_complete_reward_view) */ {
 public:
  cmsg_guild_mission_complete_reward_view();
  virtual ~cmsg_guild_mission_complete_reward_view();

  cmsg_guild_mission_complete_reward_view(const cmsg_guild_mission_complete_reward_view& from);

  inline cmsg_guild_mission_complete_reward_view& operator=(const cmsg_guild_mission_complete_reward_view& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_mission_complete_reward_view(cmsg_guild_mission_complete_reward_view&& from) noexcept
    : cmsg_guild_mission_complete_reward_view() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_mission_complete_reward_view& operator=(cmsg_guild_mission_complete_reward_view&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_mission_complete_reward_view& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_mission_complete_reward_view* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_mission_complete_reward_view*>(
               &_cmsg_guild_mission_complete_reward_view_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    169;

  void Swap(cmsg_guild_mission_complete_reward_view* other);
  friend void swap(cmsg_guild_mission_complete_reward_view& a, cmsg_guild_mission_complete_reward_view& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_mission_complete_reward_view* New() const final {
    return CreateMaybeMessage<cmsg_guild_mission_complete_reward_view>(NULL);
  }

  cmsg_guild_mission_complete_reward_view* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_mission_complete_reward_view>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_mission_complete_reward_view& from);
  void MergeFrom(const cmsg_guild_mission_complete_reward_view& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_mission_complete_reward_view* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 ceng = 2;
  void clear_ceng();
  static const int kCengFieldNumber = 2;
  ::google::protobuf::int32 ceng() const;
  void set_ceng(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_mission_complete_reward_view)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 ceng_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_mission_complete_reward_view : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_mission_complete_reward_view) */ {
 public:
  smsg_guild_mission_complete_reward_view();
  virtual ~smsg_guild_mission_complete_reward_view();

  smsg_guild_mission_complete_reward_view(const smsg_guild_mission_complete_reward_view& from);

  inline smsg_guild_mission_complete_reward_view& operator=(const smsg_guild_mission_complete_reward_view& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_mission_complete_reward_view(smsg_guild_mission_complete_reward_view&& from) noexcept
    : smsg_guild_mission_complete_reward_view() {
    *this = ::std::move(from);
  }

  inline smsg_guild_mission_complete_reward_view& operator=(smsg_guild_mission_complete_reward_view&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_mission_complete_reward_view& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_mission_complete_reward_view* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_mission_complete_reward_view*>(
               &_smsg_guild_mission_complete_reward_view_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    170;

  void Swap(smsg_guild_mission_complete_reward_view* other);
  friend void swap(smsg_guild_mission_complete_reward_view& a, smsg_guild_mission_complete_reward_view& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_mission_complete_reward_view* New() const final {
    return CreateMaybeMessage<smsg_guild_mission_complete_reward_view>(NULL);
  }

  smsg_guild_mission_complete_reward_view* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_mission_complete_reward_view>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_mission_complete_reward_view& from);
  void MergeFrom(const smsg_guild_mission_complete_reward_view& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_mission_complete_reward_view* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.guild_box_t boxes = 1;
  int boxes_size() const;
  void clear_boxes();
  static const int kBoxesFieldNumber = 1;
  ::dhc::guild_box_t* mutable_boxes(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::guild_box_t >*
      mutable_boxes();
  const ::dhc::guild_box_t& boxes(int index) const;
  ::dhc::guild_box_t* add_boxes();
  const ::google::protobuf::RepeatedPtrField< ::dhc::guild_box_t >&
      boxes() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_mission_complete_reward_view)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::guild_box_t > boxes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_mission_complete_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_mission_complete_reward) */ {
 public:
  cmsg_guild_mission_complete_reward();
  virtual ~cmsg_guild_mission_complete_reward();

  cmsg_guild_mission_complete_reward(const cmsg_guild_mission_complete_reward& from);

  inline cmsg_guild_mission_complete_reward& operator=(const cmsg_guild_mission_complete_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_mission_complete_reward(cmsg_guild_mission_complete_reward&& from) noexcept
    : cmsg_guild_mission_complete_reward() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_mission_complete_reward& operator=(cmsg_guild_mission_complete_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_mission_complete_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_mission_complete_reward* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_mission_complete_reward*>(
               &_cmsg_guild_mission_complete_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    171;

  void Swap(cmsg_guild_mission_complete_reward* other);
  friend void swap(cmsg_guild_mission_complete_reward& a, cmsg_guild_mission_complete_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_mission_complete_reward* New() const final {
    return CreateMaybeMessage<cmsg_guild_mission_complete_reward>(NULL);
  }

  cmsg_guild_mission_complete_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_mission_complete_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_mission_complete_reward& from);
  void MergeFrom(const cmsg_guild_mission_complete_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_mission_complete_reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 ceng = 2;
  void clear_ceng();
  static const int kCengFieldNumber = 2;
  ::google::protobuf::int32 ceng() const;
  void set_ceng(::google::protobuf::int32 value);

  // int32 index = 3;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // int32 box = 4;
  void clear_box();
  static const int kBoxFieldNumber = 4;
  ::google::protobuf::int32 box() const;
  void set_box(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_mission_complete_reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 ceng_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 box_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_mission_complete_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_mission_complete_reward) */ {
 public:
  smsg_guild_mission_complete_reward();
  virtual ~smsg_guild_mission_complete_reward();

  smsg_guild_mission_complete_reward(const smsg_guild_mission_complete_reward& from);

  inline smsg_guild_mission_complete_reward& operator=(const smsg_guild_mission_complete_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_mission_complete_reward(smsg_guild_mission_complete_reward&& from) noexcept
    : smsg_guild_mission_complete_reward() {
    *this = ::std::move(from);
  }

  inline smsg_guild_mission_complete_reward& operator=(smsg_guild_mission_complete_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_mission_complete_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_mission_complete_reward* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_mission_complete_reward*>(
               &_smsg_guild_mission_complete_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    172;

  void Swap(smsg_guild_mission_complete_reward* other);
  friend void swap(smsg_guild_mission_complete_reward& a, smsg_guild_mission_complete_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_mission_complete_reward* New() const final {
    return CreateMaybeMessage<smsg_guild_mission_complete_reward>(NULL);
  }

  smsg_guild_mission_complete_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_mission_complete_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_mission_complete_reward& from);
  void MergeFrom(const smsg_guild_mission_complete_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_mission_complete_reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 reward_index = 1;
  void clear_reward_index();
  static const int kRewardIndexFieldNumber = 1;
  ::google::protobuf::int32 reward_index() const;
  void set_reward_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_mission_complete_reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 reward_index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_mission_ceng_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_mission_ceng_reward) */ {
 public:
  cmsg_guild_mission_ceng_reward();
  virtual ~cmsg_guild_mission_ceng_reward();

  cmsg_guild_mission_ceng_reward(const cmsg_guild_mission_ceng_reward& from);

  inline cmsg_guild_mission_ceng_reward& operator=(const cmsg_guild_mission_ceng_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_mission_ceng_reward(cmsg_guild_mission_ceng_reward&& from) noexcept
    : cmsg_guild_mission_ceng_reward() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_mission_ceng_reward& operator=(cmsg_guild_mission_ceng_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_mission_ceng_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_mission_ceng_reward* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_mission_ceng_reward*>(
               &_cmsg_guild_mission_ceng_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    173;

  void Swap(cmsg_guild_mission_ceng_reward* other);
  friend void swap(cmsg_guild_mission_ceng_reward& a, cmsg_guild_mission_ceng_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_mission_ceng_reward* New() const final {
    return CreateMaybeMessage<cmsg_guild_mission_ceng_reward>(NULL);
  }

  cmsg_guild_mission_ceng_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_mission_ceng_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_mission_ceng_reward& from);
  void MergeFrom(const cmsg_guild_mission_ceng_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_mission_ceng_reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 ceng = 2;
  void clear_ceng();
  static const int kCengFieldNumber = 2;
  ::google::protobuf::int32 ceng() const;
  void set_ceng(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_mission_ceng_reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 ceng_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_keji : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_keji) */ {
 public:
  cmsg_guild_keji();
  virtual ~cmsg_guild_keji();

  cmsg_guild_keji(const cmsg_guild_keji& from);

  inline cmsg_guild_keji& operator=(const cmsg_guild_keji& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_keji(cmsg_guild_keji&& from) noexcept
    : cmsg_guild_keji() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_keji& operator=(cmsg_guild_keji&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_keji& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_keji* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_keji*>(
               &_cmsg_guild_keji_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    174;

  void Swap(cmsg_guild_keji* other);
  friend void swap(cmsg_guild_keji& a, cmsg_guild_keji& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_keji* New() const final {
    return CreateMaybeMessage<cmsg_guild_keji>(NULL);
  }

  cmsg_guild_keji* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_keji>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_keji& from);
  void MergeFrom(const cmsg_guild_keji& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_keji* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_keji)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_red_deliver : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_red_deliver) */ {
 public:
  cmsg_guild_red_deliver();
  virtual ~cmsg_guild_red_deliver();

  cmsg_guild_red_deliver(const cmsg_guild_red_deliver& from);

  inline cmsg_guild_red_deliver& operator=(const cmsg_guild_red_deliver& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_red_deliver(cmsg_guild_red_deliver&& from) noexcept
    : cmsg_guild_red_deliver() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_red_deliver& operator=(cmsg_guild_red_deliver&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_red_deliver& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_red_deliver* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_red_deliver*>(
               &_cmsg_guild_red_deliver_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    175;

  void Swap(cmsg_guild_red_deliver* other);
  friend void swap(cmsg_guild_red_deliver& a, cmsg_guild_red_deliver& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_red_deliver* New() const final {
    return CreateMaybeMessage<cmsg_guild_red_deliver>(NULL);
  }

  cmsg_guild_red_deliver* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_red_deliver>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_red_deliver& from);
  void MergeFrom(const cmsg_guild_red_deliver& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_red_deliver* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string text = 3;
  void clear_text();
  static const int kTextFieldNumber = 3;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_red_deliver)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_red_deliver : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_red_deliver) */ {
 public:
  smsg_guild_red_deliver();
  virtual ~smsg_guild_red_deliver();

  smsg_guild_red_deliver(const smsg_guild_red_deliver& from);

  inline smsg_guild_red_deliver& operator=(const smsg_guild_red_deliver& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_red_deliver(smsg_guild_red_deliver&& from) noexcept
    : smsg_guild_red_deliver() {
    *this = ::std::move(from);
  }

  inline smsg_guild_red_deliver& operator=(smsg_guild_red_deliver&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_red_deliver& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_red_deliver* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_red_deliver*>(
               &_smsg_guild_red_deliver_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    176;

  void Swap(smsg_guild_red_deliver* other);
  friend void swap(smsg_guild_red_deliver& a, smsg_guild_red_deliver& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_red_deliver* New() const final {
    return CreateMaybeMessage<smsg_guild_red_deliver>(NULL);
  }

  smsg_guild_red_deliver* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_red_deliver>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_red_deliver& from);
  void MergeFrom(const smsg_guild_red_deliver& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_red_deliver* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .dhc.guild_red_t guild_red = 1;
  bool has_guild_red() const;
  void clear_guild_red();
  static const int kGuildRedFieldNumber = 1;
  private:
  const ::dhc::guild_red_t& _internal_guild_red() const;
  public:
  const ::dhc::guild_red_t& guild_red() const;
  ::dhc::guild_red_t* release_guild_red();
  ::dhc::guild_red_t* mutable_guild_red();
  void set_allocated_guild_red(::dhc::guild_red_t* guild_red);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_red_deliver)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::dhc::guild_red_t* guild_red_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_red_view : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_red_view) */ {
 public:
  smsg_guild_red_view();
  virtual ~smsg_guild_red_view();

  smsg_guild_red_view(const smsg_guild_red_view& from);

  inline smsg_guild_red_view& operator=(const smsg_guild_red_view& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_red_view(smsg_guild_red_view&& from) noexcept
    : smsg_guild_red_view() {
    *this = ::std::move(from);
  }

  inline smsg_guild_red_view& operator=(smsg_guild_red_view&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_red_view& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_red_view* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_red_view*>(
               &_smsg_guild_red_view_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    177;

  void Swap(smsg_guild_red_view* other);
  friend void swap(smsg_guild_red_view& a, smsg_guild_red_view& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_red_view* New() const final {
    return CreateMaybeMessage<smsg_guild_red_view>(NULL);
  }

  smsg_guild_red_view* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_red_view>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_red_view& from);
  void MergeFrom(const smsg_guild_red_view& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_red_view* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.guild_red_t guild_reds = 1;
  int guild_reds_size() const;
  void clear_guild_reds();
  static const int kGuildRedsFieldNumber = 1;
  ::dhc::guild_red_t* mutable_guild_reds(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::guild_red_t >*
      mutable_guild_reds();
  const ::dhc::guild_red_t& guild_reds(int index) const;
  ::dhc::guild_red_t* add_guild_reds();
  const ::google::protobuf::RepeatedPtrField< ::dhc::guild_red_t >&
      guild_reds() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_red_view)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::guild_red_t > guild_reds_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_red_rob : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_red_rob) */ {
 public:
  cmsg_guild_red_rob();
  virtual ~cmsg_guild_red_rob();

  cmsg_guild_red_rob(const cmsg_guild_red_rob& from);

  inline cmsg_guild_red_rob& operator=(const cmsg_guild_red_rob& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_red_rob(cmsg_guild_red_rob&& from) noexcept
    : cmsg_guild_red_rob() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_red_rob& operator=(cmsg_guild_red_rob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_red_rob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_red_rob* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_red_rob*>(
               &_cmsg_guild_red_rob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    178;

  void Swap(cmsg_guild_red_rob* other);
  friend void swap(cmsg_guild_red_rob& a, cmsg_guild_red_rob& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_red_rob* New() const final {
    return CreateMaybeMessage<cmsg_guild_red_rob>(NULL);
  }

  cmsg_guild_red_rob* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_red_rob>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_red_rob& from);
  void MergeFrom(const cmsg_guild_red_rob& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_red_rob* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_red_rob)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_red_rob : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_red_rob) */ {
 public:
  smsg_guild_red_rob();
  virtual ~smsg_guild_red_rob();

  smsg_guild_red_rob(const smsg_guild_red_rob& from);

  inline smsg_guild_red_rob& operator=(const smsg_guild_red_rob& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_red_rob(smsg_guild_red_rob&& from) noexcept
    : smsg_guild_red_rob() {
    *this = ::std::move(from);
  }

  inline smsg_guild_red_rob& operator=(smsg_guild_red_rob&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_red_rob& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_red_rob* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_red_rob*>(
               &_smsg_guild_red_rob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    179;

  void Swap(smsg_guild_red_rob* other);
  friend void swap(smsg_guild_red_rob& a, smsg_guild_red_rob& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_red_rob* New() const final {
    return CreateMaybeMessage<smsg_guild_red_rob>(NULL);
  }

  smsg_guild_red_rob* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_red_rob>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_red_rob& from);
  void MergeFrom(const smsg_guild_red_rob& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_red_rob* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 jewel = 1;
  void clear_jewel();
  static const int kJewelFieldNumber = 1;
  ::google::protobuf::int32 jewel() const;
  void set_jewel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_red_rob)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 jewel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_red_target : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_red_target) */ {
 public:
  cmsg_guild_red_target();
  virtual ~cmsg_guild_red_target();

  cmsg_guild_red_target(const cmsg_guild_red_target& from);

  inline cmsg_guild_red_target& operator=(const cmsg_guild_red_target& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_red_target(cmsg_guild_red_target&& from) noexcept
    : cmsg_guild_red_target() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_red_target& operator=(cmsg_guild_red_target&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_red_target& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_red_target* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_red_target*>(
               &_cmsg_guild_red_target_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    180;

  void Swap(cmsg_guild_red_target* other);
  friend void swap(cmsg_guild_red_target& a, cmsg_guild_red_target& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_red_target* New() const final {
    return CreateMaybeMessage<cmsg_guild_red_target>(NULL);
  }

  cmsg_guild_red_target* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_red_target>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_red_target& from);
  void MergeFrom(const cmsg_guild_red_target& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_red_target* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_red_target)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_look_zhankuang : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_look_zhankuang) */ {
 public:
  cmsg_guild_look_zhankuang();
  virtual ~cmsg_guild_look_zhankuang();

  cmsg_guild_look_zhankuang(const cmsg_guild_look_zhankuang& from);

  inline cmsg_guild_look_zhankuang& operator=(const cmsg_guild_look_zhankuang& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_look_zhankuang(cmsg_guild_look_zhankuang&& from) noexcept
    : cmsg_guild_look_zhankuang() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_look_zhankuang& operator=(cmsg_guild_look_zhankuang&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_look_zhankuang& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_look_zhankuang* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_look_zhankuang*>(
               &_cmsg_guild_look_zhankuang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    181;

  void Swap(cmsg_guild_look_zhankuang* other);
  friend void swap(cmsg_guild_look_zhankuang& a, cmsg_guild_look_zhankuang& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_look_zhankuang* New() const final {
    return CreateMaybeMessage<cmsg_guild_look_zhankuang>(NULL);
  }

  cmsg_guild_look_zhankuang* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_look_zhankuang>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_look_zhankuang& from);
  void MergeFrom(const cmsg_guild_look_zhankuang& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_look_zhankuang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 guild = 2;
  void clear_guild();
  static const int kGuildFieldNumber = 2;
  ::google::protobuf::uint64 guild() const;
  void set_guild(::google::protobuf::uint64 value);

  // int32 type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_look_zhankuang)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 guild_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_look_zhankuang : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_look_zhankuang) */ {
 public:
  smsg_guild_look_zhankuang();
  virtual ~smsg_guild_look_zhankuang();

  smsg_guild_look_zhankuang(const smsg_guild_look_zhankuang& from);

  inline smsg_guild_look_zhankuang& operator=(const smsg_guild_look_zhankuang& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_look_zhankuang(smsg_guild_look_zhankuang&& from) noexcept
    : smsg_guild_look_zhankuang() {
    *this = ::std::move(from);
  }

  inline smsg_guild_look_zhankuang& operator=(smsg_guild_look_zhankuang&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_look_zhankuang& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_look_zhankuang* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_look_zhankuang*>(
               &_smsg_guild_look_zhankuang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    182;

  void Swap(smsg_guild_look_zhankuang* other);
  friend void swap(smsg_guild_look_zhankuang& a, smsg_guild_look_zhankuang& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_look_zhankuang* New() const final {
    return CreateMaybeMessage<smsg_guild_look_zhankuang>(NULL);
  }

  smsg_guild_look_zhankuang* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_look_zhankuang>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_look_zhankuang& from);
  void MergeFrom(const smsg_guild_look_zhankuang& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_look_zhankuang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string guild_name = 1;
  int guild_name_size() const;
  void clear_guild_name();
  static const int kGuildNameFieldNumber = 1;
  const ::std::string& guild_name(int index) const;
  ::std::string* mutable_guild_name(int index);
  void set_guild_name(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_guild_name(int index, ::std::string&& value);
  #endif
  void set_guild_name(int index, const char* value);
  void set_guild_name(int index, const char* value, size_t size);
  ::std::string* add_guild_name();
  void add_guild_name(const ::std::string& value);
  #if LANG_CXX11
  void add_guild_name(::std::string&& value);
  #endif
  void add_guild_name(const char* value);
  void add_guild_name(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& guild_name() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_guild_name();

  // repeated int32 guild_icon = 2;
  int guild_icon_size() const;
  void clear_guild_icon();
  static const int kGuildIconFieldNumber = 2;
  ::google::protobuf::int32 guild_icon(int index) const;
  void set_guild_icon(int index, ::google::protobuf::int32 value);
  void add_guild_icon(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guild_icon() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guild_icon();

  // repeated int32 guild_player_nums = 4;
  int guild_player_nums_size() const;
  void clear_guild_player_nums();
  static const int kGuildPlayerNumsFieldNumber = 4;
  ::google::protobuf::int32 guild_player_nums(int index) const;
  void set_guild_player_nums(int index, ::google::protobuf::int32 value);
  void add_guild_player_nums(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guild_player_nums() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guild_player_nums();

  // repeated int32 guild_val_nums = 5;
  int guild_val_nums_size() const;
  void clear_guild_val_nums();
  static const int kGuildValNumsFieldNumber = 5;
  ::google::protobuf::int32 guild_val_nums(int index) const;
  void set_guild_val_nums(int index, ::google::protobuf::int32 value);
  void add_guild_val_nums(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guild_val_nums() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guild_val_nums();

  // repeated int32 guild_level = 6;
  int guild_level_size() const;
  void clear_guild_level();
  static const int kGuildLevelFieldNumber = 6;
  ::google::protobuf::int32 guild_level(int index) const;
  void set_guild_level(int index, ::google::protobuf::int32 value);
  void add_guild_level(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guild_level() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guild_level();

  // int32 guild_zhanji = 3;
  void clear_guild_zhanji();
  static const int kGuildZhanjiFieldNumber = 3;
  ::google::protobuf::int32 guild_zhanji() const;
  void set_guild_zhanji(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_look_zhankuang)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> guild_name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guild_icon_;
  mutable int _guild_icon_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guild_player_nums_;
  mutable int _guild_player_nums_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guild_val_nums_;
  mutable int _guild_val_nums_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guild_level_;
  mutable int _guild_level_cached_byte_size_;
  ::google::protobuf::int32 guild_zhanji_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_look_zhanji : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_look_zhanji) */ {
 public:
  cmsg_guild_look_zhanji();
  virtual ~cmsg_guild_look_zhanji();

  cmsg_guild_look_zhanji(const cmsg_guild_look_zhanji& from);

  inline cmsg_guild_look_zhanji& operator=(const cmsg_guild_look_zhanji& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_look_zhanji(cmsg_guild_look_zhanji&& from) noexcept
    : cmsg_guild_look_zhanji() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_look_zhanji& operator=(cmsg_guild_look_zhanji&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_look_zhanji& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_look_zhanji* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_look_zhanji*>(
               &_cmsg_guild_look_zhanji_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    183;

  void Swap(cmsg_guild_look_zhanji* other);
  friend void swap(cmsg_guild_look_zhanji& a, cmsg_guild_look_zhanji& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_look_zhanji* New() const final {
    return CreateMaybeMessage<cmsg_guild_look_zhanji>(NULL);
  }

  cmsg_guild_look_zhanji* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_look_zhanji>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_look_zhanji& from);
  void MergeFrom(const cmsg_guild_look_zhanji& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_look_zhanji* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 guild = 2;
  void clear_guild();
  static const int kGuildFieldNumber = 2;
  ::google::protobuf::uint64 guild() const;
  void set_guild(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_look_zhanji)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 guild_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_look_zhanji : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_look_zhanji) */ {
 public:
  smsg_guild_look_zhanji();
  virtual ~smsg_guild_look_zhanji();

  smsg_guild_look_zhanji(const smsg_guild_look_zhanji& from);

  inline smsg_guild_look_zhanji& operator=(const smsg_guild_look_zhanji& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_look_zhanji(smsg_guild_look_zhanji&& from) noexcept
    : smsg_guild_look_zhanji() {
    *this = ::std::move(from);
  }

  inline smsg_guild_look_zhanji& operator=(smsg_guild_look_zhanji&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_look_zhanji& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_look_zhanji* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_look_zhanji*>(
               &_smsg_guild_look_zhanji_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    184;

  void Swap(smsg_guild_look_zhanji* other);
  friend void swap(smsg_guild_look_zhanji& a, smsg_guild_look_zhanji& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_look_zhanji* New() const final {
    return CreateMaybeMessage<smsg_guild_look_zhanji>(NULL);
  }

  smsg_guild_look_zhanji* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_look_zhanji>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_look_zhanji& from);
  void MergeFrom(const smsg_guild_look_zhanji& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_look_zhanji* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 player_guids = 10;
  int player_guids_size() const;
  void clear_player_guids();
  static const int kPlayerGuidsFieldNumber = 10;
  ::google::protobuf::uint64 player_guids(int index) const;
  void set_player_guids(int index, ::google::protobuf::uint64 value);
  void add_player_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_guids();

  // repeated string player_names = 11;
  int player_names_size() const;
  void clear_player_names();
  static const int kPlayerNamesFieldNumber = 11;
  const ::std::string& player_names(int index) const;
  ::std::string* mutable_player_names(int index);
  void set_player_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_player_names(int index, ::std::string&& value);
  #endif
  void set_player_names(int index, const char* value);
  void set_player_names(int index, const char* value, size_t size);
  ::std::string* add_player_names();
  void add_player_names(const ::std::string& value);
  #if LANG_CXX11
  void add_player_names(::std::string&& value);
  #endif
  void add_player_names(const char* value);
  void add_player_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& player_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_player_names();

  // repeated int32 player_template = 12;
  int player_template_size() const;
  void clear_player_template();
  static const int kPlayerTemplateFieldNumber = 12;
  ::google::protobuf::int32 player_template(int index) const;
  void set_player_template(int index, ::google::protobuf::int32 value);
  void add_player_template(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_template() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_template();

  // repeated int32 player_level = 13;
  int player_level_size() const;
  void clear_player_level();
  static const int kPlayerLevelFieldNumber = 13;
  ::google::protobuf::int32 player_level(int index) const;
  void set_player_level(int index, ::google::protobuf::int32 value);
  void add_player_level(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_level() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_level();

  // repeated int32 player_bat_eff = 14;
  int player_bat_eff_size() const;
  void clear_player_bat_eff();
  static const int kPlayerBatEffFieldNumber = 14;
  ::google::protobuf::int32 player_bat_eff(int index) const;
  void set_player_bat_eff(int index, ::google::protobuf::int32 value);
  void add_player_bat_eff(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_bat_eff() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_bat_eff();

  // repeated int32 player_vip = 15;
  int player_vip_size() const;
  void clear_player_vip();
  static const int kPlayerVipFieldNumber = 15;
  ::google::protobuf::int32 player_vip(int index) const;
  void set_player_vip(int index, ::google::protobuf::int32 value);
  void add_player_vip(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_vip() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_vip();

  // repeated int32 player_achieve = 16;
  int player_achieve_size() const;
  void clear_player_achieve();
  static const int kPlayerAchieveFieldNumber = 16;
  ::google::protobuf::int32 player_achieve(int index) const;
  void set_player_achieve(int index, ::google::protobuf::int32 value);
  void add_player_achieve(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_achieve() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_achieve();

  // repeated int32 player_zhanjis = 17;
  int player_zhanjis_size() const;
  void clear_player_zhanjis();
  static const int kPlayerZhanjisFieldNumber = 17;
  ::google::protobuf::int32 player_zhanjis(int index) const;
  void set_player_zhanjis(int index, ::google::protobuf::int32 value);
  void add_player_zhanjis(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_zhanjis() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_zhanjis();

  // repeated int32 player_total_zhanjis = 18;
  int player_total_zhanjis_size() const;
  void clear_player_total_zhanjis();
  static const int kPlayerTotalZhanjisFieldNumber = 18;
  ::google::protobuf::int32 player_total_zhanjis(int index) const;
  void set_player_total_zhanjis(int index, ::google::protobuf::int32 value);
  void add_player_total_zhanjis(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_total_zhanjis() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_total_zhanjis();

  // repeated int32 player_nalflags = 19;
  int player_nalflags_size() const;
  void clear_player_nalflags();
  static const int kPlayerNalflagsFieldNumber = 19;
  ::google::protobuf::int32 player_nalflags(int index) const;
  void set_player_nalflags(int index, ::google::protobuf::int32 value);
  void add_player_nalflags(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_nalflags() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_nalflags();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_look_zhanji)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_guids_;
  mutable int _player_guids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> player_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_template_;
  mutable int _player_template_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_level_;
  mutable int _player_level_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_bat_eff_;
  mutable int _player_bat_eff_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_vip_;
  mutable int _player_vip_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_achieve_;
  mutable int _player_achieve_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_zhanjis_;
  mutable int _player_zhanjis_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_total_zhanjis_;
  mutable int _player_total_zhanjis_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_nalflags_;
  mutable int _player_nalflags_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tmsg_guild_pvp_load : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.tmsg_guild_pvp_load) */ {
 public:
  tmsg_guild_pvp_load();
  virtual ~tmsg_guild_pvp_load();

  tmsg_guild_pvp_load(const tmsg_guild_pvp_load& from);

  inline tmsg_guild_pvp_load& operator=(const tmsg_guild_pvp_load& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  tmsg_guild_pvp_load(tmsg_guild_pvp_load&& from) noexcept
    : tmsg_guild_pvp_load() {
    *this = ::std::move(from);
  }

  inline tmsg_guild_pvp_load& operator=(tmsg_guild_pvp_load&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const tmsg_guild_pvp_load& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const tmsg_guild_pvp_load* internal_default_instance() {
    return reinterpret_cast<const tmsg_guild_pvp_load*>(
               &_tmsg_guild_pvp_load_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    185;

  void Swap(tmsg_guild_pvp_load* other);
  friend void swap(tmsg_guild_pvp_load& a, tmsg_guild_pvp_load& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline tmsg_guild_pvp_load* New() const final {
    return CreateMaybeMessage<tmsg_guild_pvp_load>(NULL);
  }

  tmsg_guild_pvp_load* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<tmsg_guild_pvp_load>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const tmsg_guild_pvp_load& from);
  void MergeFrom(const tmsg_guild_pvp_load& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(tmsg_guild_pvp_load* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.guild_arrange_t ars = 1;
  int ars_size() const;
  void clear_ars();
  static const int kArsFieldNumber = 1;
  ::dhc::guild_arrange_t* mutable_ars(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::guild_arrange_t >*
      mutable_ars();
  const ::dhc::guild_arrange_t& ars(int index) const;
  ::dhc::guild_arrange_t* add_ars();
  const ::google::protobuf::RepeatedPtrField< ::dhc::guild_arrange_t >&
      ars() const;

  // @@protoc_insertion_point(class_scope:protocol.game.tmsg_guild_pvp_load)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::guild_arrange_t > ars_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tmsg_guild_pvp_load_fight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.tmsg_guild_pvp_load_fight) */ {
 public:
  tmsg_guild_pvp_load_fight();
  virtual ~tmsg_guild_pvp_load_fight();

  tmsg_guild_pvp_load_fight(const tmsg_guild_pvp_load_fight& from);

  inline tmsg_guild_pvp_load_fight& operator=(const tmsg_guild_pvp_load_fight& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  tmsg_guild_pvp_load_fight(tmsg_guild_pvp_load_fight&& from) noexcept
    : tmsg_guild_pvp_load_fight() {
    *this = ::std::move(from);
  }

  inline tmsg_guild_pvp_load_fight& operator=(tmsg_guild_pvp_load_fight&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const tmsg_guild_pvp_load_fight& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const tmsg_guild_pvp_load_fight* internal_default_instance() {
    return reinterpret_cast<const tmsg_guild_pvp_load_fight*>(
               &_tmsg_guild_pvp_load_fight_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    186;

  void Swap(tmsg_guild_pvp_load_fight* other);
  friend void swap(tmsg_guild_pvp_load_fight& a, tmsg_guild_pvp_load_fight& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline tmsg_guild_pvp_load_fight* New() const final {
    return CreateMaybeMessage<tmsg_guild_pvp_load_fight>(NULL);
  }

  tmsg_guild_pvp_load_fight* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<tmsg_guild_pvp_load_fight>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const tmsg_guild_pvp_load_fight& from);
  void MergeFrom(const tmsg_guild_pvp_load_fight& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(tmsg_guild_pvp_load_fight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.guild_fight_t ars = 1;
  int ars_size() const;
  void clear_ars();
  static const int kArsFieldNumber = 1;
  ::dhc::guild_fight_t* mutable_ars(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::guild_fight_t >*
      mutable_ars();
  const ::dhc::guild_fight_t& ars(int index) const;
  ::dhc::guild_fight_t* add_ars();
  const ::google::protobuf::RepeatedPtrField< ::dhc::guild_fight_t >&
      ars() const;

  // @@protoc_insertion_point(class_scope:protocol.game.tmsg_guild_pvp_load_fight)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::guild_fight_t > ars_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_guild_member_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_guild_member_info) */ {
 public:
  msg_guild_member_info();
  virtual ~msg_guild_member_info();

  msg_guild_member_info(const msg_guild_member_info& from);

  inline msg_guild_member_info& operator=(const msg_guild_member_info& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_guild_member_info(msg_guild_member_info&& from) noexcept
    : msg_guild_member_info() {
    *this = ::std::move(from);
  }

  inline msg_guild_member_info& operator=(msg_guild_member_info&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_guild_member_info& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_guild_member_info* internal_default_instance() {
    return reinterpret_cast<const msg_guild_member_info*>(
               &_msg_guild_member_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    187;

  void Swap(msg_guild_member_info* other);
  friend void swap(msg_guild_member_info& a, msg_guild_member_info& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_guild_member_info* New() const final {
    return CreateMaybeMessage<msg_guild_member_info>(NULL);
  }

  msg_guild_member_info* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_guild_member_info>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_guild_member_info& from);
  void MergeFrom(const msg_guild_member_info& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_guild_member_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 player_guids = 1;
  int player_guids_size() const;
  void clear_player_guids();
  static const int kPlayerGuidsFieldNumber = 1;
  ::google::protobuf::uint64 player_guids(int index) const;
  void set_player_guids(int index, ::google::protobuf::uint64 value);
  void add_player_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_guids();

  // repeated string player_names = 2;
  int player_names_size() const;
  void clear_player_names();
  static const int kPlayerNamesFieldNumber = 2;
  const ::std::string& player_names(int index) const;
  ::std::string* mutable_player_names(int index);
  void set_player_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_player_names(int index, ::std::string&& value);
  #endif
  void set_player_names(int index, const char* value);
  void set_player_names(int index, const char* value, size_t size);
  ::std::string* add_player_names();
  void add_player_names(const ::std::string& value);
  #if LANG_CXX11
  void add_player_names(::std::string&& value);
  #endif
  void add_player_names(const char* value);
  void add_player_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& player_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_player_names();

  // repeated int32 player_template = 3;
  int player_template_size() const;
  void clear_player_template();
  static const int kPlayerTemplateFieldNumber = 3;
  ::google::protobuf::int32 player_template(int index) const;
  void set_player_template(int index, ::google::protobuf::int32 value);
  void add_player_template(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_template() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_template();

  // repeated int32 player_level = 4;
  int player_level_size() const;
  void clear_player_level();
  static const int kPlayerLevelFieldNumber = 4;
  ::google::protobuf::int32 player_level(int index) const;
  void set_player_level(int index, ::google::protobuf::int32 value);
  void add_player_level(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_level() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_level();

  // repeated int32 player_bat_eff = 5;
  int player_bat_eff_size() const;
  void clear_player_bat_eff();
  static const int kPlayerBatEffFieldNumber = 5;
  ::google::protobuf::int32 player_bat_eff(int index) const;
  void set_player_bat_eff(int index, ::google::protobuf::int32 value);
  void add_player_bat_eff(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_bat_eff() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_bat_eff();

  // repeated int32 player_vip = 6;
  int player_vip_size() const;
  void clear_player_vip();
  static const int kPlayerVipFieldNumber = 6;
  ::google::protobuf::int32 player_vip(int index) const;
  void set_player_vip(int index, ::google::protobuf::int32 value);
  void add_player_vip(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_vip() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_vip();

  // repeated int32 player_achieve = 7;
  int player_achieve_size() const;
  void clear_player_achieve();
  static const int kPlayerAchieveFieldNumber = 7;
  ::google::protobuf::int32 player_achieve(int index) const;
  void set_player_achieve(int index, ::google::protobuf::int32 value);
  void add_player_achieve(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_achieve() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_achieve();

  // repeated uint64 player_join_time = 8;
  int player_join_time_size() const;
  void clear_player_join_time();
  static const int kPlayerJoinTimeFieldNumber = 8;
  ::google::protobuf::uint64 player_join_time(int index) const;
  void set_player_join_time(int index, ::google::protobuf::uint64 value);
  void add_player_join_time(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_join_time() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_join_time();

  // @@protoc_insertion_point(class_scope:protocol.game.msg_guild_member_info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_guids_;
  mutable int _player_guids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> player_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_template_;
  mutable int _player_template_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_level_;
  mutable int _player_level_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_bat_eff_;
  mutable int _player_bat_eff_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_vip_;
  mutable int _player_vip_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_achieve_;
  mutable int _player_achieve_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_join_time_;
  mutable int _player_join_time_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_guild_arrange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_guild_arrange) */ {
 public:
  msg_guild_arrange();
  virtual ~msg_guild_arrange();

  msg_guild_arrange(const msg_guild_arrange& from);

  inline msg_guild_arrange& operator=(const msg_guild_arrange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_guild_arrange(msg_guild_arrange&& from) noexcept
    : msg_guild_arrange() {
    *this = ::std::move(from);
  }

  inline msg_guild_arrange& operator=(msg_guild_arrange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_guild_arrange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_guild_arrange* internal_default_instance() {
    return reinterpret_cast<const msg_guild_arrange*>(
               &_msg_guild_arrange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    188;

  void Swap(msg_guild_arrange* other);
  friend void swap(msg_guild_arrange& a, msg_guild_arrange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_guild_arrange* New() const final {
    return CreateMaybeMessage<msg_guild_arrange>(NULL);
  }

  msg_guild_arrange* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_guild_arrange>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_guild_arrange& from);
  void MergeFrom(const msg_guild_arrange& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_guild_arrange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 player_guids = 1;
  int player_guids_size() const;
  void clear_player_guids();
  static const int kPlayerGuidsFieldNumber = 1;
  ::google::protobuf::uint64 player_guids(int index) const;
  void set_player_guids(int index, ::google::protobuf::uint64 value);
  void add_player_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_guids();

  // repeated string player_names = 2;
  int player_names_size() const;
  void clear_player_names();
  static const int kPlayerNamesFieldNumber = 2;
  const ::std::string& player_names(int index) const;
  ::std::string* mutable_player_names(int index);
  void set_player_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_player_names(int index, ::std::string&& value);
  #endif
  void set_player_names(int index, const char* value);
  void set_player_names(int index, const char* value, size_t size);
  ::std::string* add_player_names();
  void add_player_names(const ::std::string& value);
  #if LANG_CXX11
  void add_player_names(::std::string&& value);
  #endif
  void add_player_names(const char* value);
  void add_player_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& player_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_player_names();

  // repeated int32 player_template = 3;
  int player_template_size() const;
  void clear_player_template();
  static const int kPlayerTemplateFieldNumber = 3;
  ::google::protobuf::int32 player_template(int index) const;
  void set_player_template(int index, ::google::protobuf::int32 value);
  void add_player_template(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_template() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_template();

  // repeated int32 player_level = 4;
  int player_level_size() const;
  void clear_player_level();
  static const int kPlayerLevelFieldNumber = 4;
  ::google::protobuf::int32 player_level(int index) const;
  void set_player_level(int index, ::google::protobuf::int32 value);
  void add_player_level(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_level() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_level();

  // repeated int32 player_bat_eff = 5;
  int player_bat_eff_size() const;
  void clear_player_bat_eff();
  static const int kPlayerBatEffFieldNumber = 5;
  ::google::protobuf::int32 player_bat_eff(int index) const;
  void set_player_bat_eff(int index, ::google::protobuf::int32 value);
  void add_player_bat_eff(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_bat_eff() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_bat_eff();

  // repeated int32 player_vip = 6;
  int player_vip_size() const;
  void clear_player_vip();
  static const int kPlayerVipFieldNumber = 6;
  ::google::protobuf::int32 player_vip(int index) const;
  void set_player_vip(int index, ::google::protobuf::int32 value);
  void add_player_vip(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_vip() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_vip();

  // repeated int32 player_achieve = 7;
  int player_achieve_size() const;
  void clear_player_achieve();
  static const int kPlayerAchieveFieldNumber = 7;
  ::google::protobuf::int32 player_achieve(int index) const;
  void set_player_achieve(int index, ::google::protobuf::int32 value);
  void add_player_achieve(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_achieve() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_achieve();

  // @@protoc_insertion_point(class_scope:protocol.game.msg_guild_arrange)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_guids_;
  mutable int _player_guids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> player_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_template_;
  mutable int _player_template_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_level_;
  mutable int _player_level_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_bat_eff_;
  mutable int _player_bat_eff_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_vip_;
  mutable int _player_vip_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_achieve_;
  mutable int _player_achieve_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_guild_zhanji : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_guild_zhanji) */ {
 public:
  msg_guild_zhanji();
  virtual ~msg_guild_zhanji();

  msg_guild_zhanji(const msg_guild_zhanji& from);

  inline msg_guild_zhanji& operator=(const msg_guild_zhanji& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_guild_zhanji(msg_guild_zhanji&& from) noexcept
    : msg_guild_zhanji() {
    *this = ::std::move(from);
  }

  inline msg_guild_zhanji& operator=(msg_guild_zhanji&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_guild_zhanji& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_guild_zhanji* internal_default_instance() {
    return reinterpret_cast<const msg_guild_zhanji*>(
               &_msg_guild_zhanji_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    189;

  void Swap(msg_guild_zhanji* other);
  friend void swap(msg_guild_zhanji& a, msg_guild_zhanji& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_guild_zhanji* New() const final {
    return CreateMaybeMessage<msg_guild_zhanji>(NULL);
  }

  msg_guild_zhanji* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_guild_zhanji>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_guild_zhanji& from);
  void MergeFrom(const msg_guild_zhanji& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_guild_zhanji* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_guild_member_info bushu = 9;
  bool has_bushu() const;
  void clear_bushu();
  static const int kBushuFieldNumber = 9;
  private:
  const ::protocol::game::msg_guild_member_info& _internal_bushu() const;
  public:
  const ::protocol::game::msg_guild_member_info& bushu() const;
  ::protocol::game::msg_guild_member_info* release_bushu();
  ::protocol::game::msg_guild_member_info* mutable_bushu();
  void set_allocated_bushu(::protocol::game::msg_guild_member_info* bushu);

  // int32 guild_zhanji = 1;
  void clear_guild_zhanji();
  static const int kGuildZhanjiFieldNumber = 1;
  ::google::protobuf::int32 guild_zhanji() const;
  void set_guild_zhanji(::google::protobuf::int32 value);

  // int32 guild_total_zhanji = 2;
  void clear_guild_total_zhanji();
  static const int kGuildTotalZhanjiFieldNumber = 2;
  ::google::protobuf::int32 guild_total_zhanji() const;
  void set_guild_total_zhanji(::google::protobuf::int32 value);

  // int32 guild_exp = 3;
  void clear_guild_exp();
  static const int kGuildExpFieldNumber = 3;
  ::google::protobuf::int32 guild_exp() const;
  void set_guild_exp(::google::protobuf::int32 value);

  // int32 zhanji = 4;
  void clear_zhanji();
  static const int kZhanjiFieldNumber = 4;
  ::google::protobuf::int32 zhanji() const;
  void set_zhanji(::google::protobuf::int32 value);

  // int32 total_zhanji = 5;
  void clear_total_zhanji();
  static const int kTotalZhanjiFieldNumber = 5;
  ::google::protobuf::int32 total_zhanji() const;
  void set_total_zhanji(::google::protobuf::int32 value);

  // int32 judian = 6;
  void clear_judian();
  static const int kJudianFieldNumber = 6;
  ::google::protobuf::int32 judian() const;
  void set_judian(::google::protobuf::int32 value);

  // int32 jidi = 7;
  void clear_jidi();
  static const int kJidiFieldNumber = 7;
  ::google::protobuf::int32 jidi() const;
  void set_jidi(::google::protobuf::int32 value);

  // int32 perfect = 8;
  void clear_perfect();
  static const int kPerfectFieldNumber = 8;
  ::google::protobuf::int32 perfect() const;
  void set_perfect(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_guild_zhanji)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_guild_member_info* bushu_;
  ::google::protobuf::int32 guild_zhanji_;
  ::google::protobuf::int32 guild_total_zhanji_;
  ::google::protobuf::int32 guild_exp_;
  ::google::protobuf::int32 zhanji_;
  ::google::protobuf::int32 total_zhanji_;
  ::google::protobuf::int32 judian_;
  ::google::protobuf::int32 jidi_;
  ::google::protobuf::int32 perfect_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_guild_fight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_guild_fight) */ {
 public:
  msg_guild_fight();
  virtual ~msg_guild_fight();

  msg_guild_fight(const msg_guild_fight& from);

  inline msg_guild_fight& operator=(const msg_guild_fight& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_guild_fight(msg_guild_fight&& from) noexcept
    : msg_guild_fight() {
    *this = ::std::move(from);
  }

  inline msg_guild_fight& operator=(msg_guild_fight&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_guild_fight& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_guild_fight* internal_default_instance() {
    return reinterpret_cast<const msg_guild_fight*>(
               &_msg_guild_fight_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    190;

  void Swap(msg_guild_fight* other);
  friend void swap(msg_guild_fight& a, msg_guild_fight& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_guild_fight* New() const final {
    return CreateMaybeMessage<msg_guild_fight>(NULL);
  }

  msg_guild_fight* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_guild_fight>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_guild_fight& from);
  void MergeFrom(const msg_guild_fight& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_guild_fight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.msg_guild_fight_info fights = 1;
  int fights_size() const;
  void clear_fights();
  static const int kFightsFieldNumber = 1;
  ::protocol::game::msg_guild_fight_info* mutable_fights(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_guild_fight_info >*
      mutable_fights();
  const ::protocol::game::msg_guild_fight_info& fights(int index) const;
  ::protocol::game::msg_guild_fight_info* add_fights();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_guild_fight_info >&
      fights() const;

  // repeated int32 reward_ids = 5;
  int reward_ids_size() const;
  void clear_reward_ids();
  static const int kRewardIdsFieldNumber = 5;
  ::google::protobuf::int32 reward_ids(int index) const;
  void set_reward_ids(int index, ::google::protobuf::int32 value);
  void add_reward_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      reward_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_reward_ids();

  // int32 guild_zhanji = 2;
  void clear_guild_zhanji();
  static const int kGuildZhanjiFieldNumber = 2;
  ::google::protobuf::int32 guild_zhanji() const;
  void set_guild_zhanji(::google::protobuf::int32 value);

  // int32 zhanji = 3;
  void clear_zhanji();
  static const int kZhanjiFieldNumber = 3;
  ::google::protobuf::int32 zhanji() const;
  void set_zhanji(::google::protobuf::int32 value);

  // int32 total_zhanji = 4;
  void clear_total_zhanji();
  static const int kTotalZhanjiFieldNumber = 4;
  ::google::protobuf::int32 total_zhanji() const;
  void set_total_zhanji(::google::protobuf::int32 value);

  // int32 judian = 6;
  void clear_judian();
  static const int kJudianFieldNumber = 6;
  ::google::protobuf::int32 judian() const;
  void set_judian(::google::protobuf::int32 value);

  // int32 jidi = 7;
  void clear_jidi();
  static const int kJidiFieldNumber = 7;
  ::google::protobuf::int32 jidi() const;
  void set_jidi(::google::protobuf::int32 value);

  // int32 perfect = 8;
  void clear_perfect();
  static const int kPerfectFieldNumber = 8;
  ::google::protobuf::int32 perfect() const;
  void set_perfect(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_guild_fight)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_guild_fight_info > fights_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > reward_ids_;
  mutable int _reward_ids_cached_byte_size_;
  ::google::protobuf::int32 guild_zhanji_;
  ::google::protobuf::int32 zhanji_;
  ::google::protobuf::int32 total_zhanji_;
  ::google::protobuf::int32 judian_;
  ::google::protobuf::int32 jidi_;
  ::google::protobuf::int32 perfect_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_guild_fight_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_guild_fight_info) */ {
 public:
  msg_guild_fight_info();
  virtual ~msg_guild_fight_info();

  msg_guild_fight_info(const msg_guild_fight_info& from);

  inline msg_guild_fight_info& operator=(const msg_guild_fight_info& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_guild_fight_info(msg_guild_fight_info&& from) noexcept
    : msg_guild_fight_info() {
    *this = ::std::move(from);
  }

  inline msg_guild_fight_info& operator=(msg_guild_fight_info&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_guild_fight_info& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_guild_fight_info* internal_default_instance() {
    return reinterpret_cast<const msg_guild_fight_info*>(
               &_msg_guild_fight_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    191;

  void Swap(msg_guild_fight_info* other);
  friend void swap(msg_guild_fight_info& a, msg_guild_fight_info& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_guild_fight_info* New() const final {
    return CreateMaybeMessage<msg_guild_fight_info>(NULL);
  }

  msg_guild_fight_info* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_guild_fight_info>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_guild_fight_info& from);
  void MergeFrom(const msg_guild_fight_info& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_guild_fight_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 target_guids = 6;
  int target_guids_size() const;
  void clear_target_guids();
  static const int kTargetGuidsFieldNumber = 6;
  ::google::protobuf::uint64 target_guids(int index) const;
  void set_target_guids(int index, ::google::protobuf::uint64 value);
  void add_target_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      target_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_target_guids();

  // repeated string target_names = 7;
  int target_names_size() const;
  void clear_target_names();
  static const int kTargetNamesFieldNumber = 7;
  const ::std::string& target_names(int index) const;
  ::std::string* mutable_target_names(int index);
  void set_target_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_target_names(int index, ::std::string&& value);
  #endif
  void set_target_names(int index, const char* value);
  void set_target_names(int index, const char* value, size_t size);
  ::std::string* add_target_names();
  void add_target_names(const ::std::string& value);
  #if LANG_CXX11
  void add_target_names(::std::string&& value);
  #endif
  void add_target_names(const char* value);
  void add_target_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& target_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_target_names();

  // repeated int32 target_templates = 8;
  int target_templates_size() const;
  void clear_target_templates();
  static const int kTargetTemplatesFieldNumber = 8;
  ::google::protobuf::int32 target_templates(int index) const;
  void set_target_templates(int index, ::google::protobuf::int32 value);
  void add_target_templates(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      target_templates() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_target_templates();

  // repeated int32 target_levels = 9;
  int target_levels_size() const;
  void clear_target_levels();
  static const int kTargetLevelsFieldNumber = 9;
  ::google::protobuf::int32 target_levels(int index) const;
  void set_target_levels(int index, ::google::protobuf::int32 value);
  void add_target_levels(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      target_levels() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_target_levels();

  // repeated int32 target_bat_effs = 10;
  int target_bat_effs_size() const;
  void clear_target_bat_effs();
  static const int kTargetBatEffsFieldNumber = 10;
  ::google::protobuf::int32 target_bat_effs(int index) const;
  void set_target_bat_effs(int index, ::google::protobuf::int32 value);
  void add_target_bat_effs(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      target_bat_effs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_target_bat_effs();

  // repeated int32 target_vips = 11;
  int target_vips_size() const;
  void clear_target_vips();
  static const int kTargetVipsFieldNumber = 11;
  ::google::protobuf::int32 target_vips(int index) const;
  void set_target_vips(int index, ::google::protobuf::int32 value);
  void add_target_vips(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      target_vips() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_target_vips();

  // repeated int32 target_achieves = 12;
  int target_achieves_size() const;
  void clear_target_achieves();
  static const int kTargetAchievesFieldNumber = 12;
  ::google::protobuf::int32 target_achieves(int index) const;
  void set_target_achieves(int index, ::google::protobuf::int32 value);
  void add_target_achieves(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      target_achieves() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_target_achieves();

  // repeated int32 target_defense_nums = 13;
  int target_defense_nums_size() const;
  void clear_target_defense_nums();
  static const int kTargetDefenseNumsFieldNumber = 13;
  ::google::protobuf::int32 target_defense_nums(int index) const;
  void set_target_defense_nums(int index, ::google::protobuf::int32 value);
  void add_target_defense_nums(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      target_defense_nums() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_target_defense_nums();

  // repeated int32 guard_points = 14;
  int guard_points_size() const;
  void clear_guard_points();
  static const int kGuardPointsFieldNumber = 14;
  ::google::protobuf::int32 guard_points(int index) const;
  void set_guard_points(int index, ::google::protobuf::int32 value);
  void add_guard_points(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guard_points() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guard_points();

  // repeated int32 guard_gongpo = 15;
  int guard_gongpo_size() const;
  void clear_guard_gongpo();
  static const int kGuardGongpoFieldNumber = 15;
  ::google::protobuf::int32 guard_gongpo(int index) const;
  void set_guard_gongpo(int index, ::google::protobuf::int32 value);
  void add_guard_gongpo(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guard_gongpo() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guard_gongpo();

  // string guild_name = 3;
  void clear_guild_name();
  static const int kGuildNameFieldNumber = 3;
  const ::std::string& guild_name() const;
  void set_guild_name(const ::std::string& value);
  #if LANG_CXX11
  void set_guild_name(::std::string&& value);
  #endif
  void set_guild_name(const char* value);
  void set_guild_name(const char* value, size_t size);
  ::std::string* mutable_guild_name();
  ::std::string* release_guild_name();
  void set_allocated_guild_name(::std::string* guild_name);

  // uint64 guild = 1;
  void clear_guild();
  static const int kGuildFieldNumber = 1;
  ::google::protobuf::uint64 guild() const;
  void set_guild(::google::protobuf::uint64 value);

  // int32 guild_server = 2;
  void clear_guild_server();
  static const int kGuildServerFieldNumber = 2;
  ::google::protobuf::int32 guild_server() const;
  void set_guild_server(::google::protobuf::int32 value);

  // int32 guild_icon = 4;
  void clear_guild_icon();
  static const int kGuildIconFieldNumber = 4;
  ::google::protobuf::int32 guild_icon() const;
  void set_guild_icon(::google::protobuf::int32 value);

  // int32 guild_level = 5;
  void clear_guild_level();
  static const int kGuildLevelFieldNumber = 5;
  ::google::protobuf::int32 guild_level() const;
  void set_guild_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_guild_fight_info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > target_guids_;
  mutable int _target_guids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> target_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > target_templates_;
  mutable int _target_templates_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > target_levels_;
  mutable int _target_levels_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > target_bat_effs_;
  mutable int _target_bat_effs_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > target_vips_;
  mutable int _target_vips_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > target_achieves_;
  mutable int _target_achieves_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > target_defense_nums_;
  mutable int _target_defense_nums_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guard_points_;
  mutable int _guard_points_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guard_gongpo_;
  mutable int _guard_gongpo_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr guild_name_;
  ::google::protobuf::uint64 guild_;
  ::google::protobuf::int32 guild_server_;
  ::google::protobuf::int32 guild_icon_;
  ::google::protobuf::int32 guild_level_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_fight_pvp_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_fight_pvp_look) */ {
 public:
  smsg_guild_fight_pvp_look();
  virtual ~smsg_guild_fight_pvp_look();

  smsg_guild_fight_pvp_look(const smsg_guild_fight_pvp_look& from);

  inline smsg_guild_fight_pvp_look& operator=(const smsg_guild_fight_pvp_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_fight_pvp_look(smsg_guild_fight_pvp_look&& from) noexcept
    : smsg_guild_fight_pvp_look() {
    *this = ::std::move(from);
  }

  inline smsg_guild_fight_pvp_look& operator=(smsg_guild_fight_pvp_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_fight_pvp_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_fight_pvp_look* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_fight_pvp_look*>(
               &_smsg_guild_fight_pvp_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    192;

  void Swap(smsg_guild_fight_pvp_look* other);
  friend void swap(smsg_guild_fight_pvp_look& a, smsg_guild_fight_pvp_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_fight_pvp_look* New() const final {
    return CreateMaybeMessage<smsg_guild_fight_pvp_look>(NULL);
  }

  smsg_guild_fight_pvp_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_fight_pvp_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_fight_pvp_look& from);
  void MergeFrom(const smsg_guild_fight_pvp_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_fight_pvp_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_guild_arrange arrange = 2;
  bool has_arrange() const;
  void clear_arrange();
  static const int kArrangeFieldNumber = 2;
  private:
  const ::protocol::game::msg_guild_arrange& _internal_arrange() const;
  public:
  const ::protocol::game::msg_guild_arrange& arrange() const;
  ::protocol::game::msg_guild_arrange* release_arrange();
  ::protocol::game::msg_guild_arrange* mutable_arrange();
  void set_allocated_arrange(::protocol::game::msg_guild_arrange* arrange);

  // .protocol.game.msg_guild_zhanji zhanji = 3;
  bool has_zhanji() const;
  void clear_zhanji();
  static const int kZhanjiFieldNumber = 3;
  private:
  const ::protocol::game::msg_guild_zhanji& _internal_zhanji() const;
  public:
  const ::protocol::game::msg_guild_zhanji& zhanji() const;
  ::protocol::game::msg_guild_zhanji* release_zhanji();
  ::protocol::game::msg_guild_zhanji* mutable_zhanji();
  void set_allocated_zhanji(::protocol::game::msg_guild_zhanji* zhanji);

  // .protocol.game.msg_guild_fight fight = 4;
  bool has_fight() const;
  void clear_fight();
  static const int kFightFieldNumber = 4;
  private:
  const ::protocol::game::msg_guild_fight& _internal_fight() const;
  public:
  const ::protocol::game::msg_guild_fight& fight() const;
  ::protocol::game::msg_guild_fight* release_fight();
  ::protocol::game::msg_guild_fight* mutable_fight();
  void set_allocated_fight(::protocol::game::msg_guild_fight* fight);

  // .protocol.game.msg_guild_member_info member = 5;
  bool has_member() const;
  void clear_member();
  static const int kMemberFieldNumber = 5;
  private:
  const ::protocol::game::msg_guild_member_info& _internal_member() const;
  public:
  const ::protocol::game::msg_guild_member_info& member() const;
  ::protocol::game::msg_guild_member_info* release_member();
  ::protocol::game::msg_guild_member_info* mutable_member();
  void set_allocated_member(::protocol::game::msg_guild_member_info* member);

  // int32 stat = 1;
  void clear_stat();
  static const int kStatFieldNumber = 1;
  ::google::protobuf::int32 stat() const;
  void set_stat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_fight_pvp_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_guild_arrange* arrange_;
  ::protocol::game::msg_guild_zhanji* zhanji_;
  ::protocol::game::msg_guild_fight* fight_;
  ::protocol::game::msg_guild_member_info* member_;
  ::google::protobuf::int32 stat_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_pvp_bushu : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_pvp_bushu) */ {
 public:
  cmsg_guild_pvp_bushu();
  virtual ~cmsg_guild_pvp_bushu();

  cmsg_guild_pvp_bushu(const cmsg_guild_pvp_bushu& from);

  inline cmsg_guild_pvp_bushu& operator=(const cmsg_guild_pvp_bushu& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_pvp_bushu(cmsg_guild_pvp_bushu&& from) noexcept
    : cmsg_guild_pvp_bushu() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_pvp_bushu& operator=(cmsg_guild_pvp_bushu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_pvp_bushu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_pvp_bushu* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_pvp_bushu*>(
               &_cmsg_guild_pvp_bushu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    193;

  void Swap(cmsg_guild_pvp_bushu* other);
  friend void swap(cmsg_guild_pvp_bushu& a, cmsg_guild_pvp_bushu& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_pvp_bushu* New() const final {
    return CreateMaybeMessage<cmsg_guild_pvp_bushu>(NULL);
  }

  cmsg_guild_pvp_bushu* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_pvp_bushu>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_pvp_bushu& from);
  void MergeFrom(const cmsg_guild_pvp_bushu& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_pvp_bushu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 player_guids = 2;
  int player_guids_size() const;
  void clear_player_guids();
  static const int kPlayerGuidsFieldNumber = 2;
  ::google::protobuf::uint64 player_guids(int index) const;
  void set_player_guids(int index, ::google::protobuf::uint64 value);
  void add_player_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_guids();

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_pvp_bushu)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_guids_;
  mutable int _player_guids_cached_byte_size_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_fight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_fight) */ {
 public:
  cmsg_guild_fight();
  virtual ~cmsg_guild_fight();

  cmsg_guild_fight(const cmsg_guild_fight& from);

  inline cmsg_guild_fight& operator=(const cmsg_guild_fight& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_fight(cmsg_guild_fight&& from) noexcept
    : cmsg_guild_fight() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_fight& operator=(cmsg_guild_fight&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_fight& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_fight* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_fight*>(
               &_cmsg_guild_fight_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    194;

  void Swap(cmsg_guild_fight* other);
  friend void swap(cmsg_guild_fight& a, cmsg_guild_fight& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_fight* New() const final {
    return CreateMaybeMessage<cmsg_guild_fight>(NULL);
  }

  cmsg_guild_fight* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_fight>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_fight& from);
  void MergeFrom(const cmsg_guild_fight& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_fight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 target_guild = 2;
  void clear_target_guild();
  static const int kTargetGuildFieldNumber = 2;
  ::google::protobuf::uint64 target_guild() const;
  void set_target_guild(::google::protobuf::uint64 value);

  // int32 target_index = 3;
  void clear_target_index();
  static const int kTargetIndexFieldNumber = 3;
  ::google::protobuf::int32 target_index() const;
  void set_target_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_fight)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 target_guild_;
  ::google::protobuf::int32 target_index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_guild_fight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_guild_fight) */ {
 public:
  smsg_guild_fight();
  virtual ~smsg_guild_fight();

  smsg_guild_fight(const smsg_guild_fight& from);

  inline smsg_guild_fight& operator=(const smsg_guild_fight& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_guild_fight(smsg_guild_fight&& from) noexcept
    : smsg_guild_fight() {
    *this = ::std::move(from);
  }

  inline smsg_guild_fight& operator=(smsg_guild_fight&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_guild_fight& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_guild_fight* internal_default_instance() {
    return reinterpret_cast<const smsg_guild_fight*>(
               &_smsg_guild_fight_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    195;

  void Swap(smsg_guild_fight* other);
  friend void swap(smsg_guild_fight& a, smsg_guild_fight& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_guild_fight* New() const final {
    return CreateMaybeMessage<smsg_guild_fight>(NULL);
  }

  smsg_guild_fight* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_guild_fight>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_guild_fight& from);
  void MergeFrom(const smsg_guild_fight& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_guild_fight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes text = 1;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // int32 result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 guard_point = 3;
  void clear_guard_point();
  static const int kGuardPointFieldNumber = 3;
  ::google::protobuf::int32 guard_point() const;
  void set_guard_point(::google::protobuf::int32 value);

  // int32 gongxian = 4;
  void clear_gongxian();
  static const int kGongxianFieldNumber = 4;
  ::google::protobuf::int32 gongxian() const;
  void set_gongxian(::google::protobuf::int32 value);

  // int32 zhanji = 5;
  void clear_zhanji();
  static const int kZhanjiFieldNumber = 5;
  ::google::protobuf::int32 zhanji() const;
  void set_zhanji(::google::protobuf::int32 value);

  // int32 judian = 6;
  void clear_judian();
  static const int kJudianFieldNumber = 6;
  ::google::protobuf::int32 judian() const;
  void set_judian(::google::protobuf::int32 value);

  // int32 jidi = 7;
  void clear_jidi();
  static const int kJidiFieldNumber = 7;
  ::google::protobuf::int32 jidi() const;
  void set_jidi(::google::protobuf::int32 value);

  // int32 perfect = 8;
  void clear_perfect();
  static const int kPerfectFieldNumber = 8;
  ::google::protobuf::int32 perfect() const;
  void set_perfect(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_guild_fight)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 guard_point_;
  ::google::protobuf::int32 gongxian_;
  ::google::protobuf::int32 zhanji_;
  ::google::protobuf::int32 judian_;
  ::google::protobuf::int32 jidi_;
  ::google::protobuf::int32 perfect_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_guild_pvp_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_guild_pvp_reward) */ {
 public:
  cmsg_guild_pvp_reward();
  virtual ~cmsg_guild_pvp_reward();

  cmsg_guild_pvp_reward(const cmsg_guild_pvp_reward& from);

  inline cmsg_guild_pvp_reward& operator=(const cmsg_guild_pvp_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_guild_pvp_reward(cmsg_guild_pvp_reward&& from) noexcept
    : cmsg_guild_pvp_reward() {
    *this = ::std::move(from);
  }

  inline cmsg_guild_pvp_reward& operator=(cmsg_guild_pvp_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_guild_pvp_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_guild_pvp_reward* internal_default_instance() {
    return reinterpret_cast<const cmsg_guild_pvp_reward*>(
               &_cmsg_guild_pvp_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    196;

  void Swap(cmsg_guild_pvp_reward* other);
  friend void swap(cmsg_guild_pvp_reward& a, cmsg_guild_pvp_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_guild_pvp_reward* New() const final {
    return CreateMaybeMessage<cmsg_guild_pvp_reward>(NULL);
  }

  cmsg_guild_pvp_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_guild_pvp_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_guild_pvp_reward& from);
  void MergeFrom(const cmsg_guild_pvp_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_guild_pvp_reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_guild_pvp_reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_rank_view : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_rank_view) */ {
 public:
  cmsg_rank_view();
  virtual ~cmsg_rank_view();

  cmsg_rank_view(const cmsg_rank_view& from);

  inline cmsg_rank_view& operator=(const cmsg_rank_view& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_rank_view(cmsg_rank_view&& from) noexcept
    : cmsg_rank_view() {
    *this = ::std::move(from);
  }

  inline cmsg_rank_view& operator=(cmsg_rank_view&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_rank_view& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_rank_view* internal_default_instance() {
    return reinterpret_cast<const cmsg_rank_view*>(
               &_cmsg_rank_view_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    197;

  void Swap(cmsg_rank_view* other);
  friend void swap(cmsg_rank_view& a, cmsg_rank_view& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_rank_view* New() const final {
    return CreateMaybeMessage<cmsg_rank_view>(NULL);
  }

  cmsg_rank_view* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_rank_view>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_rank_view& from);
  void MergeFrom(const cmsg_rank_view& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_rank_view* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_rank_view)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_rank_view : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_rank_view) */ {
 public:
  smsg_rank_view();
  virtual ~smsg_rank_view();

  smsg_rank_view(const smsg_rank_view& from);

  inline smsg_rank_view& operator=(const smsg_rank_view& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_rank_view(smsg_rank_view&& from) noexcept
    : smsg_rank_view() {
    *this = ::std::move(from);
  }

  inline smsg_rank_view& operator=(smsg_rank_view&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_rank_view& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_rank_view* internal_default_instance() {
    return reinterpret_cast<const smsg_rank_view*>(
               &_smsg_rank_view_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    198;

  void Swap(smsg_rank_view* other);
  friend void swap(smsg_rank_view& a, smsg_rank_view& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_rank_view* New() const final {
    return CreateMaybeMessage<smsg_rank_view>(NULL);
  }

  smsg_rank_view* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_rank_view>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_rank_view& from);
  void MergeFrom(const smsg_rank_view& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_rank_view* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .dhc.rank_t rank_list = 1;
  bool has_rank_list() const;
  void clear_rank_list();
  static const int kRankListFieldNumber = 1;
  private:
  const ::dhc::rank_t& _internal_rank_list() const;
  public:
  const ::dhc::rank_t& rank_list() const;
  ::dhc::rank_t* release_rank_list();
  ::dhc::rank_t* mutable_rank_list();
  void set_allocated_rank_list(::dhc::rank_t* rank_list);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_rank_view)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::dhc::rank_t* rank_list_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_social_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_social_look) */ {
 public:
  smsg_social_look();
  virtual ~smsg_social_look();

  smsg_social_look(const smsg_social_look& from);

  inline smsg_social_look& operator=(const smsg_social_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_social_look(smsg_social_look&& from) noexcept
    : smsg_social_look() {
    *this = ::std::move(from);
  }

  inline smsg_social_look& operator=(smsg_social_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_social_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_social_look* internal_default_instance() {
    return reinterpret_cast<const smsg_social_look*>(
               &_smsg_social_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    199;

  void Swap(smsg_social_look* other);
  friend void swap(smsg_social_look& a, smsg_social_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_social_look* New() const final {
    return CreateMaybeMessage<smsg_social_look>(NULL);
  }

  smsg_social_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_social_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_social_look& from);
  void MergeFrom(const smsg_social_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_social_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.social_t social = 1;
  int social_size() const;
  void clear_social();
  static const int kSocialFieldNumber = 1;
  ::dhc::social_t* mutable_social(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::social_t >*
      mutable_social();
  const ::dhc::social_t& social(int index) const;
  ::dhc::social_t* add_social();
  const ::google::protobuf::RepeatedPtrField< ::dhc::social_t >&
      social() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_social_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::social_t > social_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_social_player : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_social_player) */ {
 public:
  msg_social_player();
  virtual ~msg_social_player();

  msg_social_player(const msg_social_player& from);

  inline msg_social_player& operator=(const msg_social_player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_social_player(msg_social_player&& from) noexcept
    : msg_social_player() {
    *this = ::std::move(from);
  }

  inline msg_social_player& operator=(msg_social_player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_social_player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_social_player* internal_default_instance() {
    return reinterpret_cast<const msg_social_player*>(
               &_msg_social_player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    200;

  void Swap(msg_social_player* other);
  friend void swap(msg_social_player& a, msg_social_player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_social_player* New() const final {
    return CreateMaybeMessage<msg_social_player>(NULL);
  }

  msg_social_player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_social_player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_social_player& from);
  void MergeFrom(const msg_social_player& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_social_player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string player_name = 2;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // uint64 player_guid = 1;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 1;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // uint64 player_template = 3;
  void clear_player_template();
  static const int kPlayerTemplateFieldNumber = 3;
  ::google::protobuf::uint64 player_template() const;
  void set_player_template(::google::protobuf::uint64 value);

  // uint64 player_bf = 5;
  void clear_player_bf();
  static const int kPlayerBfFieldNumber = 5;
  ::google::protobuf::uint64 player_bf() const;
  void set_player_bf(::google::protobuf::uint64 value);

  // int32 player_level = 4;
  void clear_player_level();
  static const int kPlayerLevelFieldNumber = 4;
  ::google::protobuf::int32 player_level() const;
  void set_player_level(::google::protobuf::int32 value);

  // int32 player_vip = 6;
  void clear_player_vip();
  static const int kPlayerVipFieldNumber = 6;
  ::google::protobuf::int32 player_vip() const;
  void set_player_vip(::google::protobuf::int32 value);

  // uint64 offline_time = 8;
  void clear_offline_time();
  static const int kOfflineTimeFieldNumber = 8;
  ::google::protobuf::uint64 offline_time() const;
  void set_offline_time(::google::protobuf::uint64 value);

  // int32 player_achieve = 7;
  void clear_player_achieve();
  static const int kPlayerAchieveFieldNumber = 7;
  ::google::protobuf::int32 player_achieve() const;
  void set_player_achieve(::google::protobuf::int32 value);

  // int32 nalflag = 9;
  void clear_nalflag();
  static const int kNalflagFieldNumber = 9;
  ::google::protobuf::int32 nalflag() const;
  void set_nalflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_social_player)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::uint64 player_guid_;
  ::google::protobuf::uint64 player_template_;
  ::google::protobuf::uint64 player_bf_;
  ::google::protobuf::int32 player_level_;
  ::google::protobuf::int32 player_vip_;
  ::google::protobuf::uint64 offline_time_;
  ::google::protobuf::int32 player_achieve_;
  ::google::protobuf::int32 nalflag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_social_rand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_social_rand) */ {
 public:
  smsg_social_rand();
  virtual ~smsg_social_rand();

  smsg_social_rand(const smsg_social_rand& from);

  inline smsg_social_rand& operator=(const smsg_social_rand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_social_rand(smsg_social_rand&& from) noexcept
    : smsg_social_rand() {
    *this = ::std::move(from);
  }

  inline smsg_social_rand& operator=(smsg_social_rand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_social_rand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_social_rand* internal_default_instance() {
    return reinterpret_cast<const smsg_social_rand*>(
               &_smsg_social_rand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    201;

  void Swap(smsg_social_rand* other);
  friend void swap(smsg_social_rand& a, smsg_social_rand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_social_rand* New() const final {
    return CreateMaybeMessage<smsg_social_rand>(NULL);
  }

  smsg_social_rand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_social_rand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_social_rand& from);
  void MergeFrom(const smsg_social_rand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_social_rand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.msg_social_player social_player = 1;
  int social_player_size() const;
  void clear_social_player();
  static const int kSocialPlayerFieldNumber = 1;
  ::protocol::game::msg_social_player* mutable_social_player(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_social_player >*
      mutable_social_player();
  const ::protocol::game::msg_social_player& social_player(int index) const;
  ::protocol::game::msg_social_player* add_social_player();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_social_player >&
      social_player() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_social_rand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_social_player > social_player_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_social_add : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_social_add) */ {
 public:
  cmsg_social_add();
  virtual ~cmsg_social_add();

  cmsg_social_add(const cmsg_social_add& from);

  inline cmsg_social_add& operator=(const cmsg_social_add& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_social_add(cmsg_social_add&& from) noexcept
    : cmsg_social_add() {
    *this = ::std::move(from);
  }

  inline cmsg_social_add& operator=(cmsg_social_add&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_social_add& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_social_add* internal_default_instance() {
    return reinterpret_cast<const cmsg_social_add*>(
               &_cmsg_social_add_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    202;

  void Swap(cmsg_social_add* other);
  friend void swap(cmsg_social_add& a, cmsg_social_add& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_social_add* New() const final {
    return CreateMaybeMessage<cmsg_social_add>(NULL);
  }

  cmsg_social_add* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_social_add>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_social_add& from);
  void MergeFrom(const cmsg_social_add& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_social_add* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 player_guid = 2;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 2;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_social_add)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 player_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_social_add : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_social_add) */ {
 public:
  smsg_social_add();
  virtual ~smsg_social_add();

  smsg_social_add(const smsg_social_add& from);

  inline smsg_social_add& operator=(const smsg_social_add& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_social_add(smsg_social_add&& from) noexcept
    : smsg_social_add() {
    *this = ::std::move(from);
  }

  inline smsg_social_add& operator=(smsg_social_add&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_social_add& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_social_add* internal_default_instance() {
    return reinterpret_cast<const smsg_social_add*>(
               &_smsg_social_add_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    203;

  void Swap(smsg_social_add* other);
  friend void swap(smsg_social_add& a, smsg_social_add& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_social_add* New() const final {
    return CreateMaybeMessage<smsg_social_add>(NULL);
  }

  smsg_social_add* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_social_add>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_social_add& from);
  void MergeFrom(const smsg_social_add& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_social_add* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 player_guid = 1;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 1;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_social_add)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 player_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_social_look_new : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_social_look_new) */ {
 public:
  smsg_social_look_new();
  virtual ~smsg_social_look_new();

  smsg_social_look_new(const smsg_social_look_new& from);

  inline smsg_social_look_new& operator=(const smsg_social_look_new& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_social_look_new(smsg_social_look_new&& from) noexcept
    : smsg_social_look_new() {
    *this = ::std::move(from);
  }

  inline smsg_social_look_new& operator=(smsg_social_look_new&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_social_look_new& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_social_look_new* internal_default_instance() {
    return reinterpret_cast<const smsg_social_look_new*>(
               &_smsg_social_look_new_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    204;

  void Swap(smsg_social_look_new* other);
  friend void swap(smsg_social_look_new& a, smsg_social_look_new& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_social_look_new* New() const final {
    return CreateMaybeMessage<smsg_social_look_new>(NULL);
  }

  smsg_social_look_new* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_social_look_new>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_social_look_new& from);
  void MergeFrom(const smsg_social_look_new& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_social_look_new* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.msg_social_player social_player = 1;
  int social_player_size() const;
  void clear_social_player();
  static const int kSocialPlayerFieldNumber = 1;
  ::protocol::game::msg_social_player* mutable_social_player(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_social_player >*
      mutable_social_player();
  const ::protocol::game::msg_social_player& social_player(int index) const;
  ::protocol::game::msg_social_player* add_social_player();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_social_player >&
      social_player() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_social_look_new)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_social_player > social_player_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_social_agree : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_social_agree) */ {
 public:
  cmsg_social_agree();
  virtual ~cmsg_social_agree();

  cmsg_social_agree(const cmsg_social_agree& from);

  inline cmsg_social_agree& operator=(const cmsg_social_agree& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_social_agree(cmsg_social_agree&& from) noexcept
    : cmsg_social_agree() {
    *this = ::std::move(from);
  }

  inline cmsg_social_agree& operator=(cmsg_social_agree&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_social_agree& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_social_agree* internal_default_instance() {
    return reinterpret_cast<const cmsg_social_agree*>(
               &_cmsg_social_agree_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    205;

  void Swap(cmsg_social_agree* other);
  friend void swap(cmsg_social_agree& a, cmsg_social_agree& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_social_agree* New() const final {
    return CreateMaybeMessage<cmsg_social_agree>(NULL);
  }

  cmsg_social_agree* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_social_agree>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_social_agree& from);
  void MergeFrom(const cmsg_social_agree& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_social_agree* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 player_guid = 2;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 2;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // int32 agree = 3;
  void clear_agree();
  static const int kAgreeFieldNumber = 3;
  ::google::protobuf::int32 agree() const;
  void set_agree(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_social_agree)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 player_guid_;
  ::google::protobuf::int32 agree_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_social_agree : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_social_agree) */ {
 public:
  smsg_social_agree();
  virtual ~smsg_social_agree();

  smsg_social_agree(const smsg_social_agree& from);

  inline smsg_social_agree& operator=(const smsg_social_agree& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_social_agree(smsg_social_agree&& from) noexcept
    : smsg_social_agree() {
    *this = ::std::move(from);
  }

  inline smsg_social_agree& operator=(smsg_social_agree&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_social_agree& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_social_agree* internal_default_instance() {
    return reinterpret_cast<const smsg_social_agree*>(
               &_smsg_social_agree_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    206;

  void Swap(smsg_social_agree* other);
  friend void swap(smsg_social_agree& a, smsg_social_agree& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_social_agree* New() const final {
    return CreateMaybeMessage<smsg_social_agree>(NULL);
  }

  smsg_social_agree* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_social_agree>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_social_agree& from);
  void MergeFrom(const smsg_social_agree& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_social_agree* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 player_guid = 1;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 1;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // int32 agree = 2;
  void clear_agree();
  static const int kAgreeFieldNumber = 2;
  ::google::protobuf::int32 agree() const;
  void set_agree(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_social_agree)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 player_guid_;
  ::google::protobuf::int32 agree_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_social_delete : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_social_delete) */ {
 public:
  cmsg_social_delete();
  virtual ~cmsg_social_delete();

  cmsg_social_delete(const cmsg_social_delete& from);

  inline cmsg_social_delete& operator=(const cmsg_social_delete& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_social_delete(cmsg_social_delete&& from) noexcept
    : cmsg_social_delete() {
    *this = ::std::move(from);
  }

  inline cmsg_social_delete& operator=(cmsg_social_delete&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_social_delete& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_social_delete* internal_default_instance() {
    return reinterpret_cast<const cmsg_social_delete*>(
               &_cmsg_social_delete_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    207;

  void Swap(cmsg_social_delete* other);
  friend void swap(cmsg_social_delete& a, cmsg_social_delete& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_social_delete* New() const final {
    return CreateMaybeMessage<cmsg_social_delete>(NULL);
  }

  cmsg_social_delete* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_social_delete>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_social_delete& from);
  void MergeFrom(const cmsg_social_delete& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_social_delete* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 social_guid = 2;
  void clear_social_guid();
  static const int kSocialGuidFieldNumber = 2;
  ::google::protobuf::uint64 social_guid() const;
  void set_social_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_social_delete)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 social_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_social_delete : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_social_delete) */ {
 public:
  smsg_social_delete();
  virtual ~smsg_social_delete();

  smsg_social_delete(const smsg_social_delete& from);

  inline smsg_social_delete& operator=(const smsg_social_delete& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_social_delete(smsg_social_delete&& from) noexcept
    : smsg_social_delete() {
    *this = ::std::move(from);
  }

  inline smsg_social_delete& operator=(smsg_social_delete&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_social_delete& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_social_delete* internal_default_instance() {
    return reinterpret_cast<const smsg_social_delete*>(
               &_smsg_social_delete_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    208;

  void Swap(smsg_social_delete* other);
  friend void swap(smsg_social_delete& a, smsg_social_delete& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_social_delete* New() const final {
    return CreateMaybeMessage<smsg_social_delete>(NULL);
  }

  smsg_social_delete* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_social_delete>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_social_delete& from);
  void MergeFrom(const smsg_social_delete& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_social_delete* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 social_guid = 1;
  void clear_social_guid();
  static const int kSocialGuidFieldNumber = 1;
  ::google::protobuf::uint64 social_guid() const;
  void set_social_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_social_delete)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 social_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_social_song : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_social_song) */ {
 public:
  cmsg_social_song();
  virtual ~cmsg_social_song();

  cmsg_social_song(const cmsg_social_song& from);

  inline cmsg_social_song& operator=(const cmsg_social_song& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_social_song(cmsg_social_song&& from) noexcept
    : cmsg_social_song() {
    *this = ::std::move(from);
  }

  inline cmsg_social_song& operator=(cmsg_social_song&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_social_song& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_social_song* internal_default_instance() {
    return reinterpret_cast<const cmsg_social_song*>(
               &_cmsg_social_song_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    209;

  void Swap(cmsg_social_song* other);
  friend void swap(cmsg_social_song& a, cmsg_social_song& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_social_song* New() const final {
    return CreateMaybeMessage<cmsg_social_song>(NULL);
  }

  cmsg_social_song* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_social_song>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_social_song& from);
  void MergeFrom(const cmsg_social_song& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_social_song* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 social_guid = 2;
  void clear_social_guid();
  static const int kSocialGuidFieldNumber = 2;
  ::google::protobuf::uint64 social_guid() const;
  void set_social_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_social_song)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 social_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_social_song : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_social_song) */ {
 public:
  smsg_social_song();
  virtual ~smsg_social_song();

  smsg_social_song(const smsg_social_song& from);

  inline smsg_social_song& operator=(const smsg_social_song& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_social_song(smsg_social_song&& from) noexcept
    : smsg_social_song() {
    *this = ::std::move(from);
  }

  inline smsg_social_song& operator=(smsg_social_song&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_social_song& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_social_song* internal_default_instance() {
    return reinterpret_cast<const smsg_social_song*>(
               &_smsg_social_song_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    210;

  void Swap(smsg_social_song* other);
  friend void swap(smsg_social_song& a, smsg_social_song& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_social_song* New() const final {
    return CreateMaybeMessage<smsg_social_song>(NULL);
  }

  smsg_social_song* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_social_song>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_social_song& from);
  void MergeFrom(const smsg_social_song& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_social_song* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 social_guid = 1;
  void clear_social_guid();
  static const int kSocialGuidFieldNumber = 1;
  ::google::protobuf::uint64 social_guid() const;
  void set_social_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_social_song)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 social_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_social_shou : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_social_shou) */ {
 public:
  smsg_social_shou();
  virtual ~smsg_social_shou();

  smsg_social_shou(const smsg_social_shou& from);

  inline smsg_social_shou& operator=(const smsg_social_shou& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_social_shou(smsg_social_shou&& from) noexcept
    : smsg_social_shou() {
    *this = ::std::move(from);
  }

  inline smsg_social_shou& operator=(smsg_social_shou&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_social_shou& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_social_shou* internal_default_instance() {
    return reinterpret_cast<const smsg_social_shou*>(
               &_smsg_social_shou_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    211;

  void Swap(smsg_social_shou* other);
  friend void swap(smsg_social_shou& a, smsg_social_shou& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_social_shou* New() const final {
    return CreateMaybeMessage<smsg_social_shou>(NULL);
  }

  smsg_social_shou* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_social_shou>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_social_shou& from);
  void MergeFrom(const smsg_social_shou& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_social_shou* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 social_guids = 1;
  int social_guids_size() const;
  void clear_social_guids();
  static const int kSocialGuidsFieldNumber = 1;
  ::google::protobuf::uint64 social_guids(int index) const;
  void set_social_guids(int index, ::google::protobuf::uint64 value);
  void add_social_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      social_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_social_guids();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_social_shou)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > social_guids_;
  mutable int _social_guids_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_social_invite_active : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_social_invite_active) */ {
 public:
  cmsg_social_invite_active();
  virtual ~cmsg_social_invite_active();

  cmsg_social_invite_active(const cmsg_social_invite_active& from);

  inline cmsg_social_invite_active& operator=(const cmsg_social_invite_active& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_social_invite_active(cmsg_social_invite_active&& from) noexcept
    : cmsg_social_invite_active() {
    *this = ::std::move(from);
  }

  inline cmsg_social_invite_active& operator=(cmsg_social_invite_active&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_social_invite_active& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_social_invite_active* internal_default_instance() {
    return reinterpret_cast<const cmsg_social_invite_active*>(
               &_cmsg_social_invite_active_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    212;

  void Swap(cmsg_social_invite_active* other);
  friend void swap(cmsg_social_invite_active& a, cmsg_social_invite_active& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_social_invite_active* New() const final {
    return CreateMaybeMessage<cmsg_social_invite_active>(NULL);
  }

  cmsg_social_invite_active* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_social_invite_active>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_social_invite_active& from);
  void MergeFrom(const cmsg_social_invite_active& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_social_invite_active* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_social_invite_active)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_player_check : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_player_check) */ {
 public:
  smsg_player_check();
  virtual ~smsg_player_check();

  smsg_player_check(const smsg_player_check& from);

  inline smsg_player_check& operator=(const smsg_player_check& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_player_check(smsg_player_check&& from) noexcept
    : smsg_player_check() {
    *this = ::std::move(from);
  }

  inline smsg_player_check& operator=(smsg_player_check&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_player_check& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_player_check* internal_default_instance() {
    return reinterpret_cast<const smsg_player_check*>(
               &_smsg_player_check_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    213;

  void Swap(smsg_player_check* other);
  friend void swap(smsg_player_check& a, smsg_player_check& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_player_check* New() const final {
    return CreateMaybeMessage<smsg_player_check>(NULL);
  }

  smsg_player_check* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_player_check>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_player_check& from);
  void MergeFrom(const smsg_player_check& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_player_check* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string huodong = 11;
  void clear_huodong();
  static const int kHuodongFieldNumber = 11;
  const ::std::string& huodong() const;
  void set_huodong(const ::std::string& value);
  #if LANG_CXX11
  void set_huodong(::std::string&& value);
  #endif
  void set_huodong(const char* value);
  void set_huodong(const char* value, size_t size);
  ::std::string* mutable_huodong();
  ::std::string* release_huodong();
  void set_allocated_huodong(::std::string* huodong);

  // string huodong_item1 = 12;
  void clear_huodong_item1();
  static const int kHuodongItem1FieldNumber = 12;
  const ::std::string& huodong_item1() const;
  void set_huodong_item1(const ::std::string& value);
  #if LANG_CXX11
  void set_huodong_item1(::std::string&& value);
  #endif
  void set_huodong_item1(const char* value);
  void set_huodong_item1(const char* value, size_t size);
  ::std::string* mutable_huodong_item1();
  ::std::string* release_huodong_item1();
  void set_allocated_huodong_item1(::std::string* huodong_item1);

  // string huodong_des1 = 13;
  void clear_huodong_des1();
  static const int kHuodongDes1FieldNumber = 13;
  const ::std::string& huodong_des1() const;
  void set_huodong_des1(const ::std::string& value);
  #if LANG_CXX11
  void set_huodong_des1(::std::string&& value);
  #endif
  void set_huodong_des1(const char* value);
  void set_huodong_des1(const char* value, size_t size);
  ::std::string* mutable_huodong_des1();
  ::std::string* release_huodong_des1();
  void set_allocated_huodong_des1(::std::string* huodong_des1);

  // string huodong_item2 = 14;
  void clear_huodong_item2();
  static const int kHuodongItem2FieldNumber = 14;
  const ::std::string& huodong_item2() const;
  void set_huodong_item2(const ::std::string& value);
  #if LANG_CXX11
  void set_huodong_item2(::std::string&& value);
  #endif
  void set_huodong_item2(const char* value);
  void set_huodong_item2(const char* value, size_t size);
  ::std::string* mutable_huodong_item2();
  ::std::string* release_huodong_item2();
  void set_allocated_huodong_item2(::std::string* huodong_item2);

  // string huodong_des2 = 15;
  void clear_huodong_des2();
  static const int kHuodongDes2FieldNumber = 15;
  const ::std::string& huodong_des2() const;
  void set_huodong_des2(const ::std::string& value);
  #if LANG_CXX11
  void set_huodong_des2(::std::string&& value);
  #endif
  void set_huodong_des2(const char* value);
  void set_huodong_des2(const char* value, size_t size);
  ::std::string* mutable_huodong_des2();
  ::std::string* release_huodong_des2();
  void set_allocated_huodong_des2(::std::string* huodong_des2);

  // int32 post = 1;
  void clear_post();
  static const int kPostFieldNumber = 1;
  ::google::protobuf::int32 post() const;
  void set_post(::google::protobuf::int32 value);

  // int32 friend_apply = 2;
  void clear_friend_apply();
  static const int kFriendApplyFieldNumber = 2;
  ::google::protobuf::int32 friend_apply() const;
  void set_friend_apply(::google::protobuf::int32 value);

  // int32 friend_tili = 3;
  void clear_friend_tili();
  static const int kFriendTiliFieldNumber = 3;
  ::google::protobuf::int32 friend_tili() const;
  void set_friend_tili(::google::protobuf::int32 value);

  // int32 kaifu = 4;
  void clear_kaifu();
  static const int kKaifuFieldNumber = 4;
  ::google::protobuf::int32 kaifu() const;
  void set_kaifu(::google::protobuf::int32 value);

  // int32 pttq = 5;
  void clear_pttq();
  static const int kPttqFieldNumber = 5;
  ::google::protobuf::int32 pttq() const;
  void set_pttq(::google::protobuf::int32 value);

  // int32 yb = 6;
  void clear_yb();
  static const int kYbFieldNumber = 6;
  ::google::protobuf::int32 yb() const;
  void set_yb(::google::protobuf::int32 value);

  // int32 qd = 7;
  void clear_qd();
  static const int kQdFieldNumber = 7;
  ::google::protobuf::int32 qd() const;
  void set_qd(::google::protobuf::int32 value);

  // int32 jjc = 8;
  void clear_jjc();
  static const int kJjcFieldNumber = 8;
  ::google::protobuf::int32 jjc() const;
  void set_jjc(::google::protobuf::int32 value);

  // int32 shop_refresh = 9;
  void clear_shop_refresh();
  static const int kShopRefreshFieldNumber = 9;
  ::google::protobuf::int32 shop_refresh() const;
  void set_shop_refresh(::google::protobuf::int32 value);

  // int32 guild = 10;
  void clear_guild();
  static const int kGuildFieldNumber = 10;
  ::google::protobuf::int32 guild() const;
  void set_guild(::google::protobuf::int32 value);

  // bool jieri_chanchu = 16;
  void clear_jieri_chanchu();
  static const int kJieriChanchuFieldNumber = 16;
  bool jieri_chanchu() const;
  void set_jieri_chanchu(bool value);

  // int32 jieri_point = 17;
  void clear_jieri_point();
  static const int kJieriPointFieldNumber = 17;
  ::google::protobuf::int32 jieri_point() const;
  void set_jieri_point(::google::protobuf::int32 value);

  // int32 xingheqidian = 18;
  void clear_xingheqidian();
  static const int kXingheqidianFieldNumber = 18;
  ::google::protobuf::int32 xingheqidian() const;
  void set_xingheqidian(::google::protobuf::int32 value);

  // int32 bingyuan = 19;
  void clear_bingyuan();
  static const int kBingyuanFieldNumber = 19;
  ::google::protobuf::int32 bingyuan() const;
  void set_bingyuan(::google::protobuf::int32 value);

  // int32 duanwei = 20;
  void clear_duanwei();
  static const int kDuanweiFieldNumber = 20;
  ::google::protobuf::int32 duanwei() const;
  void set_duanwei(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_player_check)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr huodong_;
  ::google::protobuf::internal::ArenaStringPtr huodong_item1_;
  ::google::protobuf::internal::ArenaStringPtr huodong_des1_;
  ::google::protobuf::internal::ArenaStringPtr huodong_item2_;
  ::google::protobuf::internal::ArenaStringPtr huodong_des2_;
  ::google::protobuf::int32 post_;
  ::google::protobuf::int32 friend_apply_;
  ::google::protobuf::int32 friend_tili_;
  ::google::protobuf::int32 kaifu_;
  ::google::protobuf::int32 pttq_;
  ::google::protobuf::int32 yb_;
  ::google::protobuf::int32 qd_;
  ::google::protobuf::int32 jjc_;
  ::google::protobuf::int32 shop_refresh_;
  ::google::protobuf::int32 guild_;
  bool jieri_chanchu_;
  ::google::protobuf::int32 jieri_point_;
  ::google::protobuf::int32 xingheqidian_;
  ::google::protobuf::int32 bingyuan_;
  ::google::protobuf::int32 duanwei_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_dress_on : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_dress_on) */ {
 public:
  cmsg_dress_on();
  virtual ~cmsg_dress_on();

  cmsg_dress_on(const cmsg_dress_on& from);

  inline cmsg_dress_on& operator=(const cmsg_dress_on& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_dress_on(cmsg_dress_on&& from) noexcept
    : cmsg_dress_on() {
    *this = ::std::move(from);
  }

  inline cmsg_dress_on& operator=(cmsg_dress_on&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_dress_on& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_dress_on* internal_default_instance() {
    return reinterpret_cast<const cmsg_dress_on*>(
               &_cmsg_dress_on_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    214;

  void Swap(cmsg_dress_on* other);
  friend void swap(cmsg_dress_on& a, cmsg_dress_on& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_dress_on* New() const final {
    return CreateMaybeMessage<cmsg_dress_on>(NULL);
  }

  cmsg_dress_on* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_dress_on>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_dress_on& from);
  void MergeFrom(const cmsg_dress_on& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_dress_on* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 dress_id = 2;
  void clear_dress_id();
  static const int kDressIdFieldNumber = 2;
  ::google::protobuf::int32 dress_id() const;
  void set_dress_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_dress_on)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 dress_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_dress_off : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_dress_off) */ {
 public:
  cmsg_dress_off();
  virtual ~cmsg_dress_off();

  cmsg_dress_off(const cmsg_dress_off& from);

  inline cmsg_dress_off& operator=(const cmsg_dress_off& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_dress_off(cmsg_dress_off&& from) noexcept
    : cmsg_dress_off() {
    *this = ::std::move(from);
  }

  inline cmsg_dress_off& operator=(cmsg_dress_off&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_dress_off& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_dress_off* internal_default_instance() {
    return reinterpret_cast<const cmsg_dress_off*>(
               &_cmsg_dress_off_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    215;

  void Swap(cmsg_dress_off* other);
  friend void swap(cmsg_dress_off& a, cmsg_dress_off& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_dress_off* New() const final {
    return CreateMaybeMessage<cmsg_dress_off>(NULL);
  }

  cmsg_dress_off* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_dress_off>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_dress_off& from);
  void MergeFrom(const cmsg_dress_off& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_dress_off* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 dress_id = 2;
  void clear_dress_id();
  static const int kDressIdFieldNumber = 2;
  ::google::protobuf::int32 dress_id() const;
  void set_dress_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_dress_off)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 dress_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_dress_buy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_dress_buy) */ {
 public:
  cmsg_dress_buy();
  virtual ~cmsg_dress_buy();

  cmsg_dress_buy(const cmsg_dress_buy& from);

  inline cmsg_dress_buy& operator=(const cmsg_dress_buy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_dress_buy(cmsg_dress_buy&& from) noexcept
    : cmsg_dress_buy() {
    *this = ::std::move(from);
  }

  inline cmsg_dress_buy& operator=(cmsg_dress_buy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_dress_buy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_dress_buy* internal_default_instance() {
    return reinterpret_cast<const cmsg_dress_buy*>(
               &_cmsg_dress_buy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    216;

  void Swap(cmsg_dress_buy* other);
  friend void swap(cmsg_dress_buy& a, cmsg_dress_buy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_dress_buy* New() const final {
    return CreateMaybeMessage<cmsg_dress_buy>(NULL);
  }

  cmsg_dress_buy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_dress_buy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_dress_buy& from);
  void MergeFrom(const cmsg_dress_buy& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_dress_buy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 dress_id = 2;
  void clear_dress_id();
  static const int kDressIdFieldNumber = 2;
  ::google::protobuf::int32 dress_id() const;
  void set_dress_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_dress_buy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 dress_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_dress_unlock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_dress_unlock) */ {
 public:
  cmsg_dress_unlock();
  virtual ~cmsg_dress_unlock();

  cmsg_dress_unlock(const cmsg_dress_unlock& from);

  inline cmsg_dress_unlock& operator=(const cmsg_dress_unlock& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_dress_unlock(cmsg_dress_unlock&& from) noexcept
    : cmsg_dress_unlock() {
    *this = ::std::move(from);
  }

  inline cmsg_dress_unlock& operator=(cmsg_dress_unlock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_dress_unlock& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_dress_unlock* internal_default_instance() {
    return reinterpret_cast<const cmsg_dress_unlock*>(
               &_cmsg_dress_unlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    217;

  void Swap(cmsg_dress_unlock* other);
  friend void swap(cmsg_dress_unlock& a, cmsg_dress_unlock& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_dress_unlock* New() const final {
    return CreateMaybeMessage<cmsg_dress_unlock>(NULL);
  }

  cmsg_dress_unlock* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_dress_unlock>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_dress_unlock& from);
  void MergeFrom(const cmsg_dress_unlock& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_dress_unlock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 dress_id = 2;
  void clear_dress_id();
  static const int kDressIdFieldNumber = 2;
  ::google::protobuf::int32 dress_id() const;
  void set_dress_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_dress_unlock)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 dress_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_dress_unlock_achieve : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_dress_unlock_achieve) */ {
 public:
  cmsg_dress_unlock_achieve();
  virtual ~cmsg_dress_unlock_achieve();

  cmsg_dress_unlock_achieve(const cmsg_dress_unlock_achieve& from);

  inline cmsg_dress_unlock_achieve& operator=(const cmsg_dress_unlock_achieve& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_dress_unlock_achieve(cmsg_dress_unlock_achieve&& from) noexcept
    : cmsg_dress_unlock_achieve() {
    *this = ::std::move(from);
  }

  inline cmsg_dress_unlock_achieve& operator=(cmsg_dress_unlock_achieve&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_dress_unlock_achieve& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_dress_unlock_achieve* internal_default_instance() {
    return reinterpret_cast<const cmsg_dress_unlock_achieve*>(
               &_cmsg_dress_unlock_achieve_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    218;

  void Swap(cmsg_dress_unlock_achieve* other);
  friend void swap(cmsg_dress_unlock_achieve& a, cmsg_dress_unlock_achieve& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_dress_unlock_achieve* New() const final {
    return CreateMaybeMessage<cmsg_dress_unlock_achieve>(NULL);
  }

  cmsg_dress_unlock_achieve* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_dress_unlock_achieve>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_dress_unlock_achieve& from);
  void MergeFrom(const cmsg_dress_unlock_achieve& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_dress_unlock_achieve* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 achieve_id = 2;
  void clear_achieve_id();
  static const int kAchieveIdFieldNumber = 2;
  ::google::protobuf::int32 achieve_id() const;
  void set_achieve_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_dress_unlock_achieve)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 achieve_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_libao : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_libao) */ {
 public:
  cmsg_libao();
  virtual ~cmsg_libao();

  cmsg_libao(const cmsg_libao& from);

  inline cmsg_libao& operator=(const cmsg_libao& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_libao(cmsg_libao&& from) noexcept
    : cmsg_libao() {
    *this = ::std::move(from);
  }

  inline cmsg_libao& operator=(cmsg_libao&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_libao& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_libao* internal_default_instance() {
    return reinterpret_cast<const cmsg_libao*>(
               &_cmsg_libao_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    219;

  void Swap(cmsg_libao* other);
  friend void swap(cmsg_libao& a, cmsg_libao& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_libao* New() const final {
    return CreateMaybeMessage<cmsg_libao>(NULL);
  }

  cmsg_libao* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_libao>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_libao& from);
  void MergeFrom(const cmsg_libao& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_libao* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_libao)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_libao : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_libao) */ {
 public:
  smsg_libao();
  virtual ~smsg_libao();

  smsg_libao(const smsg_libao& from);

  inline smsg_libao& operator=(const smsg_libao& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_libao(smsg_libao&& from) noexcept
    : smsg_libao() {
    *this = ::std::move(from);
  }

  inline smsg_libao& operator=(smsg_libao&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_libao& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_libao* internal_default_instance() {
    return reinterpret_cast<const smsg_libao*>(
               &_smsg_libao_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    220;

  void Swap(smsg_libao* other);
  friend void swap(smsg_libao& a, smsg_libao& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_libao* New() const final {
    return CreateMaybeMessage<smsg_libao>(NULL);
  }

  smsg_libao* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_libao>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_libao& from);
  void MergeFrom(const smsg_libao& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_libao* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 1;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 1;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 2;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 2;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 3;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 3;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 4;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 4;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.equip_t equips = 5;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 5;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 6;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 6;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 7;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 7;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // int32 chongzhi = 8;
  void clear_chongzhi();
  static const int kChongzhiFieldNumber = 8;
  ::google::protobuf::int32 chongzhi() const;
  void set_chongzhi(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_libao)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::int32 chongzhi_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_xjbz_get : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_xjbz_get) */ {
 public:
  cmsg_xjbz_get();
  virtual ~cmsg_xjbz_get();

  cmsg_xjbz_get(const cmsg_xjbz_get& from);

  inline cmsg_xjbz_get& operator=(const cmsg_xjbz_get& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_xjbz_get(cmsg_xjbz_get&& from) noexcept
    : cmsg_xjbz_get() {
    *this = ::std::move(from);
  }

  inline cmsg_xjbz_get& operator=(cmsg_xjbz_get&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_xjbz_get& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_xjbz_get* internal_default_instance() {
    return reinterpret_cast<const cmsg_xjbz_get*>(
               &_cmsg_xjbz_get_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    221;

  void Swap(cmsg_xjbz_get* other);
  friend void swap(cmsg_xjbz_get& a, cmsg_xjbz_get& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_xjbz_get* New() const final {
    return CreateMaybeMessage<cmsg_xjbz_get>(NULL);
  }

  cmsg_xjbz_get* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_xjbz_get>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_xjbz_get& from);
  void MergeFrom(const cmsg_xjbz_get& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_xjbz_get* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 site = 2;
  void clear_site();
  static const int kSiteFieldNumber = 2;
  ::google::protobuf::int32 site() const;
  void set_site(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_xjbz_get)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 site_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_xjbz_get : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_xjbz_get) */ {
 public:
  smsg_xjbz_get();
  virtual ~smsg_xjbz_get();

  smsg_xjbz_get(const smsg_xjbz_get& from);

  inline smsg_xjbz_get& operator=(const smsg_xjbz_get& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_xjbz_get(smsg_xjbz_get&& from) noexcept
    : smsg_xjbz_get() {
    *this = ::std::move(from);
  }

  inline smsg_xjbz_get& operator=(smsg_xjbz_get&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_xjbz_get& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_xjbz_get* internal_default_instance() {
    return reinterpret_cast<const smsg_xjbz_get*>(
               &_smsg_xjbz_get_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    222;

  void Swap(smsg_xjbz_get* other);
  friend void swap(smsg_xjbz_get& a, smsg_xjbz_get& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_xjbz_get* New() const final {
    return CreateMaybeMessage<smsg_xjbz_get>(NULL);
  }

  smsg_xjbz_get* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_xjbz_get>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_xjbz_get& from);
  void MergeFrom(const smsg_xjbz_get& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_xjbz_get* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 gold = 1;
  void clear_gold();
  static const int kGoldFieldNumber = 1;
  ::google::protobuf::int32 gold() const;
  void set_gold(::google::protobuf::int32 value);

  // int32 baoshi = 2;
  void clear_baoshi();
  static const int kBaoshiFieldNumber = 2;
  ::google::protobuf::int32 baoshi() const;
  void set_baoshi(::google::protobuf::int32 value);

  // int32 zz = 3;
  void clear_zz();
  static const int kZzFieldNumber = 3;
  ::google::protobuf::int32 zz() const;
  void set_zz(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_xjbz_get)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 baoshi_;
  ::google::protobuf::int32 zz_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_recharge_check_ex : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_recharge_check_ex) */ {
 public:
  smsg_recharge_check_ex();
  virtual ~smsg_recharge_check_ex();

  smsg_recharge_check_ex(const smsg_recharge_check_ex& from);

  inline smsg_recharge_check_ex& operator=(const smsg_recharge_check_ex& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_recharge_check_ex(smsg_recharge_check_ex&& from) noexcept
    : smsg_recharge_check_ex() {
    *this = ::std::move(from);
  }

  inline smsg_recharge_check_ex& operator=(smsg_recharge_check_ex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_recharge_check_ex& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_recharge_check_ex* internal_default_instance() {
    return reinterpret_cast<const smsg_recharge_check_ex*>(
               &_smsg_recharge_check_ex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    223;

  void Swap(smsg_recharge_check_ex* other);
  friend void swap(smsg_recharge_check_ex& a, smsg_recharge_check_ex& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_recharge_check_ex* New() const final {
    return CreateMaybeMessage<smsg_recharge_check_ex>(NULL);
  }

  smsg_recharge_check_ex* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_recharge_check_ex>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_recharge_check_ex& from);
  void MergeFrom(const smsg_recharge_check_ex& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_recharge_check_ex* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 rdz_ids = 1;
  int rdz_ids_size() const;
  void clear_rdz_ids();
  static const int kRdzIdsFieldNumber = 1;
  ::google::protobuf::int32 rdz_ids(int index) const;
  void set_rdz_ids(int index, ::google::protobuf::int32 value);
  void add_rdz_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rdz_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rdz_ids();

  // repeated int32 rdz_counts = 2;
  int rdz_counts_size() const;
  void clear_rdz_counts();
  static const int kRdzCountsFieldNumber = 2;
  ::google::protobuf::int32 rdz_counts(int index) const;
  void set_rdz_counts(int index, ::google::protobuf::int32 value);
  void add_rdz_counts(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rdz_counts() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rdz_counts();

  // repeated int32 type_judge = 3;
  int type_judge_size() const;
  void clear_type_judge();
  static const int kTypeJudgeFieldNumber = 3;
  ::google::protobuf::int32 type_judge(int index) const;
  void set_type_judge(int index, ::google::protobuf::int32 value);
  void add_type_judge(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      type_judge() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_type_judge();

  // repeated int32 types = 4;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 4;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 5;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 5;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 6;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 6;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 7;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 7;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.equip_t equips = 8;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 8;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 9;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 9;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 10;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 10;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // repeated .dhc.pet_t pets = 11;
  int pets_size() const;
  void clear_pets();
  static const int kPetsFieldNumber = 11;
  ::dhc::pet_t* mutable_pets(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >*
      mutable_pets();
  const ::dhc::pet_t& pets(int index) const;
  ::dhc::pet_t* add_pets();
  const ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >&
      pets() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_recharge_check_ex)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rdz_ids_;
  mutable int _rdz_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rdz_counts_;
  mutable int _rdz_counts_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > type_judge_;
  mutable int _type_judge_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::RepeatedPtrField< ::dhc::pet_t > pets_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_hecheng : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_hecheng) */ {
 public:
  cmsg_treasure_hecheng();
  virtual ~cmsg_treasure_hecheng();

  cmsg_treasure_hecheng(const cmsg_treasure_hecheng& from);

  inline cmsg_treasure_hecheng& operator=(const cmsg_treasure_hecheng& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_hecheng(cmsg_treasure_hecheng&& from) noexcept
    : cmsg_treasure_hecheng() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_hecheng& operator=(cmsg_treasure_hecheng&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_hecheng& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_hecheng* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_hecheng*>(
               &_cmsg_treasure_hecheng_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    224;

  void Swap(cmsg_treasure_hecheng* other);
  friend void swap(cmsg_treasure_hecheng& a, cmsg_treasure_hecheng& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_hecheng* New() const final {
    return CreateMaybeMessage<cmsg_treasure_hecheng>(NULL);
  }

  cmsg_treasure_hecheng* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_hecheng>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_hecheng& from);
  void MergeFrom(const cmsg_treasure_hecheng& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_hecheng* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_hecheng)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_treasure_hecheng : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_treasure_hecheng) */ {
 public:
  smsg_treasure_hecheng();
  virtual ~smsg_treasure_hecheng();

  smsg_treasure_hecheng(const smsg_treasure_hecheng& from);

  inline smsg_treasure_hecheng& operator=(const smsg_treasure_hecheng& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_treasure_hecheng(smsg_treasure_hecheng&& from) noexcept
    : smsg_treasure_hecheng() {
    *this = ::std::move(from);
  }

  inline smsg_treasure_hecheng& operator=(smsg_treasure_hecheng&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_treasure_hecheng& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_treasure_hecheng* internal_default_instance() {
    return reinterpret_cast<const smsg_treasure_hecheng*>(
               &_smsg_treasure_hecheng_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    225;

  void Swap(smsg_treasure_hecheng* other);
  friend void swap(smsg_treasure_hecheng& a, smsg_treasure_hecheng& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_treasure_hecheng* New() const final {
    return CreateMaybeMessage<smsg_treasure_hecheng>(NULL);
  }

  smsg_treasure_hecheng* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_treasure_hecheng>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_treasure_hecheng& from);
  void MergeFrom(const smsg_treasure_hecheng& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_treasure_hecheng* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .dhc.treasure_t treasure = 1;
  bool has_treasure() const;
  void clear_treasure();
  static const int kTreasureFieldNumber = 1;
  private:
  const ::dhc::treasure_t& _internal_treasure() const;
  public:
  const ::dhc::treasure_t& treasure() const;
  ::dhc::treasure_t* release_treasure();
  ::dhc::treasure_t* mutable_treasure();
  void set_allocated_treasure(::dhc::treasure_t* treasure);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_treasure_hecheng)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::dhc::treasure_t* treasure_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_init : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_init) */ {
 public:
  cmsg_treasure_init();
  virtual ~cmsg_treasure_init();

  cmsg_treasure_init(const cmsg_treasure_init& from);

  inline cmsg_treasure_init& operator=(const cmsg_treasure_init& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_init(cmsg_treasure_init&& from) noexcept
    : cmsg_treasure_init() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_init& operator=(cmsg_treasure_init&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_init& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_init* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_init*>(
               &_cmsg_treasure_init_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    226;

  void Swap(cmsg_treasure_init* other);
  friend void swap(cmsg_treasure_init& a, cmsg_treasure_init& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_init* New() const final {
    return CreateMaybeMessage<cmsg_treasure_init>(NULL);
  }

  cmsg_treasure_init* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_init>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_init& from);
  void MergeFrom(const cmsg_treasure_init& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_init* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 treasure_guids = 2;
  void clear_treasure_guids();
  static const int kTreasureGuidsFieldNumber = 2;
  ::google::protobuf::uint64 treasure_guids() const;
  void set_treasure_guids(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_init)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 treasure_guids_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_treasure_init : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_treasure_init) */ {
 public:
  smsg_treasure_init();
  virtual ~smsg_treasure_init();

  smsg_treasure_init(const smsg_treasure_init& from);

  inline smsg_treasure_init& operator=(const smsg_treasure_init& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_treasure_init(smsg_treasure_init&& from) noexcept
    : smsg_treasure_init() {
    *this = ::std::move(from);
  }

  inline smsg_treasure_init& operator=(smsg_treasure_init&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_treasure_init& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_treasure_init* internal_default_instance() {
    return reinterpret_cast<const smsg_treasure_init*>(
               &_smsg_treasure_init_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    227;

  void Swap(smsg_treasure_init* other);
  friend void swap(smsg_treasure_init& a, smsg_treasure_init& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_treasure_init* New() const final {
    return CreateMaybeMessage<smsg_treasure_init>(NULL);
  }

  smsg_treasure_init* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_treasure_init>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_treasure_init& from);
  void MergeFrom(const smsg_treasure_init& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_treasure_init* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 1;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 1;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 2;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 2;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 3;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 3;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 4;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 4;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.treasure_t treasures = 5;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 5;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.equip_t equips = 6;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 6;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.role_t roles = 7;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 7;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_treasure_init)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_enhance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_enhance) */ {
 public:
  cmsg_treasure_enhance();
  virtual ~cmsg_treasure_enhance();

  cmsg_treasure_enhance(const cmsg_treasure_enhance& from);

  inline cmsg_treasure_enhance& operator=(const cmsg_treasure_enhance& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_enhance(cmsg_treasure_enhance&& from) noexcept
    : cmsg_treasure_enhance() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_enhance& operator=(cmsg_treasure_enhance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_enhance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_enhance* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_enhance*>(
               &_cmsg_treasure_enhance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    228;

  void Swap(cmsg_treasure_enhance* other);
  friend void swap(cmsg_treasure_enhance& a, cmsg_treasure_enhance& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_enhance* New() const final {
    return CreateMaybeMessage<cmsg_treasure_enhance>(NULL);
  }

  cmsg_treasure_enhance* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_enhance>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_enhance& from);
  void MergeFrom(const cmsg_treasure_enhance& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_enhance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 treasure_guids = 3;
  int treasure_guids_size() const;
  void clear_treasure_guids();
  static const int kTreasureGuidsFieldNumber = 3;
  ::google::protobuf::uint64 treasure_guids(int index) const;
  void set_treasure_guids(int index, ::google::protobuf::uint64 value);
  void add_treasure_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      treasure_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_treasure_guids();

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 enhance_guid = 2;
  void clear_enhance_guid();
  static const int kEnhanceGuidFieldNumber = 2;
  ::google::protobuf::uint64 enhance_guid() const;
  void set_enhance_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_enhance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > treasure_guids_;
  mutable int _treasure_guids_cached_byte_size_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 enhance_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_jinlian : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_jinlian) */ {
 public:
  cmsg_treasure_jinlian();
  virtual ~cmsg_treasure_jinlian();

  cmsg_treasure_jinlian(const cmsg_treasure_jinlian& from);

  inline cmsg_treasure_jinlian& operator=(const cmsg_treasure_jinlian& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_jinlian(cmsg_treasure_jinlian&& from) noexcept
    : cmsg_treasure_jinlian() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_jinlian& operator=(cmsg_treasure_jinlian&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_jinlian& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_jinlian* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_jinlian*>(
               &_cmsg_treasure_jinlian_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    229;

  void Swap(cmsg_treasure_jinlian* other);
  friend void swap(cmsg_treasure_jinlian& a, cmsg_treasure_jinlian& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_jinlian* New() const final {
    return CreateMaybeMessage<cmsg_treasure_jinlian>(NULL);
  }

  cmsg_treasure_jinlian* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_jinlian>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_jinlian& from);
  void MergeFrom(const cmsg_treasure_jinlian& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_jinlian* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 treasure_guid = 3;
  int treasure_guid_size() const;
  void clear_treasure_guid();
  static const int kTreasureGuidFieldNumber = 3;
  ::google::protobuf::uint64 treasure_guid(int index) const;
  void set_treasure_guid(int index, ::google::protobuf::uint64 value);
  void add_treasure_guid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      treasure_guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_treasure_guid();

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 jinlian_guid = 2;
  void clear_jinlian_guid();
  static const int kJinlianGuidFieldNumber = 2;
  ::google::protobuf::uint64 jinlian_guid() const;
  void set_jinlian_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_jinlian)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > treasure_guid_;
  mutable int _treasure_guid_cached_byte_size_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 jinlian_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_treasure_jinlian : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_treasure_jinlian) */ {
 public:
  smsg_treasure_jinlian();
  virtual ~smsg_treasure_jinlian();

  smsg_treasure_jinlian(const smsg_treasure_jinlian& from);

  inline smsg_treasure_jinlian& operator=(const smsg_treasure_jinlian& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_treasure_jinlian(smsg_treasure_jinlian&& from) noexcept
    : smsg_treasure_jinlian() {
    *this = ::std::move(from);
  }

  inline smsg_treasure_jinlian& operator=(smsg_treasure_jinlian&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_treasure_jinlian& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_treasure_jinlian* internal_default_instance() {
    return reinterpret_cast<const smsg_treasure_jinlian*>(
               &_smsg_treasure_jinlian_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    230;

  void Swap(smsg_treasure_jinlian* other);
  friend void swap(smsg_treasure_jinlian& a, smsg_treasure_jinlian& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_treasure_jinlian* New() const final {
    return CreateMaybeMessage<smsg_treasure_jinlian>(NULL);
  }

  smsg_treasure_jinlian* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_treasure_jinlian>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_treasure_jinlian& from);
  void MergeFrom(const smsg_treasure_jinlian& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_treasure_jinlian* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 treasures = 1;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 1;
  ::google::protobuf::uint64 treasures(int index) const;
  void set_treasures(int index, ::google::protobuf::uint64 value);
  void add_treasures(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      treasures() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_treasures();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_treasure_jinlian)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > treasures_;
  mutable int _treasures_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_star : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_star) */ {
 public:
  cmsg_treasure_star();
  virtual ~cmsg_treasure_star();

  cmsg_treasure_star(const cmsg_treasure_star& from);

  inline cmsg_treasure_star& operator=(const cmsg_treasure_star& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_star(cmsg_treasure_star&& from) noexcept
    : cmsg_treasure_star() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_star& operator=(cmsg_treasure_star&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_star& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_star* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_star*>(
               &_cmsg_treasure_star_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    231;

  void Swap(cmsg_treasure_star* other);
  friend void swap(cmsg_treasure_star& a, cmsg_treasure_star& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_star* New() const final {
    return CreateMaybeMessage<cmsg_treasure_star>(NULL);
  }

  cmsg_treasure_star* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_star>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_star& from);
  void MergeFrom(const cmsg_treasure_star& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_star* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 3;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 3;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 star_guid = 2;
  void clear_star_guid();
  static const int kStarGuidFieldNumber = 2;
  ::google::protobuf::uint64 star_guid() const;
  void set_star_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_star)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 star_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_treasure_star : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_treasure_star) */ {
 public:
  smsg_treasure_star();
  virtual ~smsg_treasure_star();

  smsg_treasure_star(const smsg_treasure_star& from);

  inline smsg_treasure_star& operator=(const smsg_treasure_star& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_treasure_star(smsg_treasure_star&& from) noexcept
    : smsg_treasure_star() {
    *this = ::std::move(from);
  }

  inline smsg_treasure_star& operator=(smsg_treasure_star&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_treasure_star& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_treasure_star* internal_default_instance() {
    return reinterpret_cast<const smsg_treasure_star*>(
               &_smsg_treasure_star_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    232;

  void Swap(smsg_treasure_star* other);
  friend void swap(smsg_treasure_star& a, smsg_treasure_star& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_treasure_star* New() const final {
    return CreateMaybeMessage<smsg_treasure_star>(NULL);
  }

  smsg_treasure_star* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_treasure_star>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_treasure_star& from);
  void MergeFrom(const smsg_treasure_star& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_treasure_star* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 rates = 1;
  int rates_size() const;
  void clear_rates();
  static const int kRatesFieldNumber = 1;
  ::google::protobuf::int32 rates(int index) const;
  void set_rates(int index, ::google::protobuf::int32 value);
  void add_rates(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rates() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rates();

  // repeated int32 bjs = 2;
  int bjs_size() const;
  void clear_bjs();
  static const int kBjsFieldNumber = 2;
  ::google::protobuf::int32 bjs(int index) const;
  void set_bjs(int index, ::google::protobuf::int32 value);
  void add_bjs(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      bjs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_bjs();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_treasure_star)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rates_;
  mutable int _rates_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > bjs_;
  mutable int _bjs_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_ronglian : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_ronglian) */ {
 public:
  cmsg_treasure_ronglian();
  virtual ~cmsg_treasure_ronglian();

  cmsg_treasure_ronglian(const cmsg_treasure_ronglian& from);

  inline cmsg_treasure_ronglian& operator=(const cmsg_treasure_ronglian& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_ronglian(cmsg_treasure_ronglian&& from) noexcept
    : cmsg_treasure_ronglian() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_ronglian& operator=(cmsg_treasure_ronglian&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_ronglian& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_ronglian* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_ronglian*>(
               &_cmsg_treasure_ronglian_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    233;

  void Swap(cmsg_treasure_ronglian* other);
  friend void swap(cmsg_treasure_ronglian& a, cmsg_treasure_ronglian& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_ronglian* New() const final {
    return CreateMaybeMessage<cmsg_treasure_ronglian>(NULL);
  }

  cmsg_treasure_ronglian* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_ronglian>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_ronglian& from);
  void MergeFrom(const cmsg_treasure_ronglian& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_ronglian* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 treasure_guid = 2;
  void clear_treasure_guid();
  static const int kTreasureGuidFieldNumber = 2;
  ::google::protobuf::uint64 treasure_guid() const;
  void set_treasure_guid(::google::protobuf::uint64 value);

  // int32 suipian_id = 3;
  void clear_suipian_id();
  static const int kSuipianIdFieldNumber = 3;
  ::google::protobuf::int32 suipian_id() const;
  void set_suipian_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_ronglian)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 treasure_guid_;
  ::google::protobuf::int32 suipian_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_zhuzao : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_zhuzao) */ {
 public:
  cmsg_treasure_zhuzao();
  virtual ~cmsg_treasure_zhuzao();

  cmsg_treasure_zhuzao(const cmsg_treasure_zhuzao& from);

  inline cmsg_treasure_zhuzao& operator=(const cmsg_treasure_zhuzao& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_zhuzao(cmsg_treasure_zhuzao&& from) noexcept
    : cmsg_treasure_zhuzao() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_zhuzao& operator=(cmsg_treasure_zhuzao&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_zhuzao& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_zhuzao* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_zhuzao*>(
               &_cmsg_treasure_zhuzao_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    234;

  void Swap(cmsg_treasure_zhuzao* other);
  friend void swap(cmsg_treasure_zhuzao& a, cmsg_treasure_zhuzao& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_zhuzao* New() const final {
    return CreateMaybeMessage<cmsg_treasure_zhuzao>(NULL);
  }

  cmsg_treasure_zhuzao* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_zhuzao>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_zhuzao& from);
  void MergeFrom(const cmsg_treasure_zhuzao& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_zhuzao* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 treasure_guid = 2;
  void clear_treasure_guid();
  static const int kTreasureGuidFieldNumber = 2;
  ::google::protobuf::uint64 treasure_guid() const;
  void set_treasure_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_zhuzao)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 treasure_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_treasure_zhuzao : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_treasure_zhuzao) */ {
 public:
  smsg_treasure_zhuzao();
  virtual ~smsg_treasure_zhuzao();

  smsg_treasure_zhuzao(const smsg_treasure_zhuzao& from);

  inline smsg_treasure_zhuzao& operator=(const smsg_treasure_zhuzao& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_treasure_zhuzao(smsg_treasure_zhuzao&& from) noexcept
    : smsg_treasure_zhuzao() {
    *this = ::std::move(from);
  }

  inline smsg_treasure_zhuzao& operator=(smsg_treasure_zhuzao&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_treasure_zhuzao& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_treasure_zhuzao* internal_default_instance() {
    return reinterpret_cast<const smsg_treasure_zhuzao*>(
               &_smsg_treasure_zhuzao_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    235;

  void Swap(smsg_treasure_zhuzao* other);
  friend void swap(smsg_treasure_zhuzao& a, smsg_treasure_zhuzao& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_treasure_zhuzao* New() const final {
    return CreateMaybeMessage<smsg_treasure_zhuzao>(NULL);
  }

  smsg_treasure_zhuzao* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_treasure_zhuzao>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_treasure_zhuzao& from);
  void MergeFrom(const smsg_treasure_zhuzao& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_treasure_zhuzao* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // int32 exp = 2;
  void clear_exp();
  static const int kExpFieldNumber = 2;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_treasure_zhuzao)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_lock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_lock) */ {
 public:
  cmsg_treasure_lock();
  virtual ~cmsg_treasure_lock();

  cmsg_treasure_lock(const cmsg_treasure_lock& from);

  inline cmsg_treasure_lock& operator=(const cmsg_treasure_lock& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_lock(cmsg_treasure_lock&& from) noexcept
    : cmsg_treasure_lock() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_lock& operator=(cmsg_treasure_lock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_lock& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_lock* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_lock*>(
               &_cmsg_treasure_lock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    236;

  void Swap(cmsg_treasure_lock* other);
  friend void swap(cmsg_treasure_lock& a, cmsg_treasure_lock& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_lock* New() const final {
    return CreateMaybeMessage<cmsg_treasure_lock>(NULL);
  }

  cmsg_treasure_lock* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_lock>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_lock& from);
  void MergeFrom(const cmsg_treasure_lock& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_lock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 treasure_guid = 2;
  void clear_treasure_guid();
  static const int kTreasureGuidFieldNumber = 2;
  ::google::protobuf::uint64 treasure_guid() const;
  void set_treasure_guid(::google::protobuf::uint64 value);

  // bool locked = 3;
  void clear_locked();
  static const int kLockedFieldNumber = 3;
  bool locked() const;
  void set_locked(bool value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_lock)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 treasure_guid_;
  bool locked_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_equip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_equip) */ {
 public:
  cmsg_treasure_equip();
  virtual ~cmsg_treasure_equip();

  cmsg_treasure_equip(const cmsg_treasure_equip& from);

  inline cmsg_treasure_equip& operator=(const cmsg_treasure_equip& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_equip(cmsg_treasure_equip&& from) noexcept
    : cmsg_treasure_equip() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_equip& operator=(cmsg_treasure_equip&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_equip& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_equip* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_equip*>(
               &_cmsg_treasure_equip_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    237;

  void Swap(cmsg_treasure_equip* other);
  friend void swap(cmsg_treasure_equip& a, cmsg_treasure_equip& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_equip* New() const final {
    return CreateMaybeMessage<cmsg_treasure_equip>(NULL);
  }

  cmsg_treasure_equip* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_equip>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_equip& from);
  void MergeFrom(const cmsg_treasure_equip& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_equip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 index = 3;
  int index_size() const;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::int32 index(int index) const;
  void set_index(int index, ::google::protobuf::int32 value);
  void add_index(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      index() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_index();

  // repeated uint64 treasure_guid = 4;
  int treasure_guid_size() const;
  void clear_treasure_guid();
  static const int kTreasureGuidFieldNumber = 4;
  ::google::protobuf::uint64 treasure_guid(int index) const;
  void set_treasure_guid(int index, ::google::protobuf::uint64 value);
  void add_treasure_guid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      treasure_guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_treasure_guid();

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 role_guid = 2;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 2;
  ::google::protobuf::uint64 role_guid() const;
  void set_role_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_equip)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > index_;
  mutable int _index_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > treasure_guid_;
  mutable int _treasure_guid_cached_byte_size_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 role_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_protect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_protect) */ {
 public:
  cmsg_treasure_protect();
  virtual ~cmsg_treasure_protect();

  cmsg_treasure_protect(const cmsg_treasure_protect& from);

  inline cmsg_treasure_protect& operator=(const cmsg_treasure_protect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_protect(cmsg_treasure_protect&& from) noexcept
    : cmsg_treasure_protect() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_protect& operator=(cmsg_treasure_protect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_protect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_protect* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_protect*>(
               &_cmsg_treasure_protect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    238;

  void Swap(cmsg_treasure_protect* other);
  friend void swap(cmsg_treasure_protect& a, cmsg_treasure_protect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_protect* New() const final {
    return CreateMaybeMessage<cmsg_treasure_protect>(NULL);
  }

  cmsg_treasure_protect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_protect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_protect& from);
  void MergeFrom(const cmsg_treasure_protect& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_protect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_protect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_treasure_protect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_treasure_protect) */ {
 public:
  smsg_treasure_protect();
  virtual ~smsg_treasure_protect();

  smsg_treasure_protect(const smsg_treasure_protect& from);

  inline smsg_treasure_protect& operator=(const smsg_treasure_protect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_treasure_protect(smsg_treasure_protect&& from) noexcept
    : smsg_treasure_protect() {
    *this = ::std::move(from);
  }

  inline smsg_treasure_protect& operator=(smsg_treasure_protect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_treasure_protect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_treasure_protect* internal_default_instance() {
    return reinterpret_cast<const smsg_treasure_protect*>(
               &_smsg_treasure_protect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    239;

  void Swap(smsg_treasure_protect* other);
  friend void swap(smsg_treasure_protect& a, smsg_treasure_protect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_treasure_protect* New() const final {
    return CreateMaybeMessage<smsg_treasure_protect>(NULL);
  }

  smsg_treasure_protect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_treasure_protect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_treasure_protect& from);
  void MergeFrom(const smsg_treasure_protect& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_treasure_protect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 next_time = 1;
  void clear_next_time();
  static const int kNextTimeFieldNumber = 1;
  ::google::protobuf::uint64 next_time() const;
  void set_next_time(::google::protobuf::uint64 value);

  // uint64 cd_time = 2;
  void clear_cd_time();
  static const int kCdTimeFieldNumber = 2;
  ::google::protobuf::uint64 cd_time() const;
  void set_cd_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_treasure_protect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 next_time_;
  ::google::protobuf::uint64 cd_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_buy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_buy) */ {
 public:
  cmsg_treasure_buy();
  virtual ~cmsg_treasure_buy();

  cmsg_treasure_buy(const cmsg_treasure_buy& from);

  inline cmsg_treasure_buy& operator=(const cmsg_treasure_buy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_buy(cmsg_treasure_buy&& from) noexcept
    : cmsg_treasure_buy() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_buy& operator=(cmsg_treasure_buy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_buy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_buy* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_buy*>(
               &_cmsg_treasure_buy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    240;

  void Swap(cmsg_treasure_buy* other);
  friend void swap(cmsg_treasure_buy& a, cmsg_treasure_buy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_buy* New() const final {
    return CreateMaybeMessage<cmsg_treasure_buy>(NULL);
  }

  cmsg_treasure_buy* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_buy>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_buy& from);
  void MergeFrom(const cmsg_treasure_buy& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_buy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_buy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_rob_view : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_rob_view) */ {
 public:
  cmsg_treasure_rob_view();
  virtual ~cmsg_treasure_rob_view();

  cmsg_treasure_rob_view(const cmsg_treasure_rob_view& from);

  inline cmsg_treasure_rob_view& operator=(const cmsg_treasure_rob_view& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_rob_view(cmsg_treasure_rob_view&& from) noexcept
    : cmsg_treasure_rob_view() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_rob_view& operator=(cmsg_treasure_rob_view&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_rob_view& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_rob_view* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_rob_view*>(
               &_cmsg_treasure_rob_view_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    241;

  void Swap(cmsg_treasure_rob_view* other);
  friend void swap(cmsg_treasure_rob_view& a, cmsg_treasure_rob_view& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_rob_view* New() const final {
    return CreateMaybeMessage<cmsg_treasure_rob_view>(NULL);
  }

  cmsg_treasure_rob_view* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_rob_view>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_rob_view& from);
  void MergeFrom(const cmsg_treasure_rob_view& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_rob_view* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 treasure_suipian = 2;
  void clear_treasure_suipian();
  static const int kTreasureSuipianFieldNumber = 2;
  ::google::protobuf::int32 treasure_suipian() const;
  void set_treasure_suipian(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_rob_view)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 treasure_suipian_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_treasure_rob_view : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_treasure_rob_view) */ {
 public:
  smsg_treasure_rob_view();
  virtual ~smsg_treasure_rob_view();

  smsg_treasure_rob_view(const smsg_treasure_rob_view& from);

  inline smsg_treasure_rob_view& operator=(const smsg_treasure_rob_view& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_treasure_rob_view(smsg_treasure_rob_view&& from) noexcept
    : smsg_treasure_rob_view() {
    *this = ::std::move(from);
  }

  inline smsg_treasure_rob_view& operator=(smsg_treasure_rob_view&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_treasure_rob_view& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_treasure_rob_view* internal_default_instance() {
    return reinterpret_cast<const smsg_treasure_rob_view*>(
               &_smsg_treasure_rob_view_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    242;

  void Swap(smsg_treasure_rob_view* other);
  friend void swap(smsg_treasure_rob_view& a, smsg_treasure_rob_view& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_treasure_rob_view* New() const final {
    return CreateMaybeMessage<smsg_treasure_rob_view>(NULL);
  }

  smsg_treasure_rob_view* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_treasure_rob_view>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_treasure_rob_view& from);
  void MergeFrom(const smsg_treasure_rob_view& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_treasure_rob_view* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 player_guids = 1;
  int player_guids_size() const;
  void clear_player_guids();
  static const int kPlayerGuidsFieldNumber = 1;
  ::google::protobuf::uint64 player_guids(int index) const;
  void set_player_guids(int index, ::google::protobuf::uint64 value);
  void add_player_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_guids();

  // repeated bytes player_names = 2;
  int player_names_size() const;
  void clear_player_names();
  static const int kPlayerNamesFieldNumber = 2;
  const ::std::string& player_names(int index) const;
  ::std::string* mutable_player_names(int index);
  void set_player_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_player_names(int index, ::std::string&& value);
  #endif
  void set_player_names(int index, const char* value);
  void set_player_names(int index, const void* value, size_t size);
  ::std::string* add_player_names();
  void add_player_names(const ::std::string& value);
  #if LANG_CXX11
  void add_player_names(::std::string&& value);
  #endif
  void add_player_names(const char* value);
  void add_player_names(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& player_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_player_names();

  // repeated int32 player_templates = 3;
  int player_templates_size() const;
  void clear_player_templates();
  static const int kPlayerTemplatesFieldNumber = 3;
  ::google::protobuf::int32 player_templates(int index) const;
  void set_player_templates(int index, ::google::protobuf::int32 value);
  void add_player_templates(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_templates() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_templates();

  // repeated int32 player_levels = 4;
  int player_levels_size() const;
  void clear_player_levels();
  static const int kPlayerLevelsFieldNumber = 4;
  ::google::protobuf::int32 player_levels(int index) const;
  void set_player_levels(int index, ::google::protobuf::int32 value);
  void add_player_levels(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_levels() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_levels();

  // repeated int32 player_bfs = 5;
  int player_bfs_size() const;
  void clear_player_bfs();
  static const int kPlayerBfsFieldNumber = 5;
  ::google::protobuf::int32 player_bfs(int index) const;
  void set_player_bfs(int index, ::google::protobuf::int32 value);
  void add_player_bfs(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_bfs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_bfs();

  // repeated int32 player_rates = 6;
  int player_rates_size() const;
  void clear_player_rates();
  static const int kPlayerRatesFieldNumber = 6;
  ::google::protobuf::int32 player_rates(int index) const;
  void set_player_rates(int index, ::google::protobuf::int32 value);
  void add_player_rates(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_rates() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_rates();

  // repeated bool player_npcs = 7;
  int player_npcs_size() const;
  void clear_player_npcs();
  static const int kPlayerNpcsFieldNumber = 7;
  bool player_npcs(int index) const;
  void set_player_npcs(int index, bool value);
  void add_player_npcs(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      player_npcs() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_player_npcs();

  // repeated int32 player_vips = 8;
  int player_vips_size() const;
  void clear_player_vips();
  static const int kPlayerVipsFieldNumber = 8;
  ::google::protobuf::int32 player_vips(int index) const;
  void set_player_vips(int index, ::google::protobuf::int32 value);
  void add_player_vips(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_vips() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_vips();

  // repeated int32 player_achieves = 9;
  int player_achieves_size() const;
  void clear_player_achieves();
  static const int kPlayerAchievesFieldNumber = 9;
  ::google::protobuf::int32 player_achieves(int index) const;
  void set_player_achieves(int index, ::google::protobuf::int32 value);
  void add_player_achieves(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_achieves() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_achieves();

  // repeated int32 player_chenghaos = 10;
  int player_chenghaos_size() const;
  void clear_player_chenghaos();
  static const int kPlayerChenghaosFieldNumber = 10;
  ::google::protobuf::int32 player_chenghaos(int index) const;
  void set_player_chenghaos(int index, ::google::protobuf::int32 value);
  void add_player_chenghaos(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_chenghaos() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_chenghaos();

  // repeated int32 player_nalflags = 11;
  int player_nalflags_size() const;
  void clear_player_nalflags();
  static const int kPlayerNalflagsFieldNumber = 11;
  ::google::protobuf::int32 player_nalflags(int index) const;
  void set_player_nalflags(int index, ::google::protobuf::int32 value);
  void add_player_nalflags(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_nalflags() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_nalflags();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_treasure_rob_view)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_guids_;
  mutable int _player_guids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> player_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_templates_;
  mutable int _player_templates_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_levels_;
  mutable int _player_levels_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_bfs_;
  mutable int _player_bfs_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_rates_;
  mutable int _player_rates_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > player_npcs_;
  mutable int _player_npcs_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_vips_;
  mutable int _player_vips_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_achieves_;
  mutable int _player_achieves_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_chenghaos_;
  mutable int _player_chenghaos_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_nalflags_;
  mutable int _player_nalflags_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_fight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_fight) */ {
 public:
  cmsg_treasure_fight();
  virtual ~cmsg_treasure_fight();

  cmsg_treasure_fight(const cmsg_treasure_fight& from);

  inline cmsg_treasure_fight& operator=(const cmsg_treasure_fight& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_fight(cmsg_treasure_fight&& from) noexcept
    : cmsg_treasure_fight() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_fight& operator=(cmsg_treasure_fight&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_fight& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_fight* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_fight*>(
               &_cmsg_treasure_fight_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    243;

  void Swap(cmsg_treasure_fight* other);
  friend void swap(cmsg_treasure_fight& a, cmsg_treasure_fight& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_fight* New() const final {
    return CreateMaybeMessage<cmsg_treasure_fight>(NULL);
  }

  cmsg_treasure_fight* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_fight>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_fight& from);
  void MergeFrom(const cmsg_treasure_fight& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_fight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 player_guid = 2;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 2;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_fight)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 player_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_treasure_fight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_treasure_fight) */ {
 public:
  smsg_treasure_fight();
  virtual ~smsg_treasure_fight();

  smsg_treasure_fight(const smsg_treasure_fight& from);

  inline smsg_treasure_fight& operator=(const smsg_treasure_fight& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_treasure_fight(smsg_treasure_fight&& from) noexcept
    : smsg_treasure_fight() {
    *this = ::std::move(from);
  }

  inline smsg_treasure_fight& operator=(smsg_treasure_fight&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_treasure_fight& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_treasure_fight* internal_default_instance() {
    return reinterpret_cast<const smsg_treasure_fight*>(
               &_smsg_treasure_fight_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    244;

  void Swap(smsg_treasure_fight* other);
  friend void swap(smsg_treasure_fight& a, smsg_treasure_fight& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_treasure_fight* New() const final {
    return CreateMaybeMessage<smsg_treasure_fight>(NULL);
  }

  smsg_treasure_fight* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_treasure_fight>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_treasure_fight& from);
  void MergeFrom(const smsg_treasure_fight& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_treasure_fight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.role_t roles = 2;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 2;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // repeated .dhc.equip_t equips = 3;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 3;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 4;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 4;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // .dhc.player_t player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  private:
  const ::dhc::player_t& _internal_player() const;
  public:
  const ::dhc::player_t& player() const;
  ::dhc::player_t* release_player();
  ::dhc::player_t* mutable_player();
  void set_allocated_player(::dhc::player_t* player);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_treasure_fight)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::dhc::player_t* player_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_fight_end) */ {
 public:
  cmsg_treasure_fight_end();
  virtual ~cmsg_treasure_fight_end();

  cmsg_treasure_fight_end(const cmsg_treasure_fight_end& from);

  inline cmsg_treasure_fight_end& operator=(const cmsg_treasure_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_fight_end(cmsg_treasure_fight_end&& from) noexcept
    : cmsg_treasure_fight_end() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_fight_end& operator=(cmsg_treasure_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_fight_end* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_fight_end*>(
               &_cmsg_treasure_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    245;

  void Swap(cmsg_treasure_fight_end* other);
  friend void swap(cmsg_treasure_fight_end& a, cmsg_treasure_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_fight_end* New() const final {
    return CreateMaybeMessage<cmsg_treasure_fight_end>(NULL);
  }

  cmsg_treasure_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_fight_end& from);
  void MergeFrom(const cmsg_treasure_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 player_guid = 2;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 2;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 player_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_treasure_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_treasure_fight_end) */ {
 public:
  smsg_treasure_fight_end();
  virtual ~smsg_treasure_fight_end();

  smsg_treasure_fight_end(const smsg_treasure_fight_end& from);

  inline smsg_treasure_fight_end& operator=(const smsg_treasure_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_treasure_fight_end(smsg_treasure_fight_end&& from) noexcept
    : smsg_treasure_fight_end() {
    *this = ::std::move(from);
  }

  inline smsg_treasure_fight_end& operator=(smsg_treasure_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_treasure_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_treasure_fight_end* internal_default_instance() {
    return reinterpret_cast<const smsg_treasure_fight_end*>(
               &_smsg_treasure_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    246;

  void Swap(smsg_treasure_fight_end* other);
  friend void swap(smsg_treasure_fight_end& a, smsg_treasure_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_treasure_fight_end* New() const final {
    return CreateMaybeMessage<smsg_treasure_fight_end>(NULL);
  }

  smsg_treasure_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_treasure_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_treasure_fight_end& from);
  void MergeFrom(const smsg_treasure_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_treasure_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 6;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 6;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 7;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 7;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 8;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 8;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 9;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 9;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.equip_t equips = 10;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 10;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 11;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 11;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 12;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 12;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 suipian_id = 3;
  void clear_suipian_id();
  static const int kSuipianIdFieldNumber = 3;
  ::google::protobuf::int32 suipian_id() const;
  void set_suipian_id(::google::protobuf::int32 value);

  // int32 card = 4;
  void clear_card();
  static const int kCardFieldNumber = 4;
  ::google::protobuf::int32 card() const;
  void set_card(::google::protobuf::int32 value);

  // int32 pgold = 5;
  void clear_pgold();
  static const int kPgoldFieldNumber = 5;
  ::google::protobuf::int32 pgold() const;
  void set_pgold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_treasure_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 suipian_id_;
  ::google::protobuf::int32 card_;
  ::google::protobuf::int32 pgold_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_saodang : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_saodang) */ {
 public:
  cmsg_treasure_saodang();
  virtual ~cmsg_treasure_saodang();

  cmsg_treasure_saodang(const cmsg_treasure_saodang& from);

  inline cmsg_treasure_saodang& operator=(const cmsg_treasure_saodang& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_saodang(cmsg_treasure_saodang&& from) noexcept
    : cmsg_treasure_saodang() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_saodang& operator=(cmsg_treasure_saodang&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_saodang& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_saodang* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_saodang*>(
               &_cmsg_treasure_saodang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    247;

  void Swap(cmsg_treasure_saodang* other);
  friend void swap(cmsg_treasure_saodang& a, cmsg_treasure_saodang& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_saodang* New() const final {
    return CreateMaybeMessage<cmsg_treasure_saodang>(NULL);
  }

  cmsg_treasure_saodang* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_saodang>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_saodang& from);
  void MergeFrom(const cmsg_treasure_saodang& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_saodang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 player_guid = 2;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 2;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_saodang)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 player_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_yijian_saodang : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_yijian_saodang) */ {
 public:
  cmsg_treasure_yijian_saodang();
  virtual ~cmsg_treasure_yijian_saodang();

  cmsg_treasure_yijian_saodang(const cmsg_treasure_yijian_saodang& from);

  inline cmsg_treasure_yijian_saodang& operator=(const cmsg_treasure_yijian_saodang& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_yijian_saodang(cmsg_treasure_yijian_saodang&& from) noexcept
    : cmsg_treasure_yijian_saodang() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_yijian_saodang& operator=(cmsg_treasure_yijian_saodang&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_yijian_saodang& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_yijian_saodang* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_yijian_saodang*>(
               &_cmsg_treasure_yijian_saodang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    248;

  void Swap(cmsg_treasure_yijian_saodang* other);
  friend void swap(cmsg_treasure_yijian_saodang& a, cmsg_treasure_yijian_saodang& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_yijian_saodang* New() const final {
    return CreateMaybeMessage<cmsg_treasure_yijian_saodang>(NULL);
  }

  cmsg_treasure_yijian_saodang* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_yijian_saodang>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_yijian_saodang& from);
  void MergeFrom(const cmsg_treasure_yijian_saodang& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_yijian_saodang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 treasure_id = 2;
  void clear_treasure_id();
  static const int kTreasureIdFieldNumber = 2;
  ::google::protobuf::int32 treasure_id() const;
  void set_treasure_id(::google::protobuf::int32 value);

  // bool use_yaosui = 3;
  void clear_use_yaosui();
  static const int kUseYaosuiFieldNumber = 3;
  bool use_yaosui() const;
  void set_use_yaosui(bool value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_yijian_saodang)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 treasure_id_;
  bool use_yaosui_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_treasure_saodang : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_treasure_saodang) */ {
 public:
  smsg_treasure_saodang();
  virtual ~smsg_treasure_saodang();

  smsg_treasure_saodang(const smsg_treasure_saodang& from);

  inline smsg_treasure_saodang& operator=(const smsg_treasure_saodang& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_treasure_saodang(smsg_treasure_saodang&& from) noexcept
    : smsg_treasure_saodang() {
    *this = ::std::move(from);
  }

  inline smsg_treasure_saodang& operator=(smsg_treasure_saodang&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_treasure_saodang& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_treasure_saodang* internal_default_instance() {
    return reinterpret_cast<const smsg_treasure_saodang*>(
               &_smsg_treasure_saodang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    249;

  void Swap(smsg_treasure_saodang* other);
  friend void swap(smsg_treasure_saodang& a, smsg_treasure_saodang& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_treasure_saodang* New() const final {
    return CreateMaybeMessage<smsg_treasure_saodang>(NULL);
  }

  smsg_treasure_saodang* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_treasure_saodang>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_treasure_saodang& from);
  void MergeFrom(const smsg_treasure_saodang& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_treasure_saodang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.smsg_treasure_fight_end rewards = 1;
  int rewards_size() const;
  void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  ::protocol::game::smsg_treasure_fight_end* mutable_rewards(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_treasure_fight_end >*
      mutable_rewards();
  const ::protocol::game::smsg_treasure_fight_end& rewards(int index) const;
  ::protocol::game::smsg_treasure_fight_end* add_rewards();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_treasure_fight_end >&
      rewards() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_treasure_saodang)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_treasure_fight_end > rewards_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_treasure_yijian_saodang : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_treasure_yijian_saodang) */ {
 public:
  smsg_treasure_yijian_saodang();
  virtual ~smsg_treasure_yijian_saodang();

  smsg_treasure_yijian_saodang(const smsg_treasure_yijian_saodang& from);

  inline smsg_treasure_yijian_saodang& operator=(const smsg_treasure_yijian_saodang& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_treasure_yijian_saodang(smsg_treasure_yijian_saodang&& from) noexcept
    : smsg_treasure_yijian_saodang() {
    *this = ::std::move(from);
  }

  inline smsg_treasure_yijian_saodang& operator=(smsg_treasure_yijian_saodang&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_treasure_yijian_saodang& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_treasure_yijian_saodang* internal_default_instance() {
    return reinterpret_cast<const smsg_treasure_yijian_saodang*>(
               &_smsg_treasure_yijian_saodang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    250;

  void Swap(smsg_treasure_yijian_saodang* other);
  friend void swap(smsg_treasure_yijian_saodang& a, smsg_treasure_yijian_saodang& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_treasure_yijian_saodang* New() const final {
    return CreateMaybeMessage<smsg_treasure_yijian_saodang>(NULL);
  }

  smsg_treasure_yijian_saodang* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_treasure_yijian_saodang>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_treasure_yijian_saodang& from);
  void MergeFrom(const smsg_treasure_yijian_saodang& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_treasure_yijian_saodang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.smsg_treasure_fight_end rewards = 1;
  int rewards_size() const;
  void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  ::protocol::game::smsg_treasure_fight_end* mutable_rewards(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_treasure_fight_end >*
      mutable_rewards();
  const ::protocol::game::smsg_treasure_fight_end& rewards(int index) const;
  ::protocol::game::smsg_treasure_fight_end* add_rewards();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_treasure_fight_end >&
      rewards() const;

  // int32 yaosui_num = 2;
  void clear_yaosui_num();
  static const int kYaosuiNumFieldNumber = 2;
  ::google::protobuf::int32 yaosui_num() const;
  void set_yaosui_num(::google::protobuf::int32 value);

  // bool success = 3;
  void clear_success();
  static const int kSuccessFieldNumber = 3;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_treasure_yijian_saodang)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_treasure_fight_end > rewards_;
  ::google::protobuf::int32 yaosui_num_;
  bool success_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_treasure_point : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_treasure_point) */ {
 public:
  smsg_treasure_point();
  virtual ~smsg_treasure_point();

  smsg_treasure_point(const smsg_treasure_point& from);

  inline smsg_treasure_point& operator=(const smsg_treasure_point& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_treasure_point(smsg_treasure_point&& from) noexcept
    : smsg_treasure_point() {
    *this = ::std::move(from);
  }

  inline smsg_treasure_point& operator=(smsg_treasure_point&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_treasure_point& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_treasure_point* internal_default_instance() {
    return reinterpret_cast<const smsg_treasure_point*>(
               &_smsg_treasure_point_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    251;

  void Swap(smsg_treasure_point* other);
  friend void swap(smsg_treasure_point& a, smsg_treasure_point& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_treasure_point* New() const final {
    return CreateMaybeMessage<smsg_treasure_point>(NULL);
  }

  smsg_treasure_point* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_treasure_point>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_treasure_point& from);
  void MergeFrom(const smsg_treasure_point& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_treasure_point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 has_point = 1;
  void clear_has_point();
  static const int kHasPointFieldNumber = 1;
  ::google::protobuf::int32 has_point() const;
  void set_has_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_treasure_point)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 has_point_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_treasure_report_ex : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_treasure_report_ex) */ {
 public:
  cmsg_treasure_report_ex();
  virtual ~cmsg_treasure_report_ex();

  cmsg_treasure_report_ex(const cmsg_treasure_report_ex& from);

  inline cmsg_treasure_report_ex& operator=(const cmsg_treasure_report_ex& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_treasure_report_ex(cmsg_treasure_report_ex&& from) noexcept
    : cmsg_treasure_report_ex() {
    *this = ::std::move(from);
  }

  inline cmsg_treasure_report_ex& operator=(cmsg_treasure_report_ex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_treasure_report_ex& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_treasure_report_ex* internal_default_instance() {
    return reinterpret_cast<const cmsg_treasure_report_ex*>(
               &_cmsg_treasure_report_ex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    252;

  void Swap(cmsg_treasure_report_ex* other);
  friend void swap(cmsg_treasure_report_ex& a, cmsg_treasure_report_ex& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_treasure_report_ex* New() const final {
    return CreateMaybeMessage<cmsg_treasure_report_ex>(NULL);
  }

  cmsg_treasure_report_ex* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_treasure_report_ex>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_treasure_report_ex& from);
  void MergeFrom(const cmsg_treasure_report_ex& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_treasure_report_ex* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common_ex comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common_ex& _internal_comm() const;
  public:
  const ::protocol::game::msg_common_ex& comm() const;
  ::protocol::game::msg_common_ex* release_comm();
  ::protocol::game::msg_common_ex* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common_ex* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_treasure_report_ex)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common_ex* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_treasure_report : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_treasure_report) */ {
 public:
  smsg_treasure_report();
  virtual ~smsg_treasure_report();

  smsg_treasure_report(const smsg_treasure_report& from);

  inline smsg_treasure_report& operator=(const smsg_treasure_report& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_treasure_report(smsg_treasure_report&& from) noexcept
    : smsg_treasure_report() {
    *this = ::std::move(from);
  }

  inline smsg_treasure_report& operator=(smsg_treasure_report&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_treasure_report& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_treasure_report* internal_default_instance() {
    return reinterpret_cast<const smsg_treasure_report*>(
               &_smsg_treasure_report_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    253;

  void Swap(smsg_treasure_report* other);
  friend void swap(smsg_treasure_report& a, smsg_treasure_report& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_treasure_report* New() const final {
    return CreateMaybeMessage<smsg_treasure_report>(NULL);
  }

  smsg_treasure_report* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_treasure_report>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_treasure_report& from);
  void MergeFrom(const smsg_treasure_report& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_treasure_report* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dhc.treasure_report_t reports = 1;
  int reports_size() const;
  void clear_reports();
  static const int kReportsFieldNumber = 1;
  ::dhc::treasure_report_t* mutable_reports(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_report_t >*
      mutable_reports();
  const ::dhc::treasure_report_t& reports(int index) const;
  ::dhc::treasure_report_t* add_reports();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_report_t >&
      reports() const;

  // repeated int32 suipian_ids = 2;
  int suipian_ids_size() const;
  void clear_suipian_ids();
  static const int kSuipianIdsFieldNumber = 2;
  ::google::protobuf::int32 suipian_ids(int index) const;
  void set_suipian_ids(int index, ::google::protobuf::int32 value);
  void add_suipian_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      suipian_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_suipian_ids();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_treasure_report)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_report_t > reports_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > suipian_ids_;
  mutable int _suipian_ids_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_yb_refresh : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_yb_refresh) */ {
 public:
  smsg_yb_refresh();
  virtual ~smsg_yb_refresh();

  smsg_yb_refresh(const smsg_yb_refresh& from);

  inline smsg_yb_refresh& operator=(const smsg_yb_refresh& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_yb_refresh(smsg_yb_refresh&& from) noexcept
    : smsg_yb_refresh() {
    *this = ::std::move(from);
  }

  inline smsg_yb_refresh& operator=(smsg_yb_refresh&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_yb_refresh& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_yb_refresh* internal_default_instance() {
    return reinterpret_cast<const smsg_yb_refresh*>(
               &_smsg_yb_refresh_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    254;

  void Swap(smsg_yb_refresh* other);
  friend void swap(smsg_yb_refresh& a, smsg_yb_refresh& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_yb_refresh* New() const final {
    return CreateMaybeMessage<smsg_yb_refresh>(NULL);
  }

  smsg_yb_refresh* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_yb_refresh>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_yb_refresh& from);
  void MergeFrom(const smsg_yb_refresh& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_yb_refresh* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_yb_refresh)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_yb_look_ex : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_yb_look_ex) */ {
 public:
  cmsg_yb_look_ex();
  virtual ~cmsg_yb_look_ex();

  cmsg_yb_look_ex(const cmsg_yb_look_ex& from);

  inline cmsg_yb_look_ex& operator=(const cmsg_yb_look_ex& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_yb_look_ex(cmsg_yb_look_ex&& from) noexcept
    : cmsg_yb_look_ex() {
    *this = ::std::move(from);
  }

  inline cmsg_yb_look_ex& operator=(cmsg_yb_look_ex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_yb_look_ex& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_yb_look_ex* internal_default_instance() {
    return reinterpret_cast<const cmsg_yb_look_ex*>(
               &_cmsg_yb_look_ex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    255;

  void Swap(cmsg_yb_look_ex* other);
  friend void swap(cmsg_yb_look_ex& a, cmsg_yb_look_ex& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_yb_look_ex* New() const final {
    return CreateMaybeMessage<cmsg_yb_look_ex>(NULL);
  }

  cmsg_yb_look_ex* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_yb_look_ex>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_yb_look_ex& from);
  void MergeFrom(const cmsg_yb_look_ex& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_yb_look_ex* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common_ex comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common_ex& _internal_comm() const;
  public:
  const ::protocol::game::msg_common_ex& comm() const;
  ::protocol::game::msg_common_ex* release_comm();
  ::protocol::game::msg_common_ex* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common_ex* comm);

  // int32 player_id = 2;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_yb_look_ex)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common_ex* comm_;
  ::google::protobuf::int32 player_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_yb_player : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_yb_player) */ {
 public:
  msg_yb_player();
  virtual ~msg_yb_player();

  msg_yb_player(const msg_yb_player& from);

  inline msg_yb_player& operator=(const msg_yb_player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_yb_player(msg_yb_player&& from) noexcept
    : msg_yb_player() {
    *this = ::std::move(from);
  }

  inline msg_yb_player& operator=(msg_yb_player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_yb_player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_yb_player* internal_default_instance() {
    return reinterpret_cast<const msg_yb_player*>(
               &_msg_yb_player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    256;

  void Swap(msg_yb_player* other);
  friend void swap(msg_yb_player& a, msg_yb_player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_yb_player* New() const final {
    return CreateMaybeMessage<msg_yb_player>(NULL);
  }

  msg_yb_player* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_yb_player>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_yb_player& from);
  void MergeFrom(const msg_yb_player& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_yb_player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string player_name = 2;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // uint64 player_guid = 1;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 1;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // int32 player_level = 3;
  void clear_player_level();
  static const int kPlayerLevelFieldNumber = 3;
  ::google::protobuf::int32 player_level() const;
  void set_player_level(::google::protobuf::int32 value);

  // int32 player_bf = 4;
  void clear_player_bf();
  static const int kPlayerBfFieldNumber = 4;
  ::google::protobuf::int32 player_bf() const;
  void set_player_bf(::google::protobuf::int32 value);

  // int32 player_type = 5;
  void clear_player_type();
  static const int kPlayerTypeFieldNumber = 5;
  ::google::protobuf::int32 player_type() const;
  void set_player_type(::google::protobuf::int32 value);

  // int32 player_per = 6;
  void clear_player_per();
  static const int kPlayerPerFieldNumber = 6;
  ::google::protobuf::int32 player_per() const;
  void set_player_per(::google::protobuf::int32 value);

  // uint64 start_time = 7;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 7;
  ::google::protobuf::uint64 start_time() const;
  void set_start_time(::google::protobuf::uint64 value);

  // uint64 jiasu_time = 8;
  void clear_jiasu_time();
  static const int kJiasuTimeFieldNumber = 8;
  ::google::protobuf::uint64 jiasu_time() const;
  void set_jiasu_time(::google::protobuf::uint64 value);

  // int32 player_ybq_num = 9;
  void clear_player_ybq_num();
  static const int kPlayerYbqNumFieldNumber = 9;
  ::google::protobuf::int32 player_ybq_num() const;
  void set_player_ybq_num(::google::protobuf::int32 value);

  // int32 player_vip = 10;
  void clear_player_vip();
  static const int kPlayerVipFieldNumber = 10;
  ::google::protobuf::int32 player_vip() const;
  void set_player_vip(::google::protobuf::int32 value);

  // int32 player_achieve = 11;
  void clear_player_achieve();
  static const int kPlayerAchieveFieldNumber = 11;
  ::google::protobuf::int32 player_achieve() const;
  void set_player_achieve(::google::protobuf::int32 value);

  // int32 player_template = 12;
  void clear_player_template();
  static const int kPlayerTemplateFieldNumber = 12;
  ::google::protobuf::int32 player_template() const;
  void set_player_template(::google::protobuf::int32 value);

  // int32 player_nalflag = 13;
  void clear_player_nalflag();
  static const int kPlayerNalflagFieldNumber = 13;
  ::google::protobuf::int32 player_nalflag() const;
  void set_player_nalflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_yb_player)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::uint64 player_guid_;
  ::google::protobuf::int32 player_level_;
  ::google::protobuf::int32 player_bf_;
  ::google::protobuf::int32 player_type_;
  ::google::protobuf::int32 player_per_;
  ::google::protobuf::uint64 start_time_;
  ::google::protobuf::uint64 jiasu_time_;
  ::google::protobuf::int32 player_ybq_num_;
  ::google::protobuf::int32 player_vip_;
  ::google::protobuf::int32 player_achieve_;
  ::google::protobuf::int32 player_template_;
  ::google::protobuf::int32 player_nalflag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_yb_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_yb_info) */ {
 public:
  msg_yb_info();
  virtual ~msg_yb_info();

  msg_yb_info(const msg_yb_info& from);

  inline msg_yb_info& operator=(const msg_yb_info& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_yb_info(msg_yb_info&& from) noexcept
    : msg_yb_info() {
    *this = ::std::move(from);
  }

  inline msg_yb_info& operator=(msg_yb_info&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_yb_info& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_yb_info* internal_default_instance() {
    return reinterpret_cast<const msg_yb_info*>(
               &_msg_yb_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    257;

  void Swap(msg_yb_info* other);
  friend void swap(msg_yb_info& a, msg_yb_info& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_yb_info* New() const final {
    return CreateMaybeMessage<msg_yb_info>(NULL);
  }

  msg_yb_info* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_yb_info>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_yb_info& from);
  void MergeFrom(const msg_yb_info& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_yb_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string player_name = 3;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 3;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // string target_name = 4;
  void clear_target_name();
  static const int kTargetNameFieldNumber = 4;
  const ::std::string& target_name() const;
  void set_target_name(const ::std::string& value);
  #if LANG_CXX11
  void set_target_name(::std::string&& value);
  #endif
  void set_target_name(const char* value);
  void set_target_name(const char* value, size_t size);
  ::std::string* mutable_target_name();
  ::std::string* release_target_name();
  void set_allocated_target_name(::std::string* target_name);

  // int32 info_id = 1;
  void clear_info_id();
  static const int kInfoIdFieldNumber = 1;
  ::google::protobuf::int32 info_id() const;
  void set_info_id(::google::protobuf::int32 value);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 yb_type = 5;
  void clear_yb_type();
  static const int kYbTypeFieldNumber = 5;
  ::google::protobuf::int32 yb_type() const;
  void set_yb_type(::google::protobuf::int32 value);

  // int32 yuanli = 6;
  void clear_yuanli();
  static const int kYuanliFieldNumber = 6;
  ::google::protobuf::int32 yuanli() const;
  void set_yuanli(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_yb_info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::internal::ArenaStringPtr target_name_;
  ::google::protobuf::int32 info_id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 yb_type_;
  ::google::protobuf::int32 yuanli_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msg_ybq_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.msg_ybq_info) */ {
 public:
  msg_ybq_info();
  virtual ~msg_ybq_info();

  msg_ybq_info(const msg_ybq_info& from);

  inline msg_ybq_info& operator=(const msg_ybq_info& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msg_ybq_info(msg_ybq_info&& from) noexcept
    : msg_ybq_info() {
    *this = ::std::move(from);
  }

  inline msg_ybq_info& operator=(msg_ybq_info&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_ybq_info& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_ybq_info* internal_default_instance() {
    return reinterpret_cast<const msg_ybq_info*>(
               &_msg_ybq_info_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    258;

  void Swap(msg_ybq_info* other);
  friend void swap(msg_ybq_info& a, msg_ybq_info& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msg_ybq_info* New() const final {
    return CreateMaybeMessage<msg_ybq_info>(NULL);
  }

  msg_ybq_info* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msg_ybq_info>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msg_ybq_info& from);
  void MergeFrom(const msg_ybq_info& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_ybq_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string player_name = 3;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 3;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // int32 info_id = 1;
  void clear_info_id();
  static const int kInfoIdFieldNumber = 1;
  ::google::protobuf::int32 info_id() const;
  void set_info_id(::google::protobuf::int32 value);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 yuanli = 4;
  void clear_yuanli();
  static const int kYuanliFieldNumber = 4;
  ::google::protobuf::int32 yuanli() const;
  void set_yuanli(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.msg_ybq_info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::int32 info_id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 yuanli_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_yb_look : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_yb_look) */ {
 public:
  smsg_yb_look();
  virtual ~smsg_yb_look();

  smsg_yb_look(const smsg_yb_look& from);

  inline smsg_yb_look& operator=(const smsg_yb_look& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_yb_look(smsg_yb_look&& from) noexcept
    : smsg_yb_look() {
    *this = ::std::move(from);
  }

  inline smsg_yb_look& operator=(smsg_yb_look&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_yb_look& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_yb_look* internal_default_instance() {
    return reinterpret_cast<const smsg_yb_look*>(
               &_smsg_yb_look_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    259;

  void Swap(smsg_yb_look* other);
  friend void swap(smsg_yb_look& a, smsg_yb_look& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_yb_look* New() const final {
    return CreateMaybeMessage<smsg_yb_look>(NULL);
  }

  smsg_yb_look* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_yb_look>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_yb_look& from);
  void MergeFrom(const smsg_yb_look& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_yb_look* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.game.msg_yb_player players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  ::protocol::game::msg_yb_player* mutable_players(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_yb_player >*
      mutable_players();
  const ::protocol::game::msg_yb_player& players(int index) const;
  ::protocol::game::msg_yb_player* add_players();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_yb_player >&
      players() const;

  // repeated .protocol.game.msg_yb_info yb_infos = 2;
  int yb_infos_size() const;
  void clear_yb_infos();
  static const int kYbInfosFieldNumber = 2;
  ::protocol::game::msg_yb_info* mutable_yb_infos(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_yb_info >*
      mutable_yb_infos();
  const ::protocol::game::msg_yb_info& yb_infos(int index) const;
  ::protocol::game::msg_yb_info* add_yb_infos();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_yb_info >&
      yb_infos() const;

  // repeated uint64 ybq_guids = 3;
  int ybq_guids_size() const;
  void clear_ybq_guids();
  static const int kYbqGuidsFieldNumber = 3;
  ::google::protobuf::uint64 ybq_guids(int index) const;
  void set_ybq_guids(int index, ::google::protobuf::uint64 value);
  void add_ybq_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      ybq_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_ybq_guids();

  // repeated .protocol.game.msg_ybq_info ybq_infos = 4;
  int ybq_infos_size() const;
  void clear_ybq_infos();
  static const int kYbqInfosFieldNumber = 4;
  ::protocol::game::msg_ybq_info* mutable_ybq_infos(int index);
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_ybq_info >*
      mutable_ybq_infos();
  const ::protocol::game::msg_ybq_info& ybq_infos(int index) const;
  ::protocol::game::msg_ybq_info* add_ybq_infos();
  const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_ybq_info >&
      ybq_infos() const;

  // int32 player_id = 5;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 5;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_yb_look)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_yb_player > players_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_yb_info > yb_infos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > ybq_guids_;
  mutable int _ybq_guids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_ybq_info > ybq_infos_;
  ::google::protobuf::int32 player_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_yb_ybq_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_yb_ybq_fight_end) */ {
 public:
  cmsg_yb_ybq_fight_end();
  virtual ~cmsg_yb_ybq_fight_end();

  cmsg_yb_ybq_fight_end(const cmsg_yb_ybq_fight_end& from);

  inline cmsg_yb_ybq_fight_end& operator=(const cmsg_yb_ybq_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_yb_ybq_fight_end(cmsg_yb_ybq_fight_end&& from) noexcept
    : cmsg_yb_ybq_fight_end() {
    *this = ::std::move(from);
  }

  inline cmsg_yb_ybq_fight_end& operator=(cmsg_yb_ybq_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_yb_ybq_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_yb_ybq_fight_end* internal_default_instance() {
    return reinterpret_cast<const cmsg_yb_ybq_fight_end*>(
               &_cmsg_yb_ybq_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    260;

  void Swap(cmsg_yb_ybq_fight_end* other);
  friend void swap(cmsg_yb_ybq_fight_end& a, cmsg_yb_ybq_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_yb_ybq_fight_end* New() const final {
    return CreateMaybeMessage<cmsg_yb_ybq_fight_end>(NULL);
  }

  cmsg_yb_ybq_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_yb_ybq_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_yb_ybq_fight_end& from);
  void MergeFrom(const cmsg_yb_ybq_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_yb_ybq_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 target_guid = 2;
  void clear_target_guid();
  static const int kTargetGuidFieldNumber = 2;
  ::google::protobuf::uint64 target_guid() const;
  void set_target_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_yb_ybq_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 target_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_yb_ybq_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_yb_ybq_fight_end) */ {
 public:
  smsg_yb_ybq_fight_end();
  virtual ~smsg_yb_ybq_fight_end();

  smsg_yb_ybq_fight_end(const smsg_yb_ybq_fight_end& from);

  inline smsg_yb_ybq_fight_end& operator=(const smsg_yb_ybq_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_yb_ybq_fight_end(smsg_yb_ybq_fight_end&& from) noexcept
    : smsg_yb_ybq_fight_end() {
    *this = ::std::move(from);
  }

  inline smsg_yb_ybq_fight_end& operator=(smsg_yb_ybq_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_yb_ybq_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_yb_ybq_fight_end* internal_default_instance() {
    return reinterpret_cast<const smsg_yb_ybq_fight_end*>(
               &_smsg_yb_ybq_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    261;

  void Swap(smsg_yb_ybq_fight_end* other);
  friend void swap(smsg_yb_ybq_fight_end& a, smsg_yb_ybq_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_yb_ybq_fight_end* New() const final {
    return CreateMaybeMessage<smsg_yb_ybq_fight_end>(NULL);
  }

  smsg_yb_ybq_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_yb_ybq_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_yb_ybq_fight_end& from);
  void MergeFrom(const smsg_yb_ybq_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_yb_ybq_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 3;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 3;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 4;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 4;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 5;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 5;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 6;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 6;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.equip_t equips = 7;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 7;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 8;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 8;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 9;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 9;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_yb_ybq_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_yb_reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_yb_reward) */ {
 public:
  smsg_yb_reward();
  virtual ~smsg_yb_reward();

  smsg_yb_reward(const smsg_yb_reward& from);

  inline smsg_yb_reward& operator=(const smsg_yb_reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_yb_reward(smsg_yb_reward&& from) noexcept
    : smsg_yb_reward() {
    *this = ::std::move(from);
  }

  inline smsg_yb_reward& operator=(smsg_yb_reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_yb_reward& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_yb_reward* internal_default_instance() {
    return reinterpret_cast<const smsg_yb_reward*>(
               &_smsg_yb_reward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    262;

  void Swap(smsg_yb_reward* other);
  friend void swap(smsg_yb_reward& a, smsg_yb_reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_yb_reward* New() const final {
    return CreateMaybeMessage<smsg_yb_reward>(NULL);
  }

  smsg_yb_reward* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_yb_reward>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_yb_reward& from);
  void MergeFrom(const smsg_yb_reward& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_yb_reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 yuanli = 1;
  void clear_yuanli();
  static const int kYuanliFieldNumber = 1;
  ::google::protobuf::int32 yuanli() const;
  void set_yuanli(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_yb_reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 yuanli_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_ore_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_ore_fight_end) */ {
 public:
  cmsg_ore_fight_end();
  virtual ~cmsg_ore_fight_end();

  cmsg_ore_fight_end(const cmsg_ore_fight_end& from);

  inline cmsg_ore_fight_end& operator=(const cmsg_ore_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_ore_fight_end(cmsg_ore_fight_end&& from) noexcept
    : cmsg_ore_fight_end() {
    *this = ::std::move(from);
  }

  inline cmsg_ore_fight_end& operator=(cmsg_ore_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_ore_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_ore_fight_end* internal_default_instance() {
    return reinterpret_cast<const cmsg_ore_fight_end*>(
               &_cmsg_ore_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    263;

  void Swap(cmsg_ore_fight_end* other);
  friend void swap(cmsg_ore_fight_end& a, cmsg_ore_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_ore_fight_end* New() const final {
    return CreateMaybeMessage<cmsg_ore_fight_end>(NULL);
  }

  cmsg_ore_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_ore_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_ore_fight_end& from);
  void MergeFrom(const cmsg_ore_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_ore_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_ore_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_ore_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_ore_fight_end) */ {
 public:
  smsg_ore_fight_end();
  virtual ~smsg_ore_fight_end();

  smsg_ore_fight_end(const smsg_ore_fight_end& from);

  inline smsg_ore_fight_end& operator=(const smsg_ore_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_ore_fight_end(smsg_ore_fight_end&& from) noexcept
    : smsg_ore_fight_end() {
    *this = ::std::move(from);
  }

  inline smsg_ore_fight_end& operator=(smsg_ore_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_ore_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_ore_fight_end* internal_default_instance() {
    return reinterpret_cast<const smsg_ore_fight_end*>(
               &_smsg_ore_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    264;

  void Swap(smsg_ore_fight_end* other);
  friend void swap(smsg_ore_fight_end& a, smsg_ore_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_ore_fight_end* New() const final {
    return CreateMaybeMessage<smsg_ore_fight_end>(NULL);
  }

  smsg_ore_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_ore_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_ore_fight_end& from);
  void MergeFrom(const smsg_ore_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_ore_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 3;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 3;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 4;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 4;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 5;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 5;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 6;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 6;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.role_t roles = 7;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 7;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // repeated .dhc.treasure_t treasures = 8;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 8;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.equip_t equips = 9;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 9;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 hp = 10;
  void clear_hp();
  static const int kHpFieldNumber = 10;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_ore_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 hp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_pvp_view : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_pvp_view) */ {
 public:
  smsg_pvp_view();
  virtual ~smsg_pvp_view();

  smsg_pvp_view(const smsg_pvp_view& from);

  inline smsg_pvp_view& operator=(const smsg_pvp_view& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_pvp_view(smsg_pvp_view&& from) noexcept
    : smsg_pvp_view() {
    *this = ::std::move(from);
  }

  inline smsg_pvp_view& operator=(smsg_pvp_view&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_pvp_view& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_pvp_view* internal_default_instance() {
    return reinterpret_cast<const smsg_pvp_view*>(
               &_smsg_pvp_view_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    265;

  void Swap(smsg_pvp_view* other);
  friend void swap(smsg_pvp_view& a, smsg_pvp_view& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_pvp_view* New() const final {
    return CreateMaybeMessage<smsg_pvp_view>(NULL);
  }

  smsg_pvp_view* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_pvp_view>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_pvp_view& from);
  void MergeFrom(const smsg_pvp_view& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_pvp_view* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 player_guids = 1;
  int player_guids_size() const;
  void clear_player_guids();
  static const int kPlayerGuidsFieldNumber = 1;
  ::google::protobuf::uint64 player_guids(int index) const;
  void set_player_guids(int index, ::google::protobuf::uint64 value);
  void add_player_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_guids();

  // repeated string player_names = 2;
  int player_names_size() const;
  void clear_player_names();
  static const int kPlayerNamesFieldNumber = 2;
  const ::std::string& player_names(int index) const;
  ::std::string* mutable_player_names(int index);
  void set_player_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_player_names(int index, ::std::string&& value);
  #endif
  void set_player_names(int index, const char* value);
  void set_player_names(int index, const char* value, size_t size);
  ::std::string* add_player_names();
  void add_player_names(const ::std::string& value);
  #if LANG_CXX11
  void add_player_names(::std::string&& value);
  #endif
  void add_player_names(const char* value);
  void add_player_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& player_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_player_names();

  // repeated int32 player_templates = 3;
  int player_templates_size() const;
  void clear_player_templates();
  static const int kPlayerTemplatesFieldNumber = 3;
  ::google::protobuf::int32 player_templates(int index) const;
  void set_player_templates(int index, ::google::protobuf::int32 value);
  void add_player_templates(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_templates() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_templates();

  // repeated int32 player_servers = 4;
  int player_servers_size() const;
  void clear_player_servers();
  static const int kPlayerServersFieldNumber = 4;
  ::google::protobuf::int32 player_servers(int index) const;
  void set_player_servers(int index, ::google::protobuf::int32 value);
  void add_player_servers(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_servers() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_servers();

  // repeated int32 player_bfs = 5;
  int player_bfs_size() const;
  void clear_player_bfs();
  static const int kPlayerBfsFieldNumber = 5;
  ::google::protobuf::int32 player_bfs(int index) const;
  void set_player_bfs(int index, ::google::protobuf::int32 value);
  void add_player_bfs(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_bfs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_bfs();

  // repeated int32 player_points = 6;
  int player_points_size() const;
  void clear_player_points();
  static const int kPlayerPointsFieldNumber = 6;
  ::google::protobuf::int32 player_points(int index) const;
  void set_player_points(int index, ::google::protobuf::int32 value);
  void add_player_points(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_points() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_points();

  // repeated int32 player_wins = 7;
  int player_wins_size() const;
  void clear_player_wins();
  static const int kPlayerWinsFieldNumber = 7;
  ::google::protobuf::int32 player_wins(int index) const;
  void set_player_wins(int index, ::google::protobuf::int32 value);
  void add_player_wins(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_wins() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_wins();

  // repeated int32 player_vips = 8;
  int player_vips_size() const;
  void clear_player_vips();
  static const int kPlayerVipsFieldNumber = 8;
  ::google::protobuf::int32 player_vips(int index) const;
  void set_player_vips(int index, ::google::protobuf::int32 value);
  void add_player_vips(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_vips() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_vips();

  // repeated int32 player_achieves = 9;
  int player_achieves_size() const;
  void clear_player_achieves();
  static const int kPlayerAchievesFieldNumber = 9;
  ::google::protobuf::int32 player_achieves(int index) const;
  void set_player_achieves(int index, ::google::protobuf::int32 value);
  void add_player_achieves(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_achieves() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_achieves();

  // repeated int32 player_guanghuans = 10;
  int player_guanghuans_size() const;
  void clear_player_guanghuans();
  static const int kPlayerGuanghuansFieldNumber = 10;
  ::google::protobuf::int32 player_guanghuans(int index) const;
  void set_player_guanghuans(int index, ::google::protobuf::int32 value);
  void add_player_guanghuans(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_guanghuans() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_guanghuans();

  // repeated int32 player_dress = 11;
  int player_dress_size() const;
  void clear_player_dress();
  static const int kPlayerDressFieldNumber = 11;
  ::google::protobuf::int32 player_dress(int index) const;
  void set_player_dress(int index, ::google::protobuf::int32 value);
  void add_player_dress(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_dress() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_dress();

  // repeated int32 player_chenghaos = 12;
  int player_chenghaos_size() const;
  void clear_player_chenghaos();
  static const int kPlayerChenghaosFieldNumber = 12;
  ::google::protobuf::int32 player_chenghaos(int index) const;
  void set_player_chenghaos(int index, ::google::protobuf::int32 value);
  void add_player_chenghaos(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_chenghaos() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_chenghaos();

  // repeated int32 player_nalflags = 13;
  int player_nalflags_size() const;
  void clear_player_nalflags();
  static const int kPlayerNalflagsFieldNumber = 13;
  ::google::protobuf::int32 player_nalflags(int index) const;
  void set_player_nalflags(int index, ::google::protobuf::int32 value);
  void add_player_nalflags(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_nalflags() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_nalflags();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_pvp_view)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_guids_;
  mutable int _player_guids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> player_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_templates_;
  mutable int _player_templates_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_servers_;
  mutable int _player_servers_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_bfs_;
  mutable int _player_bfs_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_points_;
  mutable int _player_points_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_wins_;
  mutable int _player_wins_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_vips_;
  mutable int _player_vips_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_achieves_;
  mutable int _player_achieves_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_guanghuans_;
  mutable int _player_guanghuans_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_dress_;
  mutable int _player_dress_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_chenghaos_;
  mutable int _player_chenghaos_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_nalflags_;
  mutable int _player_nalflags_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_pvp_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_pvp_fight_end) */ {
 public:
  cmsg_pvp_fight_end();
  virtual ~cmsg_pvp_fight_end();

  cmsg_pvp_fight_end(const cmsg_pvp_fight_end& from);

  inline cmsg_pvp_fight_end& operator=(const cmsg_pvp_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_pvp_fight_end(cmsg_pvp_fight_end&& from) noexcept
    : cmsg_pvp_fight_end() {
    *this = ::std::move(from);
  }

  inline cmsg_pvp_fight_end& operator=(cmsg_pvp_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_pvp_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_pvp_fight_end* internal_default_instance() {
    return reinterpret_cast<const cmsg_pvp_fight_end*>(
               &_cmsg_pvp_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    266;

  void Swap(cmsg_pvp_fight_end* other);
  friend void swap(cmsg_pvp_fight_end& a, cmsg_pvp_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_pvp_fight_end* New() const final {
    return CreateMaybeMessage<cmsg_pvp_fight_end>(NULL);
  }

  cmsg_pvp_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_pvp_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_pvp_fight_end& from);
  void MergeFrom(const cmsg_pvp_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_pvp_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_pvp_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_pvp_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_pvp_fight_end) */ {
 public:
  smsg_pvp_fight_end();
  virtual ~smsg_pvp_fight_end();

  smsg_pvp_fight_end(const smsg_pvp_fight_end& from);

  inline smsg_pvp_fight_end& operator=(const smsg_pvp_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_pvp_fight_end(smsg_pvp_fight_end&& from) noexcept
    : smsg_pvp_fight_end() {
    *this = ::std::move(from);
  }

  inline smsg_pvp_fight_end& operator=(smsg_pvp_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_pvp_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_pvp_fight_end* internal_default_instance() {
    return reinterpret_cast<const smsg_pvp_fight_end*>(
               &_smsg_pvp_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    267;

  void Swap(smsg_pvp_fight_end* other);
  friend void swap(smsg_pvp_fight_end& a, smsg_pvp_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_pvp_fight_end* New() const final {
    return CreateMaybeMessage<smsg_pvp_fight_end>(NULL);
  }

  smsg_pvp_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_pvp_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_pvp_fight_end& from);
  void MergeFrom(const smsg_pvp_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_pvp_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 4;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 4;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 5;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 5;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 6;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 6;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 7;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 7;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.role_t roles = 8;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 8;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // repeated .dhc.treasure_t treasures = 9;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 9;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.equip_t equips = 10;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 10;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 pvp_point = 3;
  void clear_pvp_point();
  static const int kPvpPointFieldNumber = 3;
  ::google::protobuf::int32 pvp_point() const;
  void set_pvp_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_pvp_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 pvp_point_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_bingyuan_fight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_bingyuan_fight) */ {
 public:
  cmsg_bingyuan_fight();
  virtual ~cmsg_bingyuan_fight();

  cmsg_bingyuan_fight(const cmsg_bingyuan_fight& from);

  inline cmsg_bingyuan_fight& operator=(const cmsg_bingyuan_fight& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_bingyuan_fight(cmsg_bingyuan_fight&& from) noexcept
    : cmsg_bingyuan_fight() {
    *this = ::std::move(from);
  }

  inline cmsg_bingyuan_fight& operator=(cmsg_bingyuan_fight&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_bingyuan_fight& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_bingyuan_fight* internal_default_instance() {
    return reinterpret_cast<const cmsg_bingyuan_fight*>(
               &_cmsg_bingyuan_fight_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    268;

  void Swap(cmsg_bingyuan_fight* other);
  friend void swap(cmsg_bingyuan_fight& a, cmsg_bingyuan_fight& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_bingyuan_fight* New() const final {
    return CreateMaybeMessage<cmsg_bingyuan_fight>(NULL);
  }

  cmsg_bingyuan_fight* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_bingyuan_fight>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_bingyuan_fight& from);
  void MergeFrom(const cmsg_bingyuan_fight& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_bingyuan_fight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_bingyuan_fight)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_bingyuan_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_bingyuan_fight_end) */ {
 public:
  smsg_bingyuan_fight_end();
  virtual ~smsg_bingyuan_fight_end();

  smsg_bingyuan_fight_end(const smsg_bingyuan_fight_end& from);

  inline smsg_bingyuan_fight_end& operator=(const smsg_bingyuan_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_bingyuan_fight_end(smsg_bingyuan_fight_end&& from) noexcept
    : smsg_bingyuan_fight_end() {
    *this = ::std::move(from);
  }

  inline smsg_bingyuan_fight_end& operator=(smsg_bingyuan_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_bingyuan_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_bingyuan_fight_end* internal_default_instance() {
    return reinterpret_cast<const smsg_bingyuan_fight_end*>(
               &_smsg_bingyuan_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    269;

  void Swap(smsg_bingyuan_fight_end* other);
  friend void swap(smsg_bingyuan_fight_end& a, smsg_bingyuan_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_bingyuan_fight_end* New() const final {
    return CreateMaybeMessage<smsg_bingyuan_fight_end>(NULL);
  }

  smsg_bingyuan_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_bingyuan_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_bingyuan_fight_end& from);
  void MergeFrom(const smsg_bingyuan_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_bingyuan_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 bingjing = 1;
  void clear_bingjing();
  static const int kBingjingFieldNumber = 1;
  ::google::protobuf::int32 bingjing() const;
  void set_bingjing(::google::protobuf::int32 value);

  // int32 point = 2;
  void clear_point();
  static const int kPointFieldNumber = 2;
  ::google::protobuf::int32 point() const;
  void set_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_bingyuan_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 bingjing_;
  ::google::protobuf::int32 point_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_team_friend_view : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_team_friend_view) */ {
 public:
  smsg_team_friend_view();
  virtual ~smsg_team_friend_view();

  smsg_team_friend_view(const smsg_team_friend_view& from);

  inline smsg_team_friend_view& operator=(const smsg_team_friend_view& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_team_friend_view(smsg_team_friend_view&& from) noexcept
    : smsg_team_friend_view() {
    *this = ::std::move(from);
  }

  inline smsg_team_friend_view& operator=(smsg_team_friend_view&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_team_friend_view& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_team_friend_view* internal_default_instance() {
    return reinterpret_cast<const smsg_team_friend_view*>(
               &_smsg_team_friend_view_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    270;

  void Swap(smsg_team_friend_view* other);
  friend void swap(smsg_team_friend_view& a, smsg_team_friend_view& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_team_friend_view* New() const final {
    return CreateMaybeMessage<smsg_team_friend_view>(NULL);
  }

  smsg_team_friend_view* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_team_friend_view>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_team_friend_view& from);
  void MergeFrom(const smsg_team_friend_view& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_team_friend_view* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 guid = 1;
  int guid_size() const;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid(int index) const;
  void set_guid(int index, ::google::protobuf::uint64 value);
  void add_guid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guid();

  // repeated string name = 2;
  int name_size() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name(int index) const;
  ::std::string* mutable_name(int index);
  void set_name(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_name(int index, ::std::string&& value);
  #endif
  void set_name(int index, const char* value);
  void set_name(int index, const char* value, size_t size);
  ::std::string* add_name();
  void add_name(const ::std::string& value);
  #if LANG_CXX11
  void add_name(::std::string&& value);
  #endif
  void add_name(const char* value);
  void add_name(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();

  // repeated int32 id = 3;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int32 id(int index) const;
  void set_id(int index, ::google::protobuf::int32 value);
  void add_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // repeated int32 chenghao = 4;
  int chenghao_size() const;
  void clear_chenghao();
  static const int kChenghaoFieldNumber = 4;
  ::google::protobuf::int32 chenghao(int index) const;
  void set_chenghao(int index, ::google::protobuf::int32 value);
  void add_chenghao(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      chenghao() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_chenghao();

  // repeated int32 bf = 5;
  int bf_size() const;
  void clear_bf();
  static const int kBfFieldNumber = 5;
  ::google::protobuf::int32 bf(int index) const;
  void set_bf(int index, ::google::protobuf::int32 value);
  void add_bf(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      bf() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_bf();

  // repeated string guild = 6;
  int guild_size() const;
  void clear_guild();
  static const int kGuildFieldNumber = 6;
  const ::std::string& guild(int index) const;
  ::std::string* mutable_guild(int index);
  void set_guild(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_guild(int index, ::std::string&& value);
  #endif
  void set_guild(int index, const char* value);
  void set_guild(int index, const char* value, size_t size);
  ::std::string* add_guild();
  void add_guild(const ::std::string& value);
  #if LANG_CXX11
  void add_guild(::std::string&& value);
  #endif
  void add_guild(const char* value);
  void add_guild(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& guild() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_guild();

  // repeated int32 level = 7;
  int level_size() const;
  void clear_level();
  static const int kLevelFieldNumber = 7;
  ::google::protobuf::int32 level(int index) const;
  void set_level(int index, ::google::protobuf::int32 value);
  void add_level(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      level() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_level();

  // repeated int32 vip = 8;
  int vip_size() const;
  void clear_vip();
  static const int kVipFieldNumber = 8;
  ::google::protobuf::int32 vip(int index) const;
  void set_vip(int index, ::google::protobuf::int32 value);
  void add_vip(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      vip() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_vip();

  // repeated int32 achieve = 9;
  int achieve_size() const;
  void clear_achieve();
  static const int kAchieveFieldNumber = 9;
  ::google::protobuf::int32 achieve(int index) const;
  void set_achieve(int index, ::google::protobuf::int32 value);
  void add_achieve(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      achieve() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_achieve();

  // repeated int32 nalflag = 10;
  int nalflag_size() const;
  void clear_nalflag();
  static const int kNalflagFieldNumber = 10;
  ::google::protobuf::int32 nalflag(int index) const;
  void set_nalflag(int index, ::google::protobuf::int32 value);
  void add_nalflag(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nalflag() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nalflag();

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_team_friend_view)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guid_;
  mutable int _guid_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  mutable int _id_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > chenghao_;
  mutable int _chenghao_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > bf_;
  mutable int _bf_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> guild_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > level_;
  mutable int _level_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > vip_;
  mutable int _vip_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > achieve_;
  mutable int _achieve_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nalflag_;
  mutable int _nalflag_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_team_invite_friend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_team_invite_friend) */ {
 public:
  cmsg_team_invite_friend();
  virtual ~cmsg_team_invite_friend();

  cmsg_team_invite_friend(const cmsg_team_invite_friend& from);

  inline cmsg_team_invite_friend& operator=(const cmsg_team_invite_friend& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_team_invite_friend(cmsg_team_invite_friend&& from) noexcept
    : cmsg_team_invite_friend() {
    *this = ::std::move(from);
  }

  inline cmsg_team_invite_friend& operator=(cmsg_team_invite_friend&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_team_invite_friend& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_team_invite_friend* internal_default_instance() {
    return reinterpret_cast<const cmsg_team_invite_friend*>(
               &_cmsg_team_invite_friend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    271;

  void Swap(cmsg_team_invite_friend* other);
  friend void swap(cmsg_team_invite_friend& a, cmsg_team_invite_friend& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_team_invite_friend* New() const final {
    return CreateMaybeMessage<cmsg_team_invite_friend>(NULL);
  }

  cmsg_team_invite_friend* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_team_invite_friend>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_team_invite_friend& from);
  void MergeFrom(const cmsg_team_invite_friend& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_team_invite_friend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 friends = 2;
  void clear_friends();
  static const int kFriendsFieldNumber = 2;
  ::google::protobuf::uint64 friends() const;
  void set_friends(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_team_invite_friend)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 friends_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_chenghao_on : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_chenghao_on) */ {
 public:
  cmsg_chenghao_on();
  virtual ~cmsg_chenghao_on();

  cmsg_chenghao_on(const cmsg_chenghao_on& from);

  inline cmsg_chenghao_on& operator=(const cmsg_chenghao_on& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_chenghao_on(cmsg_chenghao_on&& from) noexcept
    : cmsg_chenghao_on() {
    *this = ::std::move(from);
  }

  inline cmsg_chenghao_on& operator=(cmsg_chenghao_on&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_chenghao_on& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_chenghao_on* internal_default_instance() {
    return reinterpret_cast<const cmsg_chenghao_on*>(
               &_cmsg_chenghao_on_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    272;

  void Swap(cmsg_chenghao_on* other);
  friend void swap(cmsg_chenghao_on& a, cmsg_chenghao_on& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_chenghao_on* New() const final {
    return CreateMaybeMessage<cmsg_chenghao_on>(NULL);
  }

  cmsg_chenghao_on* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_chenghao_on>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_chenghao_on& from);
  void MergeFrom(const cmsg_chenghao_on& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_chenghao_on* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_chenghao_on)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_qiecuo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_qiecuo) */ {
 public:
  cmsg_qiecuo();
  virtual ~cmsg_qiecuo();

  cmsg_qiecuo(const cmsg_qiecuo& from);

  inline cmsg_qiecuo& operator=(const cmsg_qiecuo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_qiecuo(cmsg_qiecuo&& from) noexcept
    : cmsg_qiecuo() {
    *this = ::std::move(from);
  }

  inline cmsg_qiecuo& operator=(cmsg_qiecuo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_qiecuo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_qiecuo* internal_default_instance() {
    return reinterpret_cast<const cmsg_qiecuo*>(
               &_cmsg_qiecuo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    273;

  void Swap(cmsg_qiecuo* other);
  friend void swap(cmsg_qiecuo& a, cmsg_qiecuo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_qiecuo* New() const final {
    return CreateMaybeMessage<cmsg_qiecuo>(NULL);
  }

  cmsg_qiecuo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_qiecuo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_qiecuo& from);
  void MergeFrom(const cmsg_qiecuo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_qiecuo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 target = 2;
  void clear_target();
  static const int kTargetFieldNumber = 2;
  ::google::protobuf::uint64 target() const;
  void set_target(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_qiecuo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 target_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_qiecuo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_qiecuo) */ {
 public:
  smsg_qiecuo();
  virtual ~smsg_qiecuo();

  smsg_qiecuo(const smsg_qiecuo& from);

  inline smsg_qiecuo& operator=(const smsg_qiecuo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_qiecuo(smsg_qiecuo&& from) noexcept
    : smsg_qiecuo() {
    *this = ::std::move(from);
  }

  inline smsg_qiecuo& operator=(smsg_qiecuo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_qiecuo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_qiecuo* internal_default_instance() {
    return reinterpret_cast<const smsg_qiecuo*>(
               &_smsg_qiecuo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    274;

  void Swap(smsg_qiecuo* other);
  friend void swap(smsg_qiecuo& a, smsg_qiecuo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_qiecuo* New() const final {
    return CreateMaybeMessage<smsg_qiecuo>(NULL);
  }

  smsg_qiecuo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_qiecuo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_qiecuo& from);
  void MergeFrom(const smsg_qiecuo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_qiecuo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_qiecuo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_ds_fight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_ds_fight) */ {
 public:
  cmsg_ds_fight();
  virtual ~cmsg_ds_fight();

  cmsg_ds_fight(const cmsg_ds_fight& from);

  inline cmsg_ds_fight& operator=(const cmsg_ds_fight& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_ds_fight(cmsg_ds_fight&& from) noexcept
    : cmsg_ds_fight() {
    *this = ::std::move(from);
  }

  inline cmsg_ds_fight& operator=(cmsg_ds_fight&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_ds_fight& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_ds_fight* internal_default_instance() {
    return reinterpret_cast<const cmsg_ds_fight*>(
               &_cmsg_ds_fight_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    275;

  void Swap(cmsg_ds_fight* other);
  friend void swap(cmsg_ds_fight& a, cmsg_ds_fight& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_ds_fight* New() const final {
    return CreateMaybeMessage<cmsg_ds_fight>(NULL);
  }

  cmsg_ds_fight* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_ds_fight>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_ds_fight& from);
  void MergeFrom(const cmsg_ds_fight& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_ds_fight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_ds_fight)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_ds_fight_end : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_ds_fight_end) */ {
 public:
  smsg_ds_fight_end();
  virtual ~smsg_ds_fight_end();

  smsg_ds_fight_end(const smsg_ds_fight_end& from);

  inline smsg_ds_fight_end& operator=(const smsg_ds_fight_end& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_ds_fight_end(smsg_ds_fight_end&& from) noexcept
    : smsg_ds_fight_end() {
    *this = ::std::move(from);
  }

  inline smsg_ds_fight_end& operator=(smsg_ds_fight_end&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_ds_fight_end& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_ds_fight_end* internal_default_instance() {
    return reinterpret_cast<const smsg_ds_fight_end*>(
               &_smsg_ds_fight_end_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    276;

  void Swap(smsg_ds_fight_end* other);
  friend void swap(smsg_ds_fight_end& a, smsg_ds_fight_end& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_ds_fight_end* New() const final {
    return CreateMaybeMessage<smsg_ds_fight_end>(NULL);
  }

  smsg_ds_fight_end* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_ds_fight_end>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_ds_fight_end& from);
  void MergeFrom(const smsg_ds_fight_end& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_ds_fight_end* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 xinpian = 1;
  void clear_xinpian();
  static const int kXinpianFieldNumber = 1;
  ::google::protobuf::int32 xinpian() const;
  void set_xinpian(::google::protobuf::int32 value);

  // int32 point = 2;
  void clear_point();
  static const int kPointFieldNumber = 2;
  ::google::protobuf::int32 point() const;
  void set_point(::google::protobuf::int32 value);

  // int32 ciliao = 3;
  void clear_ciliao();
  static const int kCiliaoFieldNumber = 3;
  ::google::protobuf::int32 ciliao() const;
  void set_ciliao(::google::protobuf::int32 value);

  // int32 duanwei = 4;
  void clear_duanwei();
  static const int kDuanweiFieldNumber = 4;
  ::google::protobuf::int32 duanwei() const;
  void set_duanwei(::google::protobuf::int32 value);

  // int32 srank = 5;
  void clear_srank();
  static const int kSrankFieldNumber = 5;
  ::google::protobuf::int32 srank() const;
  void set_srank(::google::protobuf::int32 value);

  // int32 grank = 6;
  void clear_grank();
  static const int kGrankFieldNumber = 6;
  ::google::protobuf::int32 grank() const;
  void set_grank(::google::protobuf::int32 value);

  // uint64 cd_time = 7;
  void clear_cd_time();
  static const int kCdTimeFieldNumber = 7;
  ::google::protobuf::uint64 cd_time() const;
  void set_cd_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_ds_fight_end)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 xinpian_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::int32 ciliao_;
  ::google::protobuf::int32 duanwei_;
  ::google::protobuf::int32 srank_;
  ::google::protobuf::int32 grank_;
  ::google::protobuf::uint64 cd_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_pet_on : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_pet_on) */ {
 public:
  cmsg_pet_on();
  virtual ~cmsg_pet_on();

  cmsg_pet_on(const cmsg_pet_on& from);

  inline cmsg_pet_on& operator=(const cmsg_pet_on& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_pet_on(cmsg_pet_on&& from) noexcept
    : cmsg_pet_on() {
    *this = ::std::move(from);
  }

  inline cmsg_pet_on& operator=(cmsg_pet_on&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_pet_on& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_pet_on* internal_default_instance() {
    return reinterpret_cast<const cmsg_pet_on*>(
               &_cmsg_pet_on_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    277;

  void Swap(cmsg_pet_on* other);
  friend void swap(cmsg_pet_on& a, cmsg_pet_on& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_pet_on* New() const final {
    return CreateMaybeMessage<cmsg_pet_on>(NULL);
  }

  cmsg_pet_on* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_pet_on>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_pet_on& from);
  void MergeFrom(const cmsg_pet_on& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_pet_on* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_pet_on)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_pet_guard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_pet_guard) */ {
 public:
  cmsg_pet_guard();
  virtual ~cmsg_pet_guard();

  cmsg_pet_guard(const cmsg_pet_guard& from);

  inline cmsg_pet_guard& operator=(const cmsg_pet_guard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_pet_guard(cmsg_pet_guard&& from) noexcept
    : cmsg_pet_guard() {
    *this = ::std::move(from);
  }

  inline cmsg_pet_guard& operator=(cmsg_pet_guard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_pet_guard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_pet_guard* internal_default_instance() {
    return reinterpret_cast<const cmsg_pet_guard*>(
               &_cmsg_pet_guard_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    278;

  void Swap(cmsg_pet_guard* other);
  friend void swap(cmsg_pet_guard& a, cmsg_pet_guard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_pet_guard* New() const final {
    return CreateMaybeMessage<cmsg_pet_guard>(NULL);
  }

  cmsg_pet_guard* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_pet_guard>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_pet_guard& from);
  void MergeFrom(const cmsg_pet_guard& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_pet_guard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 role_guid = 2;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 2;
  ::google::protobuf::uint64 role_guid() const;
  void set_role_guid(::google::protobuf::uint64 value);

  // uint64 pet_guid = 3;
  void clear_pet_guid();
  static const int kPetGuidFieldNumber = 3;
  ::google::protobuf::uint64 pet_guid() const;
  void set_pet_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_pet_guard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 role_guid_;
  ::google::protobuf::uint64 pet_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_pet_level : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_pet_level) */ {
 public:
  cmsg_pet_level();
  virtual ~cmsg_pet_level();

  cmsg_pet_level(const cmsg_pet_level& from);

  inline cmsg_pet_level& operator=(const cmsg_pet_level& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_pet_level(cmsg_pet_level&& from) noexcept
    : cmsg_pet_level() {
    *this = ::std::move(from);
  }

  inline cmsg_pet_level& operator=(cmsg_pet_level&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_pet_level& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_pet_level* internal_default_instance() {
    return reinterpret_cast<const cmsg_pet_level*>(
               &_cmsg_pet_level_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    279;

  void Swap(cmsg_pet_level* other);
  friend void swap(cmsg_pet_level& a, cmsg_pet_level& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_pet_level* New() const final {
    return CreateMaybeMessage<cmsg_pet_level>(NULL);
  }

  cmsg_pet_level* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_pet_level>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_pet_level& from);
  void MergeFrom(const cmsg_pet_level& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_pet_level* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 ciliao = 3;
  int ciliao_size() const;
  void clear_ciliao();
  static const int kCiliaoFieldNumber = 3;
  ::google::protobuf::int32 ciliao(int index) const;
  void set_ciliao(int index, ::google::protobuf::int32 value);
  void add_ciliao(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ciliao() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ciliao();

  // repeated int32 count = 4;
  int count_size() const;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::int32 count(int index) const;
  void set_count(int index, ::google::protobuf::int32 value);
  void add_count(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      count() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_count();

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_pet_level)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ciliao_;
  mutable int _ciliao_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > count_;
  mutable int _count_cached_byte_size_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_pet_jinjie : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_pet_jinjie) */ {
 public:
  cmsg_pet_jinjie();
  virtual ~cmsg_pet_jinjie();

  cmsg_pet_jinjie(const cmsg_pet_jinjie& from);

  inline cmsg_pet_jinjie& operator=(const cmsg_pet_jinjie& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_pet_jinjie(cmsg_pet_jinjie&& from) noexcept
    : cmsg_pet_jinjie() {
    *this = ::std::move(from);
  }

  inline cmsg_pet_jinjie& operator=(cmsg_pet_jinjie&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_pet_jinjie& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_pet_jinjie* internal_default_instance() {
    return reinterpret_cast<const cmsg_pet_jinjie*>(
               &_cmsg_pet_jinjie_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    280;

  void Swap(cmsg_pet_jinjie* other);
  friend void swap(cmsg_pet_jinjie& a, cmsg_pet_jinjie& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_pet_jinjie* New() const final {
    return CreateMaybeMessage<cmsg_pet_jinjie>(NULL);
  }

  cmsg_pet_jinjie* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_pet_jinjie>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_pet_jinjie& from);
  void MergeFrom(const cmsg_pet_jinjie& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_pet_jinjie* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // int32 item_id = 3;
  void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  ::google::protobuf::int32 item_id() const;
  void set_item_id(::google::protobuf::int32 value);

  // int32 index = 4;
  void clear_index();
  static const int kIndexFieldNumber = 4;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_pet_jinjie)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_pet_star : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_pet_star) */ {
 public:
  cmsg_pet_star();
  virtual ~cmsg_pet_star();

  cmsg_pet_star(const cmsg_pet_star& from);

  inline cmsg_pet_star& operator=(const cmsg_pet_star& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_pet_star(cmsg_pet_star&& from) noexcept
    : cmsg_pet_star() {
    *this = ::std::move(from);
  }

  inline cmsg_pet_star& operator=(cmsg_pet_star&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_pet_star& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_pet_star* internal_default_instance() {
    return reinterpret_cast<const cmsg_pet_star*>(
               &_cmsg_pet_star_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    281;

  void Swap(cmsg_pet_star* other);
  friend void swap(cmsg_pet_star& a, cmsg_pet_star& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_pet_star* New() const final {
    return CreateMaybeMessage<cmsg_pet_star>(NULL);
  }

  cmsg_pet_star* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_pet_star>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_pet_star& from);
  void MergeFrom(const cmsg_pet_star& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_pet_star* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_pet_star)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::uint64 guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_pet_duihuan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_pet_duihuan) */ {
 public:
  cmsg_pet_duihuan();
  virtual ~cmsg_pet_duihuan();

  cmsg_pet_duihuan(const cmsg_pet_duihuan& from);

  inline cmsg_pet_duihuan& operator=(const cmsg_pet_duihuan& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_pet_duihuan(cmsg_pet_duihuan&& from) noexcept
    : cmsg_pet_duihuan() {
    *this = ::std::move(from);
  }

  inline cmsg_pet_duihuan& operator=(cmsg_pet_duihuan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_pet_duihuan& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_pet_duihuan* internal_default_instance() {
    return reinterpret_cast<const cmsg_pet_duihuan*>(
               &_cmsg_pet_duihuan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    282;

  void Swap(cmsg_pet_duihuan* other);
  friend void swap(cmsg_pet_duihuan& a, cmsg_pet_duihuan& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_pet_duihuan* New() const final {
    return CreateMaybeMessage<cmsg_pet_duihuan>(NULL);
  }

  cmsg_pet_duihuan* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_pet_duihuan>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_pet_duihuan& from);
  void MergeFrom(const cmsg_pet_duihuan& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_pet_duihuan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // int32 item_id = 2;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::int32 item_id() const;
  void set_item_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_pet_duihuan)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::protocol::game::msg_common* comm_;
  ::google::protobuf::int32 item_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_pet_duihuan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_pet_duihuan) */ {
 public:
  smsg_pet_duihuan();
  virtual ~smsg_pet_duihuan();

  smsg_pet_duihuan(const smsg_pet_duihuan& from);

  inline smsg_pet_duihuan& operator=(const smsg_pet_duihuan& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_pet_duihuan(smsg_pet_duihuan&& from) noexcept
    : smsg_pet_duihuan() {
    *this = ::std::move(from);
  }

  inline smsg_pet_duihuan& operator=(smsg_pet_duihuan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_pet_duihuan& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_pet_duihuan* internal_default_instance() {
    return reinterpret_cast<const smsg_pet_duihuan*>(
               &_smsg_pet_duihuan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    283;

  void Swap(smsg_pet_duihuan* other);
  friend void swap(smsg_pet_duihuan& a, smsg_pet_duihuan& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_pet_duihuan* New() const final {
    return CreateMaybeMessage<smsg_pet_duihuan>(NULL);
  }

  smsg_pet_duihuan* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_pet_duihuan>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_pet_duihuan& from);
  void MergeFrom(const smsg_pet_duihuan& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_pet_duihuan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .dhc.pet_t pet = 1;
  bool has_pet() const;
  void clear_pet();
  static const int kPetFieldNumber = 1;
  private:
  const ::dhc::pet_t& _internal_pet() const;
  public:
  const ::dhc::pet_t& pet() const;
  ::dhc::pet_t* release_pet();
  ::dhc::pet_t* mutable_pet();
  void set_allocated_pet(::dhc::pet_t* pet);

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_pet_duihuan)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::dhc::pet_t* pet_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class cmsg_pet_init : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.cmsg_pet_init) */ {
 public:
  cmsg_pet_init();
  virtual ~cmsg_pet_init();

  cmsg_pet_init(const cmsg_pet_init& from);

  inline cmsg_pet_init& operator=(const cmsg_pet_init& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  cmsg_pet_init(cmsg_pet_init&& from) noexcept
    : cmsg_pet_init() {
    *this = ::std::move(from);
  }

  inline cmsg_pet_init& operator=(cmsg_pet_init&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const cmsg_pet_init& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const cmsg_pet_init* internal_default_instance() {
    return reinterpret_cast<const cmsg_pet_init*>(
               &_cmsg_pet_init_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    284;

  void Swap(cmsg_pet_init* other);
  friend void swap(cmsg_pet_init& a, cmsg_pet_init& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline cmsg_pet_init* New() const final {
    return CreateMaybeMessage<cmsg_pet_init>(NULL);
  }

  cmsg_pet_init* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<cmsg_pet_init>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const cmsg_pet_init& from);
  void MergeFrom(const cmsg_pet_init& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(cmsg_pet_init* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 guid = 2;
  int guid_size() const;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid(int index) const;
  void set_guid(int index, ::google::protobuf::uint64 value);
  void add_guid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_guid();

  // .protocol.game.msg_common comm = 1;
  bool has_comm() const;
  void clear_comm();
  static const int kCommFieldNumber = 1;
  private:
  const ::protocol::game::msg_common& _internal_comm() const;
  public:
  const ::protocol::game::msg_common& comm() const;
  ::protocol::game::msg_common* release_comm();
  ::protocol::game::msg_common* mutable_comm();
  void set_allocated_comm(::protocol::game::msg_common* comm);

  // @@protoc_insertion_point(class_scope:protocol.game.cmsg_pet_init)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > guid_;
  mutable int _guid_cached_byte_size_;
  ::protocol::game::msg_common* comm_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class smsg_pet_init : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.game.smsg_pet_init) */ {
 public:
  smsg_pet_init();
  virtual ~smsg_pet_init();

  smsg_pet_init(const smsg_pet_init& from);

  inline smsg_pet_init& operator=(const smsg_pet_init& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  smsg_pet_init(smsg_pet_init&& from) noexcept
    : smsg_pet_init() {
    *this = ::std::move(from);
  }

  inline smsg_pet_init& operator=(smsg_pet_init&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const smsg_pet_init& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const smsg_pet_init* internal_default_instance() {
    return reinterpret_cast<const smsg_pet_init*>(
               &_smsg_pet_init_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    285;

  void Swap(smsg_pet_init* other);
  friend void swap(smsg_pet_init& a, smsg_pet_init& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline smsg_pet_init* New() const final {
    return CreateMaybeMessage<smsg_pet_init>(NULL);
  }

  smsg_pet_init* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<smsg_pet_init>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const smsg_pet_init& from);
  void MergeFrom(const smsg_pet_init& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(smsg_pet_init* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 types = 1;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 1;
  ::google::protobuf::int32 types(int index) const;
  void set_types(int index, ::google::protobuf::int32 value);
  void add_types(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      types() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_types();

  // repeated int32 value1s = 2;
  int value1s_size() const;
  void clear_value1s();
  static const int kValue1SFieldNumber = 2;
  ::google::protobuf::int32 value1s(int index) const;
  void set_value1s(int index, ::google::protobuf::int32 value);
  void add_value1s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value1s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value1s();

  // repeated int32 value2s = 3;
  int value2s_size() const;
  void clear_value2s();
  static const int kValue2SFieldNumber = 3;
  ::google::protobuf::int32 value2s(int index) const;
  void set_value2s(int index, ::google::protobuf::int32 value);
  void add_value2s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value2s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value2s();

  // repeated int32 value3s = 4;
  int value3s_size() const;
  void clear_value3s();
  static const int kValue3SFieldNumber = 4;
  ::google::protobuf::int32 value3s(int index) const;
  void set_value3s(int index, ::google::protobuf::int32 value);
  void add_value3s(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value3s() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value3s();

  // repeated .dhc.equip_t equips = 5;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 5;
  ::dhc::equip_t* mutable_equips(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
      mutable_equips();
  const ::dhc::equip_t& equips(int index) const;
  ::dhc::equip_t* add_equips();
  const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
      equips() const;

  // repeated .dhc.treasure_t treasures = 6;
  int treasures_size() const;
  void clear_treasures();
  static const int kTreasuresFieldNumber = 6;
  ::dhc::treasure_t* mutable_treasures(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
      mutable_treasures();
  const ::dhc::treasure_t& treasures(int index) const;
  ::dhc::treasure_t* add_treasures();
  const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
      treasures() const;

  // repeated .dhc.role_t roles = 7;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 7;
  ::dhc::role_t* mutable_roles(int index);
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
      mutable_roles();
  const ::dhc::role_t& roles(int index) const;
  ::dhc::role_t* add_roles();
  const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
      roles() const;

  // @@protoc_insertion_point(class_scope:protocol.game.smsg_pet_init)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > types_;
  mutable int _types_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value1s_;
  mutable int _value1s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value2s_;
  mutable int _value2s_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value3s_;
  mutable int _value3s_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::dhc::equip_t > equips_;
  ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t > treasures_;
  ::google::protobuf::RepeatedPtrField< ::dhc::role_t > roles_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fplayer_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// msg_common

// uint64 guid = 1;
inline void msg_common::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 msg_common::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_common.guid)
  return guid_;
}
inline void msg_common::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_common.guid)
}

// string sig = 2;
inline void msg_common::clear_sig() {
  set_changed();
  sig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_common::sig() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_common.sig)
  return sig_.GetNoArena();
}
inline void msg_common::set_sig(const ::std::string& value) {
  set_changed();
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_common.sig)
}
#if LANG_CXX11
inline void msg_common::set_sig(::std::string&& value) {
  set_changed();
  
  sig_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_common.sig)
}
#endif
inline void msg_common::set_sig(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_common.sig)
}
inline void msg_common::set_sig(const char* value, size_t size) {
  set_changed();
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_common.sig)
}
inline ::std::string* msg_common::mutable_sig() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_common.sig)
  return sig_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_common::release_sig() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_common.sig)
  
  return sig_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_common::set_allocated_sig(::std::string* sig) {
  set_changed();
  if (sig != NULL) {
    
  } else {
    
  }
  sig_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sig);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_common.sig)
}

// int32 pck_id = 3;
inline void msg_common::clear_pck_id() {
  set_changed();
  pck_id_ = 0;
}
inline ::google::protobuf::int32 msg_common::pck_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_common.pck_id)
  return pck_id_;
}
inline void msg_common::set_pck_id(::google::protobuf::int32 value) {
  set_changed();
  
  pck_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_common.pck_id)
}

// int32 pck_gold = 4;
inline void msg_common::clear_pck_gold() {
  set_changed();
  pck_gold_ = 0;
}
inline ::google::protobuf::int32 msg_common::pck_gold() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_common.pck_gold)
  return pck_gold_;
}
inline void msg_common::set_pck_gold(::google::protobuf::int32 value) {
  set_changed();
  
  pck_gold_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_common.pck_gold)
}

// int32 pck_jewel = 5;
inline void msg_common::clear_pck_jewel() {
  set_changed();
  pck_jewel_ = 0;
}
inline ::google::protobuf::int32 msg_common::pck_jewel() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_common.pck_jewel)
  return pck_jewel_;
}
inline void msg_common::set_pck_jewel(::google::protobuf::int32 value) {
  set_changed();
  
  pck_jewel_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_common.pck_jewel)
}

// -------------------------------------------------------------------

// msg_common_ex

// uint64 guid = 1;
inline void msg_common_ex::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 msg_common_ex::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_common_ex.guid)
  return guid_;
}
inline void msg_common_ex::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_common_ex.guid)
}

// string sig = 2;
inline void msg_common_ex::clear_sig() {
  set_changed();
  sig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_common_ex::sig() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_common_ex.sig)
  return sig_.GetNoArena();
}
inline void msg_common_ex::set_sig(const ::std::string& value) {
  set_changed();
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_common_ex.sig)
}
#if LANG_CXX11
inline void msg_common_ex::set_sig(::std::string&& value) {
  set_changed();
  
  sig_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_common_ex.sig)
}
#endif
inline void msg_common_ex::set_sig(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_common_ex.sig)
}
inline void msg_common_ex::set_sig(const char* value, size_t size) {
  set_changed();
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_common_ex.sig)
}
inline ::std::string* msg_common_ex::mutable_sig() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_common_ex.sig)
  return sig_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_common_ex::release_sig() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_common_ex.sig)
  
  return sig_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_common_ex::set_allocated_sig(::std::string* sig) {
  set_changed();
  if (sig != NULL) {
    
  } else {
    
  }
  sig_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sig);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_common_ex.sig)
}

// -------------------------------------------------------------------

// cmsg_common

// .protocol.game.msg_common comm = 1;
inline bool cmsg_common::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_common::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_common::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_common::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_common.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_common::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_common.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_common::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_common.comm)
  return comm_;
}
inline void cmsg_common::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_common.comm)
}

// -------------------------------------------------------------------

// cmsg_common_ex

// .protocol.game.msg_common_ex comm = 1;
inline bool cmsg_common_ex::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_common_ex::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common_ex& cmsg_common_ex::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common_ex& cmsg_common_ex::comm() const {
  const ::protocol::game::msg_common_ex* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_common_ex.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common_ex*>(
      &::protocol::game::_msg_common_ex_default_instance_);
}
inline ::protocol::game::msg_common_ex* cmsg_common_ex::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_common_ex.comm)
  
  ::protocol::game::msg_common_ex* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common_ex* cmsg_common_ex::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common_ex>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_common_ex.comm)
  return comm_;
}
inline void cmsg_common_ex::set_allocated_comm(::protocol::game::msg_common_ex* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_common_ex.comm)
}

// -------------------------------------------------------------------

// cmsg_client_login

// string username = 1;
inline void cmsg_client_login::clear_username() {
  set_changed();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_client_login::username() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_client_login.username)
  return username_.GetNoArena();
}
inline void cmsg_client_login::set_username(const ::std::string& value) {
  set_changed();
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_client_login.username)
}
#if LANG_CXX11
inline void cmsg_client_login::set_username(::std::string&& value) {
  set_changed();
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_client_login.username)
}
#endif
inline void cmsg_client_login::set_username(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_client_login.username)
}
inline void cmsg_client_login::set_username(const char* value, size_t size) {
  set_changed();
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_client_login.username)
}
inline ::std::string* cmsg_client_login::mutable_username() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_client_login.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_client_login::release_username() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_client_login.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_client_login::set_allocated_username(::std::string* username) {
  set_changed();
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_client_login.username)
}

// string password = 2;
inline void cmsg_client_login::clear_password() {
  set_changed();
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_client_login::password() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_client_login.password)
  return password_.GetNoArena();
}
inline void cmsg_client_login::set_password(const ::std::string& value) {
  set_changed();
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_client_login.password)
}
#if LANG_CXX11
inline void cmsg_client_login::set_password(::std::string&& value) {
  set_changed();
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_client_login.password)
}
#endif
inline void cmsg_client_login::set_password(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_client_login.password)
}
inline void cmsg_client_login::set_password(const char* value, size_t size) {
  set_changed();
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_client_login.password)
}
inline ::std::string* cmsg_client_login::mutable_password() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_client_login.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_client_login::release_password() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_client_login.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_client_login::set_allocated_password(::std::string* password) {
  set_changed();
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_client_login.password)
}

// string serverid = 3;
inline void cmsg_client_login::clear_serverid() {
  set_changed();
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_client_login::serverid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_client_login.serverid)
  return serverid_.GetNoArena();
}
inline void cmsg_client_login::set_serverid(const ::std::string& value) {
  set_changed();
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_client_login.serverid)
}
#if LANG_CXX11
inline void cmsg_client_login::set_serverid(::std::string&& value) {
  set_changed();
  
  serverid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_client_login.serverid)
}
#endif
inline void cmsg_client_login::set_serverid(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_client_login.serverid)
}
inline void cmsg_client_login::set_serverid(const char* value, size_t size) {
  set_changed();
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_client_login.serverid)
}
inline ::std::string* cmsg_client_login::mutable_serverid() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_client_login.serverid)
  return serverid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_client_login::release_serverid() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_client_login.serverid)
  
  return serverid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_client_login::set_allocated_serverid(::std::string* serverid) {
  set_changed();
  if (serverid != NULL) {
    
  } else {
    
  }
  serverid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverid);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_client_login.serverid)
}

// string extra = 4;
inline void cmsg_client_login::clear_extra() {
  set_changed();
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_client_login::extra() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_client_login.extra)
  return extra_.GetNoArena();
}
inline void cmsg_client_login::set_extra(const ::std::string& value) {
  set_changed();
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_client_login.extra)
}
#if LANG_CXX11
inline void cmsg_client_login::set_extra(::std::string&& value) {
  set_changed();
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_client_login.extra)
}
#endif
inline void cmsg_client_login::set_extra(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_client_login.extra)
}
inline void cmsg_client_login::set_extra(const char* value, size_t size) {
  set_changed();
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_client_login.extra)
}
inline ::std::string* cmsg_client_login::mutable_extra() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_client_login.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_client_login::release_extra() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_client_login.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_client_login::set_allocated_extra(::std::string* extra) {
  set_changed();
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_client_login.extra)
}

// string device = 5;
inline void cmsg_client_login::clear_device() {
  set_changed();
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_client_login::device() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_client_login.device)
  return device_.GetNoArena();
}
inline void cmsg_client_login::set_device(const ::std::string& value) {
  set_changed();
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_client_login.device)
}
#if LANG_CXX11
inline void cmsg_client_login::set_device(::std::string&& value) {
  set_changed();
  
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_client_login.device)
}
#endif
inline void cmsg_client_login::set_device(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_client_login.device)
}
inline void cmsg_client_login::set_device(const char* value, size_t size) {
  set_changed();
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_client_login.device)
}
inline ::std::string* cmsg_client_login::mutable_device() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_client_login.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_client_login::release_device() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_client_login.device)
  
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_client_login::set_allocated_device(::std::string* device) {
  set_changed();
  if (device != NULL) {
    
  } else {
    
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_client_login.device)
}

// int32 version = 6;
inline void cmsg_client_login::clear_version() {
  set_changed();
  version_ = 0;
}
inline ::google::protobuf::int32 cmsg_client_login::version() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_client_login.version)
  return version_;
}
inline void cmsg_client_login::set_version(::google::protobuf::int32 value) {
  set_changed();
  
  version_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_client_login.version)
}

// string platform = 7;
inline void cmsg_client_login::clear_platform() {
  set_changed();
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_client_login::platform() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_client_login.platform)
  return platform_.GetNoArena();
}
inline void cmsg_client_login::set_platform(const ::std::string& value) {
  set_changed();
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_client_login.platform)
}
#if LANG_CXX11
inline void cmsg_client_login::set_platform(::std::string&& value) {
  set_changed();
  
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_client_login.platform)
}
#endif
inline void cmsg_client_login::set_platform(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_client_login.platform)
}
inline void cmsg_client_login::set_platform(const char* value, size_t size) {
  set_changed();
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_client_login.platform)
}
inline ::std::string* cmsg_client_login::mutable_platform() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_client_login.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_client_login::release_platform() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_client_login.platform)
  
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_client_login::set_allocated_platform(::std::string* platform) {
  set_changed();
  if (platform != NULL) {
    
  } else {
    
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_client_login.platform)
}

// int32 lang_ver = 8;
inline void cmsg_client_login::clear_lang_ver() {
  set_changed();
  lang_ver_ = 0;
}
inline ::google::protobuf::int32 cmsg_client_login::lang_ver() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_client_login.lang_ver)
  return lang_ver_;
}
inline void cmsg_client_login::set_lang_ver(::google::protobuf::int32 value) {
  set_changed();
  
  lang_ver_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_client_login.lang_ver)
}

// -------------------------------------------------------------------

// smsg_client_login

// uint64 guid = 1;
inline void smsg_client_login::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_client_login::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_client_login.guid)
  return guid_;
}
inline void smsg_client_login::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_client_login.guid)
}

// string sig = 2;
inline void smsg_client_login::clear_sig() {
  set_changed();
  sig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_client_login::sig() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_client_login.sig)
  return sig_.GetNoArena();
}
inline void smsg_client_login::set_sig(const ::std::string& value) {
  set_changed();
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_client_login.sig)
}
#if LANG_CXX11
inline void smsg_client_login::set_sig(::std::string&& value) {
  set_changed();
  
  sig_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_client_login.sig)
}
#endif
inline void smsg_client_login::set_sig(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_client_login.sig)
}
inline void smsg_client_login::set_sig(const char* value, size_t size) {
  set_changed();
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_client_login.sig)
}
inline ::std::string* smsg_client_login::mutable_sig() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_client_login.sig)
  return sig_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_client_login::release_sig() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_client_login.sig)
  
  return sig_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_client_login::set_allocated_sig(::std::string* sig) {
  set_changed();
  if (sig != NULL) {
    
  } else {
    
  }
  sig_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sig);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_client_login.sig)
}

// .dhc.player_t player = 3;
inline bool smsg_client_login::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline const ::dhc::player_t& smsg_client_login::_internal_player() const {
  return *player_;
}
inline const ::dhc::player_t& smsg_client_login::player() const {
  const ::dhc::player_t* p = player_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_client_login.player)
  return p != NULL ? *p : *reinterpret_cast<const ::dhc::player_t*>(
      &::dhc::_player_t_default_instance_);
}
inline ::dhc::player_t* smsg_client_login::release_player() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_client_login.player)
  
  ::dhc::player_t* temp = player_;
  player_ = NULL;
  return temp;
}
inline ::dhc::player_t* smsg_client_login::mutable_player() {
  
  if (player_ == NULL) {
    auto* p = CreateMaybeMessage<::dhc::player_t>(GetArenaNoVirtual());
    player_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_client_login.player)
  return player_;
}
inline void smsg_client_login::set_allocated_player(::dhc::player_t* player) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(player_);
  }
  if (player) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_client_login.player)
}

// repeated .dhc.role_t roles = 4;
inline int smsg_client_login::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_client_login::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_client_login.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_client_login::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_client_login.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_client_login::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_client_login.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_client_login::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_client_login.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_client_login::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_client_login.roles)
  return roles_;
}

// repeated .dhc.equip_t equips = 5;
inline int smsg_client_login::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_client_login::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_client_login.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_client_login::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_client_login.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_client_login::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_client_login.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_client_login::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_client_login.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_client_login::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_client_login.equips)
  return equips_;
}

// repeated .dhc.pet_t pets = 6;
inline int smsg_client_login::pets_size() const {
  return pets_.size();
}
inline ::dhc::pet_t* smsg_client_login::mutable_pets(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_client_login.pets)
  return pets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >*
smsg_client_login::mutable_pets() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_client_login.pets)
  return &pets_;
}
inline const ::dhc::pet_t& smsg_client_login::pets(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_client_login.pets)
  return pets_.Get(index);
}
inline ::dhc::pet_t* smsg_client_login::add_pets() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_client_login.pets)
  return pets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >&
smsg_client_login::pets() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_client_login.pets)
  return pets_;
}

// uint64 server_time = 7;
inline void smsg_client_login::clear_server_time() {
  set_changed();
  server_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_client_login::server_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_client_login.server_time)
  return server_time_;
}
inline void smsg_client_login::set_server_time(::google::protobuf::uint64 value) {
  set_changed();
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_client_login.server_time)
}

// uint64 start_time = 8;
inline void smsg_client_login::clear_start_time() {
  set_changed();
  start_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_client_login::start_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_client_login.start_time)
  return start_time_;
}
inline void smsg_client_login::set_start_time(::google::protobuf::uint64 value) {
  set_changed();
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_client_login.start_time)
}

// repeated .protocol.game.smsg_chat chats = 9;
inline int smsg_client_login::chats_size() const {
  return chats_.size();
}
inline void smsg_client_login::clear_chats() {
  chats_.Clear();
}
inline ::protocol::game::smsg_chat* smsg_client_login::mutable_chats(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_client_login.chats)
  return chats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_chat >*
smsg_client_login::mutable_chats() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_client_login.chats)
  return &chats_;
}
inline const ::protocol::game::smsg_chat& smsg_client_login::chats(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_client_login.chats)
  return chats_.Get(index);
}
inline ::protocol::game::smsg_chat* smsg_client_login::add_chats() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_client_login.chats)
  return chats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_chat >&
smsg_client_login::chats() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_client_login.chats)
  return chats_;
}

// repeated .protocol.game.smsg_chat guild_chats = 10;
inline int smsg_client_login::guild_chats_size() const {
  return guild_chats_.size();
}
inline void smsg_client_login::clear_guild_chats() {
  guild_chats_.Clear();
}
inline ::protocol::game::smsg_chat* smsg_client_login::mutable_guild_chats(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_client_login.guild_chats)
  return guild_chats_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_chat >*
smsg_client_login::mutable_guild_chats() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_client_login.guild_chats)
  return &guild_chats_;
}
inline const ::protocol::game::smsg_chat& smsg_client_login::guild_chats(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_client_login.guild_chats)
  return guild_chats_.Get(index);
}
inline ::protocol::game::smsg_chat* smsg_client_login::add_guild_chats() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_client_login.guild_chats)
  return guild_chats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_chat >&
smsg_client_login::guild_chats() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_client_login.guild_chats)
  return guild_chats_;
}

// repeated .dhc.treasure_t treasures = 11;
inline int smsg_client_login::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_client_login::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_client_login.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_client_login::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_client_login.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_client_login::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_client_login.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_client_login::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_client_login.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_client_login::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_client_login.treasures)
  return treasures_;
}

// uint64 guild_time = 12;
inline void smsg_client_login::clear_guild_time() {
  set_changed();
  guild_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_client_login::guild_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_client_login.guild_time)
  return guild_time_;
}
inline void smsg_client_login::set_guild_time(::google::protobuf::uint64 value) {
  set_changed();
  
  guild_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_client_login.guild_time)
}

// int32 is_new = 13;
inline void smsg_client_login::clear_is_new() {
  set_changed();
  is_new_ = 0;
}
inline ::google::protobuf::int32 smsg_client_login::is_new() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_client_login.is_new)
  return is_new_;
}
inline void smsg_client_login::set_is_new(::google::protobuf::int32 value) {
  set_changed();
  
  is_new_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_client_login.is_new)
}

// string device = 14;
inline void smsg_client_login::clear_device() {
  set_changed();
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_client_login::device() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_client_login.device)
  return device_.GetNoArena();
}
inline void smsg_client_login::set_device(const ::std::string& value) {
  set_changed();
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_client_login.device)
}
#if LANG_CXX11
inline void smsg_client_login::set_device(::std::string&& value) {
  set_changed();
  
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_client_login.device)
}
#endif
inline void smsg_client_login::set_device(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_client_login.device)
}
inline void smsg_client_login::set_device(const char* value, size_t size) {
  set_changed();
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_client_login.device)
}
inline ::std::string* smsg_client_login::mutable_device() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_client_login.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_client_login::release_device() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_client_login.device)
  
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_client_login::set_allocated_device(::std::string* device) {
  set_changed();
  if (device != NULL) {
    
  } else {
    
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_client_login.device)
}

// uint64 device_time = 15;
inline void smsg_client_login::clear_device_time() {
  set_changed();
  device_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_client_login::device_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_client_login.device_time)
  return device_time_;
}
inline void smsg_client_login::set_device_time(::google::protobuf::uint64 value) {
  set_changed();
  
  device_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_client_login.device_time)
}

// -------------------------------------------------------------------

// cmsg_player_name

// .protocol.game.msg_common comm = 1;
inline bool cmsg_player_name::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_player_name::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_player_name::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_player_name::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_player_name.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_player_name::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_player_name.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_player_name::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_player_name.comm)
  return comm_;
}
inline void cmsg_player_name::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_player_name.comm)
}

// string name = 2;
inline void cmsg_player_name::clear_name() {
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_player_name::name() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_player_name.name)
  return name_.GetNoArena();
}
inline void cmsg_player_name::set_name(const ::std::string& value) {
  set_changed();
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_player_name.name)
}
#if LANG_CXX11
inline void cmsg_player_name::set_name(::std::string&& value) {
  set_changed();
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_player_name.name)
}
#endif
inline void cmsg_player_name::set_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_player_name.name)
}
inline void cmsg_player_name::set_name(const char* value, size_t size) {
  set_changed();
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_player_name.name)
}
inline ::std::string* cmsg_player_name::mutable_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_player_name.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_player_name::release_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_player_name.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_player_name::set_allocated_name(::std::string* name) {
  set_changed();
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_player_name.name)
}

// -------------------------------------------------------------------

// cmsg_player_nalflag

// .protocol.game.msg_common comm = 1;
inline bool cmsg_player_nalflag::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_player_nalflag::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_player_nalflag::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_player_nalflag::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_player_nalflag.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_player_nalflag::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_player_nalflag.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_player_nalflag::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_player_nalflag.comm)
  return comm_;
}
inline void cmsg_player_nalflag::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_player_nalflag.comm)
}

// int32 nalflag = 2;
inline void cmsg_player_nalflag::clear_nalflag() {
  set_changed();
  nalflag_ = 0;
}
inline ::google::protobuf::int32 cmsg_player_nalflag::nalflag() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_player_nalflag.nalflag)
  return nalflag_;
}
inline void cmsg_player_nalflag::set_nalflag(::google::protobuf::int32 value) {
  set_changed();
  
  nalflag_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_player_nalflag.nalflag)
}

// -------------------------------------------------------------------

// smsg_player_name

// int32 code_stat = 1;
inline void smsg_player_name::clear_code_stat() {
  set_changed();
  code_stat_ = 0;
}
inline ::google::protobuf::int32 smsg_player_name::code_stat() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_name.code_stat)
  return code_stat_;
}
inline void smsg_player_name::set_code_stat(::google::protobuf::int32 value) {
  set_changed();
  
  code_stat_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_name.code_stat)
}

// -------------------------------------------------------------------

// smsg_success

// bool success = 1;
inline void smsg_success::clear_success() {
  set_changed();
  success_ = false;
}
inline bool smsg_success::success() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_success.success)
  return success_;
}
inline void smsg_success::set_success(bool value) {
  set_changed();
  
  success_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_success.success)
}

// -------------------------------------------------------------------

// cmsg_player_zsname

// .protocol.game.msg_common comm = 1;
inline bool cmsg_player_zsname::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_player_zsname::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_player_zsname::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_player_zsname::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_player_zsname.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_player_zsname::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_player_zsname.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_player_zsname::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_player_zsname.comm)
  return comm_;
}
inline void cmsg_player_zsname::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_player_zsname.comm)
}

// string zsname = 2;
inline void cmsg_player_zsname::clear_zsname() {
  set_changed();
  zsname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_player_zsname::zsname() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_player_zsname.zsname)
  return zsname_.GetNoArena();
}
inline void cmsg_player_zsname::set_zsname(const ::std::string& value) {
  set_changed();
  
  zsname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_player_zsname.zsname)
}
#if LANG_CXX11
inline void cmsg_player_zsname::set_zsname(::std::string&& value) {
  set_changed();
  
  zsname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_player_zsname.zsname)
}
#endif
inline void cmsg_player_zsname::set_zsname(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  zsname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_player_zsname.zsname)
}
inline void cmsg_player_zsname::set_zsname(const char* value, size_t size) {
  set_changed();
  
  zsname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_player_zsname.zsname)
}
inline ::std::string* cmsg_player_zsname::mutable_zsname() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_player_zsname.zsname)
  return zsname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_player_zsname::release_zsname() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_player_zsname.zsname)
  
  return zsname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_player_zsname::set_allocated_zsname(::std::string* zsname) {
  set_changed();
  if (zsname != NULL) {
    
  } else {
    
  }
  zsname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zsname);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_player_zsname.zsname)
}

// -------------------------------------------------------------------

// cmsg_player_template

// .protocol.game.msg_common comm = 1;
inline bool cmsg_player_template::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_player_template::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_player_template::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_player_template::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_player_template.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_player_template::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_player_template.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_player_template::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_player_template.comm)
  return comm_;
}
inline void cmsg_player_template::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_player_template.comm)
}

// int32 template_id = 2;
inline void cmsg_player_template::clear_template_id() {
  set_changed();
  template_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_player_template::template_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_player_template.template_id)
  return template_id_;
}
inline void cmsg_player_template::set_template_id(::google::protobuf::int32 value) {
  set_changed();
  
  template_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_player_template.template_id)
}

// -------------------------------------------------------------------

// msg_fight_text

// int32 fight_type = 1;
inline void msg_fight_text::clear_fight_type() {
  set_changed();
  fight_type_ = 0;
}
inline ::google::protobuf::int32 msg_fight_text::fight_type() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_text.fight_type)
  return fight_type_;
}
inline void msg_fight_text::set_fight_type(::google::protobuf::int32 value) {
  set_changed();
  
  fight_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_text.fight_type)
}

// repeated .protocol.game.msg_fight_bo bos = 2;
inline int msg_fight_text::bos_size() const {
  return bos_.size();
}
inline void msg_fight_text::clear_bos() {
  bos_.Clear();
}
inline ::protocol::game::msg_fight_bo* msg_fight_text::mutable_bos(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_fight_text.bos)
  return bos_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_fight_bo >*
msg_fight_text::mutable_bos() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_fight_text.bos)
  return &bos_;
}
inline const ::protocol::game::msg_fight_bo& msg_fight_text::bos(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_text.bos)
  return bos_.Get(index);
}
inline ::protocol::game::msg_fight_bo* msg_fight_text::add_bos() {
  // @@protoc_insertion_point(field_add:protocol.game.msg_fight_text.bos)
  return bos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_fight_bo >&
msg_fight_text::bos() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_fight_text.bos)
  return bos_;
}

// .protocol.game.msg_fight_state end_state = 3;
inline bool msg_fight_text::has_end_state() const {
  return this != internal_default_instance() && end_state_ != NULL;
}
inline void msg_fight_text::clear_end_state() {
  if (GetArenaNoVirtual() == NULL && end_state_ != NULL) {
    delete end_state_;
  }
  end_state_ = NULL;
}
inline const ::protocol::game::msg_fight_state& msg_fight_text::_internal_end_state() const {
  return *end_state_;
}
inline const ::protocol::game::msg_fight_state& msg_fight_text::end_state() const {
  const ::protocol::game::msg_fight_state* p = end_state_;
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_text.end_state)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_fight_state*>(
      &::protocol::game::_msg_fight_state_default_instance_);
}
inline ::protocol::game::msg_fight_state* msg_fight_text::release_end_state() {
  // @@protoc_insertion_point(field_release:protocol.game.msg_fight_text.end_state)
  
  ::protocol::game::msg_fight_state* temp = end_state_;
  end_state_ = NULL;
  return temp;
}
inline ::protocol::game::msg_fight_state* msg_fight_text::mutable_end_state() {
  
  if (end_state_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_fight_state>(GetArenaNoVirtual());
    end_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_fight_text.end_state)
  return end_state_;
}
inline void msg_fight_text::set_allocated_end_state(::protocol::game::msg_fight_state* end_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete end_state_;
  }
  if (end_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      end_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_state, submessage_arena);
    }
    
  } else {
    
  }
  end_state_ = end_state;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_fight_text.end_state)
}

// bool can_jump = 4;
inline void msg_fight_text::clear_can_jump() {
  set_changed();
  can_jump_ = false;
}
inline bool msg_fight_text::can_jump() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_text.can_jump)
  return can_jump_;
}
inline void msg_fight_text::set_can_jump(bool value) {
  set_changed();
  
  can_jump_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_text.can_jump)
}

// int32 fail_type = 5;
inline void msg_fight_text::clear_fail_type() {
  set_changed();
  fail_type_ = 0;
}
inline ::google::protobuf::int32 msg_fight_text::fail_type() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_text.fail_type)
  return fail_type_;
}
inline void msg_fight_text::set_fail_type(::google::protobuf::int32 value) {
  set_changed();
  
  fail_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_text.fail_type)
}

// int32 fail_param = 6;
inline void msg_fight_text::clear_fail_param() {
  set_changed();
  fail_param_ = 0;
}
inline ::google::protobuf::int32 msg_fight_text::fail_param() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_text.fail_param)
  return fail_param_;
}
inline void msg_fight_text::set_fail_param(::google::protobuf::int32 value) {
  set_changed();
  
  fail_param_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_text.fail_param)
}

// -------------------------------------------------------------------

// msg_fight_bo

// .protocol.game.msg_fight_state bo_state = 1;
inline bool msg_fight_bo::has_bo_state() const {
  return this != internal_default_instance() && bo_state_ != NULL;
}
inline void msg_fight_bo::clear_bo_state() {
  if (GetArenaNoVirtual() == NULL && bo_state_ != NULL) {
    delete bo_state_;
  }
  bo_state_ = NULL;
}
inline const ::protocol::game::msg_fight_state& msg_fight_bo::_internal_bo_state() const {
  return *bo_state_;
}
inline const ::protocol::game::msg_fight_state& msg_fight_bo::bo_state() const {
  const ::protocol::game::msg_fight_state* p = bo_state_;
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_bo.bo_state)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_fight_state*>(
      &::protocol::game::_msg_fight_state_default_instance_);
}
inline ::protocol::game::msg_fight_state* msg_fight_bo::release_bo_state() {
  // @@protoc_insertion_point(field_release:protocol.game.msg_fight_bo.bo_state)
  
  ::protocol::game::msg_fight_state* temp = bo_state_;
  bo_state_ = NULL;
  return temp;
}
inline ::protocol::game::msg_fight_state* msg_fight_bo::mutable_bo_state() {
  
  if (bo_state_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_fight_state>(GetArenaNoVirtual());
    bo_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_fight_bo.bo_state)
  return bo_state_;
}
inline void msg_fight_bo::set_allocated_bo_state(::protocol::game::msg_fight_state* bo_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bo_state_;
  }
  if (bo_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bo_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bo_state, submessage_arena);
    }
    
  } else {
    
  }
  bo_state_ = bo_state;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_fight_bo.bo_state)
}

// repeated .protocol.game.msg_fight_tick ticks = 2;
inline int msg_fight_bo::ticks_size() const {
  return ticks_.size();
}
inline void msg_fight_bo::clear_ticks() {
  ticks_.Clear();
}
inline ::protocol::game::msg_fight_tick* msg_fight_bo::mutable_ticks(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_fight_bo.ticks)
  return ticks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_fight_tick >*
msg_fight_bo::mutable_ticks() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_fight_bo.ticks)
  return &ticks_;
}
inline const ::protocol::game::msg_fight_tick& msg_fight_bo::ticks(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_bo.ticks)
  return ticks_.Get(index);
}
inline ::protocol::game::msg_fight_tick* msg_fight_bo::add_ticks() {
  // @@protoc_insertion_point(field_add:protocol.game.msg_fight_bo.ticks)
  return ticks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_fight_tick >&
msg_fight_bo::ticks() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_fight_bo.ticks)
  return ticks_;
}

// -------------------------------------------------------------------

// msg_fight_state

// repeated .protocol.game.msg_fight_role roles = 1;
inline int msg_fight_state::roles_size() const {
  return roles_.size();
}
inline void msg_fight_state::clear_roles() {
  roles_.Clear();
}
inline ::protocol::game::msg_fight_role* msg_fight_state::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_fight_state.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_fight_role >*
msg_fight_state::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_fight_state.roles)
  return &roles_;
}
inline const ::protocol::game::msg_fight_role& msg_fight_state::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_state.roles)
  return roles_.Get(index);
}
inline ::protocol::game::msg_fight_role* msg_fight_state::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.msg_fight_state.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_fight_role >&
msg_fight_state::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_fight_state.roles)
  return roles_;
}

// -------------------------------------------------------------------

// msg_fight_role

// int32 site = 1;
inline void msg_fight_role::clear_site() {
  set_changed();
  site_ = 0;
}
inline ::google::protobuf::int32 msg_fight_role::site() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_role.site)
  return site_;
}
inline void msg_fight_role::set_site(::google::protobuf::int32 value) {
  set_changed();
  
  site_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_role.site)
}

// int32 duiwei = 2;
inline void msg_fight_role::clear_duiwei() {
  set_changed();
  duiwei_ = 0;
}
inline ::google::protobuf::int32 msg_fight_role::duiwei() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_role.duiwei)
  return duiwei_;
}
inline void msg_fight_role::set_duiwei(::google::protobuf::int32 value) {
  set_changed();
  
  duiwei_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_role.duiwei)
}

// int32 id = 3;
inline void msg_fight_role::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 msg_fight_role::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_role.id)
  return id_;
}
inline void msg_fight_role::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_role.id)
}

// double max_hp = 4;
inline void msg_fight_role::clear_max_hp() {
  set_changed();
  max_hp_ = 0;
}
inline double msg_fight_role::max_hp() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_role.max_hp)
  return max_hp_;
}
inline void msg_fight_role::set_max_hp(double value) {
  set_changed();
  
  max_hp_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_role.max_hp)
}

// double cur_hp = 5;
inline void msg_fight_role::clear_cur_hp() {
  set_changed();
  cur_hp_ = 0;
}
inline double msg_fight_role::cur_hp() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_role.cur_hp)
  return cur_hp_;
}
inline void msg_fight_role::set_cur_hp(double value) {
  set_changed();
  
  cur_hp_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_role.cur_hp)
}

// int32 nengliang = 6;
inline void msg_fight_role::clear_nengliang() {
  set_changed();
  nengliang_ = 0;
}
inline ::google::protobuf::int32 msg_fight_role::nengliang() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_role.nengliang)
  return nengliang_;
}
inline void msg_fight_role::set_nengliang(::google::protobuf::int32 value) {
  set_changed();
  
  nengliang_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_role.nengliang)
}

// repeated int32 buff_ids = 7;
inline int msg_fight_role::buff_ids_size() const {
  return buff_ids_.size();
}
inline void msg_fight_role::clear_buff_ids() {
  set_changed();
  buff_ids_.Clear();
}
inline ::google::protobuf::int32 msg_fight_role::buff_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_role.buff_ids)
  return buff_ids_.Get(index);
}
inline void msg_fight_role::set_buff_ids(int index, ::google::protobuf::int32 value) {
  set_changed();
  buff_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_role.buff_ids)
}
inline void msg_fight_role::add_buff_ids(::google::protobuf::int32 value) {
  set_changed();
  buff_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_fight_role.buff_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_fight_role::buff_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_fight_role.buff_ids)
  return buff_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_fight_role::mutable_buff_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_fight_role.buff_ids)
  return &buff_ids_;
}

// int32 jlevel = 8;
inline void msg_fight_role::clear_jlevel() {
  set_changed();
  jlevel_ = 0;
}
inline ::google::protobuf::int32 msg_fight_role::jlevel() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_role.jlevel)
  return jlevel_;
}
inline void msg_fight_role::set_jlevel(::google::protobuf::int32 value) {
  set_changed();
  
  jlevel_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_role.jlevel)
}

// int32 glevel = 9;
inline void msg_fight_role::clear_glevel() {
  set_changed();
  glevel_ = 0;
}
inline ::google::protobuf::int32 msg_fight_role::glevel() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_role.glevel)
  return glevel_;
}
inline void msg_fight_role::set_glevel(::google::protobuf::int32 value) {
  set_changed();
  
  glevel_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_role.glevel)
}

// int32 pinzhi = 10;
inline void msg_fight_role::clear_pinzhi() {
  set_changed();
  pinzhi_ = 0;
}
inline ::google::protobuf::int32 msg_fight_role::pinzhi() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_role.pinzhi)
  return pinzhi_;
}
inline void msg_fight_role::set_pinzhi(::google::protobuf::int32 value) {
  set_changed();
  
  pinzhi_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_role.pinzhi)
}

// int32 dress_id = 11;
inline void msg_fight_role::clear_dress_id() {
  set_changed();
  dress_id_ = 0;
}
inline ::google::protobuf::int32 msg_fight_role::dress_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_role.dress_id)
  return dress_id_;
}
inline void msg_fight_role::set_dress_id(::google::protobuf::int32 value) {
  set_changed();
  
  dress_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_role.dress_id)
}

// int32 guanghuan_id = 12;
inline void msg_fight_role::clear_guanghuan_id() {
  set_changed();
  guanghuan_id_ = 0;
}
inline ::google::protobuf::int32 msg_fight_role::guanghuan_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_role.guanghuan_id)
  return guanghuan_id_;
}
inline void msg_fight_role::set_guanghuan_id(::google::protobuf::int32 value) {
  set_changed();
  
  guanghuan_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_role.guanghuan_id)
}

// -------------------------------------------------------------------

// msg_fight_tick

// int32 type = 1;
inline void msg_fight_tick::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 msg_fight_tick::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_tick.type)
  return type_;
}
inline void msg_fight_tick::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_tick.type)
}

// repeated int32 values = 2;
inline int msg_fight_tick::values_size() const {
  return values_.size();
}
inline void msg_fight_tick::clear_values() {
  set_changed();
  values_.Clear();
}
inline ::google::protobuf::int32 msg_fight_tick::values(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_tick.values)
  return values_.Get(index);
}
inline void msg_fight_tick::set_values(int index, ::google::protobuf::int32 value) {
  set_changed();
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_tick.values)
}
inline void msg_fight_tick::add_values(::google::protobuf::int32 value) {
  set_changed();
  values_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_fight_tick.values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_fight_tick::values() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_fight_tick.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_fight_tick::mutable_values() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_fight_tick.values)
  return &values_;
}

// repeated double dvalues = 3;
inline int msg_fight_tick::dvalues_size() const {
  return dvalues_.size();
}
inline void msg_fight_tick::clear_dvalues() {
  set_changed();
  dvalues_.Clear();
}
inline double msg_fight_tick::dvalues(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_fight_tick.dvalues)
  return dvalues_.Get(index);
}
inline void msg_fight_tick::set_dvalues(int index, double value) {
  set_changed();
  dvalues_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_fight_tick.dvalues)
}
inline void msg_fight_tick::add_dvalues(double value) {
  set_changed();
  dvalues_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_fight_tick.dvalues)
}
inline const ::google::protobuf::RepeatedField< double >&
msg_fight_tick::dvalues() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_fight_tick.dvalues)
  return dvalues_;
}
inline ::google::protobuf::RepeatedField< double >*
msg_fight_tick::mutable_dvalues() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_fight_tick.dvalues)
  return &dvalues_;
}

// -------------------------------------------------------------------

// cmsg_mission_fight_end

// .protocol.game.msg_common comm = 1;
inline bool cmsg_mission_fight_end::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_mission_fight_end::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_mission_fight_end::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_mission_fight_end::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_mission_fight_end.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_mission_fight_end::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_mission_fight_end.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_mission_fight_end::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_mission_fight_end.comm)
  return comm_;
}
inline void cmsg_mission_fight_end::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_mission_fight_end.comm)
}

// int32 mission_id = 2;
inline void cmsg_mission_fight_end::clear_mission_id() {
  set_changed();
  mission_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_mission_fight_end::mission_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_mission_fight_end.mission_id)
  return mission_id_;
}
inline void cmsg_mission_fight_end::set_mission_id(::google::protobuf::int32 value) {
  set_changed();
  
  mission_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_mission_fight_end.mission_id)
}

// -------------------------------------------------------------------

// smsg_mission_fight_end

// int32 result = 1;
inline void smsg_mission_fight_end::clear_result() {
  set_changed();
  result_ = 0;
}
inline ::google::protobuf::int32 smsg_mission_fight_end::result() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_fight_end.result)
  return result_;
}
inline void smsg_mission_fight_end::set_result(::google::protobuf::int32 value) {
  set_changed();
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_mission_fight_end.result)
}

// bytes text = 2;
inline void smsg_mission_fight_end::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_mission_fight_end::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_fight_end.text)
  return text_.GetNoArena();
}
inline void smsg_mission_fight_end::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_mission_fight_end.text)
}
#if LANG_CXX11
inline void smsg_mission_fight_end::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_mission_fight_end.text)
}
#endif
inline void smsg_mission_fight_end::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_mission_fight_end.text)
}
inline void smsg_mission_fight_end::set_text(const void* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_mission_fight_end.text)
}
inline ::std::string* smsg_mission_fight_end::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_mission_fight_end.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_mission_fight_end::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_mission_fight_end.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_mission_fight_end::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_mission_fight_end.text)
}

// int32 star = 3;
inline void smsg_mission_fight_end::clear_star() {
  set_changed();
  star_ = 0;
}
inline ::google::protobuf::int32 smsg_mission_fight_end::star() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_fight_end.star)
  return star_;
}
inline void smsg_mission_fight_end::set_star(::google::protobuf::int32 value) {
  set_changed();
  
  star_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_mission_fight_end.star)
}

// repeated int32 types = 4;
inline int smsg_mission_fight_end::types_size() const {
  return types_.size();
}
inline void smsg_mission_fight_end::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_mission_fight_end::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_fight_end.types)
  return types_.Get(index);
}
inline void smsg_mission_fight_end::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_mission_fight_end.types)
}
inline void smsg_mission_fight_end::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_mission_fight_end.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_mission_fight_end::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_mission_fight_end.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_mission_fight_end::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_mission_fight_end.types)
  return &types_;
}

// repeated int32 value1s = 5;
inline int smsg_mission_fight_end::value1s_size() const {
  return value1s_.size();
}
inline void smsg_mission_fight_end::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_mission_fight_end::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_fight_end.value1s)
  return value1s_.Get(index);
}
inline void smsg_mission_fight_end::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_mission_fight_end.value1s)
}
inline void smsg_mission_fight_end::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_mission_fight_end.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_mission_fight_end::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_mission_fight_end.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_mission_fight_end::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_mission_fight_end.value1s)
  return &value1s_;
}

// repeated int32 value2s = 6;
inline int smsg_mission_fight_end::value2s_size() const {
  return value2s_.size();
}
inline void smsg_mission_fight_end::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_mission_fight_end::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_fight_end.value2s)
  return value2s_.Get(index);
}
inline void smsg_mission_fight_end::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_mission_fight_end.value2s)
}
inline void smsg_mission_fight_end::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_mission_fight_end.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_mission_fight_end::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_mission_fight_end.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_mission_fight_end::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_mission_fight_end.value2s)
  return &value2s_;
}

// repeated int32 value3s = 7;
inline int smsg_mission_fight_end::value3s_size() const {
  return value3s_.size();
}
inline void smsg_mission_fight_end::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_mission_fight_end::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_fight_end.value3s)
  return value3s_.Get(index);
}
inline void smsg_mission_fight_end::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_mission_fight_end.value3s)
}
inline void smsg_mission_fight_end::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_mission_fight_end.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_mission_fight_end::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_mission_fight_end.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_mission_fight_end::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_mission_fight_end.value3s)
  return &value3s_;
}

// repeated .dhc.equip_t equips = 8;
inline int smsg_mission_fight_end::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_mission_fight_end::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_mission_fight_end.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_mission_fight_end::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_mission_fight_end.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_mission_fight_end::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_fight_end.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_mission_fight_end::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_mission_fight_end.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_mission_fight_end::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_mission_fight_end.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 9;
inline int smsg_mission_fight_end::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_mission_fight_end::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_mission_fight_end.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_mission_fight_end::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_mission_fight_end.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_mission_fight_end::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_fight_end.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_mission_fight_end::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_mission_fight_end.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_mission_fight_end::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_mission_fight_end.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 10;
inline int smsg_mission_fight_end::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_mission_fight_end::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_mission_fight_end.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_mission_fight_end::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_mission_fight_end.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_mission_fight_end::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_fight_end.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_mission_fight_end::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_mission_fight_end.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_mission_fight_end::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_mission_fight_end.roles)
  return roles_;
}

// -------------------------------------------------------------------

// cmsg_mission_saodang

// .protocol.game.msg_common comm = 1;
inline bool cmsg_mission_saodang::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_mission_saodang::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_mission_saodang::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_mission_saodang::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_mission_saodang.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_mission_saodang::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_mission_saodang.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_mission_saodang::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_mission_saodang.comm)
  return comm_;
}
inline void cmsg_mission_saodang::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_mission_saodang.comm)
}

// int32 mission_id = 2;
inline void cmsg_mission_saodang::clear_mission_id() {
  set_changed();
  mission_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_mission_saodang::mission_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_mission_saodang.mission_id)
  return mission_id_;
}
inline void cmsg_mission_saodang::set_mission_id(::google::protobuf::int32 value) {
  set_changed();
  
  mission_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_mission_saodang.mission_id)
}

// int32 num = 3;
inline void cmsg_mission_saodang::clear_num() {
  set_changed();
  num_ = 0;
}
inline ::google::protobuf::int32 cmsg_mission_saodang::num() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_mission_saodang.num)
  return num_;
}
inline void cmsg_mission_saodang::set_num(::google::protobuf::int32 value) {
  set_changed();
  
  num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_mission_saodang.num)
}

// -------------------------------------------------------------------

// smsg_mission_saodang

// repeated .protocol.game.smsg_mission_fight_end saodangs = 1;
inline int smsg_mission_saodang::saodangs_size() const {
  return saodangs_.size();
}
inline void smsg_mission_saodang::clear_saodangs() {
  saodangs_.Clear();
}
inline ::protocol::game::smsg_mission_fight_end* smsg_mission_saodang::mutable_saodangs(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_mission_saodang.saodangs)
  return saodangs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_mission_fight_end >*
smsg_mission_saodang::mutable_saodangs() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_mission_saodang.saodangs)
  return &saodangs_;
}
inline const ::protocol::game::smsg_mission_fight_end& smsg_mission_saodang::saodangs(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_saodang.saodangs)
  return saodangs_.Get(index);
}
inline ::protocol::game::smsg_mission_fight_end* smsg_mission_saodang::add_saodangs() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_mission_saodang.saodangs)
  return saodangs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_mission_fight_end >&
smsg_mission_saodang::saodangs() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_mission_saodang.saodangs)
  return saodangs_;
}

// -------------------------------------------------------------------

// cmsg_mission_reward

// .protocol.game.msg_common comm = 1;
inline bool cmsg_mission_reward::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_mission_reward::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_mission_reward::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_mission_reward::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_mission_reward.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_mission_reward::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_mission_reward.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_mission_reward::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_mission_reward.comm)
  return comm_;
}
inline void cmsg_mission_reward::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_mission_reward.comm)
}

// int32 map_id = 2;
inline void cmsg_mission_reward::clear_map_id() {
  set_changed();
  map_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_mission_reward::map_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_mission_reward.map_id)
  return map_id_;
}
inline void cmsg_mission_reward::set_map_id(::google::protobuf::int32 value) {
  set_changed();
  
  map_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_mission_reward.map_id)
}

// int32 reward_id = 3;
inline void cmsg_mission_reward::clear_reward_id() {
  set_changed();
  reward_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_mission_reward::reward_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_mission_reward.reward_id)
  return reward_id_;
}
inline void cmsg_mission_reward::set_reward_id(::google::protobuf::int32 value) {
  set_changed();
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_mission_reward.reward_id)
}

// -------------------------------------------------------------------

// cmsg_mission_first

// .protocol.game.msg_common comm = 1;
inline bool cmsg_mission_first::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_mission_first::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_mission_first::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_mission_first::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_mission_first.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_mission_first::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_mission_first.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_mission_first::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_mission_first.comm)
  return comm_;
}
inline void cmsg_mission_first::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_mission_first.comm)
}

// int32 mission_id = 2;
inline void cmsg_mission_first::clear_mission_id() {
  set_changed();
  mission_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_mission_first::mission_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_mission_first.mission_id)
  return mission_id_;
}
inline void cmsg_mission_first::set_mission_id(::google::protobuf::int32 value) {
  set_changed();
  
  mission_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_mission_first.mission_id)
}

// -------------------------------------------------------------------

// smsg_mission_first

// repeated int32 types = 1;
inline int smsg_mission_first::types_size() const {
  return types_.size();
}
inline void smsg_mission_first::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_mission_first::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_first.types)
  return types_.Get(index);
}
inline void smsg_mission_first::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_mission_first.types)
}
inline void smsg_mission_first::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_mission_first.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_mission_first::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_mission_first.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_mission_first::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_mission_first.types)
  return &types_;
}

// repeated int32 value1s = 2;
inline int smsg_mission_first::value1s_size() const {
  return value1s_.size();
}
inline void smsg_mission_first::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_mission_first::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_first.value1s)
  return value1s_.Get(index);
}
inline void smsg_mission_first::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_mission_first.value1s)
}
inline void smsg_mission_first::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_mission_first.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_mission_first::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_mission_first.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_mission_first::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_mission_first.value1s)
  return &value1s_;
}

// repeated int32 value2s = 3;
inline int smsg_mission_first::value2s_size() const {
  return value2s_.size();
}
inline void smsg_mission_first::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_mission_first::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_first.value2s)
  return value2s_.Get(index);
}
inline void smsg_mission_first::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_mission_first.value2s)
}
inline void smsg_mission_first::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_mission_first.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_mission_first::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_mission_first.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_mission_first::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_mission_first.value2s)
  return &value2s_;
}

// repeated int32 value3s = 4;
inline int smsg_mission_first::value3s_size() const {
  return value3s_.size();
}
inline void smsg_mission_first::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_mission_first::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_first.value3s)
  return value3s_.Get(index);
}
inline void smsg_mission_first::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_mission_first.value3s)
}
inline void smsg_mission_first::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_mission_first.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_mission_first::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_mission_first.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_mission_first::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_mission_first.value3s)
  return &value3s_;
}

// repeated .dhc.equip_t equips = 5;
inline int smsg_mission_first::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_mission_first::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_mission_first.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_mission_first::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_mission_first.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_mission_first::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_first.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_mission_first::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_mission_first.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_mission_first::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_mission_first.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 6;
inline int smsg_mission_first::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_mission_first::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_mission_first.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_mission_first::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_mission_first.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_mission_first::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_first.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_mission_first::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_mission_first.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_mission_first::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_mission_first.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 7;
inline int smsg_mission_first::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_mission_first::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_mission_first.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_mission_first::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_mission_first.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_mission_first::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_mission_first.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_mission_first::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_mission_first.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_mission_first::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_mission_first.roles)
  return roles_;
}

// -------------------------------------------------------------------

// cmsg_zhenxing

// .protocol.game.msg_common comm = 1;
inline bool cmsg_zhenxing::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_zhenxing::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_zhenxing::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_zhenxing::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_zhenxing.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_zhenxing::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_zhenxing.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_zhenxing::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_zhenxing.comm)
  return comm_;
}
inline void cmsg_zhenxing::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_zhenxing.comm)
}

// uint64 role_guid = 2;
inline void cmsg_zhenxing::clear_role_guid() {
  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_zhenxing::role_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_zhenxing.role_guid)
  return role_guid_;
}
inline void cmsg_zhenxing::set_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  role_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_zhenxing.role_guid)
}

// int32 index = 3;
inline void cmsg_zhenxing::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 cmsg_zhenxing::index() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_zhenxing.index)
  return index_;
}
inline void cmsg_zhenxing::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_zhenxing.index)
}

// -------------------------------------------------------------------

// cmsg_duixing

// .protocol.game.msg_common comm = 1;
inline bool cmsg_duixing::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_duixing::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_duixing::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_duixing::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_duixing.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_duixing::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_duixing.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_duixing::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_duixing.comm)
  return comm_;
}
inline void cmsg_duixing::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_duixing.comm)
}

// int32 src_site = 2;
inline void cmsg_duixing::clear_src_site() {
  set_changed();
  src_site_ = 0;
}
inline ::google::protobuf::int32 cmsg_duixing::src_site() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_duixing.src_site)
  return src_site_;
}
inline void cmsg_duixing::set_src_site(::google::protobuf::int32 value) {
  set_changed();
  
  src_site_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_duixing.src_site)
}

// int32 dest_site = 3;
inline void cmsg_duixing::clear_dest_site() {
  set_changed();
  dest_site_ = 0;
}
inline ::google::protobuf::int32 cmsg_duixing::dest_site() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_duixing.dest_site)
  return dest_site_;
}
inline void cmsg_duixing::set_dest_site(::google::protobuf::int32 value) {
  set_changed();
  
  dest_site_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_duixing.dest_site)
}

// -------------------------------------------------------------------

// cmsg_duixing_on

// .protocol.game.msg_common comm = 1;
inline bool cmsg_duixing_on::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_duixing_on::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_duixing_on::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_duixing_on::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_duixing_on.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_duixing_on::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_duixing_on.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_duixing_on::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_duixing_on.comm)
  return comm_;
}
inline void cmsg_duixing_on::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_duixing_on.comm)
}

// int32 id = 2;
inline void cmsg_duixing_on::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_duixing_on::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_duixing_on.id)
  return id_;
}
inline void cmsg_duixing_on::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_duixing_on.id)
}

// -------------------------------------------------------------------

// cmsg_role_equip

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_equip::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_equip::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_equip::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_equip::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_equip.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_equip::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_equip.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_equip::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_equip.comm)
  return comm_;
}
inline void cmsg_role_equip::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_equip.comm)
}

// uint64 role_guid = 2;
inline void cmsg_role_equip::clear_role_guid() {
  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_role_equip::role_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_equip.role_guid)
  return role_guid_;
}
inline void cmsg_role_equip::set_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  role_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_equip.role_guid)
}

// repeated int32 index = 3;
inline int cmsg_role_equip::index_size() const {
  return index_.size();
}
inline void cmsg_role_equip::clear_index() {
  set_changed();
  index_.Clear();
}
inline ::google::protobuf::int32 cmsg_role_equip::index(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_equip.index)
  return index_.Get(index);
}
inline void cmsg_role_equip::set_index(int index, ::google::protobuf::int32 value) {
  set_changed();
  index_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_equip.index)
}
inline void cmsg_role_equip::add_index(::google::protobuf::int32 value) {
  set_changed();
  index_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_role_equip.index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
cmsg_role_equip::index() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_role_equip.index)
  return index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
cmsg_role_equip::mutable_index() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_role_equip.index)
  return &index_;
}

// repeated uint64 equip_guid = 4;
inline int cmsg_role_equip::equip_guid_size() const {
  return equip_guid_.size();
}
inline void cmsg_role_equip::clear_equip_guid() {
  set_changed();
  equip_guid_.Clear();
}
inline ::google::protobuf::uint64 cmsg_role_equip::equip_guid(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_equip.equip_guid)
  return equip_guid_.Get(index);
}
inline void cmsg_role_equip::set_equip_guid(int index, ::google::protobuf::uint64 value) {
  set_changed();
  equip_guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_equip.equip_guid)
}
inline void cmsg_role_equip::add_equip_guid(::google::protobuf::uint64 value) {
  set_changed();
  equip_guid_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_role_equip.equip_guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
cmsg_role_equip::equip_guid() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_role_equip.equip_guid)
  return equip_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
cmsg_role_equip::mutable_equip_guid() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_role_equip.equip_guid)
  return &equip_guid_;
}

// -------------------------------------------------------------------

// cmsg_guanghuan_on

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guanghuan_on::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guanghuan_on::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guanghuan_on::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guanghuan_on::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guanghuan_on.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guanghuan_on::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guanghuan_on.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guanghuan_on::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guanghuan_on.comm)
  return comm_;
}
inline void cmsg_guanghuan_on::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guanghuan_on.comm)
}

// int32 id = 2;
inline void cmsg_guanghuan_on::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_guanghuan_on::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guanghuan_on.id)
  return id_;
}
inline void cmsg_guanghuan_on::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guanghuan_on.id)
}

// -------------------------------------------------------------------

// cmsg_guanghuan_level

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guanghuan_level::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guanghuan_level::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guanghuan_level::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guanghuan_level::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guanghuan_level.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guanghuan_level::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guanghuan_level.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guanghuan_level::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guanghuan_level.comm)
  return comm_;
}
inline void cmsg_guanghuan_level::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guanghuan_level.comm)
}

// int32 id = 2;
inline void cmsg_guanghuan_level::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_guanghuan_level::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guanghuan_level.id)
  return id_;
}
inline void cmsg_guanghuan_level::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guanghuan_level.id)
}

// -------------------------------------------------------------------

// cmsg_guanghuan_init

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guanghuan_init::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guanghuan_init::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guanghuan_init::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guanghuan_init::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guanghuan_init.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guanghuan_init::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guanghuan_init.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guanghuan_init::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guanghuan_init.comm)
  return comm_;
}
inline void cmsg_guanghuan_init::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guanghuan_init.comm)
}

// int32 id = 2;
inline void cmsg_guanghuan_init::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_guanghuan_init::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guanghuan_init.id)
  return id_;
}
inline void cmsg_guanghuan_init::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guanghuan_init.id)
}

// -------------------------------------------------------------------

// cmsg_role_all_equip

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_all_equip::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_all_equip::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_all_equip::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_all_equip::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_all_equip.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_all_equip::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_all_equip.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_all_equip::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_all_equip.comm)
  return comm_;
}
inline void cmsg_role_all_equip::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_all_equip.comm)
}

// uint64 role_guid = 2;
inline void cmsg_role_all_equip::clear_role_guid() {
  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_role_all_equip::role_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_all_equip.role_guid)
  return role_guid_;
}
inline void cmsg_role_all_equip::set_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  role_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_all_equip.role_guid)
}

// repeated int32 equip_index = 3;
inline int cmsg_role_all_equip::equip_index_size() const {
  return equip_index_.size();
}
inline void cmsg_role_all_equip::clear_equip_index() {
  set_changed();
  equip_index_.Clear();
}
inline ::google::protobuf::int32 cmsg_role_all_equip::equip_index(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_all_equip.equip_index)
  return equip_index_.Get(index);
}
inline void cmsg_role_all_equip::set_equip_index(int index, ::google::protobuf::int32 value) {
  set_changed();
  equip_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_all_equip.equip_index)
}
inline void cmsg_role_all_equip::add_equip_index(::google::protobuf::int32 value) {
  set_changed();
  equip_index_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_role_all_equip.equip_index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
cmsg_role_all_equip::equip_index() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_role_all_equip.equip_index)
  return equip_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
cmsg_role_all_equip::mutable_equip_index() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_role_all_equip.equip_index)
  return &equip_index_;
}

// repeated uint64 equip_guid = 4;
inline int cmsg_role_all_equip::equip_guid_size() const {
  return equip_guid_.size();
}
inline void cmsg_role_all_equip::clear_equip_guid() {
  set_changed();
  equip_guid_.Clear();
}
inline ::google::protobuf::uint64 cmsg_role_all_equip::equip_guid(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_all_equip.equip_guid)
  return equip_guid_.Get(index);
}
inline void cmsg_role_all_equip::set_equip_guid(int index, ::google::protobuf::uint64 value) {
  set_changed();
  equip_guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_all_equip.equip_guid)
}
inline void cmsg_role_all_equip::add_equip_guid(::google::protobuf::uint64 value) {
  set_changed();
  equip_guid_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_role_all_equip.equip_guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
cmsg_role_all_equip::equip_guid() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_role_all_equip.equip_guid)
  return equip_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
cmsg_role_all_equip::mutable_equip_guid() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_role_all_equip.equip_guid)
  return &equip_guid_;
}

// repeated int32 treasure_index = 5;
inline int cmsg_role_all_equip::treasure_index_size() const {
  return treasure_index_.size();
}
inline void cmsg_role_all_equip::clear_treasure_index() {
  set_changed();
  treasure_index_.Clear();
}
inline ::google::protobuf::int32 cmsg_role_all_equip::treasure_index(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_all_equip.treasure_index)
  return treasure_index_.Get(index);
}
inline void cmsg_role_all_equip::set_treasure_index(int index, ::google::protobuf::int32 value) {
  set_changed();
  treasure_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_all_equip.treasure_index)
}
inline void cmsg_role_all_equip::add_treasure_index(::google::protobuf::int32 value) {
  set_changed();
  treasure_index_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_role_all_equip.treasure_index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
cmsg_role_all_equip::treasure_index() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_role_all_equip.treasure_index)
  return treasure_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
cmsg_role_all_equip::mutable_treasure_index() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_role_all_equip.treasure_index)
  return &treasure_index_;
}

// repeated uint64 treasure_guid = 6;
inline int cmsg_role_all_equip::treasure_guid_size() const {
  return treasure_guid_.size();
}
inline void cmsg_role_all_equip::clear_treasure_guid() {
  set_changed();
  treasure_guid_.Clear();
}
inline ::google::protobuf::uint64 cmsg_role_all_equip::treasure_guid(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_all_equip.treasure_guid)
  return treasure_guid_.Get(index);
}
inline void cmsg_role_all_equip::set_treasure_guid(int index, ::google::protobuf::uint64 value) {
  set_changed();
  treasure_guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_all_equip.treasure_guid)
}
inline void cmsg_role_all_equip::add_treasure_guid(::google::protobuf::uint64 value) {
  set_changed();
  treasure_guid_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_role_all_equip.treasure_guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
cmsg_role_all_equip::treasure_guid() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_role_all_equip.treasure_guid)
  return treasure_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
cmsg_role_all_equip::mutable_treasure_guid() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_role_all_equip.treasure_guid)
  return &treasure_guid_;
}

// -------------------------------------------------------------------

// cmsg_chouka

// .protocol.game.msg_common comm = 1;
inline bool cmsg_chouka::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_chouka::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_chouka::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_chouka::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_chouka.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_chouka::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_chouka.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_chouka::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_chouka.comm)
  return comm_;
}
inline void cmsg_chouka::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_chouka.comm)
}

// int32 type = 2;
inline void cmsg_chouka::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 cmsg_chouka::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_chouka.type)
  return type_;
}
inline void cmsg_chouka::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_chouka.type)
}

// -------------------------------------------------------------------

// smsg_chouka

// int32 type = 1;
inline void smsg_chouka::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 smsg_chouka::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chouka.type)
  return type_;
}
inline void smsg_chouka::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chouka.type)
}

// uint64 ck2_free_time = 3;
inline void smsg_chouka::clear_ck2_free_time() {
  set_changed();
  ck2_free_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_chouka::ck2_free_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chouka.ck2_free_time)
  return ck2_free_time_;
}
inline void smsg_chouka::set_ck2_free_time(::google::protobuf::uint64 value) {
  set_changed();
  
  ck2_free_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chouka.ck2_free_time)
}

// int32 jewel = 5;
inline void smsg_chouka::clear_jewel() {
  set_changed();
  jewel_ = 0;
}
inline ::google::protobuf::int32 smsg_chouka::jewel() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chouka.jewel)
  return jewel_;
}
inline void smsg_chouka::set_jewel(::google::protobuf::int32 value) {
  set_changed();
  
  jewel_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chouka.jewel)
}

// repeated int32 item_ids = 6;
inline int smsg_chouka::item_ids_size() const {
  return item_ids_.size();
}
inline void smsg_chouka::clear_item_ids() {
  set_changed();
  item_ids_.Clear();
}
inline ::google::protobuf::int32 smsg_chouka::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chouka.item_ids)
  return item_ids_.Get(index);
}
inline void smsg_chouka::set_item_ids(int index, ::google::protobuf::int32 value) {
  set_changed();
  item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chouka.item_ids)
}
inline void smsg_chouka::add_item_ids(::google::protobuf::int32 value) {
  set_changed();
  item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_chouka.item_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_chouka::item_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_chouka.item_ids)
  return item_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_chouka::mutable_item_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_chouka.item_ids)
  return &item_ids_;
}

// repeated int32 item_nums = 7;
inline int smsg_chouka::item_nums_size() const {
  return item_nums_.size();
}
inline void smsg_chouka::clear_item_nums() {
  set_changed();
  item_nums_.Clear();
}
inline ::google::protobuf::int32 smsg_chouka::item_nums(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chouka.item_nums)
  return item_nums_.Get(index);
}
inline void smsg_chouka::set_item_nums(int index, ::google::protobuf::int32 value) {
  set_changed();
  item_nums_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chouka.item_nums)
}
inline void smsg_chouka::add_item_nums(::google::protobuf::int32 value) {
  set_changed();
  item_nums_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_chouka.item_nums)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_chouka::item_nums() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_chouka.item_nums)
  return item_nums_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_chouka::mutable_item_nums() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_chouka.item_nums)
  return &item_nums_;
}

// repeated .dhc.role_t roles = 8;
inline int smsg_chouka::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_chouka::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_chouka.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_chouka::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_chouka.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_chouka::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chouka.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_chouka::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_chouka.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_chouka::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_chouka.roles)
  return roles_;
}

// -------------------------------------------------------------------

// cmsg_role_upgrade

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_upgrade::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_upgrade::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_upgrade::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_upgrade::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_upgrade.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_upgrade::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_upgrade.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_upgrade::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_upgrade.comm)
  return comm_;
}
inline void cmsg_role_upgrade::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_upgrade.comm)
}

// uint64 role_guid = 2;
inline void cmsg_role_upgrade::clear_role_guid() {
  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_role_upgrade::role_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_upgrade.role_guid)
  return role_guid_;
}
inline void cmsg_role_upgrade::set_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  role_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_upgrade.role_guid)
}

// int32 level = 3;
inline void cmsg_role_upgrade::clear_level() {
  set_changed();
  level_ = 0;
}
inline ::google::protobuf::int32 cmsg_role_upgrade::level() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_upgrade.level)
  return level_;
}
inline void cmsg_role_upgrade::set_level(::google::protobuf::int32 value) {
  set_changed();
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_upgrade.level)
}

// -------------------------------------------------------------------

// cmsg_role_tupo

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_tupo::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_tupo::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_tupo::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_tupo::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_tupo.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_tupo::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_tupo.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_tupo::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_tupo.comm)
  return comm_;
}
inline void cmsg_role_tupo::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_tupo.comm)
}

// uint64 role_guid = 2;
inline void cmsg_role_tupo::clear_role_guid() {
  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_role_tupo::role_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_tupo.role_guid)
  return role_guid_;
}
inline void cmsg_role_tupo::set_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  role_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_tupo.role_guid)
}

// -------------------------------------------------------------------

// cmsg_role_jinjie

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_jinjie::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_jinjie::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_jinjie::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_jinjie::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_jinjie.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_jinjie::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_jinjie.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_jinjie::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_jinjie.comm)
  return comm_;
}
inline void cmsg_role_jinjie::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_jinjie.comm)
}

// uint64 role_guid = 2;
inline void cmsg_role_jinjie::clear_role_guid() {
  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_role_jinjie::role_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_jinjie.role_guid)
  return role_guid_;
}
inline void cmsg_role_jinjie::set_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  role_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_jinjie.role_guid)
}

// -------------------------------------------------------------------

// cmsg_role_suipian

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_suipian::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_suipian::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_suipian::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_suipian::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_suipian.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_suipian::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_suipian.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_suipian::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_suipian.comm)
  return comm_;
}
inline void cmsg_role_suipian::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_suipian.comm)
}

// uint32 item_id = 2;
inline void cmsg_role_suipian::clear_item_id() {
  set_changed();
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 cmsg_role_suipian::item_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_suipian.item_id)
  return item_id_;
}
inline void cmsg_role_suipian::set_item_id(::google::protobuf::uint32 value) {
  set_changed();
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_suipian.item_id)
}

// -------------------------------------------------------------------

// cmsg_role_duihuan

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_duihuan::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_duihuan::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_duihuan::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_duihuan::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_duihuan.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_duihuan::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_duihuan.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_duihuan::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_duihuan.comm)
  return comm_;
}
inline void cmsg_role_duihuan::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_duihuan.comm)
}

// uint32 item_id = 2;
inline void cmsg_role_duihuan::clear_item_id() {
  set_changed();
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 cmsg_role_duihuan::item_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_duihuan.item_id)
  return item_id_;
}
inline void cmsg_role_duihuan::set_item_id(::google::protobuf::uint32 value) {
  set_changed();
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_duihuan.item_id)
}

// -------------------------------------------------------------------

// smsg_role_duihuan

// .dhc.role_t role = 1;
inline bool smsg_role_duihuan::has_role() const {
  return this != internal_default_instance() && role_ != NULL;
}
inline const ::dhc::role_t& smsg_role_duihuan::_internal_role() const {
  return *role_;
}
inline const ::dhc::role_t& smsg_role_duihuan::role() const {
  const ::dhc::role_t* p = role_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_duihuan.role)
  return p != NULL ? *p : *reinterpret_cast<const ::dhc::role_t*>(
      &::dhc::_role_t_default_instance_);
}
inline ::dhc::role_t* smsg_role_duihuan::release_role() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_role_duihuan.role)
  
  ::dhc::role_t* temp = role_;
  role_ = NULL;
  return temp;
}
inline ::dhc::role_t* smsg_role_duihuan::mutable_role() {
  
  if (role_ == NULL) {
    auto* p = CreateMaybeMessage<::dhc::role_t>(GetArenaNoVirtual());
    role_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_role_duihuan.role)
  return role_;
}
inline void smsg_role_duihuan::set_allocated_role(::dhc::role_t* role) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(role_);
  }
  if (role) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      role = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, role, submessage_arena);
    }
    
  } else {
    
  }
  role_ = role;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_role_duihuan.role)
}

// -------------------------------------------------------------------

// cmsg_role_skillup

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_skillup::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_skillup::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_skillup::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_skillup::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_skillup.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_skillup::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_skillup.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_skillup::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_skillup.comm)
  return comm_;
}
inline void cmsg_role_skillup::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_skillup.comm)
}

// uint64 role_guid = 2;
inline void cmsg_role_skillup::clear_role_guid() {
  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_role_skillup::role_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_skillup.role_guid)
  return role_guid_;
}
inline void cmsg_role_skillup::set_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  role_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_skillup.role_guid)
}

// int32 index = 4;
inline void cmsg_role_skillup::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 cmsg_role_skillup::index() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_skillup.index)
  return index_;
}
inline void cmsg_role_skillup::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_skillup.index)
}

// -------------------------------------------------------------------

// smsg_role_skillup

// int32 exp = 1;
inline void smsg_role_skillup::clear_exp() {
  set_changed();
  exp_ = 0;
}
inline ::google::protobuf::int32 smsg_role_skillup::exp() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_skillup.exp)
  return exp_;
}
inline void smsg_role_skillup::set_exp(::google::protobuf::int32 value) {
  set_changed();
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_skillup.exp)
}

// int32 num = 2;
inline void smsg_role_skillup::clear_num() {
  set_changed();
  num_ = 0;
}
inline ::google::protobuf::int32 smsg_role_skillup::num() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_skillup.num)
  return num_;
}
inline void smsg_role_skillup::set_num(::google::protobuf::int32 value) {
  set_changed();
  
  num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_skillup.num)
}

// -------------------------------------------------------------------

// cmsg_role_shengpin

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_shengpin::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_shengpin::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_shengpin::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_shengpin::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_shengpin.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_shengpin::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_shengpin.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_shengpin::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_shengpin.comm)
  return comm_;
}
inline void cmsg_role_shengpin::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_shengpin.comm)
}

// uint64 role_guid = 2;
inline void cmsg_role_shengpin::clear_role_guid() {
  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_role_shengpin::role_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_shengpin.role_guid)
  return role_guid_;
}
inline void cmsg_role_shengpin::set_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  role_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_shengpin.role_guid)
}

// -------------------------------------------------------------------

// cmsg_role_bskillup

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_bskillup::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_bskillup::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_bskillup::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_bskillup::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_bskillup.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_bskillup::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_bskillup.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_bskillup::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_bskillup.comm)
  return comm_;
}
inline void cmsg_role_bskillup::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_bskillup.comm)
}

// uint64 role_guid = 2;
inline void cmsg_role_bskillup::clear_role_guid() {
  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_role_bskillup::role_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_bskillup.role_guid)
  return role_guid_;
}
inline void cmsg_role_bskillup::set_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  role_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_bskillup.role_guid)
}

// -------------------------------------------------------------------

// cmsg_role_dress_on

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_dress_on::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_dress_on::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_dress_on::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_dress_on::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_dress_on.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_dress_on::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_dress_on.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_dress_on::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_dress_on.comm)
  return comm_;
}
inline void cmsg_role_dress_on::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_dress_on.comm)
}

// uint64 role_guid = 2;
inline void cmsg_role_dress_on::clear_role_guid() {
  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_role_dress_on::role_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_dress_on.role_guid)
  return role_guid_;
}
inline void cmsg_role_dress_on::set_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  role_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_dress_on.role_guid)
}

// int32 dress_id = 3;
inline void cmsg_role_dress_on::clear_dress_id() {
  set_changed();
  dress_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_role_dress_on::dress_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_dress_on.dress_id)
  return dress_id_;
}
inline void cmsg_role_dress_on::set_dress_id(::google::protobuf::int32 value) {
  set_changed();
  
  dress_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_dress_on.dress_id)
}

// -------------------------------------------------------------------

// cmsg_role_dress_off

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_dress_off::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_dress_off::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_dress_off::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_dress_off::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_dress_off.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_dress_off::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_dress_off.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_dress_off::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_dress_off.comm)
  return comm_;
}
inline void cmsg_role_dress_off::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_dress_off.comm)
}

// uint64 role_guid = 2;
inline void cmsg_role_dress_off::clear_role_guid() {
  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_role_dress_off::role_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_dress_off.role_guid)
  return role_guid_;
}
inline void cmsg_role_dress_off::set_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  role_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_dress_off.role_guid)
}

// int32 dress_id = 3;
inline void cmsg_role_dress_off::clear_dress_id() {
  set_changed();
  dress_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_role_dress_off::dress_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_dress_off.dress_id)
  return dress_id_;
}
inline void cmsg_role_dress_off::set_dress_id(::google::protobuf::int32 value) {
  set_changed();
  
  dress_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_dress_off.dress_id)
}

// -------------------------------------------------------------------

// cmsg_role_init

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_init::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_init::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_init::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_init::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_init.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_init::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_init.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_init::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_init.comm)
  return comm_;
}
inline void cmsg_role_init::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_init.comm)
}

// uint64 role_guid = 2;
inline void cmsg_role_init::clear_role_guid() {
  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_role_init::role_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_init.role_guid)
  return role_guid_;
}
inline void cmsg_role_init::set_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  role_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_init.role_guid)
}

// -------------------------------------------------------------------

// cmsg_role_fj

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_fj::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_fj::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_fj::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_fj::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_fj.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_fj::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_fj.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_fj::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_fj.comm)
  return comm_;
}
inline void cmsg_role_fj::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_fj.comm)
}

// repeated uint64 role_guid = 2;
inline int cmsg_role_fj::role_guid_size() const {
  return role_guid_.size();
}
inline void cmsg_role_fj::clear_role_guid() {
  set_changed();
  role_guid_.Clear();
}
inline ::google::protobuf::uint64 cmsg_role_fj::role_guid(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_fj.role_guid)
  return role_guid_.Get(index);
}
inline void cmsg_role_fj::set_role_guid(int index, ::google::protobuf::uint64 value) {
  set_changed();
  role_guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_fj.role_guid)
}
inline void cmsg_role_fj::add_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  role_guid_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_role_fj.role_guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
cmsg_role_fj::role_guid() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_role_fj.role_guid)
  return role_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
cmsg_role_fj::mutable_role_guid() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_role_fj.role_guid)
  return &role_guid_;
}

// -------------------------------------------------------------------

// smsg_role_init

// repeated int32 types = 1;
inline int smsg_role_init::types_size() const {
  return types_.size();
}
inline void smsg_role_init::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_role_init::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_init.types)
  return types_.Get(index);
}
inline void smsg_role_init::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_init.types)
}
inline void smsg_role_init::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_role_init.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_role_init::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_role_init.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_role_init::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_role_init.types)
  return &types_;
}

// repeated int32 value1s = 2;
inline int smsg_role_init::value1s_size() const {
  return value1s_.size();
}
inline void smsg_role_init::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_role_init::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_init.value1s)
  return value1s_.Get(index);
}
inline void smsg_role_init::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_init.value1s)
}
inline void smsg_role_init::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_role_init.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_role_init::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_role_init.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_role_init::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_role_init.value1s)
  return &value1s_;
}

// repeated int32 value2s = 3;
inline int smsg_role_init::value2s_size() const {
  return value2s_.size();
}
inline void smsg_role_init::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_role_init::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_init.value2s)
  return value2s_.Get(index);
}
inline void smsg_role_init::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_init.value2s)
}
inline void smsg_role_init::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_role_init.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_role_init::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_role_init.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_role_init::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_role_init.value2s)
  return &value2s_;
}

// repeated int32 value3s = 4;
inline int smsg_role_init::value3s_size() const {
  return value3s_.size();
}
inline void smsg_role_init::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_role_init::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_init.value3s)
  return value3s_.Get(index);
}
inline void smsg_role_init::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_init.value3s)
}
inline void smsg_role_init::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_role_init.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_role_init::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_role_init.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_role_init::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_role_init.value3s)
  return &value3s_;
}

// int32 yuanli = 5;
inline void smsg_role_init::clear_yuanli() {
  set_changed();
  yuanli_ = 0;
}
inline ::google::protobuf::int32 smsg_role_init::yuanli() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_init.yuanli)
  return yuanli_;
}
inline void smsg_role_init::set_yuanli(::google::protobuf::int32 value) {
  set_changed();
  
  yuanli_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_init.yuanli)
}

// repeated .dhc.equip_t equips = 6;
inline int smsg_role_init::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_role_init::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_role_init.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_role_init::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_role_init.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_role_init::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_init.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_role_init::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_role_init.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_role_init::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_role_init.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 7;
inline int smsg_role_init::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_role_init::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_role_init.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_role_init::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_role_init.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_role_init::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_init.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_role_init::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_role_init.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_role_init::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_role_init.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 8;
inline int smsg_role_init::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_role_init::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_role_init.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_role_init::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_role_init.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_role_init::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_init.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_role_init::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_role_init.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_role_init::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_role_init.roles)
  return roles_;
}

// -------------------------------------------------------------------

// cmsg_role_xq_look

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_xq_look::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_xq_look::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_xq_look::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_xq_look::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_xq_look.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_xq_look::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_xq_look.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_xq_look::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_xq_look.comm)
  return comm_;
}
inline void cmsg_role_xq_look::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_xq_look.comm)
}

// int32 value = 2;
inline void cmsg_role_xq_look::clear_value() {
  set_changed();
  value_ = 0;
}
inline ::google::protobuf::int32 cmsg_role_xq_look::value() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_xq_look.value)
  return value_;
}
inline void cmsg_role_xq_look::set_value(::google::protobuf::int32 value) {
  set_changed();
  
  value_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_xq_look.value)
}

// -------------------------------------------------------------------

// smsg_role_xq_look

// repeated uint64 guid = 1;
inline int smsg_role_xq_look::guid_size() const {
  return guid_.size();
}
inline void smsg_role_xq_look::clear_guid() {
  set_changed();
  guid_.Clear();
}
inline ::google::protobuf::uint64 smsg_role_xq_look::guid(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_xq_look.guid)
  return guid_.Get(index);
}
inline void smsg_role_xq_look::set_guid(int index, ::google::protobuf::uint64 value) {
  set_changed();
  guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_xq_look.guid)
}
inline void smsg_role_xq_look::add_guid(::google::protobuf::uint64 value) {
  set_changed();
  guid_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_role_xq_look.guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
smsg_role_xq_look::guid() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_role_xq_look.guid)
  return guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
smsg_role_xq_look::mutable_guid() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_role_xq_look.guid)
  return &guid_;
}

// repeated int32 xq = 2;
inline int smsg_role_xq_look::xq_size() const {
  return xq_.size();
}
inline void smsg_role_xq_look::clear_xq() {
  set_changed();
  xq_.Clear();
}
inline ::google::protobuf::int32 smsg_role_xq_look::xq(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_xq_look.xq)
  return xq_.Get(index);
}
inline void smsg_role_xq_look::set_xq(int index, ::google::protobuf::int32 value) {
  set_changed();
  xq_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_xq_look.xq)
}
inline void smsg_role_xq_look::add_xq(::google::protobuf::int32 value) {
  set_changed();
  xq_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_role_xq_look.xq)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_role_xq_look::xq() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_role_xq_look.xq)
  return xq_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_role_xq_look::mutable_xq() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_role_xq_look.xq)
  return &xq_;
}

// int32 jb = 3;
inline void smsg_role_xq_look::clear_jb() {
  set_changed();
  jb_ = 0;
}
inline ::google::protobuf::int32 smsg_role_xq_look::jb() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_xq_look.jb)
  return jb_;
}
inline void smsg_role_xq_look::set_jb(::google::protobuf::int32 value) {
  set_changed();
  
  jb_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_xq_look.jb)
}

// int32 zs = 4;
inline void smsg_role_xq_look::clear_zs() {
  set_changed();
  zs_ = 0;
}
inline ::google::protobuf::int32 smsg_role_xq_look::zs() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_xq_look.zs)
  return zs_;
}
inline void smsg_role_xq_look::set_zs(::google::protobuf::int32 value) {
  set_changed();
  
  zs_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_xq_look.zs)
}

// -------------------------------------------------------------------

// cmsg_role_yh_look

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_yh_look::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_yh_look::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_yh_look::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_yh_look::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_yh_look.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_yh_look::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_yh_look.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_yh_look::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_yh_look.comm)
  return comm_;
}
inline void cmsg_role_yh_look::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_yh_look.comm)
}

// int32 value = 2;
inline void cmsg_role_yh_look::clear_value() {
  set_changed();
  value_ = 0;
}
inline ::google::protobuf::int32 cmsg_role_yh_look::value() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_yh_look.value)
  return value_;
}
inline void cmsg_role_yh_look::set_value(::google::protobuf::int32 value) {
  set_changed();
  
  value_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_yh_look.value)
}

// -------------------------------------------------------------------

// smsg_role_yh_look

// repeated uint64 guid = 1;
inline int smsg_role_yh_look::guid_size() const {
  return guid_.size();
}
inline void smsg_role_yh_look::clear_guid() {
  set_changed();
  guid_.Clear();
}
inline ::google::protobuf::uint64 smsg_role_yh_look::guid(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_yh_look.guid)
  return guid_.Get(index);
}
inline void smsg_role_yh_look::set_guid(int index, ::google::protobuf::uint64 value) {
  set_changed();
  guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_yh_look.guid)
}
inline void smsg_role_yh_look::add_guid(::google::protobuf::uint64 value) {
  set_changed();
  guid_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_role_yh_look.guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
smsg_role_yh_look::guid() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_role_yh_look.guid)
  return guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
smsg_role_yh_look::mutable_guid() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_role_yh_look.guid)
  return &guid_;
}

// repeated int32 pos = 2;
inline int smsg_role_yh_look::pos_size() const {
  return pos_.size();
}
inline void smsg_role_yh_look::clear_pos() {
  set_changed();
  pos_.Clear();
}
inline ::google::protobuf::int32 smsg_role_yh_look::pos(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_yh_look.pos)
  return pos_.Get(index);
}
inline void smsg_role_yh_look::set_pos(int index, ::google::protobuf::int32 value) {
  set_changed();
  pos_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_yh_look.pos)
}
inline void smsg_role_yh_look::add_pos(::google::protobuf::int32 value) {
  set_changed();
  pos_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_role_yh_look.pos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_role_yh_look::pos() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_role_yh_look.pos)
  return pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_role_yh_look::mutable_pos() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_role_yh_look.pos)
  return &pos_;
}

// -------------------------------------------------------------------

// cmsg_role_yh_select

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_yh_select::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_yh_select::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_yh_select::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_yh_select::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_yh_select.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_yh_select::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_yh_select.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_yh_select::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_yh_select.comm)
  return comm_;
}
inline void cmsg_role_yh_select::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_yh_select.comm)
}

// uint64 guid = 2;
inline void cmsg_role_yh_select::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_role_yh_select::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_yh_select.guid)
  return guid_;
}
inline void cmsg_role_yh_select::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_yh_select.guid)
}

// int32 index = 3;
inline void cmsg_role_yh_select::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 cmsg_role_yh_select::index() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_yh_select.index)
  return index_;
}
inline void cmsg_role_yh_select::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_yh_select.index)
}

// -------------------------------------------------------------------

// smsg_role_yh_select

// uint64 guid = 1;
inline void smsg_role_yh_select::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_role_yh_select::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_yh_select.guid)
  return guid_;
}
inline void smsg_role_yh_select::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_yh_select.guid)
}

// int32 xq = 2;
inline void smsg_role_yh_select::clear_xq() {
  set_changed();
  xq_ = 0;
}
inline ::google::protobuf::int32 smsg_role_yh_select::xq() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_yh_select.xq)
  return xq_;
}
inline void smsg_role_yh_select::set_xq(::google::protobuf::int32 value) {
  set_changed();
  
  xq_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_yh_select.xq)
}

// int32 jewel = 3;
inline void smsg_role_yh_select::clear_jewel() {
  set_changed();
  jewel_ = 0;
}
inline ::google::protobuf::int32 smsg_role_yh_select::jewel() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_yh_select.jewel)
  return jewel_;
}
inline void smsg_role_yh_select::set_jewel(::google::protobuf::int32 value) {
  set_changed();
  
  jewel_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_yh_select.jewel)
}

// -------------------------------------------------------------------

// cmsg_role_huiyi_chou

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_huiyi_chou::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_huiyi_chou::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_huiyi_chou::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_huiyi_chou::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_huiyi_chou.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_huiyi_chou::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_huiyi_chou.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_huiyi_chou::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_huiyi_chou.comm)
  return comm_;
}
inline void cmsg_role_huiyi_chou::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_huiyi_chou.comm)
}

// int32 type = 2;
inline void cmsg_role_huiyi_chou::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 cmsg_role_huiyi_chou::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_huiyi_chou.type)
  return type_;
}
inline void cmsg_role_huiyi_chou::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_huiyi_chou.type)
}

// -------------------------------------------------------------------

// smsg_role_huiyi_chou

// repeated int32 ids = 1;
inline int smsg_role_huiyi_chou::ids_size() const {
  return ids_.size();
}
inline void smsg_role_huiyi_chou::clear_ids() {
  set_changed();
  ids_.Clear();
}
inline ::google::protobuf::int32 smsg_role_huiyi_chou::ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_huiyi_chou.ids)
  return ids_.Get(index);
}
inline void smsg_role_huiyi_chou::set_ids(int index, ::google::protobuf::int32 value) {
  set_changed();
  ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_huiyi_chou.ids)
}
inline void smsg_role_huiyi_chou::add_ids(::google::protobuf::int32 value) {
  set_changed();
  ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_role_huiyi_chou.ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_role_huiyi_chou::ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_role_huiyi_chou.ids)
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_role_huiyi_chou::mutable_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_role_huiyi_chou.ids)
  return &ids_;
}

// -------------------------------------------------------------------

// cmsg_role_huiyi_jihuo

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_huiyi_jihuo::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_huiyi_jihuo::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_huiyi_jihuo::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_huiyi_jihuo::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_huiyi_jihuo.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_huiyi_jihuo::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_huiyi_jihuo.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_huiyi_jihuo::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_huiyi_jihuo.comm)
  return comm_;
}
inline void cmsg_role_huiyi_jihuo::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_huiyi_jihuo.comm)
}

// int32 id = 2;
inline void cmsg_role_huiyi_jihuo::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_role_huiyi_jihuo::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_huiyi_jihuo.id)
  return id_;
}
inline void cmsg_role_huiyi_jihuo::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_huiyi_jihuo.id)
}

// -------------------------------------------------------------------

// smsg_role_huiyi_zhanpu

// repeated int32 ids = 1;
inline int smsg_role_huiyi_zhanpu::ids_size() const {
  return ids_.size();
}
inline void smsg_role_huiyi_zhanpu::clear_ids() {
  set_changed();
  ids_.Clear();
}
inline ::google::protobuf::int32 smsg_role_huiyi_zhanpu::ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_huiyi_zhanpu.ids)
  return ids_.Get(index);
}
inline void smsg_role_huiyi_zhanpu::set_ids(int index, ::google::protobuf::int32 value) {
  set_changed();
  ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_huiyi_zhanpu.ids)
}
inline void smsg_role_huiyi_zhanpu::add_ids(::google::protobuf::int32 value) {
  set_changed();
  ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_role_huiyi_zhanpu.ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_role_huiyi_zhanpu::ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_role_huiyi_zhanpu.ids)
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_role_huiyi_zhanpu::mutable_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_role_huiyi_zhanpu.ids)
  return &ids_;
}

// -------------------------------------------------------------------

// cmsg_role_huiyi_fanpai

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_huiyi_fanpai::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_huiyi_fanpai::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_huiyi_fanpai::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_huiyi_fanpai::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_huiyi_fanpai.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_huiyi_fanpai::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_huiyi_fanpai.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_huiyi_fanpai::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_huiyi_fanpai.comm)
  return comm_;
}
inline void cmsg_role_huiyi_fanpai::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_huiyi_fanpai.comm)
}

// int32 id = 2;
inline void cmsg_role_huiyi_fanpai::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_role_huiyi_fanpai::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_huiyi_fanpai.id)
  return id_;
}
inline void cmsg_role_huiyi_fanpai::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_huiyi_fanpai.id)
}

// -------------------------------------------------------------------

// smsg_role_huiyi_rank

// .dhc.rank_t rank_list = 1;
inline bool smsg_role_huiyi_rank::has_rank_list() const {
  return this != internal_default_instance() && rank_list_ != NULL;
}
inline const ::dhc::rank_t& smsg_role_huiyi_rank::_internal_rank_list() const {
  return *rank_list_;
}
inline const ::dhc::rank_t& smsg_role_huiyi_rank::rank_list() const {
  const ::dhc::rank_t* p = rank_list_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_huiyi_rank.rank_list)
  return p != NULL ? *p : *reinterpret_cast<const ::dhc::rank_t*>(
      &::dhc::_rank_t_default_instance_);
}
inline ::dhc::rank_t* smsg_role_huiyi_rank::release_rank_list() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_role_huiyi_rank.rank_list)
  
  ::dhc::rank_t* temp = rank_list_;
  rank_list_ = NULL;
  return temp;
}
inline ::dhc::rank_t* smsg_role_huiyi_rank::mutable_rank_list() {
  
  if (rank_list_ == NULL) {
    auto* p = CreateMaybeMessage<::dhc::rank_t>(GetArenaNoVirtual());
    rank_list_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_role_huiyi_rank.rank_list)
  return rank_list_;
}
inline void smsg_role_huiyi_rank::set_allocated_rank_list(::dhc::rank_t* rank_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rank_list_);
  }
  if (rank_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rank_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rank_list, submessage_arena);
    }
    
  } else {
    
  }
  rank_list_ = rank_list;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_role_huiyi_rank.rank_list)
}

// int32 rank = 2;
inline void smsg_role_huiyi_rank::clear_rank() {
  set_changed();
  rank_ = 0;
}
inline ::google::protobuf::int32 smsg_role_huiyi_rank::rank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_role_huiyi_rank.rank)
  return rank_;
}
inline void smsg_role_huiyi_rank::set_rank(::google::protobuf::int32 value) {
  set_changed();
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_role_huiyi_rank.rank)
}

// -------------------------------------------------------------------

// cmsg_role_suipian_gaizao

// .protocol.game.msg_common comm = 1;
inline bool cmsg_role_suipian_gaizao::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_role_suipian_gaizao::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_role_suipian_gaizao::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_role_suipian_gaizao::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_suipian_gaizao.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_role_suipian_gaizao::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_role_suipian_gaizao.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_role_suipian_gaizao::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_role_suipian_gaizao.comm)
  return comm_;
}
inline void cmsg_role_suipian_gaizao::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_role_suipian_gaizao.comm)
}

// int32 src_suipian = 2;
inline void cmsg_role_suipian_gaizao::clear_src_suipian() {
  set_changed();
  src_suipian_ = 0;
}
inline ::google::protobuf::int32 cmsg_role_suipian_gaizao::src_suipian() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_suipian_gaizao.src_suipian)
  return src_suipian_;
}
inline void cmsg_role_suipian_gaizao::set_src_suipian(::google::protobuf::int32 value) {
  set_changed();
  
  src_suipian_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_suipian_gaizao.src_suipian)
}

// int32 src_num = 3;
inline void cmsg_role_suipian_gaizao::clear_src_num() {
  set_changed();
  src_num_ = 0;
}
inline ::google::protobuf::int32 cmsg_role_suipian_gaizao::src_num() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_suipian_gaizao.src_num)
  return src_num_;
}
inline void cmsg_role_suipian_gaizao::set_src_num(::google::protobuf::int32 value) {
  set_changed();
  
  src_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_suipian_gaizao.src_num)
}

// int32 target_suipian = 4;
inline void cmsg_role_suipian_gaizao::clear_target_suipian() {
  set_changed();
  target_suipian_ = 0;
}
inline ::google::protobuf::int32 cmsg_role_suipian_gaizao::target_suipian() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_role_suipian_gaizao.target_suipian)
  return target_suipian_;
}
inline void cmsg_role_suipian_gaizao::set_target_suipian(::google::protobuf::int32 value) {
  set_changed();
  
  target_suipian_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_role_suipian_gaizao.target_suipian)
}

// -------------------------------------------------------------------

// cmsg_equip_enhance

// .protocol.game.msg_common comm = 1;
inline bool cmsg_equip_enhance::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_equip_enhance::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_equip_enhance::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_equip_enhance::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_enhance.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_equip_enhance::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_equip_enhance.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_equip_enhance::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_equip_enhance.comm)
  return comm_;
}
inline void cmsg_equip_enhance::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_equip_enhance.comm)
}

// uint64 equip_guid = 2;
inline void cmsg_equip_enhance::clear_equip_guid() {
  set_changed();
  equip_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_equip_enhance::equip_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_enhance.equip_guid)
  return equip_guid_;
}
inline void cmsg_equip_enhance::set_equip_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  equip_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_enhance.equip_guid)
}

// int32 enhance_num = 3;
inline void cmsg_equip_enhance::clear_enhance_num() {
  set_changed();
  enhance_num_ = 0;
}
inline ::google::protobuf::int32 cmsg_equip_enhance::enhance_num() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_enhance.enhance_num)
  return enhance_num_;
}
inline void cmsg_equip_enhance::set_enhance_num(::google::protobuf::int32 value) {
  set_changed();
  
  enhance_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_enhance.enhance_num)
}

// -------------------------------------------------------------------

// cmsg_equip_auto_enhance

// .protocol.game.msg_common comm = 1;
inline bool cmsg_equip_auto_enhance::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_equip_auto_enhance::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_equip_auto_enhance::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_equip_auto_enhance::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_auto_enhance.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_equip_auto_enhance::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_equip_auto_enhance.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_equip_auto_enhance::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_equip_auto_enhance.comm)
  return comm_;
}
inline void cmsg_equip_auto_enhance::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_equip_auto_enhance.comm)
}

// repeated uint64 equip_guid = 2;
inline int cmsg_equip_auto_enhance::equip_guid_size() const {
  return equip_guid_.size();
}
inline void cmsg_equip_auto_enhance::clear_equip_guid() {
  set_changed();
  equip_guid_.Clear();
}
inline ::google::protobuf::uint64 cmsg_equip_auto_enhance::equip_guid(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_auto_enhance.equip_guid)
  return equip_guid_.Get(index);
}
inline void cmsg_equip_auto_enhance::set_equip_guid(int index, ::google::protobuf::uint64 value) {
  set_changed();
  equip_guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_auto_enhance.equip_guid)
}
inline void cmsg_equip_auto_enhance::add_equip_guid(::google::protobuf::uint64 value) {
  set_changed();
  equip_guid_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_equip_auto_enhance.equip_guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
cmsg_equip_auto_enhance::equip_guid() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_equip_auto_enhance.equip_guid)
  return equip_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
cmsg_equip_auto_enhance::mutable_equip_guid() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_equip_auto_enhance.equip_guid)
  return &equip_guid_;
}

// repeated int32 enhance_num = 3;
inline int cmsg_equip_auto_enhance::enhance_num_size() const {
  return enhance_num_.size();
}
inline void cmsg_equip_auto_enhance::clear_enhance_num() {
  set_changed();
  enhance_num_.Clear();
}
inline ::google::protobuf::int32 cmsg_equip_auto_enhance::enhance_num(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_auto_enhance.enhance_num)
  return enhance_num_.Get(index);
}
inline void cmsg_equip_auto_enhance::set_enhance_num(int index, ::google::protobuf::int32 value) {
  set_changed();
  enhance_num_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_auto_enhance.enhance_num)
}
inline void cmsg_equip_auto_enhance::add_enhance_num(::google::protobuf::int32 value) {
  set_changed();
  enhance_num_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_equip_auto_enhance.enhance_num)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
cmsg_equip_auto_enhance::enhance_num() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_equip_auto_enhance.enhance_num)
  return enhance_num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
cmsg_equip_auto_enhance::mutable_enhance_num() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_equip_auto_enhance.enhance_num)
  return &enhance_num_;
}

// -------------------------------------------------------------------

// cmsg_equip_sell

// .protocol.game.msg_common comm = 1;
inline bool cmsg_equip_sell::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_equip_sell::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_equip_sell::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_equip_sell::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_sell.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_equip_sell::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_equip_sell.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_equip_sell::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_equip_sell.comm)
  return comm_;
}
inline void cmsg_equip_sell::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_equip_sell.comm)
}

// repeated uint64 equip_guids = 2;
inline int cmsg_equip_sell::equip_guids_size() const {
  return equip_guids_.size();
}
inline void cmsg_equip_sell::clear_equip_guids() {
  set_changed();
  equip_guids_.Clear();
}
inline ::google::protobuf::uint64 cmsg_equip_sell::equip_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_sell.equip_guids)
  return equip_guids_.Get(index);
}
inline void cmsg_equip_sell::set_equip_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  equip_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_sell.equip_guids)
}
inline void cmsg_equip_sell::add_equip_guids(::google::protobuf::uint64 value) {
  set_changed();
  equip_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_equip_sell.equip_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
cmsg_equip_sell::equip_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_equip_sell.equip_guids)
  return equip_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
cmsg_equip_sell::mutable_equip_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_equip_sell.equip_guids)
  return &equip_guids_;
}

// -------------------------------------------------------------------

// cmsg_equip_init

// .protocol.game.msg_common comm = 1;
inline bool cmsg_equip_init::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_equip_init::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_equip_init::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_equip_init::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_init.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_equip_init::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_equip_init.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_equip_init::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_equip_init.comm)
  return comm_;
}
inline void cmsg_equip_init::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_equip_init.comm)
}

// uint64 equip_guids = 2;
inline void cmsg_equip_init::clear_equip_guids() {
  set_changed();
  equip_guids_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_equip_init::equip_guids() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_init.equip_guids)
  return equip_guids_;
}
inline void cmsg_equip_init::set_equip_guids(::google::protobuf::uint64 value) {
  set_changed();
  
  equip_guids_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_init.equip_guids)
}

// -------------------------------------------------------------------

// smsg_equip_init

// repeated int32 types = 1;
inline int smsg_equip_init::types_size() const {
  return types_.size();
}
inline void smsg_equip_init::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_equip_init::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_equip_init.types)
  return types_.Get(index);
}
inline void smsg_equip_init::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_equip_init.types)
}
inline void smsg_equip_init::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_equip_init.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_equip_init::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_equip_init.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_equip_init::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_equip_init.types)
  return &types_;
}

// repeated int32 value1s = 2;
inline int smsg_equip_init::value1s_size() const {
  return value1s_.size();
}
inline void smsg_equip_init::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_equip_init::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_equip_init.value1s)
  return value1s_.Get(index);
}
inline void smsg_equip_init::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_equip_init.value1s)
}
inline void smsg_equip_init::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_equip_init.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_equip_init::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_equip_init.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_equip_init::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_equip_init.value1s)
  return &value1s_;
}

// repeated int32 value2s = 3;
inline int smsg_equip_init::value2s_size() const {
  return value2s_.size();
}
inline void smsg_equip_init::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_equip_init::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_equip_init.value2s)
  return value2s_.Get(index);
}
inline void smsg_equip_init::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_equip_init.value2s)
}
inline void smsg_equip_init::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_equip_init.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_equip_init::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_equip_init.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_equip_init::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_equip_init.value2s)
  return &value2s_;
}

// repeated int32 value3s = 4;
inline int smsg_equip_init::value3s_size() const {
  return value3s_.size();
}
inline void smsg_equip_init::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_equip_init::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_equip_init.value3s)
  return value3s_.Get(index);
}
inline void smsg_equip_init::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_equip_init.value3s)
}
inline void smsg_equip_init::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_equip_init.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_equip_init::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_equip_init.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_equip_init::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_equip_init.value3s)
  return &value3s_;
}

// repeated .dhc.equip_t equips = 5;
inline int smsg_equip_init::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_equip_init::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_equip_init.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_equip_init::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_equip_init.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_equip_init::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_equip_init.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_equip_init::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_equip_init.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_equip_init::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_equip_init.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 6;
inline int smsg_equip_init::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_equip_init::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_equip_init.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_equip_init::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_equip_init.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_equip_init::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_equip_init.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_equip_init::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_equip_init.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_equip_init::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_equip_init.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 7;
inline int smsg_equip_init::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_equip_init::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_equip_init.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_equip_init::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_equip_init.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_equip_init::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_equip_init.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_equip_init::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_equip_init.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_equip_init::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_equip_init.roles)
  return roles_;
}

// -------------------------------------------------------------------

// cmsg_equip_suipian

// .protocol.game.msg_common comm = 1;
inline bool cmsg_equip_suipian::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_equip_suipian::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_equip_suipian::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_equip_suipian::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_suipian.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_equip_suipian::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_equip_suipian.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_equip_suipian::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_equip_suipian.comm)
  return comm_;
}
inline void cmsg_equip_suipian::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_equip_suipian.comm)
}

// uint32 item_id = 2;
inline void cmsg_equip_suipian::clear_item_id() {
  set_changed();
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 cmsg_equip_suipian::item_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_suipian.item_id)
  return item_id_;
}
inline void cmsg_equip_suipian::set_item_id(::google::protobuf::uint32 value) {
  set_changed();
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_suipian.item_id)
}

// -------------------------------------------------------------------

// smsg_equip_suipian

// .dhc.equip_t equip = 1;
inline bool smsg_equip_suipian::has_equip() const {
  return this != internal_default_instance() && equip_ != NULL;
}
inline const ::dhc::equip_t& smsg_equip_suipian::_internal_equip() const {
  return *equip_;
}
inline const ::dhc::equip_t& smsg_equip_suipian::equip() const {
  const ::dhc::equip_t* p = equip_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_equip_suipian.equip)
  return p != NULL ? *p : *reinterpret_cast<const ::dhc::equip_t*>(
      &::dhc::_equip_t_default_instance_);
}
inline ::dhc::equip_t* smsg_equip_suipian::release_equip() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_equip_suipian.equip)
  
  ::dhc::equip_t* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline ::dhc::equip_t* smsg_equip_suipian::mutable_equip() {
  
  if (equip_ == NULL) {
    auto* p = CreateMaybeMessage<::dhc::equip_t>(GetArenaNoVirtual());
    equip_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_equip_suipian.equip)
  return equip_;
}
inline void smsg_equip_suipian::set_allocated_equip(::dhc::equip_t* equip) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(equip_);
  }
  if (equip) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      equip = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, equip, submessage_arena);
    }
    
  } else {
    
  }
  equip_ = equip;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_equip_suipian.equip)
}

// -------------------------------------------------------------------

// cmsg_equip_ronglian

// .protocol.game.msg_common comm = 1;
inline bool cmsg_equip_ronglian::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_equip_ronglian::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_equip_ronglian::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_equip_ronglian::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_ronglian.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_equip_ronglian::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_equip_ronglian.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_equip_ronglian::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_equip_ronglian.comm)
  return comm_;
}
inline void cmsg_equip_ronglian::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_equip_ronglian.comm)
}

// uint64 equip_guid = 2;
inline void cmsg_equip_ronglian::clear_equip_guid() {
  set_changed();
  equip_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_equip_ronglian::equip_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_ronglian.equip_guid)
  return equip_guid_;
}
inline void cmsg_equip_ronglian::set_equip_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  equip_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_ronglian.equip_guid)
}

// int32 suipian_id = 3;
inline void cmsg_equip_ronglian::clear_suipian_id() {
  set_changed();
  suipian_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_equip_ronglian::suipian_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_ronglian.suipian_id)
  return suipian_id_;
}
inline void cmsg_equip_ronglian::set_suipian_id(::google::protobuf::int32 value) {
  set_changed();
  
  suipian_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_ronglian.suipian_id)
}

// -------------------------------------------------------------------

// cmsg_gm_command

// .protocol.game.msg_common comm = 1;
inline bool cmsg_gm_command::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_gm_command::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_gm_command::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_gm_command::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_gm_command.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_gm_command::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_gm_command.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_gm_command::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_gm_command.comm)
  return comm_;
}
inline void cmsg_gm_command::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_gm_command.comm)
}

// string text = 2;
inline void cmsg_gm_command::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_gm_command::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_gm_command.text)
  return text_.GetNoArena();
}
inline void cmsg_gm_command::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_gm_command.text)
}
#if LANG_CXX11
inline void cmsg_gm_command::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_gm_command.text)
}
#endif
inline void cmsg_gm_command::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_gm_command.text)
}
inline void cmsg_gm_command::set_text(const char* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_gm_command.text)
}
inline ::std::string* cmsg_gm_command::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_gm_command.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_gm_command::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_gm_command.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_gm_command::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_gm_command.text)
}

// -------------------------------------------------------------------

// smsg_gm_command

// int32 type = 1;
inline void smsg_gm_command::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 smsg_gm_command::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_gm_command.type)
  return type_;
}
inline void smsg_gm_command::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_gm_command.type)
}

// int32 value1 = 2;
inline void smsg_gm_command::clear_value1() {
  set_changed();
  value1_ = 0;
}
inline ::google::protobuf::int32 smsg_gm_command::value1() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_gm_command.value1)
  return value1_;
}
inline void smsg_gm_command::set_value1(::google::protobuf::int32 value) {
  set_changed();
  
  value1_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_gm_command.value1)
}

// int32 value2 = 3;
inline void smsg_gm_command::clear_value2() {
  set_changed();
  value2_ = 0;
}
inline ::google::protobuf::int32 smsg_gm_command::value2() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_gm_command.value2)
  return value2_;
}
inline void smsg_gm_command::set_value2(::google::protobuf::int32 value) {
  set_changed();
  
  value2_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_gm_command.value2)
}

// int32 value3 = 4;
inline void smsg_gm_command::clear_value3() {
  set_changed();
  value3_ = 0;
}
inline ::google::protobuf::int32 smsg_gm_command::value3() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_gm_command.value3)
  return value3_;
}
inline void smsg_gm_command::set_value3(::google::protobuf::int32 value) {
  set_changed();
  
  value3_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_gm_command.value3)
}

// repeated .dhc.role_t roles = 5;
inline int smsg_gm_command::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_gm_command::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_gm_command.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_gm_command::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_gm_command.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_gm_command::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_gm_command.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_gm_command::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_gm_command.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_gm_command::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_gm_command.roles)
  return roles_;
}

// repeated .dhc.equip_t equips = 6;
inline int smsg_gm_command::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_gm_command::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_gm_command.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_gm_command::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_gm_command.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_gm_command::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_gm_command.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_gm_command::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_gm_command.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_gm_command::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_gm_command.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 7;
inline int smsg_gm_command::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_gm_command::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_gm_command.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_gm_command::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_gm_command.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_gm_command::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_gm_command.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_gm_command::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_gm_command.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_gm_command::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_gm_command.treasures)
  return treasures_;
}

// repeated int32 types = 8;
inline int smsg_gm_command::types_size() const {
  return types_.size();
}
inline void smsg_gm_command::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_gm_command::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_gm_command.types)
  return types_.Get(index);
}
inline void smsg_gm_command::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_gm_command.types)
}
inline void smsg_gm_command::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_gm_command.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_gm_command::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_gm_command.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_gm_command::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_gm_command.types)
  return &types_;
}

// repeated int32 value1s = 9;
inline int smsg_gm_command::value1s_size() const {
  return value1s_.size();
}
inline void smsg_gm_command::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_gm_command::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_gm_command.value1s)
  return value1s_.Get(index);
}
inline void smsg_gm_command::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_gm_command.value1s)
}
inline void smsg_gm_command::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_gm_command.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_gm_command::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_gm_command.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_gm_command::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_gm_command.value1s)
  return &value1s_;
}

// repeated int32 value2s = 10;
inline int smsg_gm_command::value2s_size() const {
  return value2s_.size();
}
inline void smsg_gm_command::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_gm_command::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_gm_command.value2s)
  return value2s_.Get(index);
}
inline void smsg_gm_command::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_gm_command.value2s)
}
inline void smsg_gm_command::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_gm_command.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_gm_command::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_gm_command.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_gm_command::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_gm_command.value2s)
  return &value2s_;
}

// repeated int32 value3s = 11;
inline int smsg_gm_command::value3s_size() const {
  return value3s_.size();
}
inline void smsg_gm_command::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_gm_command::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_gm_command.value3s)
  return value3s_.Get(index);
}
inline void smsg_gm_command::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_gm_command.value3s)
}
inline void smsg_gm_command::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_gm_command.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_gm_command::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_gm_command.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_gm_command::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_gm_command.value3s)
  return &value3s_;
}

// repeated .dhc.pet_t pets = 12;
inline int smsg_gm_command::pets_size() const {
  return pets_.size();
}
inline ::dhc::pet_t* smsg_gm_command::mutable_pets(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_gm_command.pets)
  return pets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >*
smsg_gm_command::mutable_pets() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_gm_command.pets)
  return &pets_;
}
inline const ::dhc::pet_t& smsg_gm_command::pets(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_gm_command.pets)
  return pets_.Get(index);
}
inline ::dhc::pet_t* smsg_gm_command::add_pets() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_gm_command.pets)
  return pets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >&
smsg_gm_command::pets() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_gm_command.pets)
  return pets_;
}

// -------------------------------------------------------------------

// cmsg_equip_gaizao

// .protocol.game.msg_common comm = 1;
inline bool cmsg_equip_gaizao::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_equip_gaizao::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_equip_gaizao::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_equip_gaizao::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_gaizao.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_equip_gaizao::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_equip_gaizao.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_equip_gaizao::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_equip_gaizao.comm)
  return comm_;
}
inline void cmsg_equip_gaizao::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_equip_gaizao.comm)
}

// uint64 equip_guid = 2;
inline void cmsg_equip_gaizao::clear_equip_guid() {
  set_changed();
  equip_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_equip_gaizao::equip_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_gaizao.equip_guid)
  return equip_guid_;
}
inline void cmsg_equip_gaizao::set_equip_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  equip_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_gaizao.equip_guid)
}

// repeated int32 suos = 3;
inline int cmsg_equip_gaizao::suos_size() const {
  return suos_.size();
}
inline void cmsg_equip_gaizao::clear_suos() {
  set_changed();
  suos_.Clear();
}
inline ::google::protobuf::int32 cmsg_equip_gaizao::suos(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_gaizao.suos)
  return suos_.Get(index);
}
inline void cmsg_equip_gaizao::set_suos(int index, ::google::protobuf::int32 value) {
  set_changed();
  suos_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_gaizao.suos)
}
inline void cmsg_equip_gaizao::add_suos(::google::protobuf::int32 value) {
  set_changed();
  suos_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_equip_gaizao.suos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
cmsg_equip_gaizao::suos() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_equip_gaizao.suos)
  return suos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
cmsg_equip_gaizao::mutable_suos() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_equip_gaizao.suos)
  return &suos_;
}

// -------------------------------------------------------------------

// smsg_equip_gaizao

// .dhc.equip_t equip = 1;
inline bool smsg_equip_gaizao::has_equip() const {
  return this != internal_default_instance() && equip_ != NULL;
}
inline const ::dhc::equip_t& smsg_equip_gaizao::_internal_equip() const {
  return *equip_;
}
inline const ::dhc::equip_t& smsg_equip_gaizao::equip() const {
  const ::dhc::equip_t* p = equip_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_equip_gaizao.equip)
  return p != NULL ? *p : *reinterpret_cast<const ::dhc::equip_t*>(
      &::dhc::_equip_t_default_instance_);
}
inline ::dhc::equip_t* smsg_equip_gaizao::release_equip() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_equip_gaizao.equip)
  
  ::dhc::equip_t* temp = equip_;
  equip_ = NULL;
  return temp;
}
inline ::dhc::equip_t* smsg_equip_gaizao::mutable_equip() {
  
  if (equip_ == NULL) {
    auto* p = CreateMaybeMessage<::dhc::equip_t>(GetArenaNoVirtual());
    equip_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_equip_gaizao.equip)
  return equip_;
}
inline void smsg_equip_gaizao::set_allocated_equip(::dhc::equip_t* equip) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(equip_);
  }
  if (equip) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      equip = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, equip, submessage_arena);
    }
    
  } else {
    
  }
  equip_ = equip;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_equip_gaizao.equip)
}

// int32 num = 2;
inline void smsg_equip_gaizao::clear_num() {
  set_changed();
  num_ = 0;
}
inline ::google::protobuf::int32 smsg_equip_gaizao::num() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_equip_gaizao.num)
  return num_;
}
inline void smsg_equip_gaizao::set_num(::google::protobuf::int32 value) {
  set_changed();
  
  num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_equip_gaizao.num)
}

// -------------------------------------------------------------------

// cmsg_equip_gaizao_buy

// .protocol.game.msg_common comm = 1;
inline bool cmsg_equip_gaizao_buy::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_equip_gaizao_buy::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_equip_gaizao_buy::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_equip_gaizao_buy::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_gaizao_buy.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_equip_gaizao_buy::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_equip_gaizao_buy.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_equip_gaizao_buy::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_equip_gaizao_buy.comm)
  return comm_;
}
inline void cmsg_equip_gaizao_buy::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_equip_gaizao_buy.comm)
}

// int32 count = 2;
inline void cmsg_equip_gaizao_buy::clear_count() {
  set_changed();
  count_ = 0;
}
inline ::google::protobuf::int32 cmsg_equip_gaizao_buy::count() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_gaizao_buy.count)
  return count_;
}
inline void cmsg_equip_gaizao_buy::set_count(::google::protobuf::int32 value) {
  set_changed();
  
  count_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_gaizao_buy.count)
}

// -------------------------------------------------------------------

// cmsg_equip_lock

// .protocol.game.msg_common comm = 1;
inline bool cmsg_equip_lock::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_equip_lock::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_equip_lock::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_equip_lock::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_lock.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_equip_lock::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_equip_lock.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_equip_lock::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_equip_lock.comm)
  return comm_;
}
inline void cmsg_equip_lock::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_equip_lock.comm)
}

// uint64 equip_guid = 2;
inline void cmsg_equip_lock::clear_equip_guid() {
  set_changed();
  equip_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_equip_lock::equip_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_lock.equip_guid)
  return equip_guid_;
}
inline void cmsg_equip_lock::set_equip_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  equip_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_lock.equip_guid)
}

// -------------------------------------------------------------------

// cmsg_equip_star

// .protocol.game.msg_common comm = 1;
inline bool cmsg_equip_star::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_equip_star::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_equip_star::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_equip_star::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_star.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_equip_star::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_equip_star.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_equip_star::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_equip_star.comm)
  return comm_;
}
inline void cmsg_equip_star::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_equip_star.comm)
}

// uint64 star_guid = 2;
inline void cmsg_equip_star::clear_star_guid() {
  set_changed();
  star_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_equip_star::star_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_star.star_guid)
  return star_guid_;
}
inline void cmsg_equip_star::set_star_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  star_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_star.star_guid)
}

// uint64 equip_guid = 3;
inline void cmsg_equip_star::clear_equip_guid() {
  set_changed();
  equip_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_equip_star::equip_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_star.equip_guid)
  return equip_guid_;
}
inline void cmsg_equip_star::set_equip_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  equip_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_star.equip_guid)
}

// -------------------------------------------------------------------

// cmsg_equip_jinlian

// .protocol.game.msg_common comm = 1;
inline bool cmsg_equip_jinlian::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_equip_jinlian::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_equip_jinlian::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_equip_jinlian::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_jinlian.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_equip_jinlian::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_equip_jinlian.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_equip_jinlian::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_equip_jinlian.comm)
  return comm_;
}
inline void cmsg_equip_jinlian::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_equip_jinlian.comm)
}

// uint64 equip_guid = 2;
inline void cmsg_equip_jinlian::clear_equip_guid() {
  set_changed();
  equip_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_equip_jinlian::equip_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_jinlian.equip_guid)
  return equip_guid_;
}
inline void cmsg_equip_jinlian::set_equip_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  equip_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_jinlian.equip_guid)
}

// int32 level = 3;
inline void cmsg_equip_jinlian::clear_level() {
  set_changed();
  level_ = 0;
}
inline ::google::protobuf::int32 cmsg_equip_jinlian::level() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_equip_jinlian.level)
  return level_;
}
inline void cmsg_equip_jinlian::set_level(::google::protobuf::int32 value) {
  set_changed();
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_equip_jinlian.level)
}

// -------------------------------------------------------------------

// cmsg_item_sell

// .protocol.game.msg_common comm = 1;
inline bool cmsg_item_sell::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_item_sell::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_item_sell::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_item_sell::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_item_sell.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_item_sell::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_item_sell.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_item_sell::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_item_sell.comm)
  return comm_;
}
inline void cmsg_item_sell::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_item_sell.comm)
}

// uint32 item_id = 2;
inline void cmsg_item_sell::clear_item_id() {
  set_changed();
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 cmsg_item_sell::item_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_item_sell.item_id)
  return item_id_;
}
inline void cmsg_item_sell::set_item_id(::google::protobuf::uint32 value) {
  set_changed();
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_item_sell.item_id)
}

// int32 item_num = 3;
inline void cmsg_item_sell::clear_item_num() {
  set_changed();
  item_num_ = 0;
}
inline ::google::protobuf::int32 cmsg_item_sell::item_num() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_item_sell.item_num)
  return item_num_;
}
inline void cmsg_item_sell::set_item_num(::google::protobuf::int32 value) {
  set_changed();
  
  item_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_item_sell.item_num)
}

// -------------------------------------------------------------------

// cmsg_item_sell_all

// .protocol.game.msg_common comm = 1;
inline bool cmsg_item_sell_all::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_item_sell_all::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_item_sell_all::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_item_sell_all::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_item_sell_all.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_item_sell_all::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_item_sell_all.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_item_sell_all::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_item_sell_all.comm)
  return comm_;
}
inline void cmsg_item_sell_all::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_item_sell_all.comm)
}

// repeated uint32 item_ids = 2;
inline int cmsg_item_sell_all::item_ids_size() const {
  return item_ids_.size();
}
inline void cmsg_item_sell_all::clear_item_ids() {
  set_changed();
  item_ids_.Clear();
}
inline ::google::protobuf::uint32 cmsg_item_sell_all::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_item_sell_all.item_ids)
  return item_ids_.Get(index);
}
inline void cmsg_item_sell_all::set_item_ids(int index, ::google::protobuf::uint32 value) {
  set_changed();
  item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_item_sell_all.item_ids)
}
inline void cmsg_item_sell_all::add_item_ids(::google::protobuf::uint32 value) {
  set_changed();
  item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_item_sell_all.item_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
cmsg_item_sell_all::item_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_item_sell_all.item_ids)
  return item_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
cmsg_item_sell_all::mutable_item_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_item_sell_all.item_ids)
  return &item_ids_;
}

// -------------------------------------------------------------------

// cmsg_item_apply

// .protocol.game.msg_common comm = 1;
inline bool cmsg_item_apply::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_item_apply::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_item_apply::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_item_apply::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_item_apply.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_item_apply::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_item_apply.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_item_apply::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_item_apply.comm)
  return comm_;
}
inline void cmsg_item_apply::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_item_apply.comm)
}

// uint32 item_id = 2;
inline void cmsg_item_apply::clear_item_id() {
  set_changed();
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 cmsg_item_apply::item_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_item_apply.item_id)
  return item_id_;
}
inline void cmsg_item_apply::set_item_id(::google::protobuf::uint32 value) {
  set_changed();
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_item_apply.item_id)
}

// int32 item_count = 3;
inline void cmsg_item_apply::clear_item_count() {
  set_changed();
  item_count_ = 0;
}
inline ::google::protobuf::int32 cmsg_item_apply::item_count() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_item_apply.item_count)
  return item_count_;
}
inline void cmsg_item_apply::set_item_count(::google::protobuf::int32 value) {
  set_changed();
  
  item_count_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_item_apply.item_count)
}

// int32 item_index = 4;
inline void cmsg_item_apply::clear_item_index() {
  set_changed();
  item_index_ = 0;
}
inline ::google::protobuf::int32 cmsg_item_apply::item_index() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_item_apply.item_index)
  return item_index_;
}
inline void cmsg_item_apply::set_item_index(::google::protobuf::int32 value) {
  set_changed();
  
  item_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_item_apply.item_index)
}

// -------------------------------------------------------------------

// smsg_item_apply

// repeated int32 types = 1;
inline int smsg_item_apply::types_size() const {
  return types_.size();
}
inline void smsg_item_apply::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_item_apply::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_item_apply.types)
  return types_.Get(index);
}
inline void smsg_item_apply::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_item_apply.types)
}
inline void smsg_item_apply::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_item_apply.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_item_apply::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_item_apply.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_item_apply::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_item_apply.types)
  return &types_;
}

// repeated int32 value1s = 2;
inline int smsg_item_apply::value1s_size() const {
  return value1s_.size();
}
inline void smsg_item_apply::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_item_apply::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_item_apply.value1s)
  return value1s_.Get(index);
}
inline void smsg_item_apply::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_item_apply.value1s)
}
inline void smsg_item_apply::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_item_apply.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_item_apply::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_item_apply.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_item_apply::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_item_apply.value1s)
  return &value1s_;
}

// repeated int32 value2s = 3;
inline int smsg_item_apply::value2s_size() const {
  return value2s_.size();
}
inline void smsg_item_apply::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_item_apply::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_item_apply.value2s)
  return value2s_.Get(index);
}
inline void smsg_item_apply::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_item_apply.value2s)
}
inline void smsg_item_apply::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_item_apply.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_item_apply::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_item_apply.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_item_apply::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_item_apply.value2s)
  return &value2s_;
}

// repeated int32 value3s = 4;
inline int smsg_item_apply::value3s_size() const {
  return value3s_.size();
}
inline void smsg_item_apply::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_item_apply::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_item_apply.value3s)
  return value3s_.Get(index);
}
inline void smsg_item_apply::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_item_apply.value3s)
}
inline void smsg_item_apply::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_item_apply.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_item_apply::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_item_apply.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_item_apply::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_item_apply.value3s)
  return &value3s_;
}

// repeated .dhc.role_t roles = 5;
inline int smsg_item_apply::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_item_apply::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_item_apply.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_item_apply::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_item_apply.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_item_apply::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_item_apply.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_item_apply::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_item_apply.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_item_apply::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_item_apply.roles)
  return roles_;
}

// repeated .dhc.equip_t equips = 6;
inline int smsg_item_apply::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_item_apply::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_item_apply.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_item_apply::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_item_apply.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_item_apply::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_item_apply.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_item_apply::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_item_apply.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_item_apply::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_item_apply.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 7;
inline int smsg_item_apply::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_item_apply::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_item_apply.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_item_apply::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_item_apply.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_item_apply::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_item_apply.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_item_apply::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_item_apply.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_item_apply::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_item_apply.treasures)
  return treasures_;
}

// repeated int32 role_ids = 8;
inline int smsg_item_apply::role_ids_size() const {
  return role_ids_.size();
}
inline void smsg_item_apply::clear_role_ids() {
  set_changed();
  role_ids_.Clear();
}
inline ::google::protobuf::int32 smsg_item_apply::role_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_item_apply.role_ids)
  return role_ids_.Get(index);
}
inline void smsg_item_apply::set_role_ids(int index, ::google::protobuf::int32 value) {
  set_changed();
  role_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_item_apply.role_ids)
}
inline void smsg_item_apply::add_role_ids(::google::protobuf::int32 value) {
  set_changed();
  role_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_item_apply.role_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_item_apply::role_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_item_apply.role_ids)
  return role_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_item_apply::mutable_role_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_item_apply.role_ids)
  return &role_ids_;
}

// repeated .dhc.pet_t pets = 9;
inline int smsg_item_apply::pets_size() const {
  return pets_.size();
}
inline ::dhc::pet_t* smsg_item_apply::mutable_pets(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_item_apply.pets)
  return pets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >*
smsg_item_apply::mutable_pets() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_item_apply.pets)
  return &pets_;
}
inline const ::dhc::pet_t& smsg_item_apply::pets(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_item_apply.pets)
  return pets_.Get(index);
}
inline ::dhc::pet_t* smsg_item_apply::add_pets() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_item_apply.pets)
  return pets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >&
smsg_item_apply::pets() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_item_apply.pets)
  return pets_;
}

// -------------------------------------------------------------------

// cmsg_item_fenjie

// .protocol.game.msg_common comm = 1;
inline bool cmsg_item_fenjie::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_item_fenjie::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_item_fenjie::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_item_fenjie::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_item_fenjie.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_item_fenjie::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_item_fenjie.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_item_fenjie::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_item_fenjie.comm)
  return comm_;
}
inline void cmsg_item_fenjie::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_item_fenjie.comm)
}

// repeated uint32 item_id = 2;
inline int cmsg_item_fenjie::item_id_size() const {
  return item_id_.size();
}
inline void cmsg_item_fenjie::clear_item_id() {
  set_changed();
  item_id_.Clear();
}
inline ::google::protobuf::uint32 cmsg_item_fenjie::item_id(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_item_fenjie.item_id)
  return item_id_.Get(index);
}
inline void cmsg_item_fenjie::set_item_id(int index, ::google::protobuf::uint32 value) {
  set_changed();
  item_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_item_fenjie.item_id)
}
inline void cmsg_item_fenjie::add_item_id(::google::protobuf::uint32 value) {
  set_changed();
  item_id_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_item_fenjie.item_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
cmsg_item_fenjie::item_id() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_item_fenjie.item_id)
  return item_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
cmsg_item_fenjie::mutable_item_id() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_item_fenjie.item_id)
  return &item_id_;
}

// -------------------------------------------------------------------

// cmsg_item_direct_buy

// .protocol.game.msg_common comm = 1;
inline bool cmsg_item_direct_buy::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_item_direct_buy::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_item_direct_buy::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_item_direct_buy::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_item_direct_buy.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_item_direct_buy::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_item_direct_buy.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_item_direct_buy::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_item_direct_buy.comm)
  return comm_;
}
inline void cmsg_item_direct_buy::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_item_direct_buy.comm)
}

// int32 item_id = 2;
inline void cmsg_item_direct_buy::clear_item_id() {
  set_changed();
  item_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_item_direct_buy::item_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_item_direct_buy.item_id)
  return item_id_;
}
inline void cmsg_item_direct_buy::set_item_id(::google::protobuf::int32 value) {
  set_changed();
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_item_direct_buy.item_id)
}

// int32 item_count = 3;
inline void cmsg_item_direct_buy::clear_item_count() {
  set_changed();
  item_count_ = 0;
}
inline ::google::protobuf::int32 cmsg_item_direct_buy::item_count() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_item_direct_buy.item_count)
  return item_count_;
}
inline void cmsg_item_direct_buy::set_item_count(::google::protobuf::int32 value) {
  set_changed();
  
  item_count_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_item_direct_buy.item_count)
}

// -------------------------------------------------------------------

// cmsg_player_task

// .protocol.game.msg_common comm = 1;
inline bool cmsg_player_task::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_player_task::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_player_task::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_player_task::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_player_task.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_player_task::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_player_task.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_player_task::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_player_task.comm)
  return comm_;
}
inline void cmsg_player_task::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_player_task.comm)
}

// uint32 task_id = 2;
inline void cmsg_player_task::clear_task_id() {
  set_changed();
  task_id_ = 0u;
}
inline ::google::protobuf::uint32 cmsg_player_task::task_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_player_task.task_id)
  return task_id_;
}
inline void cmsg_player_task::set_task_id(::google::protobuf::uint32 value) {
  set_changed();
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_player_task.task_id)
}

// -------------------------------------------------------------------

// cmsg_shop_refresh

// .protocol.game.msg_common comm = 1;
inline bool cmsg_shop_refresh::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_shop_refresh::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_shop_refresh::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_shop_refresh::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_shop_refresh.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_shop_refresh::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_shop_refresh.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_shop_refresh::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_shop_refresh.comm)
  return comm_;
}
inline void cmsg_shop_refresh::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_shop_refresh.comm)
}

// int32 type = 2;
inline void cmsg_shop_refresh::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 cmsg_shop_refresh::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_shop_refresh.type)
  return type_;
}
inline void cmsg_shop_refresh::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_shop_refresh.type)
}

// -------------------------------------------------------------------

// smsg_shop_refresh

// repeated uint32 shop1_ids = 1;
inline int smsg_shop_refresh::shop1_ids_size() const {
  return shop1_ids_.size();
}
inline void smsg_shop_refresh::clear_shop1_ids() {
  set_changed();
  shop1_ids_.Clear();
}
inline ::google::protobuf::uint32 smsg_shop_refresh::shop1_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_refresh.shop1_ids)
  return shop1_ids_.Get(index);
}
inline void smsg_shop_refresh::set_shop1_ids(int index, ::google::protobuf::uint32 value) {
  set_changed();
  shop1_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_refresh.shop1_ids)
}
inline void smsg_shop_refresh::add_shop1_ids(::google::protobuf::uint32 value) {
  set_changed();
  shop1_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_refresh.shop1_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
smsg_shop_refresh::shop1_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_refresh.shop1_ids)
  return shop1_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
smsg_shop_refresh::mutable_shop1_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_refresh.shop1_ids)
  return &shop1_ids_;
}

// repeated int32 shop1_sell = 2;
inline int smsg_shop_refresh::shop1_sell_size() const {
  return shop1_sell_.size();
}
inline void smsg_shop_refresh::clear_shop1_sell() {
  set_changed();
  shop1_sell_.Clear();
}
inline ::google::protobuf::int32 smsg_shop_refresh::shop1_sell(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_refresh.shop1_sell)
  return shop1_sell_.Get(index);
}
inline void smsg_shop_refresh::set_shop1_sell(int index, ::google::protobuf::int32 value) {
  set_changed();
  shop1_sell_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_refresh.shop1_sell)
}
inline void smsg_shop_refresh::add_shop1_sell(::google::protobuf::int32 value) {
  set_changed();
  shop1_sell_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_refresh.shop1_sell)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_shop_refresh::shop1_sell() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_refresh.shop1_sell)
  return shop1_sell_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_shop_refresh::mutable_shop1_sell() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_refresh.shop1_sell)
  return &shop1_sell_;
}

// repeated uint32 shop2_ids = 3;
inline int smsg_shop_refresh::shop2_ids_size() const {
  return shop2_ids_.size();
}
inline void smsg_shop_refresh::clear_shop2_ids() {
  set_changed();
  shop2_ids_.Clear();
}
inline ::google::protobuf::uint32 smsg_shop_refresh::shop2_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_refresh.shop2_ids)
  return shop2_ids_.Get(index);
}
inline void smsg_shop_refresh::set_shop2_ids(int index, ::google::protobuf::uint32 value) {
  set_changed();
  shop2_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_refresh.shop2_ids)
}
inline void smsg_shop_refresh::add_shop2_ids(::google::protobuf::uint32 value) {
  set_changed();
  shop2_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_refresh.shop2_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
smsg_shop_refresh::shop2_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_refresh.shop2_ids)
  return shop2_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
smsg_shop_refresh::mutable_shop2_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_refresh.shop2_ids)
  return &shop2_ids_;
}

// repeated int32 shop2_sell = 4;
inline int smsg_shop_refresh::shop2_sell_size() const {
  return shop2_sell_.size();
}
inline void smsg_shop_refresh::clear_shop2_sell() {
  set_changed();
  shop2_sell_.Clear();
}
inline ::google::protobuf::int32 smsg_shop_refresh::shop2_sell(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_refresh.shop2_sell)
  return shop2_sell_.Get(index);
}
inline void smsg_shop_refresh::set_shop2_sell(int index, ::google::protobuf::int32 value) {
  set_changed();
  shop2_sell_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_refresh.shop2_sell)
}
inline void smsg_shop_refresh::add_shop2_sell(::google::protobuf::int32 value) {
  set_changed();
  shop2_sell_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_refresh.shop2_sell)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_shop_refresh::shop2_sell() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_refresh.shop2_sell)
  return shop2_sell_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_shop_refresh::mutable_shop2_sell() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_refresh.shop2_sell)
  return &shop2_sell_;
}

// repeated uint32 shop3_ids = 5;
inline int smsg_shop_refresh::shop3_ids_size() const {
  return shop3_ids_.size();
}
inline void smsg_shop_refresh::clear_shop3_ids() {
  set_changed();
  shop3_ids_.Clear();
}
inline ::google::protobuf::uint32 smsg_shop_refresh::shop3_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_refresh.shop3_ids)
  return shop3_ids_.Get(index);
}
inline void smsg_shop_refresh::set_shop3_ids(int index, ::google::protobuf::uint32 value) {
  set_changed();
  shop3_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_refresh.shop3_ids)
}
inline void smsg_shop_refresh::add_shop3_ids(::google::protobuf::uint32 value) {
  set_changed();
  shop3_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_refresh.shop3_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
smsg_shop_refresh::shop3_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_refresh.shop3_ids)
  return shop3_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
smsg_shop_refresh::mutable_shop3_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_refresh.shop3_ids)
  return &shop3_ids_;
}

// repeated int32 shop3_sell = 6;
inline int smsg_shop_refresh::shop3_sell_size() const {
  return shop3_sell_.size();
}
inline void smsg_shop_refresh::clear_shop3_sell() {
  set_changed();
  shop3_sell_.Clear();
}
inline ::google::protobuf::int32 smsg_shop_refresh::shop3_sell(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_refresh.shop3_sell)
  return shop3_sell_.Get(index);
}
inline void smsg_shop_refresh::set_shop3_sell(int index, ::google::protobuf::int32 value) {
  set_changed();
  shop3_sell_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_refresh.shop3_sell)
}
inline void smsg_shop_refresh::add_shop3_sell(::google::protobuf::int32 value) {
  set_changed();
  shop3_sell_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_refresh.shop3_sell)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_shop_refresh::shop3_sell() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_refresh.shop3_sell)
  return shop3_sell_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_shop_refresh::mutable_shop3_sell() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_refresh.shop3_sell)
  return &shop3_sell_;
}

// repeated uint32 guild_shop_ids = 7;
inline int smsg_shop_refresh::guild_shop_ids_size() const {
  return guild_shop_ids_.size();
}
inline void smsg_shop_refresh::clear_guild_shop_ids() {
  set_changed();
  guild_shop_ids_.Clear();
}
inline ::google::protobuf::uint32 smsg_shop_refresh::guild_shop_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_refresh.guild_shop_ids)
  return guild_shop_ids_.Get(index);
}
inline void smsg_shop_refresh::set_guild_shop_ids(int index, ::google::protobuf::uint32 value) {
  set_changed();
  guild_shop_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_refresh.guild_shop_ids)
}
inline void smsg_shop_refresh::add_guild_shop_ids(::google::protobuf::uint32 value) {
  set_changed();
  guild_shop_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_refresh.guild_shop_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
smsg_shop_refresh::guild_shop_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_refresh.guild_shop_ids)
  return guild_shop_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
smsg_shop_refresh::mutable_guild_shop_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_refresh.guild_shop_ids)
  return &guild_shop_ids_;
}

// repeated int32 guild_shop_sell = 8;
inline int smsg_shop_refresh::guild_shop_sell_size() const {
  return guild_shop_sell_.size();
}
inline void smsg_shop_refresh::clear_guild_shop_sell() {
  set_changed();
  guild_shop_sell_.Clear();
}
inline ::google::protobuf::int32 smsg_shop_refresh::guild_shop_sell(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_refresh.guild_shop_sell)
  return guild_shop_sell_.Get(index);
}
inline void smsg_shop_refresh::set_guild_shop_sell(int index, ::google::protobuf::int32 value) {
  set_changed();
  guild_shop_sell_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_refresh.guild_shop_sell)
}
inline void smsg_shop_refresh::add_guild_shop_sell(::google::protobuf::int32 value) {
  set_changed();
  guild_shop_sell_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_refresh.guild_shop_sell)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_shop_refresh::guild_shop_sell() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_refresh.guild_shop_sell)
  return guild_shop_sell_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_shop_refresh::mutable_guild_shop_sell() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_refresh.guild_shop_sell)
  return &guild_shop_sell_;
}

// repeated uint32 shop4_ids = 9;
inline int smsg_shop_refresh::shop4_ids_size() const {
  return shop4_ids_.size();
}
inline void smsg_shop_refresh::clear_shop4_ids() {
  set_changed();
  shop4_ids_.Clear();
}
inline ::google::protobuf::uint32 smsg_shop_refresh::shop4_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_refresh.shop4_ids)
  return shop4_ids_.Get(index);
}
inline void smsg_shop_refresh::set_shop4_ids(int index, ::google::protobuf::uint32 value) {
  set_changed();
  shop4_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_refresh.shop4_ids)
}
inline void smsg_shop_refresh::add_shop4_ids(::google::protobuf::uint32 value) {
  set_changed();
  shop4_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_refresh.shop4_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
smsg_shop_refresh::shop4_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_refresh.shop4_ids)
  return shop4_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
smsg_shop_refresh::mutable_shop4_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_refresh.shop4_ids)
  return &shop4_ids_;
}

// repeated int32 shop4_sell = 10;
inline int smsg_shop_refresh::shop4_sell_size() const {
  return shop4_sell_.size();
}
inline void smsg_shop_refresh::clear_shop4_sell() {
  set_changed();
  shop4_sell_.Clear();
}
inline ::google::protobuf::int32 smsg_shop_refresh::shop4_sell(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_refresh.shop4_sell)
  return shop4_sell_.Get(index);
}
inline void smsg_shop_refresh::set_shop4_sell(int index, ::google::protobuf::int32 value) {
  set_changed();
  shop4_sell_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_refresh.shop4_sell)
}
inline void smsg_shop_refresh::add_shop4_sell(::google::protobuf::int32 value) {
  set_changed();
  shop4_sell_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_refresh.shop4_sell)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_shop_refresh::shop4_sell() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_refresh.shop4_sell)
  return shop4_sell_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_shop_refresh::mutable_shop4_sell() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_refresh.shop4_sell)
  return &shop4_sell_;
}

// repeated uint32 shoppet_ids = 11;
inline int smsg_shop_refresh::shoppet_ids_size() const {
  return shoppet_ids_.size();
}
inline void smsg_shop_refresh::clear_shoppet_ids() {
  set_changed();
  shoppet_ids_.Clear();
}
inline ::google::protobuf::uint32 smsg_shop_refresh::shoppet_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_refresh.shoppet_ids)
  return shoppet_ids_.Get(index);
}
inline void smsg_shop_refresh::set_shoppet_ids(int index, ::google::protobuf::uint32 value) {
  set_changed();
  shoppet_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_refresh.shoppet_ids)
}
inline void smsg_shop_refresh::add_shoppet_ids(::google::protobuf::uint32 value) {
  set_changed();
  shoppet_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_refresh.shoppet_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
smsg_shop_refresh::shoppet_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_refresh.shoppet_ids)
  return shoppet_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
smsg_shop_refresh::mutable_shoppet_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_refresh.shoppet_ids)
  return &shoppet_ids_;
}

// repeated int32 shoppet_sell = 12;
inline int smsg_shop_refresh::shoppet_sell_size() const {
  return shoppet_sell_.size();
}
inline void smsg_shop_refresh::clear_shoppet_sell() {
  set_changed();
  shoppet_sell_.Clear();
}
inline ::google::protobuf::int32 smsg_shop_refresh::shoppet_sell(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_refresh.shoppet_sell)
  return shoppet_sell_.Get(index);
}
inline void smsg_shop_refresh::set_shoppet_sell(int index, ::google::protobuf::int32 value) {
  set_changed();
  shoppet_sell_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_refresh.shoppet_sell)
}
inline void smsg_shop_refresh::add_shoppet_sell(::google::protobuf::int32 value) {
  set_changed();
  shoppet_sell_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_refresh.shoppet_sell)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_shop_refresh::shoppet_sell() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_refresh.shoppet_sell)
  return shoppet_sell_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_shop_refresh::mutable_shoppet_sell() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_refresh.shoppet_sell)
  return &shoppet_sell_;
}

// -------------------------------------------------------------------

// cmsg_shop_buy

// .protocol.game.msg_common comm = 1;
inline bool cmsg_shop_buy::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_shop_buy::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_shop_buy::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_shop_buy::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_shop_buy.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_shop_buy::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_shop_buy.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_shop_buy::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_shop_buy.comm)
  return comm_;
}
inline void cmsg_shop_buy::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_shop_buy.comm)
}

// int32 type = 2;
inline void cmsg_shop_buy::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 cmsg_shop_buy::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_shop_buy.type)
  return type_;
}
inline void cmsg_shop_buy::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_shop_buy.type)
}

// int32 gezi = 3;
inline void cmsg_shop_buy::clear_gezi() {
  set_changed();
  gezi_ = 0;
}
inline ::google::protobuf::int32 cmsg_shop_buy::gezi() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_shop_buy.gezi)
  return gezi_;
}
inline void cmsg_shop_buy::set_gezi(::google::protobuf::int32 value) {
  set_changed();
  
  gezi_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_shop_buy.gezi)
}

// int32 item_id = 4;
inline void cmsg_shop_buy::clear_item_id() {
  set_changed();
  item_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_shop_buy::item_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_shop_buy.item_id)
  return item_id_;
}
inline void cmsg_shop_buy::set_item_id(::google::protobuf::int32 value) {
  set_changed();
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_shop_buy.item_id)
}

// int32 num = 5;
inline void cmsg_shop_buy::clear_num() {
  set_changed();
  num_ = 0;
}
inline ::google::protobuf::int32 cmsg_shop_buy::num() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_shop_buy.num)
  return num_;
}
inline void cmsg_shop_buy::set_num(::google::protobuf::int32 value) {
  set_changed();
  
  num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_shop_buy.num)
}

// -------------------------------------------------------------------

// smsg_shop_buy

// repeated int32 types = 1;
inline int smsg_shop_buy::types_size() const {
  return types_.size();
}
inline void smsg_shop_buy::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_shop_buy::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_buy.types)
  return types_.Get(index);
}
inline void smsg_shop_buy::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_buy.types)
}
inline void smsg_shop_buy::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_buy.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_shop_buy::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_buy.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_shop_buy::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_buy.types)
  return &types_;
}

// repeated int32 value1s = 2;
inline int smsg_shop_buy::value1s_size() const {
  return value1s_.size();
}
inline void smsg_shop_buy::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_shop_buy::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_buy.value1s)
  return value1s_.Get(index);
}
inline void smsg_shop_buy::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_buy.value1s)
}
inline void smsg_shop_buy::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_buy.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_shop_buy::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_buy.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_shop_buy::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_buy.value1s)
  return &value1s_;
}

// repeated int32 value2s = 3;
inline int smsg_shop_buy::value2s_size() const {
  return value2s_.size();
}
inline void smsg_shop_buy::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_shop_buy::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_buy.value2s)
  return value2s_.Get(index);
}
inline void smsg_shop_buy::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_buy.value2s)
}
inline void smsg_shop_buy::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_buy.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_shop_buy::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_buy.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_shop_buy::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_buy.value2s)
  return &value2s_;
}

// repeated int32 value3s = 4;
inline int smsg_shop_buy::value3s_size() const {
  return value3s_.size();
}
inline void smsg_shop_buy::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_shop_buy::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_buy.value3s)
  return value3s_.Get(index);
}
inline void smsg_shop_buy::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_shop_buy.value3s)
}
inline void smsg_shop_buy::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_buy.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_shop_buy::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_buy.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_shop_buy::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_buy.value3s)
  return &value3s_;
}

// repeated .dhc.equip_t equips = 5;
inline int smsg_shop_buy::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_shop_buy::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_shop_buy.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_shop_buy::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_buy.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_shop_buy::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_buy.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_shop_buy::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_buy.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_shop_buy::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_buy.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 6;
inline int smsg_shop_buy::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_shop_buy::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_shop_buy.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_shop_buy::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_buy.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_shop_buy::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_buy.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_shop_buy::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_buy.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_shop_buy::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_buy.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 7;
inline int smsg_shop_buy::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_shop_buy::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_shop_buy.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_shop_buy::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_shop_buy.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_shop_buy::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_shop_buy.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_shop_buy::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_shop_buy.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_shop_buy::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_shop_buy.roles)
  return roles_;
}

// -------------------------------------------------------------------

// cmsg_shop_xg

// .protocol.game.msg_common comm = 1;
inline bool cmsg_shop_xg::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_shop_xg::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_shop_xg::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_shop_xg::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_shop_xg.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_shop_xg::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_shop_xg.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_shop_xg::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_shop_xg.comm)
  return comm_;
}
inline void cmsg_shop_xg::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_shop_xg.comm)
}

// int32 shop_id = 2;
inline void cmsg_shop_xg::clear_shop_id() {
  set_changed();
  shop_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_shop_xg::shop_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_shop_xg.shop_id)
  return shop_id_;
}
inline void cmsg_shop_xg::set_shop_id(::google::protobuf::int32 value) {
  set_changed();
  
  shop_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_shop_xg.shop_id)
}

// int32 shop_num = 3;
inline void cmsg_shop_xg::clear_shop_num() {
  set_changed();
  shop_num_ = 0;
}
inline ::google::protobuf::int32 cmsg_shop_xg::shop_num() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_shop_xg.shop_num)
  return shop_num_;
}
inline void cmsg_shop_xg::set_shop_num(::google::protobuf::int32 value) {
  set_changed();
  
  shop_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_shop_xg.shop_num)
}

// -------------------------------------------------------------------

// cmsg_active_reward

// .protocol.game.msg_common comm = 1;
inline bool cmsg_active_reward::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_active_reward::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_active_reward::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_active_reward::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_active_reward.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_active_reward::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_active_reward.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_active_reward::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_active_reward.comm)
  return comm_;
}
inline void cmsg_active_reward::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_active_reward.comm)
}

// int32 id = 2;
inline void cmsg_active_reward::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_active_reward::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_active_reward.id)
  return id_;
}
inline void cmsg_active_reward::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_active_reward.id)
}

// -------------------------------------------------------------------

// smsg_active_reward

// repeated int32 types = 1;
inline int smsg_active_reward::types_size() const {
  return types_.size();
}
inline void smsg_active_reward::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_active_reward::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_active_reward.types)
  return types_.Get(index);
}
inline void smsg_active_reward::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_active_reward.types)
}
inline void smsg_active_reward::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_active_reward.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_active_reward::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_active_reward.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_active_reward::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_active_reward.types)
  return &types_;
}

// repeated int32 value1s = 2;
inline int smsg_active_reward::value1s_size() const {
  return value1s_.size();
}
inline void smsg_active_reward::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_active_reward::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_active_reward.value1s)
  return value1s_.Get(index);
}
inline void smsg_active_reward::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_active_reward.value1s)
}
inline void smsg_active_reward::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_active_reward.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_active_reward::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_active_reward.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_active_reward::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_active_reward.value1s)
  return &value1s_;
}

// repeated int32 value2s = 3;
inline int smsg_active_reward::value2s_size() const {
  return value2s_.size();
}
inline void smsg_active_reward::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_active_reward::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_active_reward.value2s)
  return value2s_.Get(index);
}
inline void smsg_active_reward::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_active_reward.value2s)
}
inline void smsg_active_reward::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_active_reward.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_active_reward::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_active_reward.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_active_reward::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_active_reward.value2s)
  return &value2s_;
}

// repeated int32 value3s = 4;
inline int smsg_active_reward::value3s_size() const {
  return value3s_.size();
}
inline void smsg_active_reward::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_active_reward::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_active_reward.value3s)
  return value3s_.Get(index);
}
inline void smsg_active_reward::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_active_reward.value3s)
}
inline void smsg_active_reward::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_active_reward.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_active_reward::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_active_reward.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_active_reward::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_active_reward.value3s)
  return &value3s_;
}

// repeated .dhc.treasure_t treasures = 5;
inline int smsg_active_reward::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_active_reward::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_active_reward.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_active_reward::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_active_reward.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_active_reward::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_active_reward.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_active_reward::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_active_reward.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_active_reward::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_active_reward.treasures)
  return treasures_;
}

// repeated .dhc.equip_t equips = 6;
inline int smsg_active_reward::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_active_reward::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_active_reward.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_active_reward::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_active_reward.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_active_reward::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_active_reward.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_active_reward::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_active_reward.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_active_reward::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_active_reward.equips)
  return equips_;
}

// repeated .dhc.role_t roles = 7;
inline int smsg_active_reward::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_active_reward::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_active_reward.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_active_reward::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_active_reward.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_active_reward::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_active_reward.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_active_reward::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_active_reward.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_active_reward::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_active_reward.roles)
  return roles_;
}

// -------------------------------------------------------------------

// cmsg_active_score_reward

// .protocol.game.msg_common comm = 1;
inline bool cmsg_active_score_reward::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_active_score_reward::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_active_score_reward::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_active_score_reward::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_active_score_reward.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_active_score_reward::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_active_score_reward.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_active_score_reward::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_active_score_reward.comm)
  return comm_;
}
inline void cmsg_active_score_reward::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_active_score_reward.comm)
}

// int32 reward_id = 2;
inline void cmsg_active_score_reward::clear_reward_id() {
  set_changed();
  reward_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_active_score_reward::reward_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_active_score_reward.reward_id)
  return reward_id_;
}
inline void cmsg_active_score_reward::set_reward_id(::google::protobuf::int32 value) {
  set_changed();
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_active_score_reward.reward_id)
}

// -------------------------------------------------------------------

// smsg_active_score_reward

// repeated int32 types = 1;
inline int smsg_active_score_reward::types_size() const {
  return types_.size();
}
inline void smsg_active_score_reward::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_active_score_reward::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_active_score_reward.types)
  return types_.Get(index);
}
inline void smsg_active_score_reward::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_active_score_reward.types)
}
inline void smsg_active_score_reward::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_active_score_reward.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_active_score_reward::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_active_score_reward.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_active_score_reward::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_active_score_reward.types)
  return &types_;
}

// repeated int32 value1s = 2;
inline int smsg_active_score_reward::value1s_size() const {
  return value1s_.size();
}
inline void smsg_active_score_reward::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_active_score_reward::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_active_score_reward.value1s)
  return value1s_.Get(index);
}
inline void smsg_active_score_reward::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_active_score_reward.value1s)
}
inline void smsg_active_score_reward::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_active_score_reward.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_active_score_reward::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_active_score_reward.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_active_score_reward::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_active_score_reward.value1s)
  return &value1s_;
}

// repeated int32 value2s = 3;
inline int smsg_active_score_reward::value2s_size() const {
  return value2s_.size();
}
inline void smsg_active_score_reward::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_active_score_reward::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_active_score_reward.value2s)
  return value2s_.Get(index);
}
inline void smsg_active_score_reward::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_active_score_reward.value2s)
}
inline void smsg_active_score_reward::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_active_score_reward.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_active_score_reward::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_active_score_reward.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_active_score_reward::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_active_score_reward.value2s)
  return &value2s_;
}

// repeated int32 value3s = 4;
inline int smsg_active_score_reward::value3s_size() const {
  return value3s_.size();
}
inline void smsg_active_score_reward::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_active_score_reward::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_active_score_reward.value3s)
  return value3s_.Get(index);
}
inline void smsg_active_score_reward::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_active_score_reward.value3s)
}
inline void smsg_active_score_reward::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_active_score_reward.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_active_score_reward::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_active_score_reward.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_active_score_reward::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_active_score_reward.value3s)
  return &value3s_;
}

// repeated .dhc.treasure_t treasures = 5;
inline int smsg_active_score_reward::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_active_score_reward::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_active_score_reward.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_active_score_reward::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_active_score_reward.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_active_score_reward::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_active_score_reward.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_active_score_reward::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_active_score_reward.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_active_score_reward::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_active_score_reward.treasures)
  return treasures_;
}

// repeated .dhc.equip_t equips = 6;
inline int smsg_active_score_reward::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_active_score_reward::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_active_score_reward.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_active_score_reward::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_active_score_reward.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_active_score_reward::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_active_score_reward.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_active_score_reward::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_active_score_reward.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_active_score_reward::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_active_score_reward.equips)
  return equips_;
}

// repeated .dhc.role_t roles = 7;
inline int smsg_active_score_reward::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_active_score_reward::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_active_score_reward.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_active_score_reward::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_active_score_reward.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_active_score_reward::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_active_score_reward.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_active_score_reward::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_active_score_reward.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_active_score_reward::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_active_score_reward.roles)
  return roles_;
}

// -------------------------------------------------------------------

// smsg_post_look

// repeated .dhc.post_t posts = 1;
inline int smsg_post_look::posts_size() const {
  return posts_.size();
}
inline ::dhc::post_t* smsg_post_look::mutable_posts(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_post_look.posts)
  return posts_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::post_t >*
smsg_post_look::mutable_posts() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_post_look.posts)
  return &posts_;
}
inline const ::dhc::post_t& smsg_post_look::posts(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_post_look.posts)
  return posts_.Get(index);
}
inline ::dhc::post_t* smsg_post_look::add_posts() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_post_look.posts)
  return posts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::post_t >&
smsg_post_look::posts() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_post_look.posts)
  return posts_;
}

// -------------------------------------------------------------------

// cmsg_post_get

// .protocol.game.msg_common comm = 1;
inline bool cmsg_post_get::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_post_get::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_post_get::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_post_get::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_post_get.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_post_get::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_post_get.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_post_get::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_post_get.comm)
  return comm_;
}
inline void cmsg_post_get::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_post_get.comm)
}

// uint64 post_guid = 2;
inline void cmsg_post_get::clear_post_guid() {
  set_changed();
  post_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_post_get::post_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_post_get.post_guid)
  return post_guid_;
}
inline void cmsg_post_get::set_post_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  post_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_post_get.post_guid)
}

// -------------------------------------------------------------------

// smsg_post_get

// repeated .dhc.equip_t equips = 1;
inline int smsg_post_get::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_post_get::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_post_get.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_post_get::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_post_get.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_post_get::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_post_get.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_post_get::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_post_get.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_post_get::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_post_get.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 2;
inline int smsg_post_get::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_post_get::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_post_get.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_post_get::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_post_get.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_post_get::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_post_get.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_post_get::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_post_get.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_post_get::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_post_get.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 3;
inline int smsg_post_get::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_post_get::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_post_get.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_post_get::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_post_get.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_post_get::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_post_get.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_post_get::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_post_get.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_post_get::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_post_get.roles)
  return roles_;
}

// repeated int32 types = 4;
inline int smsg_post_get::types_size() const {
  return types_.size();
}
inline void smsg_post_get::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_post_get::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_post_get.types)
  return types_.Get(index);
}
inline void smsg_post_get::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_post_get.types)
}
inline void smsg_post_get::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_post_get.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_post_get::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_post_get.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_post_get::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_post_get.types)
  return &types_;
}

// repeated int32 value1s = 5;
inline int smsg_post_get::value1s_size() const {
  return value1s_.size();
}
inline void smsg_post_get::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_post_get::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_post_get.value1s)
  return value1s_.Get(index);
}
inline void smsg_post_get::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_post_get.value1s)
}
inline void smsg_post_get::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_post_get.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_post_get::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_post_get.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_post_get::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_post_get.value1s)
  return &value1s_;
}

// repeated int32 value2s = 6;
inline int smsg_post_get::value2s_size() const {
  return value2s_.size();
}
inline void smsg_post_get::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_post_get::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_post_get.value2s)
  return value2s_.Get(index);
}
inline void smsg_post_get::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_post_get.value2s)
}
inline void smsg_post_get::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_post_get.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_post_get::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_post_get.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_post_get::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_post_get.value2s)
  return &value2s_;
}

// repeated int32 value3s = 7;
inline int smsg_post_get::value3s_size() const {
  return value3s_.size();
}
inline void smsg_post_get::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_post_get::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_post_get.value3s)
  return value3s_.Get(index);
}
inline void smsg_post_get::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_post_get.value3s)
}
inline void smsg_post_get::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_post_get.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_post_get::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_post_get.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_post_get::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_post_get.value3s)
  return &value3s_;
}

// repeated .dhc.pet_t pets = 8;
inline int smsg_post_get::pets_size() const {
  return pets_.size();
}
inline ::dhc::pet_t* smsg_post_get::mutable_pets(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_post_get.pets)
  return pets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >*
smsg_post_get::mutable_pets() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_post_get.pets)
  return &pets_;
}
inline const ::dhc::pet_t& smsg_post_get::pets(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_post_get.pets)
  return pets_.Get(index);
}
inline ::dhc::pet_t* smsg_post_get::add_pets() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_post_get.pets)
  return pets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >&
smsg_post_get::pets() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_post_get.pets)
  return pets_;
}

// -------------------------------------------------------------------

// cmsg_post_view

// .protocol.game.msg_common comm = 1;
inline bool cmsg_post_view::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_post_view::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_post_view::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_post_view::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_post_view.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_post_view::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_post_view.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_post_view::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_post_view.comm)
  return comm_;
}
inline void cmsg_post_view::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_post_view.comm)
}

// uint64 post_guid = 2;
inline void cmsg_post_view::clear_post_guid() {
  set_changed();
  post_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_post_view::post_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_post_view.post_guid)
  return post_guid_;
}
inline void cmsg_post_view::set_post_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  post_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_post_view.post_guid)
}

// -------------------------------------------------------------------

// smsg_post_view

// uint64 post_guid = 1;
inline void smsg_post_view::clear_post_guid() {
  set_changed();
  post_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_post_view::post_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_post_view.post_guid)
  return post_guid_;
}
inline void smsg_post_view::set_post_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  post_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_post_view.post_guid)
}

// -------------------------------------------------------------------

// msg_sport_player

// uint64 player_guid = 1;
inline void msg_sport_player::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 msg_sport_player::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_sport_player.player_guid)
  return player_guid_;
}
inline void msg_sport_player::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_sport_player.player_guid)
}

// int32 player_template = 2;
inline void msg_sport_player::clear_player_template() {
  set_changed();
  player_template_ = 0;
}
inline ::google::protobuf::int32 msg_sport_player::player_template() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_sport_player.player_template)
  return player_template_;
}
inline void msg_sport_player::set_player_template(::google::protobuf::int32 value) {
  set_changed();
  
  player_template_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_sport_player.player_template)
}

// bytes player_name = 3;
inline void msg_sport_player::clear_player_name() {
  set_changed();
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_sport_player::player_name() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_sport_player.player_name)
  return player_name_.GetNoArena();
}
inline void msg_sport_player::set_player_name(const ::std::string& value) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_sport_player.player_name)
}
#if LANG_CXX11
inline void msg_sport_player::set_player_name(::std::string&& value) {
  set_changed();
  
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_sport_player.player_name)
}
#endif
inline void msg_sport_player::set_player_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_sport_player.player_name)
}
inline void msg_sport_player::set_player_name(const void* value, size_t size) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_sport_player.player_name)
}
inline ::std::string* msg_sport_player::mutable_player_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_sport_player.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_sport_player::release_player_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_sport_player.player_name)
  
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_sport_player::set_allocated_player_name(::std::string* player_name) {
  set_changed();
  if (player_name != NULL) {
    
  } else {
    
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_sport_player.player_name)
}

// int32 player_level = 4;
inline void msg_sport_player::clear_player_level() {
  set_changed();
  player_level_ = 0;
}
inline ::google::protobuf::int32 msg_sport_player::player_level() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_sport_player.player_level)
  return player_level_;
}
inline void msg_sport_player::set_player_level(::google::protobuf::int32 value) {
  set_changed();
  
  player_level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_sport_player.player_level)
}

// int32 player_bat_eff = 5;
inline void msg_sport_player::clear_player_bat_eff() {
  set_changed();
  player_bat_eff_ = 0;
}
inline ::google::protobuf::int32 msg_sport_player::player_bat_eff() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_sport_player.player_bat_eff)
  return player_bat_eff_;
}
inline void msg_sport_player::set_player_bat_eff(::google::protobuf::int32 value) {
  set_changed();
  
  player_bat_eff_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_sport_player.player_bat_eff)
}

// int32 player_rank = 6;
inline void msg_sport_player::clear_player_rank() {
  set_changed();
  player_rank_ = 0;
}
inline ::google::protobuf::int32 msg_sport_player::player_rank() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_sport_player.player_rank)
  return player_rank_;
}
inline void msg_sport_player::set_player_rank(::google::protobuf::int32 value) {
  set_changed();
  
  player_rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_sport_player.player_rank)
}

// int32 player_isnpc = 7;
inline void msg_sport_player::clear_player_isnpc() {
  set_changed();
  player_isnpc_ = 0;
}
inline ::google::protobuf::int32 msg_sport_player::player_isnpc() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_sport_player.player_isnpc)
  return player_isnpc_;
}
inline void msg_sport_player::set_player_isnpc(::google::protobuf::int32 value) {
  set_changed();
  
  player_isnpc_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_sport_player.player_isnpc)
}

// int32 player_vip = 8;
inline void msg_sport_player::clear_player_vip() {
  set_changed();
  player_vip_ = 0;
}
inline ::google::protobuf::int32 msg_sport_player::player_vip() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_sport_player.player_vip)
  return player_vip_;
}
inline void msg_sport_player::set_player_vip(::google::protobuf::int32 value) {
  set_changed();
  
  player_vip_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_sport_player.player_vip)
}

// int32 player_achieve = 9;
inline void msg_sport_player::clear_player_achieve() {
  set_changed();
  player_achieve_ = 0;
}
inline ::google::protobuf::int32 msg_sport_player::player_achieve() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_sport_player.player_achieve)
  return player_achieve_;
}
inline void msg_sport_player::set_player_achieve(::google::protobuf::int32 value) {
  set_changed();
  
  player_achieve_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_sport_player.player_achieve)
}

// int32 player_chenghao = 10;
inline void msg_sport_player::clear_player_chenghao() {
  set_changed();
  player_chenghao_ = 0;
}
inline ::google::protobuf::int32 msg_sport_player::player_chenghao() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_sport_player.player_chenghao)
  return player_chenghao_;
}
inline void msg_sport_player::set_player_chenghao(::google::protobuf::int32 value) {
  set_changed();
  
  player_chenghao_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_sport_player.player_chenghao)
}

// int32 player_nalflag = 11;
inline void msg_sport_player::clear_player_nalflag() {
  set_changed();
  player_nalflag_ = 0;
}
inline ::google::protobuf::int32 msg_sport_player::player_nalflag() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_sport_player.player_nalflag)
  return player_nalflag_;
}
inline void msg_sport_player::set_player_nalflag(::google::protobuf::int32 value) {
  set_changed();
  
  player_nalflag_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_sport_player.player_nalflag)
}

// -------------------------------------------------------------------

// smsg_sport_look

// repeated .protocol.game.msg_sport_player players = 1;
inline int smsg_sport_look::players_size() const {
  return players_.size();
}
inline void smsg_sport_look::clear_players() {
  players_.Clear();
}
inline ::protocol::game::msg_sport_player* smsg_sport_look::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_sport_look.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_sport_player >*
smsg_sport_look::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_sport_look.players)
  return &players_;
}
inline const ::protocol::game::msg_sport_player& smsg_sport_look::players(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_look.players)
  return players_.Get(index);
}
inline ::protocol::game::msg_sport_player* smsg_sport_look::add_players() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_sport_look.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_sport_player >&
smsg_sport_look::players() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_sport_look.players)
  return players_;
}

// int32 rank = 2;
inline void smsg_sport_look::clear_rank() {
  set_changed();
  rank_ = 0;
}
inline ::google::protobuf::int32 smsg_sport_look::rank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_look.rank)
  return rank_;
}
inline void smsg_sport_look::set_rank(::google::protobuf::int32 value) {
  set_changed();
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_look.rank)
}

// repeated .dhc.sport_t sports = 4;
inline int smsg_sport_look::sports_size() const {
  return sports_.size();
}
inline ::dhc::sport_t* smsg_sport_look::mutable_sports(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_sport_look.sports)
  return sports_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::sport_t >*
smsg_sport_look::mutable_sports() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_sport_look.sports)
  return &sports_;
}
inline const ::dhc::sport_t& smsg_sport_look::sports(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_look.sports)
  return sports_.Get(index);
}
inline ::dhc::sport_t* smsg_sport_look::add_sports() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_sport_look.sports)
  return sports_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::sport_t >&
smsg_sport_look::sports() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_sport_look.sports)
  return sports_;
}

// int32 last_rank = 5;
inline void smsg_sport_look::clear_last_rank() {
  set_changed();
  last_rank_ = 0;
}
inline ::google::protobuf::int32 smsg_sport_look::last_rank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_look.last_rank)
  return last_rank_;
}
inline void smsg_sport_look::set_last_rank(::google::protobuf::int32 value) {
  set_changed();
  
  last_rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_look.last_rank)
}

// int32 can_get = 6;
inline void smsg_sport_look::clear_can_get() {
  set_changed();
  can_get_ = 0;
}
inline ::google::protobuf::int32 smsg_sport_look::can_get() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_look.can_get)
  return can_get_;
}
inline void smsg_sport_look::set_can_get(::google::protobuf::int32 value) {
  set_changed();
  
  can_get_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_look.can_get)
}

// int32 max_rank = 7;
inline void smsg_sport_look::clear_max_rank() {
  set_changed();
  max_rank_ = 0;
}
inline ::google::protobuf::int32 smsg_sport_look::max_rank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_look.max_rank)
  return max_rank_;
}
inline void smsg_sport_look::set_max_rank(::google::protobuf::int32 value) {
  set_changed();
  
  max_rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_look.max_rank)
}

// -------------------------------------------------------------------

// smsg_sport_top

// repeated .protocol.game.msg_sport_player players = 1;
inline int smsg_sport_top::players_size() const {
  return players_.size();
}
inline void smsg_sport_top::clear_players() {
  players_.Clear();
}
inline ::protocol::game::msg_sport_player* smsg_sport_top::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_sport_top.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_sport_player >*
smsg_sport_top::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_sport_top.players)
  return &players_;
}
inline const ::protocol::game::msg_sport_player& smsg_sport_top::players(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_top.players)
  return players_.Get(index);
}
inline ::protocol::game::msg_sport_player* smsg_sport_top::add_players() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_sport_top.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_sport_player >&
smsg_sport_top::players() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_sport_top.players)
  return players_;
}

// -------------------------------------------------------------------

// cmsg_sport_fight_end

// .protocol.game.msg_common comm = 1;
inline bool cmsg_sport_fight_end::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_sport_fight_end::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_sport_fight_end::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_sport_fight_end::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_sport_fight_end.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_sport_fight_end::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_sport_fight_end.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_sport_fight_end::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_sport_fight_end.comm)
  return comm_;
}
inline void cmsg_sport_fight_end::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_sport_fight_end.comm)
}

// int32 index = 2;
inline void cmsg_sport_fight_end::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 cmsg_sport_fight_end::index() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_sport_fight_end.index)
  return index_;
}
inline void cmsg_sport_fight_end::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_sport_fight_end.index)
}

// -------------------------------------------------------------------

// smsg_sport_fight_end

// int32 result = 1;
inline void smsg_sport_fight_end::clear_result() {
  set_changed();
  result_ = 0;
}
inline ::google::protobuf::int32 smsg_sport_fight_end::result() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_fight_end.result)
  return result_;
}
inline void smsg_sport_fight_end::set_result(::google::protobuf::int32 value) {
  set_changed();
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_fight_end.result)
}

// bytes text = 2;
inline void smsg_sport_fight_end::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_sport_fight_end::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_fight_end.text)
  return text_.GetNoArena();
}
inline void smsg_sport_fight_end::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_fight_end.text)
}
#if LANG_CXX11
inline void smsg_sport_fight_end::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_sport_fight_end.text)
}
#endif
inline void smsg_sport_fight_end::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_sport_fight_end.text)
}
inline void smsg_sport_fight_end::set_text(const void* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_sport_fight_end.text)
}
inline ::std::string* smsg_sport_fight_end::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_sport_fight_end.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_sport_fight_end::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_sport_fight_end.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_sport_fight_end::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_sport_fight_end.text)
}

// int32 cid = 3;
inline void smsg_sport_fight_end::clear_cid() {
  set_changed();
  cid_ = 0;
}
inline ::google::protobuf::int32 smsg_sport_fight_end::cid() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_fight_end.cid)
  return cid_;
}
inline void smsg_sport_fight_end::set_cid(::google::protobuf::int32 value) {
  set_changed();
  
  cid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_fight_end.cid)
}

// int32 pgold = 4;
inline void smsg_sport_fight_end::clear_pgold() {
  set_changed();
  pgold_ = 0;
}
inline ::google::protobuf::int32 smsg_sport_fight_end::pgold() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_fight_end.pgold)
  return pgold_;
}
inline void smsg_sport_fight_end::set_pgold(::google::protobuf::int32 value) {
  set_changed();
  
  pgold_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_fight_end.pgold)
}

// int32 max_rank = 5;
inline void smsg_sport_fight_end::clear_max_rank() {
  set_changed();
  max_rank_ = 0;
}
inline ::google::protobuf::int32 smsg_sport_fight_end::max_rank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_fight_end.max_rank)
  return max_rank_;
}
inline void smsg_sport_fight_end::set_max_rank(::google::protobuf::int32 value) {
  set_changed();
  
  max_rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_fight_end.max_rank)
}

// repeated int32 types = 6;
inline int smsg_sport_fight_end::types_size() const {
  return types_.size();
}
inline void smsg_sport_fight_end::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_sport_fight_end::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_fight_end.types)
  return types_.Get(index);
}
inline void smsg_sport_fight_end::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_fight_end.types)
}
inline void smsg_sport_fight_end::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_sport_fight_end.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_sport_fight_end::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_sport_fight_end.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_sport_fight_end::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_sport_fight_end.types)
  return &types_;
}

// repeated int32 value1s = 7;
inline int smsg_sport_fight_end::value1s_size() const {
  return value1s_.size();
}
inline void smsg_sport_fight_end::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_sport_fight_end::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_fight_end.value1s)
  return value1s_.Get(index);
}
inline void smsg_sport_fight_end::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_fight_end.value1s)
}
inline void smsg_sport_fight_end::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_sport_fight_end.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_sport_fight_end::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_sport_fight_end.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_sport_fight_end::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_sport_fight_end.value1s)
  return &value1s_;
}

// repeated int32 value2s = 8;
inline int smsg_sport_fight_end::value2s_size() const {
  return value2s_.size();
}
inline void smsg_sport_fight_end::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_sport_fight_end::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_fight_end.value2s)
  return value2s_.Get(index);
}
inline void smsg_sport_fight_end::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_fight_end.value2s)
}
inline void smsg_sport_fight_end::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_sport_fight_end.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_sport_fight_end::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_sport_fight_end.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_sport_fight_end::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_sport_fight_end.value2s)
  return &value2s_;
}

// repeated int32 value3s = 9;
inline int smsg_sport_fight_end::value3s_size() const {
  return value3s_.size();
}
inline void smsg_sport_fight_end::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_sport_fight_end::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_fight_end.value3s)
  return value3s_.Get(index);
}
inline void smsg_sport_fight_end::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_fight_end.value3s)
}
inline void smsg_sport_fight_end::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_sport_fight_end.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_sport_fight_end::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_sport_fight_end.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_sport_fight_end::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_sport_fight_end.value3s)
  return &value3s_;
}

// repeated .dhc.equip_t equips = 10;
inline int smsg_sport_fight_end::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_sport_fight_end::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_sport_fight_end.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_sport_fight_end::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_sport_fight_end.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_sport_fight_end::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_fight_end.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_sport_fight_end::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_sport_fight_end.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_sport_fight_end::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_sport_fight_end.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 11;
inline int smsg_sport_fight_end::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_sport_fight_end::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_sport_fight_end.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_sport_fight_end::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_sport_fight_end.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_sport_fight_end::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_fight_end.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_sport_fight_end::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_sport_fight_end.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_sport_fight_end::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_sport_fight_end.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 12;
inline int smsg_sport_fight_end::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_sport_fight_end::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_sport_fight_end.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_sport_fight_end::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_sport_fight_end.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_sport_fight_end::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_fight_end.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_sport_fight_end::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_sport_fight_end.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_sport_fight_end::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_sport_fight_end.roles)
  return roles_;
}

// -------------------------------------------------------------------

// cmsg_sport_saodang

// .protocol.game.msg_common comm = 1;
inline bool cmsg_sport_saodang::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_sport_saodang::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_sport_saodang::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_sport_saodang::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_sport_saodang.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_sport_saodang::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_sport_saodang.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_sport_saodang::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_sport_saodang.comm)
  return comm_;
}
inline void cmsg_sport_saodang::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_sport_saodang.comm)
}

// int32 index = 2;
inline void cmsg_sport_saodang::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 cmsg_sport_saodang::index() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_sport_saodang.index)
  return index_;
}
inline void cmsg_sport_saodang::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_sport_saodang.index)
}

// int32 num = 3;
inline void cmsg_sport_saodang::clear_num() {
  set_changed();
  num_ = 0;
}
inline ::google::protobuf::int32 cmsg_sport_saodang::num() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_sport_saodang.num)
  return num_;
}
inline void cmsg_sport_saodang::set_num(::google::protobuf::int32 value) {
  set_changed();
  
  num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_sport_saodang.num)
}

// bool use_item = 4;
inline void cmsg_sport_saodang::clear_use_item() {
  set_changed();
  use_item_ = false;
}
inline bool cmsg_sport_saodang::use_item() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_sport_saodang.use_item)
  return use_item_;
}
inline void cmsg_sport_saodang::set_use_item(bool value) {
  set_changed();
  
  use_item_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_sport_saodang.use_item)
}

// -------------------------------------------------------------------

// smsg_sport_saodang

// repeated .protocol.game.smsg_sport_fight_end saodangs = 1;
inline int smsg_sport_saodang::saodangs_size() const {
  return saodangs_.size();
}
inline void smsg_sport_saodang::clear_saodangs() {
  saodangs_.Clear();
}
inline ::protocol::game::smsg_sport_fight_end* smsg_sport_saodang::mutable_saodangs(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_sport_saodang.saodangs)
  return saodangs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_sport_fight_end >*
smsg_sport_saodang::mutable_saodangs() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_sport_saodang.saodangs)
  return &saodangs_;
}
inline const ::protocol::game::smsg_sport_fight_end& smsg_sport_saodang::saodangs(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_saodang.saodangs)
  return saodangs_.Get(index);
}
inline ::protocol::game::smsg_sport_fight_end* smsg_sport_saodang::add_saodangs() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_sport_saodang.saodangs)
  return saodangs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_sport_fight_end >&
smsg_sport_saodang::saodangs() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_sport_saodang.saodangs)
  return saodangs_;
}

// int32 item_num = 2;
inline void smsg_sport_saodang::clear_item_num() {
  set_changed();
  item_num_ = 0;
}
inline ::google::protobuf::int32 smsg_sport_saodang::item_num() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_saodang.item_num)
  return item_num_;
}
inline void smsg_sport_saodang::set_item_num(::google::protobuf::int32 value) {
  set_changed();
  
  item_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_saodang.item_num)
}

// -------------------------------------------------------------------

// smsg_sport_shop_list

// repeated uint32 shop_ids = 1;
inline int smsg_sport_shop_list::shop_ids_size() const {
  return shop_ids_.size();
}
inline void smsg_sport_shop_list::clear_shop_ids() {
  set_changed();
  shop_ids_.Clear();
}
inline ::google::protobuf::uint32 smsg_sport_shop_list::shop_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_shop_list.shop_ids)
  return shop_ids_.Get(index);
}
inline void smsg_sport_shop_list::set_shop_ids(int index, ::google::protobuf::uint32 value) {
  set_changed();
  shop_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_shop_list.shop_ids)
}
inline void smsg_sport_shop_list::add_shop_ids(::google::protobuf::uint32 value) {
  set_changed();
  shop_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_sport_shop_list.shop_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
smsg_sport_shop_list::shop_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_sport_shop_list.shop_ids)
  return shop_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
smsg_sport_shop_list::mutable_shop_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_sport_shop_list.shop_ids)
  return &shop_ids_;
}

// repeated int32 shop_sells = 2;
inline int smsg_sport_shop_list::shop_sells_size() const {
  return shop_sells_.size();
}
inline void smsg_sport_shop_list::clear_shop_sells() {
  set_changed();
  shop_sells_.Clear();
}
inline ::google::protobuf::int32 smsg_sport_shop_list::shop_sells(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_shop_list.shop_sells)
  return shop_sells_.Get(index);
}
inline void smsg_sport_shop_list::set_shop_sells(int index, ::google::protobuf::int32 value) {
  set_changed();
  shop_sells_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_sport_shop_list.shop_sells)
}
inline void smsg_sport_shop_list::add_shop_sells(::google::protobuf::int32 value) {
  set_changed();
  shop_sells_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_sport_shop_list.shop_sells)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_sport_shop_list::shop_sells() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_sport_shop_list.shop_sells)
  return shop_sells_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_sport_shop_list::mutable_shop_sells() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_sport_shop_list.shop_sells)
  return &shop_sells_;
}

// -------------------------------------------------------------------

// cmsg_sport_shop_buy

// .protocol.game.msg_common comm = 1;
inline bool cmsg_sport_shop_buy::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_sport_shop_buy::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_sport_shop_buy::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_sport_shop_buy::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_sport_shop_buy.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_sport_shop_buy::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_sport_shop_buy.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_sport_shop_buy::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_sport_shop_buy.comm)
  return comm_;
}
inline void cmsg_sport_shop_buy::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_sport_shop_buy.comm)
}

// int32 id = 2;
inline void cmsg_sport_shop_buy::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_sport_shop_buy::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_sport_shop_buy.id)
  return id_;
}
inline void cmsg_sport_shop_buy::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_sport_shop_buy.id)
}

// -------------------------------------------------------------------

// smsg_sport_shop_buy

// repeated .dhc.equip_t equips = 1;
inline int smsg_sport_shop_buy::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_sport_shop_buy::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_sport_shop_buy.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_sport_shop_buy::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_sport_shop_buy.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_sport_shop_buy::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_shop_buy.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_sport_shop_buy::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_sport_shop_buy.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_sport_shop_buy::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_sport_shop_buy.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 2;
inline int smsg_sport_shop_buy::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_sport_shop_buy::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_sport_shop_buy.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_sport_shop_buy::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_sport_shop_buy.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_sport_shop_buy::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_sport_shop_buy.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_sport_shop_buy::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_sport_shop_buy.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_sport_shop_buy::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_sport_shop_buy.treasures)
  return treasures_;
}

// -------------------------------------------------------------------

// cmsg_recharge

// .protocol.game.msg_common comm = 1;
inline bool cmsg_recharge::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_recharge::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_recharge::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_recharge::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_recharge.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_recharge::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_recharge.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_recharge::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_recharge.comm)
  return comm_;
}
inline void cmsg_recharge::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_recharge.comm)
}

// int32 id = 2;
inline void cmsg_recharge::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_recharge::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_recharge.id)
  return id_;
}
inline void cmsg_recharge::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_recharge.id)
}

// int32 huodong_id = 3;
inline void cmsg_recharge::clear_huodong_id() {
  set_changed();
  huodong_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_recharge::huodong_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_recharge.huodong_id)
  return huodong_id_;
}
inline void cmsg_recharge::set_huodong_id(::google::protobuf::int32 value) {
  set_changed();
  
  huodong_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_recharge.huodong_id)
}

// int32 entry_id = 4;
inline void cmsg_recharge::clear_entry_id() {
  set_changed();
  entry_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_recharge::entry_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_recharge.entry_id)
  return entry_id_;
}
inline void cmsg_recharge::set_entry_id(::google::protobuf::int32 value) {
  set_changed();
  
  entry_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_recharge.entry_id)
}

// string code = 5;
inline void cmsg_recharge::clear_code() {
  set_changed();
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_recharge::code() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_recharge.code)
  return code_.GetNoArena();
}
inline void cmsg_recharge::set_code(const ::std::string& value) {
  set_changed();
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_recharge.code)
}
#if LANG_CXX11
inline void cmsg_recharge::set_code(::std::string&& value) {
  set_changed();
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_recharge.code)
}
#endif
inline void cmsg_recharge::set_code(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_recharge.code)
}
inline void cmsg_recharge::set_code(const char* value, size_t size) {
  set_changed();
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_recharge.code)
}
inline ::std::string* cmsg_recharge::mutable_code() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_recharge.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_recharge::release_code() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_recharge.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_recharge::set_allocated_code(::std::string* code) {
  set_changed();
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_recharge.code)
}

// -------------------------------------------------------------------

// smsg_first_recharge

// repeated .dhc.equip_t equips = 1;
inline int smsg_first_recharge::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_first_recharge::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_first_recharge.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_first_recharge::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_first_recharge.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_first_recharge::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_first_recharge.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_first_recharge::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_first_recharge.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_first_recharge::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_first_recharge.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 2;
inline int smsg_first_recharge::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_first_recharge::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_first_recharge.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_first_recharge::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_first_recharge.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_first_recharge::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_first_recharge.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_first_recharge::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_first_recharge.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_first_recharge::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_first_recharge.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 3;
inline int smsg_first_recharge::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_first_recharge::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_first_recharge.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_first_recharge::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_first_recharge.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_first_recharge::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_first_recharge.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_first_recharge::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_first_recharge.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_first_recharge::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_first_recharge.roles)
  return roles_;
}

// repeated int32 types = 4;
inline int smsg_first_recharge::types_size() const {
  return types_.size();
}
inline void smsg_first_recharge::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_first_recharge::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_first_recharge.types)
  return types_.Get(index);
}
inline void smsg_first_recharge::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_first_recharge.types)
}
inline void smsg_first_recharge::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_first_recharge.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_first_recharge::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_first_recharge.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_first_recharge::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_first_recharge.types)
  return &types_;
}

// repeated int32 value1s = 5;
inline int smsg_first_recharge::value1s_size() const {
  return value1s_.size();
}
inline void smsg_first_recharge::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_first_recharge::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_first_recharge.value1s)
  return value1s_.Get(index);
}
inline void smsg_first_recharge::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_first_recharge.value1s)
}
inline void smsg_first_recharge::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_first_recharge.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_first_recharge::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_first_recharge.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_first_recharge::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_first_recharge.value1s)
  return &value1s_;
}

// repeated int32 value2s = 6;
inline int smsg_first_recharge::value2s_size() const {
  return value2s_.size();
}
inline void smsg_first_recharge::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_first_recharge::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_first_recharge.value2s)
  return value2s_.Get(index);
}
inline void smsg_first_recharge::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_first_recharge.value2s)
}
inline void smsg_first_recharge::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_first_recharge.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_first_recharge::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_first_recharge.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_first_recharge::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_first_recharge.value2s)
  return &value2s_;
}

// repeated int32 value3s = 7;
inline int smsg_first_recharge::value3s_size() const {
  return value3s_.size();
}
inline void smsg_first_recharge::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_first_recharge::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_first_recharge.value3s)
  return value3s_.Get(index);
}
inline void smsg_first_recharge::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_first_recharge.value3s)
}
inline void smsg_first_recharge::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_first_recharge.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_first_recharge::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_first_recharge.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_first_recharge::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_first_recharge.value3s)
  return &value3s_;
}

// -------------------------------------------------------------------

// cmsg_vip_reward

// .protocol.game.msg_common comm = 1;
inline bool cmsg_vip_reward::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_vip_reward::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_vip_reward::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_vip_reward::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_vip_reward.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_vip_reward::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_vip_reward.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_vip_reward::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_vip_reward.comm)
  return comm_;
}
inline void cmsg_vip_reward::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_vip_reward.comm)
}

// int32 vip = 2;
inline void cmsg_vip_reward::clear_vip() {
  set_changed();
  vip_ = 0;
}
inline ::google::protobuf::int32 cmsg_vip_reward::vip() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_vip_reward.vip)
  return vip_;
}
inline void cmsg_vip_reward::set_vip(::google::protobuf::int32 value) {
  set_changed();
  
  vip_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_vip_reward.vip)
}

// -------------------------------------------------------------------

// smsg_vip_reward

// repeated .dhc.equip_t equips = 1;
inline int smsg_vip_reward::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_vip_reward::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_vip_reward.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_vip_reward::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_vip_reward.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_vip_reward::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_vip_reward.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_vip_reward::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_vip_reward.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_vip_reward::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_vip_reward.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 2;
inline int smsg_vip_reward::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_vip_reward::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_vip_reward.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_vip_reward::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_vip_reward.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_vip_reward::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_vip_reward.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_vip_reward::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_vip_reward.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_vip_reward::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_vip_reward.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 3;
inline int smsg_vip_reward::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_vip_reward::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_vip_reward.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_vip_reward::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_vip_reward.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_vip_reward::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_vip_reward.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_vip_reward::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_vip_reward.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_vip_reward::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_vip_reward.roles)
  return roles_;
}

// repeated int32 types = 4;
inline int smsg_vip_reward::types_size() const {
  return types_.size();
}
inline void smsg_vip_reward::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_vip_reward::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_vip_reward.types)
  return types_.Get(index);
}
inline void smsg_vip_reward::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_vip_reward.types)
}
inline void smsg_vip_reward::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_vip_reward.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_vip_reward::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_vip_reward.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_vip_reward::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_vip_reward.types)
  return &types_;
}

// repeated int32 value1s = 5;
inline int smsg_vip_reward::value1s_size() const {
  return value1s_.size();
}
inline void smsg_vip_reward::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_vip_reward::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_vip_reward.value1s)
  return value1s_.Get(index);
}
inline void smsg_vip_reward::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_vip_reward.value1s)
}
inline void smsg_vip_reward::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_vip_reward.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_vip_reward::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_vip_reward.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_vip_reward::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_vip_reward.value1s)
  return &value1s_;
}

// repeated int32 value2s = 6;
inline int smsg_vip_reward::value2s_size() const {
  return value2s_.size();
}
inline void smsg_vip_reward::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_vip_reward::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_vip_reward.value2s)
  return value2s_.Get(index);
}
inline void smsg_vip_reward::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_vip_reward.value2s)
}
inline void smsg_vip_reward::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_vip_reward.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_vip_reward::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_vip_reward.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_vip_reward::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_vip_reward.value2s)
  return &value2s_;
}

// repeated int32 value3s = 7;
inline int smsg_vip_reward::value3s_size() const {
  return value3s_.size();
}
inline void smsg_vip_reward::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_vip_reward::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_vip_reward.value3s)
  return value3s_.Get(index);
}
inline void smsg_vip_reward::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_vip_reward.value3s)
}
inline void smsg_vip_reward::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_vip_reward.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_vip_reward::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_vip_reward.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_vip_reward::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_vip_reward.value3s)
  return &value3s_;
}

// -------------------------------------------------------------------

// smsg_dj_reward

// int32 bs = 1;
inline void smsg_dj_reward::clear_bs() {
  set_changed();
  bs_ = 0;
}
inline ::google::protobuf::int32 smsg_dj_reward::bs() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_dj_reward.bs)
  return bs_;
}
inline void smsg_dj_reward::set_bs(::google::protobuf::int32 value) {
  set_changed();
  
  bs_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_dj_reward.bs)
}

// int32 gold = 2;
inline void smsg_dj_reward::clear_gold() {
  set_changed();
  gold_ = 0;
}
inline ::google::protobuf::int32 smsg_dj_reward::gold() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_dj_reward.gold)
  return gold_;
}
inline void smsg_dj_reward::set_gold(::google::protobuf::int32 value) {
  set_changed();
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_dj_reward.gold)
}

// -------------------------------------------------------------------

// smsg_boss_look

// int64 cur_hp = 1;
inline void smsg_boss_look::clear_cur_hp() {
  set_changed();
  cur_hp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 smsg_boss_look::cur_hp() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_look.cur_hp)
  return cur_hp_;
}
inline void smsg_boss_look::set_cur_hp(::google::protobuf::int64 value) {
  set_changed();
  
  cur_hp_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_look.cur_hp)
}

// int64 max_hp = 2;
inline void smsg_boss_look::clear_max_hp() {
  set_changed();
  max_hp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 smsg_boss_look::max_hp() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_look.max_hp)
  return max_hp_;
}
inline void smsg_boss_look::set_max_hp(::google::protobuf::int64 value) {
  set_changed();
  
  max_hp_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_look.max_hp)
}

// int64 myhit = 3;
inline void smsg_boss_look::clear_myhit() {
  set_changed();
  myhit_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 smsg_boss_look::myhit() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_look.myhit)
  return myhit_;
}
inline void smsg_boss_look::set_myhit(::google::protobuf::int64 value) {
  set_changed();
  
  myhit_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_look.myhit)
}

// int32 num = 4;
inline void smsg_boss_look::clear_num() {
  set_changed();
  num_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_look::num() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_look.num)
  return num_;
}
inline void smsg_boss_look::set_num(::google::protobuf::int32 value) {
  set_changed();
  
  num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_look.num)
}

// int32 rank = 5;
inline void smsg_boss_look::clear_rank() {
  set_changed();
  rank_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_look::rank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_look.rank)
  return rank_;
}
inline void smsg_boss_look::set_rank(::google::protobuf::int32 value) {
  set_changed();
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_look.rank)
}

// int32 level = 8;
inline void smsg_boss_look::clear_level() {
  set_changed();
  level_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_look::level() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_look.level)
  return level_;
}
inline void smsg_boss_look::set_level(::google::protobuf::int32 value) {
  set_changed();
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_look.level)
}

// int64 tophit = 9;
inline void smsg_boss_look::clear_tophit() {
  set_changed();
  tophit_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 smsg_boss_look::tophit() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_look.tophit)
  return tophit_;
}
inline void smsg_boss_look::set_tophit(::google::protobuf::int64 value) {
  set_changed();
  
  tophit_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_look.tophit)
}

// int32 toprank = 10;
inline void smsg_boss_look::clear_toprank() {
  set_changed();
  toprank_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_look::toprank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_look.toprank)
  return toprank_;
}
inline void smsg_boss_look::set_toprank(::google::protobuf::int32 value) {
  set_changed();
  
  toprank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_look.toprank)
}

// int32 reward = 11;
inline void smsg_boss_look::clear_reward() {
  set_changed();
  reward_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_look::reward() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_look.reward)
  return reward_;
}
inline void smsg_boss_look::set_reward(::google::protobuf::int32 value) {
  set_changed();
  
  reward_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_look.reward)
}

// -------------------------------------------------------------------

// smsg_boss_rank

// repeated string total_names = 1;
inline int smsg_boss_rank::total_names_size() const {
  return total_names_.size();
}
inline void smsg_boss_rank::clear_total_names() {
  set_changed();
  total_names_.Clear();
}
inline const ::std::string& smsg_boss_rank::total_names(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.total_names)
  return total_names_.Get(index);
}
inline ::std::string* smsg_boss_rank::mutable_total_names(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_boss_rank.total_names)
  return total_names_.Mutable(index);
}
inline void smsg_boss_rank::set_total_names(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.total_names)
  total_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void smsg_boss_rank::set_total_names(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.total_names)
  total_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void smsg_boss_rank::set_total_names(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  total_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_boss_rank.total_names)
}
inline void smsg_boss_rank::set_total_names(int index, const char* value, size_t size) {
  set_changed();
  total_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_boss_rank.total_names)
}
inline ::std::string* smsg_boss_rank::add_total_names() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.smsg_boss_rank.total_names)
  return total_names_.Add();
}
inline void smsg_boss_rank::add_total_names(const ::std::string& value) {
  set_changed();
  total_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.total_names)
}
#if LANG_CXX11
inline void smsg_boss_rank::add_total_names(::std::string&& value) {
  set_changed();
  total_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.total_names)
}
#endif
inline void smsg_boss_rank::add_total_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  total_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.smsg_boss_rank.total_names)
}
inline void smsg_boss_rank::add_total_names(const char* value, size_t size) {
  set_changed();
  total_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.smsg_boss_rank.total_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
smsg_boss_rank::total_names() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.total_names)
  return total_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
smsg_boss_rank::mutable_total_names() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.total_names)
  return &total_names_;
}

// repeated int32 total_templates = 2;
inline int smsg_boss_rank::total_templates_size() const {
  return total_templates_.size();
}
inline void smsg_boss_rank::clear_total_templates() {
  set_changed();
  total_templates_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_rank::total_templates(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.total_templates)
  return total_templates_.Get(index);
}
inline void smsg_boss_rank::set_total_templates(int index, ::google::protobuf::int32 value) {
  set_changed();
  total_templates_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.total_templates)
}
inline void smsg_boss_rank::add_total_templates(::google::protobuf::int32 value) {
  set_changed();
  total_templates_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.total_templates)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_rank::total_templates() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.total_templates)
  return total_templates_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_rank::mutable_total_templates() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.total_templates)
  return &total_templates_;
}

// repeated int64 total_hits = 3;
inline int smsg_boss_rank::total_hits_size() const {
  return total_hits_.size();
}
inline void smsg_boss_rank::clear_total_hits() {
  set_changed();
  total_hits_.Clear();
}
inline ::google::protobuf::int64 smsg_boss_rank::total_hits(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.total_hits)
  return total_hits_.Get(index);
}
inline void smsg_boss_rank::set_total_hits(int index, ::google::protobuf::int64 value) {
  set_changed();
  total_hits_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.total_hits)
}
inline void smsg_boss_rank::add_total_hits(::google::protobuf::int64 value) {
  set_changed();
  total_hits_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.total_hits)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
smsg_boss_rank::total_hits() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.total_hits)
  return total_hits_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
smsg_boss_rank::mutable_total_hits() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.total_hits)
  return &total_hits_;
}

// repeated int32 total_levels = 4;
inline int smsg_boss_rank::total_levels_size() const {
  return total_levels_.size();
}
inline void smsg_boss_rank::clear_total_levels() {
  set_changed();
  total_levels_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_rank::total_levels(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.total_levels)
  return total_levels_.Get(index);
}
inline void smsg_boss_rank::set_total_levels(int index, ::google::protobuf::int32 value) {
  set_changed();
  total_levels_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.total_levels)
}
inline void smsg_boss_rank::add_total_levels(::google::protobuf::int32 value) {
  set_changed();
  total_levels_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.total_levels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_rank::total_levels() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.total_levels)
  return total_levels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_rank::mutable_total_levels() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.total_levels)
  return &total_levels_;
}

// repeated uint64 total_guids = 5;
inline int smsg_boss_rank::total_guids_size() const {
  return total_guids_.size();
}
inline void smsg_boss_rank::clear_total_guids() {
  set_changed();
  total_guids_.Clear();
}
inline ::google::protobuf::uint64 smsg_boss_rank::total_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.total_guids)
  return total_guids_.Get(index);
}
inline void smsg_boss_rank::set_total_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  total_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.total_guids)
}
inline void smsg_boss_rank::add_total_guids(::google::protobuf::uint64 value) {
  set_changed();
  total_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.total_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
smsg_boss_rank::total_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.total_guids)
  return total_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
smsg_boss_rank::mutable_total_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.total_guids)
  return &total_guids_;
}

// repeated int32 total_vips = 6;
inline int smsg_boss_rank::total_vips_size() const {
  return total_vips_.size();
}
inline void smsg_boss_rank::clear_total_vips() {
  set_changed();
  total_vips_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_rank::total_vips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.total_vips)
  return total_vips_.Get(index);
}
inline void smsg_boss_rank::set_total_vips(int index, ::google::protobuf::int32 value) {
  set_changed();
  total_vips_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.total_vips)
}
inline void smsg_boss_rank::add_total_vips(::google::protobuf::int32 value) {
  set_changed();
  total_vips_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.total_vips)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_rank::total_vips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.total_vips)
  return total_vips_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_rank::mutable_total_vips() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.total_vips)
  return &total_vips_;
}

// repeated int32 total_achieves = 7;
inline int smsg_boss_rank::total_achieves_size() const {
  return total_achieves_.size();
}
inline void smsg_boss_rank::clear_total_achieves() {
  set_changed();
  total_achieves_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_rank::total_achieves(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.total_achieves)
  return total_achieves_.Get(index);
}
inline void smsg_boss_rank::set_total_achieves(int index, ::google::protobuf::int32 value) {
  set_changed();
  total_achieves_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.total_achieves)
}
inline void smsg_boss_rank::add_total_achieves(::google::protobuf::int32 value) {
  set_changed();
  total_achieves_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.total_achieves)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_rank::total_achieves() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.total_achieves)
  return total_achieves_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_rank::mutable_total_achieves() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.total_achieves)
  return &total_achieves_;
}

// repeated int32 total_chenghaos = 8;
inline int smsg_boss_rank::total_chenghaos_size() const {
  return total_chenghaos_.size();
}
inline void smsg_boss_rank::clear_total_chenghaos() {
  set_changed();
  total_chenghaos_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_rank::total_chenghaos(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.total_chenghaos)
  return total_chenghaos_.Get(index);
}
inline void smsg_boss_rank::set_total_chenghaos(int index, ::google::protobuf::int32 value) {
  set_changed();
  total_chenghaos_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.total_chenghaos)
}
inline void smsg_boss_rank::add_total_chenghaos(::google::protobuf::int32 value) {
  set_changed();
  total_chenghaos_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.total_chenghaos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_rank::total_chenghaos() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.total_chenghaos)
  return total_chenghaos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_rank::mutable_total_chenghaos() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.total_chenghaos)
  return &total_chenghaos_;
}

// repeated int32 total_nalflags = 9;
inline int smsg_boss_rank::total_nalflags_size() const {
  return total_nalflags_.size();
}
inline void smsg_boss_rank::clear_total_nalflags() {
  set_changed();
  total_nalflags_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_rank::total_nalflags(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.total_nalflags)
  return total_nalflags_.Get(index);
}
inline void smsg_boss_rank::set_total_nalflags(int index, ::google::protobuf::int32 value) {
  set_changed();
  total_nalflags_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.total_nalflags)
}
inline void smsg_boss_rank::add_total_nalflags(::google::protobuf::int32 value) {
  set_changed();
  total_nalflags_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.total_nalflags)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_rank::total_nalflags() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.total_nalflags)
  return total_nalflags_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_rank::mutable_total_nalflags() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.total_nalflags)
  return &total_nalflags_;
}

// repeated string top_names = 10;
inline int smsg_boss_rank::top_names_size() const {
  return top_names_.size();
}
inline void smsg_boss_rank::clear_top_names() {
  set_changed();
  top_names_.Clear();
}
inline const ::std::string& smsg_boss_rank::top_names(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.top_names)
  return top_names_.Get(index);
}
inline ::std::string* smsg_boss_rank::mutable_top_names(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_boss_rank.top_names)
  return top_names_.Mutable(index);
}
inline void smsg_boss_rank::set_top_names(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.top_names)
  top_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void smsg_boss_rank::set_top_names(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.top_names)
  top_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void smsg_boss_rank::set_top_names(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  top_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_boss_rank.top_names)
}
inline void smsg_boss_rank::set_top_names(int index, const char* value, size_t size) {
  set_changed();
  top_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_boss_rank.top_names)
}
inline ::std::string* smsg_boss_rank::add_top_names() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.smsg_boss_rank.top_names)
  return top_names_.Add();
}
inline void smsg_boss_rank::add_top_names(const ::std::string& value) {
  set_changed();
  top_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.top_names)
}
#if LANG_CXX11
inline void smsg_boss_rank::add_top_names(::std::string&& value) {
  set_changed();
  top_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.top_names)
}
#endif
inline void smsg_boss_rank::add_top_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  top_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.smsg_boss_rank.top_names)
}
inline void smsg_boss_rank::add_top_names(const char* value, size_t size) {
  set_changed();
  top_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.smsg_boss_rank.top_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
smsg_boss_rank::top_names() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.top_names)
  return top_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
smsg_boss_rank::mutable_top_names() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.top_names)
  return &top_names_;
}

// repeated int32 top_templates = 11;
inline int smsg_boss_rank::top_templates_size() const {
  return top_templates_.size();
}
inline void smsg_boss_rank::clear_top_templates() {
  set_changed();
  top_templates_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_rank::top_templates(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.top_templates)
  return top_templates_.Get(index);
}
inline void smsg_boss_rank::set_top_templates(int index, ::google::protobuf::int32 value) {
  set_changed();
  top_templates_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.top_templates)
}
inline void smsg_boss_rank::add_top_templates(::google::protobuf::int32 value) {
  set_changed();
  top_templates_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.top_templates)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_rank::top_templates() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.top_templates)
  return top_templates_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_rank::mutable_top_templates() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.top_templates)
  return &top_templates_;
}

// repeated int64 top_hits = 12;
inline int smsg_boss_rank::top_hits_size() const {
  return top_hits_.size();
}
inline void smsg_boss_rank::clear_top_hits() {
  set_changed();
  top_hits_.Clear();
}
inline ::google::protobuf::int64 smsg_boss_rank::top_hits(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.top_hits)
  return top_hits_.Get(index);
}
inline void smsg_boss_rank::set_top_hits(int index, ::google::protobuf::int64 value) {
  set_changed();
  top_hits_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.top_hits)
}
inline void smsg_boss_rank::add_top_hits(::google::protobuf::int64 value) {
  set_changed();
  top_hits_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.top_hits)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
smsg_boss_rank::top_hits() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.top_hits)
  return top_hits_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
smsg_boss_rank::mutable_top_hits() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.top_hits)
  return &top_hits_;
}

// repeated int32 top_levels = 13;
inline int smsg_boss_rank::top_levels_size() const {
  return top_levels_.size();
}
inline void smsg_boss_rank::clear_top_levels() {
  set_changed();
  top_levels_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_rank::top_levels(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.top_levels)
  return top_levels_.Get(index);
}
inline void smsg_boss_rank::set_top_levels(int index, ::google::protobuf::int32 value) {
  set_changed();
  top_levels_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.top_levels)
}
inline void smsg_boss_rank::add_top_levels(::google::protobuf::int32 value) {
  set_changed();
  top_levels_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.top_levels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_rank::top_levels() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.top_levels)
  return top_levels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_rank::mutable_top_levels() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.top_levels)
  return &top_levels_;
}

// repeated uint64 top_guids = 14;
inline int smsg_boss_rank::top_guids_size() const {
  return top_guids_.size();
}
inline void smsg_boss_rank::clear_top_guids() {
  set_changed();
  top_guids_.Clear();
}
inline ::google::protobuf::uint64 smsg_boss_rank::top_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.top_guids)
  return top_guids_.Get(index);
}
inline void smsg_boss_rank::set_top_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  top_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.top_guids)
}
inline void smsg_boss_rank::add_top_guids(::google::protobuf::uint64 value) {
  set_changed();
  top_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.top_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
smsg_boss_rank::top_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.top_guids)
  return top_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
smsg_boss_rank::mutable_top_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.top_guids)
  return &top_guids_;
}

// repeated int32 top_vips = 15;
inline int smsg_boss_rank::top_vips_size() const {
  return top_vips_.size();
}
inline void smsg_boss_rank::clear_top_vips() {
  set_changed();
  top_vips_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_rank::top_vips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.top_vips)
  return top_vips_.Get(index);
}
inline void smsg_boss_rank::set_top_vips(int index, ::google::protobuf::int32 value) {
  set_changed();
  top_vips_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.top_vips)
}
inline void smsg_boss_rank::add_top_vips(::google::protobuf::int32 value) {
  set_changed();
  top_vips_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.top_vips)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_rank::top_vips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.top_vips)
  return top_vips_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_rank::mutable_top_vips() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.top_vips)
  return &top_vips_;
}

// repeated int32 top_achieves = 16;
inline int smsg_boss_rank::top_achieves_size() const {
  return top_achieves_.size();
}
inline void smsg_boss_rank::clear_top_achieves() {
  set_changed();
  top_achieves_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_rank::top_achieves(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.top_achieves)
  return top_achieves_.Get(index);
}
inline void smsg_boss_rank::set_top_achieves(int index, ::google::protobuf::int32 value) {
  set_changed();
  top_achieves_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.top_achieves)
}
inline void smsg_boss_rank::add_top_achieves(::google::protobuf::int32 value) {
  set_changed();
  top_achieves_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.top_achieves)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_rank::top_achieves() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.top_achieves)
  return top_achieves_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_rank::mutable_top_achieves() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.top_achieves)
  return &top_achieves_;
}

// repeated int32 top_chenghaos = 17;
inline int smsg_boss_rank::top_chenghaos_size() const {
  return top_chenghaos_.size();
}
inline void smsg_boss_rank::clear_top_chenghaos() {
  set_changed();
  top_chenghaos_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_rank::top_chenghaos(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.top_chenghaos)
  return top_chenghaos_.Get(index);
}
inline void smsg_boss_rank::set_top_chenghaos(int index, ::google::protobuf::int32 value) {
  set_changed();
  top_chenghaos_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.top_chenghaos)
}
inline void smsg_boss_rank::add_top_chenghaos(::google::protobuf::int32 value) {
  set_changed();
  top_chenghaos_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.top_chenghaos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_rank::top_chenghaos() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.top_chenghaos)
  return top_chenghaos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_rank::mutable_top_chenghaos() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.top_chenghaos)
  return &top_chenghaos_;
}

// repeated int32 top_nalflag = 18;
inline int smsg_boss_rank::top_nalflag_size() const {
  return top_nalflag_.size();
}
inline void smsg_boss_rank::clear_top_nalflag() {
  set_changed();
  top_nalflag_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_rank::top_nalflag(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_rank.top_nalflag)
  return top_nalflag_.Get(index);
}
inline void smsg_boss_rank::set_top_nalflag(int index, ::google::protobuf::int32 value) {
  set_changed();
  top_nalflag_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_rank.top_nalflag)
}
inline void smsg_boss_rank::add_top_nalflag(::google::protobuf::int32 value) {
  set_changed();
  top_nalflag_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_rank.top_nalflag)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_rank::top_nalflag() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_rank.top_nalflag)
  return top_nalflag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_rank::mutable_top_nalflag() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_rank.top_nalflag)
  return &top_nalflag_;
}

// -------------------------------------------------------------------

// smsg_boss_fight_end

// int32 result = 1;
inline void smsg_boss_fight_end::clear_result() {
  set_changed();
  result_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_fight_end::result() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_fight_end.result)
  return result_;
}
inline void smsg_boss_fight_end::set_result(::google::protobuf::int32 value) {
  set_changed();
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_fight_end.result)
}

// bytes text = 2;
inline void smsg_boss_fight_end::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_boss_fight_end::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_fight_end.text)
  return text_.GetNoArena();
}
inline void smsg_boss_fight_end::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_fight_end.text)
}
#if LANG_CXX11
inline void smsg_boss_fight_end::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_boss_fight_end.text)
}
#endif
inline void smsg_boss_fight_end::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_boss_fight_end.text)
}
inline void smsg_boss_fight_end::set_text(const void* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_boss_fight_end.text)
}
inline ::std::string* smsg_boss_fight_end::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_boss_fight_end.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_boss_fight_end::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_boss_fight_end.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_boss_fight_end::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_boss_fight_end.text)
}

// int64 hit = 3;
inline void smsg_boss_fight_end::clear_hit() {
  set_changed();
  hit_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 smsg_boss_fight_end::hit() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_fight_end.hit)
  return hit_;
}
inline void smsg_boss_fight_end::set_hit(::google::protobuf::int64 value) {
  set_changed();
  
  hit_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_fight_end.hit)
}

// int32 btop_rank = 4;
inline void smsg_boss_fight_end::clear_btop_rank() {
  set_changed();
  btop_rank_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_fight_end::btop_rank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_fight_end.btop_rank)
  return btop_rank_;
}
inline void smsg_boss_fight_end::set_btop_rank(::google::protobuf::int32 value) {
  set_changed();
  
  btop_rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_fight_end.btop_rank)
}

// int32 bmax_rank = 5;
inline void smsg_boss_fight_end::clear_bmax_rank() {
  set_changed();
  bmax_rank_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_fight_end::bmax_rank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_fight_end.bmax_rank)
  return bmax_rank_;
}
inline void smsg_boss_fight_end::set_bmax_rank(::google::protobuf::int32 value) {
  set_changed();
  
  bmax_rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_fight_end.bmax_rank)
}

// int32 atop_rank = 6;
inline void smsg_boss_fight_end::clear_atop_rank() {
  set_changed();
  atop_rank_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_fight_end::atop_rank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_fight_end.atop_rank)
  return atop_rank_;
}
inline void smsg_boss_fight_end::set_atop_rank(::google::protobuf::int32 value) {
  set_changed();
  
  atop_rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_fight_end.atop_rank)
}

// int32 amax_rank = 7;
inline void smsg_boss_fight_end::clear_amax_rank() {
  set_changed();
  amax_rank_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_fight_end::amax_rank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_fight_end.amax_rank)
  return amax_rank_;
}
inline void smsg_boss_fight_end::set_amax_rank(::google::protobuf::int32 value) {
  set_changed();
  
  amax_rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_fight_end.amax_rank)
}

// int32 medal = 8;
inline void smsg_boss_fight_end::clear_medal() {
  set_changed();
  medal_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_fight_end::medal() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_fight_end.medal)
  return medal_;
}
inline void smsg_boss_fight_end::set_medal(::google::protobuf::int32 value) {
  set_changed();
  
  medal_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_fight_end.medal)
}

// int32 hit_medal = 9;
inline void smsg_boss_fight_end::clear_hit_medal() {
  set_changed();
  hit_medal_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_fight_end::hit_medal() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_fight_end.hit_medal)
  return hit_medal_;
}
inline void smsg_boss_fight_end::set_hit_medal(::google::protobuf::int32 value) {
  set_changed();
  
  hit_medal_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_fight_end.hit_medal)
}

// int32 baoji = 10;
inline void smsg_boss_fight_end::clear_baoji() {
  set_changed();
  baoji_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_fight_end::baoji() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_fight_end.baoji)
  return baoji_;
}
inline void smsg_boss_fight_end::set_baoji(::google::protobuf::int32 value) {
  set_changed();
  
  baoji_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_fight_end.baoji)
}

// -------------------------------------------------------------------

// smsg_boss_active_look

// repeated int32 ids = 1;
inline int smsg_boss_active_look::ids_size() const {
  return ids_.size();
}
inline void smsg_boss_active_look::clear_ids() {
  set_changed();
  ids_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_active_look::ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_active_look.ids)
  return ids_.Get(index);
}
inline void smsg_boss_active_look::set_ids(int index, ::google::protobuf::int32 value) {
  set_changed();
  ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_active_look.ids)
}
inline void smsg_boss_active_look::add_ids(::google::protobuf::int32 value) {
  set_changed();
  ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_active_look.ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_active_look::ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_active_look.ids)
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_active_look::mutable_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_active_look.ids)
  return &ids_;
}

// repeated int64 nums = 2;
inline int smsg_boss_active_look::nums_size() const {
  return nums_.size();
}
inline void smsg_boss_active_look::clear_nums() {
  set_changed();
  nums_.Clear();
}
inline ::google::protobuf::int64 smsg_boss_active_look::nums(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_active_look.nums)
  return nums_.Get(index);
}
inline void smsg_boss_active_look::set_nums(int index, ::google::protobuf::int64 value) {
  set_changed();
  nums_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_active_look.nums)
}
inline void smsg_boss_active_look::add_nums(::google::protobuf::int64 value) {
  set_changed();
  nums_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_active_look.nums)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
smsg_boss_active_look::nums() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_active_look.nums)
  return nums_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
smsg_boss_active_look::mutable_nums() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_active_look.nums)
  return &nums_;
}

// repeated int32 rewards = 3;
inline int smsg_boss_active_look::rewards_size() const {
  return rewards_.size();
}
inline void smsg_boss_active_look::clear_rewards() {
  set_changed();
  rewards_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_active_look::rewards(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_active_look.rewards)
  return rewards_.Get(index);
}
inline void smsg_boss_active_look::set_rewards(int index, ::google::protobuf::int32 value) {
  set_changed();
  rewards_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_active_look.rewards)
}
inline void smsg_boss_active_look::add_rewards(::google::protobuf::int32 value) {
  set_changed();
  rewards_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_active_look.rewards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_active_look::rewards() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_active_look.rewards)
  return rewards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_active_look::mutable_rewards() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_active_look.rewards)
  return &rewards_;
}

// int32 level = 4;
inline void smsg_boss_active_look::clear_level() {
  set_changed();
  level_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_active_look::level() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_active_look.level)
  return level_;
}
inline void smsg_boss_active_look::set_level(::google::protobuf::int32 value) {
  set_changed();
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_active_look.level)
}

// -------------------------------------------------------------------

// cmsg_boss_saodang

// .protocol.game.msg_common comm = 1;
inline bool cmsg_boss_saodang::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_boss_saodang::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_boss_saodang::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_boss_saodang::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_boss_saodang.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_boss_saodang::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_boss_saodang.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_boss_saodang::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_boss_saodang.comm)
  return comm_;
}
inline void cmsg_boss_saodang::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_boss_saodang.comm)
}

// int32 num = 2;
inline void cmsg_boss_saodang::clear_num() {
  set_changed();
  num_ = 0;
}
inline ::google::protobuf::int32 cmsg_boss_saodang::num() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_boss_saodang.num)
  return num_;
}
inline void cmsg_boss_saodang::set_num(::google::protobuf::int32 value) {
  set_changed();
  
  num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_boss_saodang.num)
}

// bool use_item = 3;
inline void cmsg_boss_saodang::clear_use_item() {
  set_changed();
  use_item_ = false;
}
inline bool cmsg_boss_saodang::use_item() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_boss_saodang.use_item)
  return use_item_;
}
inline void cmsg_boss_saodang::set_use_item(bool value) {
  set_changed();
  
  use_item_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_boss_saodang.use_item)
}

// -------------------------------------------------------------------

// smsg_boss_saodang

// repeated int32 level = 1;
inline int smsg_boss_saodang::level_size() const {
  return level_.size();
}
inline void smsg_boss_saodang::clear_level() {
  set_changed();
  level_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_saodang::level(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_saodang.level)
  return level_.Get(index);
}
inline void smsg_boss_saodang::set_level(int index, ::google::protobuf::int32 value) {
  set_changed();
  level_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_saodang.level)
}
inline void smsg_boss_saodang::add_level(::google::protobuf::int32 value) {
  set_changed();
  level_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_saodang.level)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_saodang::level() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_saodang.level)
  return level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_saodang::mutable_level() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_saodang.level)
  return &level_;
}

// repeated int64 hit = 2;
inline int smsg_boss_saodang::hit_size() const {
  return hit_.size();
}
inline void smsg_boss_saodang::clear_hit() {
  set_changed();
  hit_.Clear();
}
inline ::google::protobuf::int64 smsg_boss_saodang::hit(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_saodang.hit)
  return hit_.Get(index);
}
inline void smsg_boss_saodang::set_hit(int index, ::google::protobuf::int64 value) {
  set_changed();
  hit_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_saodang.hit)
}
inline void smsg_boss_saodang::add_hit(::google::protobuf::int64 value) {
  set_changed();
  hit_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_saodang.hit)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
smsg_boss_saodang::hit() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_saodang.hit)
  return hit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
smsg_boss_saodang::mutable_hit() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_saodang.hit)
  return &hit_;
}

// repeated int32 medal = 3;
inline int smsg_boss_saodang::medal_size() const {
  return medal_.size();
}
inline void smsg_boss_saodang::clear_medal() {
  set_changed();
  medal_.Clear();
}
inline ::google::protobuf::int32 smsg_boss_saodang::medal(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_saodang.medal)
  return medal_.Get(index);
}
inline void smsg_boss_saodang::set_medal(int index, ::google::protobuf::int32 value) {
  set_changed();
  medal_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_saodang.medal)
}
inline void smsg_boss_saodang::add_medal(::google::protobuf::int32 value) {
  set_changed();
  medal_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_saodang.medal)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_boss_saodang::medal() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_saodang.medal)
  return medal_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_boss_saodang::mutable_medal() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_saodang.medal)
  return &medal_;
}

// repeated bool use_item = 4;
inline int smsg_boss_saodang::use_item_size() const {
  return use_item_.size();
}
inline void smsg_boss_saodang::clear_use_item() {
  set_changed();
  use_item_.Clear();
}
inline bool smsg_boss_saodang::use_item(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_saodang.use_item)
  return use_item_.Get(index);
}
inline void smsg_boss_saodang::set_use_item(int index, bool value) {
  set_changed();
  use_item_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_saodang.use_item)
}
inline void smsg_boss_saodang::add_use_item(bool value) {
  set_changed();
  use_item_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_boss_saodang.use_item)
}
inline const ::google::protobuf::RepeatedField< bool >&
smsg_boss_saodang::use_item() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_boss_saodang.use_item)
  return use_item_;
}
inline ::google::protobuf::RepeatedField< bool >*
smsg_boss_saodang::mutable_use_item() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_boss_saodang.use_item)
  return &use_item_;
}

// int32 btop_rank = 5;
inline void smsg_boss_saodang::clear_btop_rank() {
  set_changed();
  btop_rank_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_saodang::btop_rank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_saodang.btop_rank)
  return btop_rank_;
}
inline void smsg_boss_saodang::set_btop_rank(::google::protobuf::int32 value) {
  set_changed();
  
  btop_rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_saodang.btop_rank)
}

// int32 bmax_rank = 6;
inline void smsg_boss_saodang::clear_bmax_rank() {
  set_changed();
  bmax_rank_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_saodang::bmax_rank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_saodang.bmax_rank)
  return bmax_rank_;
}
inline void smsg_boss_saodang::set_bmax_rank(::google::protobuf::int32 value) {
  set_changed();
  
  bmax_rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_saodang.bmax_rank)
}

// int32 atop_rank = 7;
inline void smsg_boss_saodang::clear_atop_rank() {
  set_changed();
  atop_rank_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_saodang::atop_rank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_saodang.atop_rank)
  return atop_rank_;
}
inline void smsg_boss_saodang::set_atop_rank(::google::protobuf::int32 value) {
  set_changed();
  
  atop_rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_saodang.atop_rank)
}

// int32 amax_rank = 8;
inline void smsg_boss_saodang::clear_amax_rank() {
  set_changed();
  amax_rank_ = 0;
}
inline ::google::protobuf::int32 smsg_boss_saodang::amax_rank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_boss_saodang.amax_rank)
  return amax_rank_;
}
inline void smsg_boss_saodang::set_amax_rank(::google::protobuf::int32 value) {
  set_changed();
  
  amax_rank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_boss_saodang.amax_rank)
}

// -------------------------------------------------------------------

// cmsg_chat_ex

// .protocol.game.msg_common_ex comm = 1;
inline bool cmsg_chat_ex::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_chat_ex::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common_ex& cmsg_chat_ex::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common_ex& cmsg_chat_ex::comm() const {
  const ::protocol::game::msg_common_ex* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_chat_ex.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common_ex*>(
      &::protocol::game::_msg_common_ex_default_instance_);
}
inline ::protocol::game::msg_common_ex* cmsg_chat_ex::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_chat_ex.comm)
  
  ::protocol::game::msg_common_ex* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common_ex* cmsg_chat_ex::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common_ex>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_chat_ex.comm)
  return comm_;
}
inline void cmsg_chat_ex::set_allocated_comm(::protocol::game::msg_common_ex* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_chat_ex.comm)
}

// int32 type = 2;
inline void cmsg_chat_ex::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 cmsg_chat_ex::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_chat_ex.type)
  return type_;
}
inline void cmsg_chat_ex::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_chat_ex.type)
}

// string text = 3;
inline void cmsg_chat_ex::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_chat_ex::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_chat_ex.text)
  return text_.GetNoArena();
}
inline void cmsg_chat_ex::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_chat_ex.text)
}
#if LANG_CXX11
inline void cmsg_chat_ex::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_chat_ex.text)
}
#endif
inline void cmsg_chat_ex::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_chat_ex.text)
}
inline void cmsg_chat_ex::set_text(const char* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_chat_ex.text)
}
inline ::std::string* cmsg_chat_ex::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_chat_ex.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_chat_ex::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_chat_ex.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_chat_ex::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_chat_ex.text)
}

// string color = 4;
inline void cmsg_chat_ex::clear_color() {
  set_changed();
  color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_chat_ex::color() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_chat_ex.color)
  return color_.GetNoArena();
}
inline void cmsg_chat_ex::set_color(const ::std::string& value) {
  set_changed();
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_chat_ex.color)
}
#if LANG_CXX11
inline void cmsg_chat_ex::set_color(::std::string&& value) {
  set_changed();
  
  color_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_chat_ex.color)
}
#endif
inline void cmsg_chat_ex::set_color(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_chat_ex.color)
}
inline void cmsg_chat_ex::set_color(const char* value, size_t size) {
  set_changed();
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_chat_ex.color)
}
inline ::std::string* cmsg_chat_ex::mutable_color() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_chat_ex.color)
  return color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_chat_ex::release_color() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_chat_ex.color)
  
  return color_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_chat_ex::set_allocated_color(::std::string* color) {
  set_changed();
  if (color != NULL) {
    
  } else {
    
  }
  color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_chat_ex.color)
}

// string target_name = 5;
inline void cmsg_chat_ex::clear_target_name() {
  set_changed();
  target_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_chat_ex::target_name() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_chat_ex.target_name)
  return target_name_.GetNoArena();
}
inline void cmsg_chat_ex::set_target_name(const ::std::string& value) {
  set_changed();
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_chat_ex.target_name)
}
#if LANG_CXX11
inline void cmsg_chat_ex::set_target_name(::std::string&& value) {
  set_changed();
  
  target_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_chat_ex.target_name)
}
#endif
inline void cmsg_chat_ex::set_target_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_chat_ex.target_name)
}
inline void cmsg_chat_ex::set_target_name(const char* value, size_t size) {
  set_changed();
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_chat_ex.target_name)
}
inline ::std::string* cmsg_chat_ex::mutable_target_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_chat_ex.target_name)
  return target_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_chat_ex::release_target_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_chat_ex.target_name)
  
  return target_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_chat_ex::set_allocated_target_name(::std::string* target_name) {
  set_changed();
  if (target_name != NULL) {
    
  } else {
    
  }
  target_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_chat_ex.target_name)
}

// -------------------------------------------------------------------

// smsg_chat

// uint64 player_guid = 1;
inline void smsg_chat::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_chat::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chat.player_guid)
  return player_guid_;
}
inline void smsg_chat::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chat.player_guid)
}

// string player_name = 2;
inline void smsg_chat::clear_player_name() {
  set_changed();
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_chat::player_name() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chat.player_name)
  return player_name_.GetNoArena();
}
inline void smsg_chat::set_player_name(const ::std::string& value) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chat.player_name)
}
#if LANG_CXX11
inline void smsg_chat::set_player_name(::std::string&& value) {
  set_changed();
  
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_chat.player_name)
}
#endif
inline void smsg_chat::set_player_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_chat.player_name)
}
inline void smsg_chat::set_player_name(const char* value, size_t size) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_chat.player_name)
}
inline ::std::string* smsg_chat::mutable_player_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_chat.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_chat::release_player_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_chat.player_name)
  
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_chat::set_allocated_player_name(::std::string* player_name) {
  set_changed();
  if (player_name != NULL) {
    
  } else {
    
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_chat.player_name)
}

// uint32 player_template = 3;
inline void smsg_chat::clear_player_template() {
  set_changed();
  player_template_ = 0u;
}
inline ::google::protobuf::uint32 smsg_chat::player_template() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chat.player_template)
  return player_template_;
}
inline void smsg_chat::set_player_template(::google::protobuf::uint32 value) {
  set_changed();
  
  player_template_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chat.player_template)
}

// int32 vip = 4;
inline void smsg_chat::clear_vip() {
  set_changed();
  vip_ = 0;
}
inline ::google::protobuf::int32 smsg_chat::vip() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chat.vip)
  return vip_;
}
inline void smsg_chat::set_vip(::google::protobuf::int32 value) {
  set_changed();
  
  vip_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chat.vip)
}

// int32 level = 5;
inline void smsg_chat::clear_level() {
  set_changed();
  level_ = 0;
}
inline ::google::protobuf::int32 smsg_chat::level() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chat.level)
  return level_;
}
inline void smsg_chat::set_level(::google::protobuf::int32 value) {
  set_changed();
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chat.level)
}

// int32 type = 6;
inline void smsg_chat::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 smsg_chat::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chat.type)
  return type_;
}
inline void smsg_chat::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chat.type)
}

// string text = 7;
inline void smsg_chat::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_chat::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chat.text)
  return text_.GetNoArena();
}
inline void smsg_chat::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chat.text)
}
#if LANG_CXX11
inline void smsg_chat::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_chat.text)
}
#endif
inline void smsg_chat::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_chat.text)
}
inline void smsg_chat::set_text(const char* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_chat.text)
}
inline ::std::string* smsg_chat::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_chat.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_chat::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_chat.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_chat::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_chat.text)
}

// uint64 time = 8;
inline void smsg_chat::clear_time() {
  set_changed();
  time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_chat::time() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chat.time)
  return time_;
}
inline void smsg_chat::set_time(::google::protobuf::uint64 value) {
  set_changed();
  
  time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chat.time)
}

// string color = 9;
inline void smsg_chat::clear_color() {
  set_changed();
  color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_chat::color() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chat.color)
  return color_.GetNoArena();
}
inline void smsg_chat::set_color(const ::std::string& value) {
  set_changed();
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chat.color)
}
#if LANG_CXX11
inline void smsg_chat::set_color(::std::string&& value) {
  set_changed();
  
  color_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_chat.color)
}
#endif
inline void smsg_chat::set_color(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_chat.color)
}
inline void smsg_chat::set_color(const char* value, size_t size) {
  set_changed();
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_chat.color)
}
inline ::std::string* smsg_chat::mutable_color() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_chat.color)
  return color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_chat::release_color() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_chat.color)
  
  return color_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_chat::set_allocated_color(::std::string* color) {
  set_changed();
  if (color != NULL) {
    
  } else {
    
  }
  color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_chat.color)
}

// int32 is_danmu = 10;
inline void smsg_chat::clear_is_danmu() {
  set_changed();
  is_danmu_ = 0;
}
inline ::google::protobuf::int32 smsg_chat::is_danmu() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chat.is_danmu)
  return is_danmu_;
}
inline void smsg_chat::set_is_danmu(::google::protobuf::int32 value) {
  set_changed();
  
  is_danmu_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chat.is_danmu)
}

// uint64 target_guid = 11;
inline void smsg_chat::clear_target_guid() {
  set_changed();
  target_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_chat::target_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chat.target_guid)
  return target_guid_;
}
inline void smsg_chat::set_target_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  target_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chat.target_guid)
}

// string target_name = 12;
inline void smsg_chat::clear_target_name() {
  set_changed();
  target_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_chat::target_name() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chat.target_name)
  return target_name_.GetNoArena();
}
inline void smsg_chat::set_target_name(const ::std::string& value) {
  set_changed();
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chat.target_name)
}
#if LANG_CXX11
inline void smsg_chat::set_target_name(::std::string&& value) {
  set_changed();
  
  target_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_chat.target_name)
}
#endif
inline void smsg_chat::set_target_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_chat.target_name)
}
inline void smsg_chat::set_target_name(const char* value, size_t size) {
  set_changed();
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_chat.target_name)
}
inline ::std::string* smsg_chat::mutable_target_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_chat.target_name)
  return target_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_chat::release_target_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_chat.target_name)
  
  return target_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_chat::set_allocated_target_name(::std::string* target_name) {
  set_changed();
  if (target_name != NULL) {
    
  } else {
    
  }
  target_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_chat.target_name)
}

// int32 chenghao = 13;
inline void smsg_chat::clear_chenghao() {
  set_changed();
  chenghao_ = 0;
}
inline ::google::protobuf::int32 smsg_chat::chenghao() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chat.chenghao)
  return chenghao_;
}
inline void smsg_chat::set_chenghao(::google::protobuf::int32 value) {
  set_changed();
  
  chenghao_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chat.chenghao)
}

// int32 nalflag = 14;
inline void smsg_chat::clear_nalflag() {
  set_changed();
  nalflag_ = 0;
}
inline ::google::protobuf::int32 smsg_chat::nalflag() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_chat.nalflag)
  return nalflag_;
}
inline void smsg_chat::set_nalflag(::google::protobuf::int32 value) {
  set_changed();
  
  nalflag_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_chat.nalflag)
}

// -------------------------------------------------------------------

// pmsg_chat

// .protocol.game.smsg_chat msg_chat = 1;
inline bool pmsg_chat::has_msg_chat() const {
  return this != internal_default_instance() && msg_chat_ != NULL;
}
inline void pmsg_chat::clear_msg_chat() {
  if (GetArenaNoVirtual() == NULL && msg_chat_ != NULL) {
    delete msg_chat_;
  }
  msg_chat_ = NULL;
}
inline const ::protocol::game::smsg_chat& pmsg_chat::_internal_msg_chat() const {
  return *msg_chat_;
}
inline const ::protocol::game::smsg_chat& pmsg_chat::msg_chat() const {
  const ::protocol::game::smsg_chat* p = msg_chat_;
  // @@protoc_insertion_point(field_get:protocol.game.pmsg_chat.msg_chat)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::smsg_chat*>(
      &::protocol::game::_smsg_chat_default_instance_);
}
inline ::protocol::game::smsg_chat* pmsg_chat::release_msg_chat() {
  // @@protoc_insertion_point(field_release:protocol.game.pmsg_chat.msg_chat)
  
  ::protocol::game::smsg_chat* temp = msg_chat_;
  msg_chat_ = NULL;
  return temp;
}
inline ::protocol::game::smsg_chat* pmsg_chat::mutable_msg_chat() {
  
  if (msg_chat_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::smsg_chat>(GetArenaNoVirtual());
    msg_chat_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.pmsg_chat.msg_chat)
  return msg_chat_;
}
inline void pmsg_chat::set_allocated_msg_chat(::protocol::game::smsg_chat* msg_chat) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete msg_chat_;
  }
  if (msg_chat) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg_chat = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg_chat, submessage_arena);
    }
    
  } else {
    
  }
  msg_chat_ = msg_chat;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.pmsg_chat.msg_chat)
}

// repeated uint64 player_guids = 2;
inline int pmsg_chat::player_guids_size() const {
  return player_guids_.size();
}
inline void pmsg_chat::clear_player_guids() {
  set_changed();
  player_guids_.Clear();
}
inline ::google::protobuf::uint64 pmsg_chat::player_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.pmsg_chat.player_guids)
  return player_guids_.Get(index);
}
inline void pmsg_chat::set_player_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.pmsg_chat.player_guids)
}
inline void pmsg_chat::add_player_guids(::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.pmsg_chat.player_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
pmsg_chat::player_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.pmsg_chat.player_guids)
  return player_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
pmsg_chat::mutable_player_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.pmsg_chat.player_guids)
  return &player_guids_;
}

// -------------------------------------------------------------------

// smsg_online_reward

// repeated .dhc.equip_t equips = 1;
inline int smsg_online_reward::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_online_reward::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_online_reward.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_online_reward::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_online_reward.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_online_reward::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_online_reward.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_online_reward::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_online_reward.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_online_reward::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_online_reward.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 2;
inline int smsg_online_reward::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_online_reward::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_online_reward.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_online_reward::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_online_reward.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_online_reward::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_online_reward.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_online_reward::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_online_reward.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_online_reward::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_online_reward.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 3;
inline int smsg_online_reward::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_online_reward::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_online_reward.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_online_reward::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_online_reward.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_online_reward::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_online_reward.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_online_reward::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_online_reward.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_online_reward::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_online_reward.roles)
  return roles_;
}

// repeated int32 types = 4;
inline int smsg_online_reward::types_size() const {
  return types_.size();
}
inline void smsg_online_reward::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_online_reward::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_online_reward.types)
  return types_.Get(index);
}
inline void smsg_online_reward::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_online_reward.types)
}
inline void smsg_online_reward::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_online_reward.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_online_reward::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_online_reward.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_online_reward::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_online_reward.types)
  return &types_;
}

// repeated int32 value1s = 5;
inline int smsg_online_reward::value1s_size() const {
  return value1s_.size();
}
inline void smsg_online_reward::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_online_reward::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_online_reward.value1s)
  return value1s_.Get(index);
}
inline void smsg_online_reward::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_online_reward.value1s)
}
inline void smsg_online_reward::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_online_reward.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_online_reward::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_online_reward.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_online_reward::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_online_reward.value1s)
  return &value1s_;
}

// repeated int32 value2s = 6;
inline int smsg_online_reward::value2s_size() const {
  return value2s_.size();
}
inline void smsg_online_reward::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_online_reward::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_online_reward.value2s)
  return value2s_.Get(index);
}
inline void smsg_online_reward::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_online_reward.value2s)
}
inline void smsg_online_reward::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_online_reward.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_online_reward::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_online_reward.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_online_reward::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_online_reward.value2s)
  return &value2s_;
}

// repeated int32 value3s = 7;
inline int smsg_online_reward::value3s_size() const {
  return value3s_.size();
}
inline void smsg_online_reward::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_online_reward::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_online_reward.value3s)
  return value3s_.Get(index);
}
inline void smsg_online_reward::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_online_reward.value3s)
}
inline void smsg_online_reward::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_online_reward.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_online_reward::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_online_reward.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_online_reward::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_online_reward.value3s)
  return &value3s_;
}

// -------------------------------------------------------------------

// smsg_daily_sign

// repeated .dhc.equip_t equips = 1;
inline int smsg_daily_sign::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_daily_sign::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_daily_sign.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_daily_sign::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_daily_sign.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_daily_sign::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_daily_sign.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_daily_sign::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_daily_sign.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_daily_sign::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_daily_sign.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 2;
inline int smsg_daily_sign::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_daily_sign::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_daily_sign.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_daily_sign::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_daily_sign.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_daily_sign::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_daily_sign.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_daily_sign::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_daily_sign.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_daily_sign::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_daily_sign.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 3;
inline int smsg_daily_sign::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_daily_sign::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_daily_sign.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_daily_sign::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_daily_sign.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_daily_sign::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_daily_sign.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_daily_sign::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_daily_sign.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_daily_sign::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_daily_sign.roles)
  return roles_;
}

// repeated int32 types = 4;
inline int smsg_daily_sign::types_size() const {
  return types_.size();
}
inline void smsg_daily_sign::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_daily_sign::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_daily_sign.types)
  return types_.Get(index);
}
inline void smsg_daily_sign::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_daily_sign.types)
}
inline void smsg_daily_sign::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_daily_sign.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_daily_sign::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_daily_sign.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_daily_sign::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_daily_sign.types)
  return &types_;
}

// repeated int32 value1s = 5;
inline int smsg_daily_sign::value1s_size() const {
  return value1s_.size();
}
inline void smsg_daily_sign::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_daily_sign::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_daily_sign.value1s)
  return value1s_.Get(index);
}
inline void smsg_daily_sign::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_daily_sign.value1s)
}
inline void smsg_daily_sign::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_daily_sign.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_daily_sign::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_daily_sign.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_daily_sign::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_daily_sign.value1s)
  return &value1s_;
}

// repeated int32 value2s = 6;
inline int smsg_daily_sign::value2s_size() const {
  return value2s_.size();
}
inline void smsg_daily_sign::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_daily_sign::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_daily_sign.value2s)
  return value2s_.Get(index);
}
inline void smsg_daily_sign::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_daily_sign.value2s)
}
inline void smsg_daily_sign::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_daily_sign.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_daily_sign::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_daily_sign.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_daily_sign::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_daily_sign.value2s)
  return &value2s_;
}

// repeated int32 value3s = 7;
inline int smsg_daily_sign::value3s_size() const {
  return value3s_.size();
}
inline void smsg_daily_sign::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_daily_sign::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_daily_sign.value3s)
  return value3s_.Get(index);
}
inline void smsg_daily_sign::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_daily_sign.value3s)
}
inline void smsg_daily_sign::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_daily_sign.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_daily_sign::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_daily_sign.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_daily_sign::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_daily_sign.value3s)
  return &value3s_;
}

// -------------------------------------------------------------------

// smsg_hbb_look

// repeated uint32 class_ids = 1;
inline int smsg_hbb_look::class_ids_size() const {
  return class_ids_.size();
}
inline void smsg_hbb_look::clear_class_ids() {
  set_changed();
  class_ids_.Clear();
}
inline ::google::protobuf::uint32 smsg_hbb_look::class_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_hbb_look.class_ids)
  return class_ids_.Get(index);
}
inline void smsg_hbb_look::set_class_ids(int index, ::google::protobuf::uint32 value) {
  set_changed();
  class_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_hbb_look.class_ids)
}
inline void smsg_hbb_look::add_class_ids(::google::protobuf::uint32 value) {
  set_changed();
  class_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_hbb_look.class_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
smsg_hbb_look::class_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_hbb_look.class_ids)
  return class_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
smsg_hbb_look::mutable_class_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_hbb_look.class_ids)
  return &class_ids_;
}

// -------------------------------------------------------------------

// smsg_hbb_fight_end

// int32 result = 1;
inline void smsg_hbb_fight_end::clear_result() {
  set_changed();
  result_ = 0;
}
inline ::google::protobuf::int32 smsg_hbb_fight_end::result() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_hbb_fight_end.result)
  return result_;
}
inline void smsg_hbb_fight_end::set_result(::google::protobuf::int32 value) {
  set_changed();
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_hbb_fight_end.result)
}

// bytes text = 2;
inline void smsg_hbb_fight_end::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_hbb_fight_end::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_hbb_fight_end.text)
  return text_.GetNoArena();
}
inline void smsg_hbb_fight_end::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_hbb_fight_end.text)
}
#if LANG_CXX11
inline void smsg_hbb_fight_end::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_hbb_fight_end.text)
}
#endif
inline void smsg_hbb_fight_end::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_hbb_fight_end.text)
}
inline void smsg_hbb_fight_end::set_text(const void* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_hbb_fight_end.text)
}
inline ::std::string* smsg_hbb_fight_end::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_hbb_fight_end.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_hbb_fight_end::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_hbb_fight_end.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_hbb_fight_end::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_hbb_fight_end.text)
}

// repeated int32 types = 11;
inline int smsg_hbb_fight_end::types_size() const {
  return types_.size();
}
inline void smsg_hbb_fight_end::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_hbb_fight_end::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_hbb_fight_end.types)
  return types_.Get(index);
}
inline void smsg_hbb_fight_end::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_hbb_fight_end.types)
}
inline void smsg_hbb_fight_end::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_hbb_fight_end.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_hbb_fight_end::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_hbb_fight_end.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_hbb_fight_end::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_hbb_fight_end.types)
  return &types_;
}

// repeated int32 value1s = 12;
inline int smsg_hbb_fight_end::value1s_size() const {
  return value1s_.size();
}
inline void smsg_hbb_fight_end::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_hbb_fight_end::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_hbb_fight_end.value1s)
  return value1s_.Get(index);
}
inline void smsg_hbb_fight_end::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_hbb_fight_end.value1s)
}
inline void smsg_hbb_fight_end::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_hbb_fight_end.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_hbb_fight_end::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_hbb_fight_end.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_hbb_fight_end::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_hbb_fight_end.value1s)
  return &value1s_;
}

// repeated int32 value2s = 13;
inline int smsg_hbb_fight_end::value2s_size() const {
  return value2s_.size();
}
inline void smsg_hbb_fight_end::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_hbb_fight_end::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_hbb_fight_end.value2s)
  return value2s_.Get(index);
}
inline void smsg_hbb_fight_end::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_hbb_fight_end.value2s)
}
inline void smsg_hbb_fight_end::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_hbb_fight_end.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_hbb_fight_end::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_hbb_fight_end.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_hbb_fight_end::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_hbb_fight_end.value2s)
  return &value2s_;
}

// repeated int32 value3s = 14;
inline int smsg_hbb_fight_end::value3s_size() const {
  return value3s_.size();
}
inline void smsg_hbb_fight_end::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_hbb_fight_end::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_hbb_fight_end.value3s)
  return value3s_.Get(index);
}
inline void smsg_hbb_fight_end::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_hbb_fight_end.value3s)
}
inline void smsg_hbb_fight_end::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_hbb_fight_end.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_hbb_fight_end::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_hbb_fight_end.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_hbb_fight_end::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_hbb_fight_end.value3s)
  return &value3s_;
}

// repeated int32 class_ids = 15;
inline int smsg_hbb_fight_end::class_ids_size() const {
  return class_ids_.size();
}
inline void smsg_hbb_fight_end::clear_class_ids() {
  set_changed();
  class_ids_.Clear();
}
inline ::google::protobuf::int32 smsg_hbb_fight_end::class_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_hbb_fight_end.class_ids)
  return class_ids_.Get(index);
}
inline void smsg_hbb_fight_end::set_class_ids(int index, ::google::protobuf::int32 value) {
  set_changed();
  class_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_hbb_fight_end.class_ids)
}
inline void smsg_hbb_fight_end::add_class_ids(::google::protobuf::int32 value) {
  set_changed();
  class_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_hbb_fight_end.class_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_hbb_fight_end::class_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_hbb_fight_end.class_ids)
  return class_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_hbb_fight_end::mutable_class_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_hbb_fight_end.class_ids)
  return &class_ids_;
}

// repeated .dhc.equip_t equips = 16;
inline int smsg_hbb_fight_end::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_hbb_fight_end::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_hbb_fight_end.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_hbb_fight_end::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_hbb_fight_end.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_hbb_fight_end::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_hbb_fight_end.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_hbb_fight_end::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_hbb_fight_end.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_hbb_fight_end::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_hbb_fight_end.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 17;
inline int smsg_hbb_fight_end::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_hbb_fight_end::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_hbb_fight_end.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_hbb_fight_end::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_hbb_fight_end.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_hbb_fight_end::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_hbb_fight_end.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_hbb_fight_end::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_hbb_fight_end.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_hbb_fight_end::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_hbb_fight_end.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 18;
inline int smsg_hbb_fight_end::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_hbb_fight_end::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_hbb_fight_end.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_hbb_fight_end::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_hbb_fight_end.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_hbb_fight_end::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_hbb_fight_end.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_hbb_fight_end::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_hbb_fight_end.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_hbb_fight_end::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_hbb_fight_end.roles)
  return roles_;
}

// -------------------------------------------------------------------

// cmsg_ttt_fight_end

// .protocol.game.msg_common comm = 1;
inline bool cmsg_ttt_fight_end::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_ttt_fight_end::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_ttt_fight_end::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_ttt_fight_end::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_ttt_fight_end.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_ttt_fight_end::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_ttt_fight_end.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_ttt_fight_end::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_ttt_fight_end.comm)
  return comm_;
}
inline void cmsg_ttt_fight_end::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_ttt_fight_end.comm)
}

// int32 nd = 2;
inline void cmsg_ttt_fight_end::clear_nd() {
  set_changed();
  nd_ = 0;
}
inline ::google::protobuf::int32 cmsg_ttt_fight_end::nd() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_ttt_fight_end.nd)
  return nd_;
}
inline void cmsg_ttt_fight_end::set_nd(::google::protobuf::int32 value) {
  set_changed();
  
  nd_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_ttt_fight_end.nd)
}

// -------------------------------------------------------------------

// smsg_ttt_fight_end

// int32 result = 1;
inline void smsg_ttt_fight_end::clear_result() {
  set_changed();
  result_ = 0;
}
inline ::google::protobuf::int32 smsg_ttt_fight_end::result() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_fight_end.result)
  return result_;
}
inline void smsg_ttt_fight_end::set_result(::google::protobuf::int32 value) {
  set_changed();
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ttt_fight_end.result)
}

// bytes text = 2;
inline void smsg_ttt_fight_end::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_ttt_fight_end::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_fight_end.text)
  return text_.GetNoArena();
}
inline void smsg_ttt_fight_end::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ttt_fight_end.text)
}
#if LANG_CXX11
inline void smsg_ttt_fight_end::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_ttt_fight_end.text)
}
#endif
inline void smsg_ttt_fight_end::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_ttt_fight_end.text)
}
inline void smsg_ttt_fight_end::set_text(const void* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_ttt_fight_end.text)
}
inline ::std::string* smsg_ttt_fight_end::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_ttt_fight_end.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_ttt_fight_end::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_ttt_fight_end.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_ttt_fight_end::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_ttt_fight_end.text)
}

// int32 index = 3;
inline void smsg_ttt_fight_end::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 smsg_ttt_fight_end::index() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_fight_end.index)
  return index_;
}
inline void smsg_ttt_fight_end::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ttt_fight_end.index)
}

// int32 nd = 4;
inline void smsg_ttt_fight_end::clear_nd() {
  set_changed();
  nd_ = 0;
}
inline ::google::protobuf::int32 smsg_ttt_fight_end::nd() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_fight_end.nd)
  return nd_;
}
inline void smsg_ttt_fight_end::set_nd(::google::protobuf::int32 value) {
  set_changed();
  
  nd_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ttt_fight_end.nd)
}

// int32 mibao = 5;
inline void smsg_ttt_fight_end::clear_mibao() {
  set_changed();
  mibao_ = 0;
}
inline ::google::protobuf::int32 smsg_ttt_fight_end::mibao() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_fight_end.mibao)
  return mibao_;
}
inline void smsg_ttt_fight_end::set_mibao(::google::protobuf::int32 value) {
  set_changed();
  
  mibao_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ttt_fight_end.mibao)
}

// int32 baoji1 = 6;
inline void smsg_ttt_fight_end::clear_baoji1() {
  set_changed();
  baoji1_ = 0;
}
inline ::google::protobuf::int32 smsg_ttt_fight_end::baoji1() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_fight_end.baoji1)
  return baoji1_;
}
inline void smsg_ttt_fight_end::set_baoji1(::google::protobuf::int32 value) {
  set_changed();
  
  baoji1_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ttt_fight_end.baoji1)
}

// int32 baoji2 = 7;
inline void smsg_ttt_fight_end::clear_baoji2() {
  set_changed();
  baoji2_ = 0;
}
inline ::google::protobuf::int32 smsg_ttt_fight_end::baoji2() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_fight_end.baoji2)
  return baoji2_;
}
inline void smsg_ttt_fight_end::set_baoji2(::google::protobuf::int32 value) {
  set_changed();
  
  baoji2_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ttt_fight_end.baoji2)
}

// repeated int32 types = 8;
inline int smsg_ttt_fight_end::types_size() const {
  return types_.size();
}
inline void smsg_ttt_fight_end::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_ttt_fight_end::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_fight_end.types)
  return types_.Get(index);
}
inline void smsg_ttt_fight_end::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ttt_fight_end.types)
}
inline void smsg_ttt_fight_end::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ttt_fight_end.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_ttt_fight_end::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ttt_fight_end.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_ttt_fight_end::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ttt_fight_end.types)
  return &types_;
}

// repeated int32 value1s = 9;
inline int smsg_ttt_fight_end::value1s_size() const {
  return value1s_.size();
}
inline void smsg_ttt_fight_end::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_ttt_fight_end::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_fight_end.value1s)
  return value1s_.Get(index);
}
inline void smsg_ttt_fight_end::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ttt_fight_end.value1s)
}
inline void smsg_ttt_fight_end::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ttt_fight_end.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_ttt_fight_end::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ttt_fight_end.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_ttt_fight_end::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ttt_fight_end.value1s)
  return &value1s_;
}

// repeated int32 value2s = 10;
inline int smsg_ttt_fight_end::value2s_size() const {
  return value2s_.size();
}
inline void smsg_ttt_fight_end::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_ttt_fight_end::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_fight_end.value2s)
  return value2s_.Get(index);
}
inline void smsg_ttt_fight_end::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ttt_fight_end.value2s)
}
inline void smsg_ttt_fight_end::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ttt_fight_end.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_ttt_fight_end::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ttt_fight_end.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_ttt_fight_end::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ttt_fight_end.value2s)
  return &value2s_;
}

// repeated int32 value3s = 11;
inline int smsg_ttt_fight_end::value3s_size() const {
  return value3s_.size();
}
inline void smsg_ttt_fight_end::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_ttt_fight_end::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_fight_end.value3s)
  return value3s_.Get(index);
}
inline void smsg_ttt_fight_end::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ttt_fight_end.value3s)
}
inline void smsg_ttt_fight_end::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ttt_fight_end.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_ttt_fight_end::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ttt_fight_end.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_ttt_fight_end::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ttt_fight_end.value3s)
  return &value3s_;
}

// repeated .dhc.equip_t equips = 12;
inline int smsg_ttt_fight_end::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_ttt_fight_end::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_ttt_fight_end.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_ttt_fight_end::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ttt_fight_end.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_ttt_fight_end::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_fight_end.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_ttt_fight_end::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ttt_fight_end.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_ttt_fight_end::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ttt_fight_end.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 13;
inline int smsg_ttt_fight_end::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_ttt_fight_end::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_ttt_fight_end.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_ttt_fight_end::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ttt_fight_end.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_ttt_fight_end::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_fight_end.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_ttt_fight_end::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ttt_fight_end.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_ttt_fight_end::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ttt_fight_end.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 14;
inline int smsg_ttt_fight_end::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_ttt_fight_end::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_ttt_fight_end.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_ttt_fight_end::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ttt_fight_end.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_ttt_fight_end::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_fight_end.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_ttt_fight_end::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ttt_fight_end.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_ttt_fight_end::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ttt_fight_end.roles)
  return roles_;
}

// -------------------------------------------------------------------

// smsg_ttt_sanxing

// repeated .protocol.game.smsg_ttt_fight_end subs = 1;
inline int smsg_ttt_sanxing::subs_size() const {
  return subs_.size();
}
inline void smsg_ttt_sanxing::clear_subs() {
  subs_.Clear();
}
inline ::protocol::game::smsg_ttt_fight_end* smsg_ttt_sanxing::mutable_subs(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_ttt_sanxing.subs)
  return subs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_ttt_fight_end >*
smsg_ttt_sanxing::mutable_subs() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ttt_sanxing.subs)
  return &subs_;
}
inline const ::protocol::game::smsg_ttt_fight_end& smsg_ttt_sanxing::subs(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_sanxing.subs)
  return subs_.Get(index);
}
inline ::protocol::game::smsg_ttt_fight_end* smsg_ttt_sanxing::add_subs() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ttt_sanxing.subs)
  return subs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_ttt_fight_end >&
smsg_ttt_sanxing::subs() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ttt_sanxing.subs)
  return subs_;
}

// -------------------------------------------------------------------

// smsg_ttt_value_look

// repeated int32 ids = 1;
inline int smsg_ttt_value_look::ids_size() const {
  return ids_.size();
}
inline void smsg_ttt_value_look::clear_ids() {
  set_changed();
  ids_.Clear();
}
inline ::google::protobuf::int32 smsg_ttt_value_look::ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ttt_value_look.ids)
  return ids_.Get(index);
}
inline void smsg_ttt_value_look::set_ids(int index, ::google::protobuf::int32 value) {
  set_changed();
  ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ttt_value_look.ids)
}
inline void smsg_ttt_value_look::add_ids(::google::protobuf::int32 value) {
  set_changed();
  ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ttt_value_look.ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_ttt_value_look::ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ttt_value_look.ids)
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_ttt_value_look::mutable_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ttt_value_look.ids)
  return &ids_;
}

// -------------------------------------------------------------------

// cmsg_ttt_value

// .protocol.game.msg_common comm = 1;
inline bool cmsg_ttt_value::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_ttt_value::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_ttt_value::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_ttt_value::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_ttt_value.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_ttt_value::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_ttt_value.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_ttt_value::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_ttt_value.comm)
  return comm_;
}
inline void cmsg_ttt_value::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_ttt_value.comm)
}

// int32 index = 2;
inline void cmsg_ttt_value::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 cmsg_ttt_value::index() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_ttt_value.index)
  return index_;
}
inline void cmsg_ttt_value::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_ttt_value.index)
}

// -------------------------------------------------------------------

// cmsg_qiyu_fight_end

// .protocol.game.msg_common comm = 1;
inline bool cmsg_qiyu_fight_end::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_qiyu_fight_end::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_qiyu_fight_end::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_qiyu_fight_end::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_qiyu_fight_end.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_qiyu_fight_end::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_qiyu_fight_end.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_qiyu_fight_end::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_qiyu_fight_end.comm)
  return comm_;
}
inline void cmsg_qiyu_fight_end::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_qiyu_fight_end.comm)
}

// int32 index = 2;
inline void cmsg_qiyu_fight_end::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 cmsg_qiyu_fight_end::index() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_qiyu_fight_end.index)
  return index_;
}
inline void cmsg_qiyu_fight_end::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_qiyu_fight_end.index)
}

// -------------------------------------------------------------------

// smsg_qiyu_fight_end

// int32 result = 1;
inline void smsg_qiyu_fight_end::clear_result() {
  set_changed();
  result_ = 0;
}
inline ::google::protobuf::int32 smsg_qiyu_fight_end::result() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_qiyu_fight_end.result)
  return result_;
}
inline void smsg_qiyu_fight_end::set_result(::google::protobuf::int32 value) {
  set_changed();
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_qiyu_fight_end.result)
}

// bytes text = 2;
inline void smsg_qiyu_fight_end::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_qiyu_fight_end::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_qiyu_fight_end.text)
  return text_.GetNoArena();
}
inline void smsg_qiyu_fight_end::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_qiyu_fight_end.text)
}
#if LANG_CXX11
inline void smsg_qiyu_fight_end::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_qiyu_fight_end.text)
}
#endif
inline void smsg_qiyu_fight_end::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_qiyu_fight_end.text)
}
inline void smsg_qiyu_fight_end::set_text(const void* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_qiyu_fight_end.text)
}
inline ::std::string* smsg_qiyu_fight_end::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_qiyu_fight_end.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_qiyu_fight_end::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_qiyu_fight_end.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_qiyu_fight_end::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_qiyu_fight_end.text)
}

// repeated int32 types = 3;
inline int smsg_qiyu_fight_end::types_size() const {
  return types_.size();
}
inline void smsg_qiyu_fight_end::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_qiyu_fight_end::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_qiyu_fight_end.types)
  return types_.Get(index);
}
inline void smsg_qiyu_fight_end::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_qiyu_fight_end.types)
}
inline void smsg_qiyu_fight_end::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_qiyu_fight_end.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_qiyu_fight_end::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_qiyu_fight_end.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_qiyu_fight_end::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_qiyu_fight_end.types)
  return &types_;
}

// repeated int32 value1s = 4;
inline int smsg_qiyu_fight_end::value1s_size() const {
  return value1s_.size();
}
inline void smsg_qiyu_fight_end::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_qiyu_fight_end::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_qiyu_fight_end.value1s)
  return value1s_.Get(index);
}
inline void smsg_qiyu_fight_end::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_qiyu_fight_end.value1s)
}
inline void smsg_qiyu_fight_end::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_qiyu_fight_end.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_qiyu_fight_end::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_qiyu_fight_end.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_qiyu_fight_end::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_qiyu_fight_end.value1s)
  return &value1s_;
}

// repeated int32 value2s = 5;
inline int smsg_qiyu_fight_end::value2s_size() const {
  return value2s_.size();
}
inline void smsg_qiyu_fight_end::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_qiyu_fight_end::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_qiyu_fight_end.value2s)
  return value2s_.Get(index);
}
inline void smsg_qiyu_fight_end::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_qiyu_fight_end.value2s)
}
inline void smsg_qiyu_fight_end::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_qiyu_fight_end.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_qiyu_fight_end::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_qiyu_fight_end.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_qiyu_fight_end::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_qiyu_fight_end.value2s)
  return &value2s_;
}

// repeated int32 value3s = 6;
inline int smsg_qiyu_fight_end::value3s_size() const {
  return value3s_.size();
}
inline void smsg_qiyu_fight_end::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_qiyu_fight_end::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_qiyu_fight_end.value3s)
  return value3s_.Get(index);
}
inline void smsg_qiyu_fight_end::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_qiyu_fight_end.value3s)
}
inline void smsg_qiyu_fight_end::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_qiyu_fight_end.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_qiyu_fight_end::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_qiyu_fight_end.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_qiyu_fight_end::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_qiyu_fight_end.value3s)
  return &value3s_;
}

// repeated .dhc.equip_t equips = 7;
inline int smsg_qiyu_fight_end::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_qiyu_fight_end::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_qiyu_fight_end.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_qiyu_fight_end::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_qiyu_fight_end.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_qiyu_fight_end::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_qiyu_fight_end.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_qiyu_fight_end::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_qiyu_fight_end.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_qiyu_fight_end::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_qiyu_fight_end.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 8;
inline int smsg_qiyu_fight_end::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_qiyu_fight_end::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_qiyu_fight_end.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_qiyu_fight_end::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_qiyu_fight_end.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_qiyu_fight_end::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_qiyu_fight_end.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_qiyu_fight_end::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_qiyu_fight_end.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_qiyu_fight_end::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_qiyu_fight_end.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 9;
inline int smsg_qiyu_fight_end::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_qiyu_fight_end::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_qiyu_fight_end.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_qiyu_fight_end::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_qiyu_fight_end.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_qiyu_fight_end::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_qiyu_fight_end.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_qiyu_fight_end::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_qiyu_fight_end.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_qiyu_fight_end::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_qiyu_fight_end.roles)
  return roles_;
}

// -------------------------------------------------------------------

// smsg_qiyu_check

// repeated int32 qiyu_mission = 1;
inline int smsg_qiyu_check::qiyu_mission_size() const {
  return qiyu_mission_.size();
}
inline void smsg_qiyu_check::clear_qiyu_mission() {
  set_changed();
  qiyu_mission_.Clear();
}
inline ::google::protobuf::int32 smsg_qiyu_check::qiyu_mission(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_qiyu_check.qiyu_mission)
  return qiyu_mission_.Get(index);
}
inline void smsg_qiyu_check::set_qiyu_mission(int index, ::google::protobuf::int32 value) {
  set_changed();
  qiyu_mission_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_qiyu_check.qiyu_mission)
}
inline void smsg_qiyu_check::add_qiyu_mission(::google::protobuf::int32 value) {
  set_changed();
  qiyu_mission_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_qiyu_check.qiyu_mission)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_qiyu_check::qiyu_mission() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_qiyu_check.qiyu_mission)
  return qiyu_mission_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_qiyu_check::mutable_qiyu_mission() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_qiyu_check.qiyu_mission)
  return &qiyu_mission_;
}

// repeated int32 qiyu_hard = 2;
inline int smsg_qiyu_check::qiyu_hard_size() const {
  return qiyu_hard_.size();
}
inline void smsg_qiyu_check::clear_qiyu_hard() {
  set_changed();
  qiyu_hard_.Clear();
}
inline ::google::protobuf::int32 smsg_qiyu_check::qiyu_hard(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_qiyu_check.qiyu_hard)
  return qiyu_hard_.Get(index);
}
inline void smsg_qiyu_check::set_qiyu_hard(int index, ::google::protobuf::int32 value) {
  set_changed();
  qiyu_hard_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_qiyu_check.qiyu_hard)
}
inline void smsg_qiyu_check::add_qiyu_hard(::google::protobuf::int32 value) {
  set_changed();
  qiyu_hard_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_qiyu_check.qiyu_hard)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_qiyu_check::qiyu_hard() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_qiyu_check.qiyu_hard)
  return qiyu_hard_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_qiyu_check::mutable_qiyu_hard() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_qiyu_check.qiyu_hard)
  return &qiyu_hard_;
}

// repeated int32 qiyu_suc = 3;
inline int smsg_qiyu_check::qiyu_suc_size() const {
  return qiyu_suc_.size();
}
inline void smsg_qiyu_check::clear_qiyu_suc() {
  set_changed();
  qiyu_suc_.Clear();
}
inline ::google::protobuf::int32 smsg_qiyu_check::qiyu_suc(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_qiyu_check.qiyu_suc)
  return qiyu_suc_.Get(index);
}
inline void smsg_qiyu_check::set_qiyu_suc(int index, ::google::protobuf::int32 value) {
  set_changed();
  qiyu_suc_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_qiyu_check.qiyu_suc)
}
inline void smsg_qiyu_check::add_qiyu_suc(::google::protobuf::int32 value) {
  set_changed();
  qiyu_suc_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_qiyu_check.qiyu_suc)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_qiyu_check::qiyu_suc() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_qiyu_check.qiyu_suc)
  return qiyu_suc_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_qiyu_check::mutable_qiyu_suc() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_qiyu_check.qiyu_suc)
  return &qiyu_suc_;
}

// -------------------------------------------------------------------

// cmsg_player_look

// .protocol.game.msg_common comm = 1;
inline bool cmsg_player_look::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_player_look::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_player_look::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_player_look::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_player_look.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_player_look::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_player_look.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_player_look::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_player_look.comm)
  return comm_;
}
inline void cmsg_player_look::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_player_look.comm)
}

// uint64 target_guid = 2;
inline void cmsg_player_look::clear_target_guid() {
  set_changed();
  target_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_player_look::target_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_player_look.target_guid)
  return target_guid_;
}
inline void cmsg_player_look::set_target_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  target_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_player_look.target_guid)
}

// -------------------------------------------------------------------

// smsg_player_look

// uint32 template_id = 1;
inline void smsg_player_look::clear_template_id() {
  set_changed();
  template_id_ = 0u;
}
inline ::google::protobuf::uint32 smsg_player_look::template_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.template_id)
  return template_id_;
}
inline void smsg_player_look::set_template_id(::google::protobuf::uint32 value) {
  set_changed();
  
  template_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_look.template_id)
}

// int32 level = 2;
inline void smsg_player_look::clear_level() {
  set_changed();
  level_ = 0;
}
inline ::google::protobuf::int32 smsg_player_look::level() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.level)
  return level_;
}
inline void smsg_player_look::set_level(::google::protobuf::int32 value) {
  set_changed();
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_look.level)
}

// string name = 3;
inline void smsg_player_look::clear_name() {
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_player_look::name() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.name)
  return name_.GetNoArena();
}
inline void smsg_player_look::set_name(const ::std::string& value) {
  set_changed();
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_look.name)
}
#if LANG_CXX11
inline void smsg_player_look::set_name(::std::string&& value) {
  set_changed();
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_player_look.name)
}
#endif
inline void smsg_player_look::set_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_player_look.name)
}
inline void smsg_player_look::set_name(const char* value, size_t size) {
  set_changed();
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_player_look.name)
}
inline ::std::string* smsg_player_look::mutable_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_player_look.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_player_look::release_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_player_look.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_player_look::set_allocated_name(::std::string* name) {
  set_changed();
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_player_look.name)
}

// int32 bf = 4;
inline void smsg_player_look::clear_bf() {
  set_changed();
  bf_ = 0;
}
inline ::google::protobuf::int32 smsg_player_look::bf() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.bf)
  return bf_;
}
inline void smsg_player_look::set_bf(::google::protobuf::int32 value) {
  set_changed();
  
  bf_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_look.bf)
}

// int32 vip = 5;
inline void smsg_player_look::clear_vip() {
  set_changed();
  vip_ = 0;
}
inline ::google::protobuf::int32 smsg_player_look::vip() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.vip)
  return vip_;
}
inline void smsg_player_look::set_vip(::google::protobuf::int32 value) {
  set_changed();
  
  vip_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_look.vip)
}

// repeated .dhc.role_t roles = 6;
inline int smsg_player_look::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_player_look::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_player_look.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_player_look::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_player_look.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_player_look::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_player_look::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_player_look.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_player_look::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_player_look.roles)
  return roles_;
}

// repeated int32 roles_sx = 7;
inline int smsg_player_look::roles_sx_size() const {
  return roles_sx_.size();
}
inline void smsg_player_look::clear_roles_sx() {
  set_changed();
  roles_sx_.Clear();
}
inline ::google::protobuf::int32 smsg_player_look::roles_sx(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.roles_sx)
  return roles_sx_.Get(index);
}
inline void smsg_player_look::set_roles_sx(int index, ::google::protobuf::int32 value) {
  set_changed();
  roles_sx_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_look.roles_sx)
}
inline void smsg_player_look::add_roles_sx(::google::protobuf::int32 value) {
  set_changed();
  roles_sx_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_player_look.roles_sx)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_player_look::roles_sx() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_player_look.roles_sx)
  return roles_sx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_player_look::mutable_roles_sx() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_player_look.roles_sx)
  return &roles_sx_;
}

// repeated .dhc.equip_t equips = 8;
inline int smsg_player_look::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_player_look::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_player_look.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_player_look::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_player_look.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_player_look::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_player_look::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_player_look.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_player_look::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_player_look.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 9;
inline int smsg_player_look::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_player_look::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_player_look.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_player_look::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_player_look.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_player_look::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_player_look::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_player_look.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_player_look::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_player_look.treasures)
  return treasures_;
}

// repeated .dhc.pet_t pets = 10;
inline int smsg_player_look::pets_size() const {
  return pets_.size();
}
inline ::dhc::pet_t* smsg_player_look::mutable_pets(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_player_look.pets)
  return pets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >*
smsg_player_look::mutable_pets() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_player_look.pets)
  return &pets_;
}
inline const ::dhc::pet_t& smsg_player_look::pets(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.pets)
  return pets_.Get(index);
}
inline ::dhc::pet_t* smsg_player_look::add_pets() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_player_look.pets)
  return pets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >&
smsg_player_look::pets() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_player_look.pets)
  return pets_;
}

// repeated int32 pets_sx = 11;
inline int smsg_player_look::pets_sx_size() const {
  return pets_sx_.size();
}
inline void smsg_player_look::clear_pets_sx() {
  set_changed();
  pets_sx_.Clear();
}
inline ::google::protobuf::int32 smsg_player_look::pets_sx(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.pets_sx)
  return pets_sx_.Get(index);
}
inline void smsg_player_look::set_pets_sx(int index, ::google::protobuf::int32 value) {
  set_changed();
  pets_sx_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_look.pets_sx)
}
inline void smsg_player_look::add_pets_sx(::google::protobuf::int32 value) {
  set_changed();
  pets_sx_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_player_look.pets_sx)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_player_look::pets_sx() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_player_look.pets_sx)
  return pets_sx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_player_look::mutable_pets_sx() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_player_look.pets_sx)
  return &pets_sx_;
}

// string guild = 12;
inline void smsg_player_look::clear_guild() {
  set_changed();
  guild_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_player_look::guild() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.guild)
  return guild_.GetNoArena();
}
inline void smsg_player_look::set_guild(const ::std::string& value) {
  set_changed();
  
  guild_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_look.guild)
}
#if LANG_CXX11
inline void smsg_player_look::set_guild(::std::string&& value) {
  set_changed();
  
  guild_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_player_look.guild)
}
#endif
inline void smsg_player_look::set_guild(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  guild_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_player_look.guild)
}
inline void smsg_player_look::set_guild(const char* value, size_t size) {
  set_changed();
  
  guild_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_player_look.guild)
}
inline ::std::string* smsg_player_look::mutable_guild() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_player_look.guild)
  return guild_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_player_look::release_guild() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_player_look.guild)
  
  return guild_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_player_look::set_allocated_guild(::std::string* guild) {
  set_changed();
  if (guild != NULL) {
    
  } else {
    
  }
  guild_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guild);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_player_look.guild)
}

// int32 achieves = 13;
inline void smsg_player_look::clear_achieves() {
  set_changed();
  achieves_ = 0;
}
inline ::google::protobuf::int32 smsg_player_look::achieves() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.achieves)
  return achieves_;
}
inline void smsg_player_look::set_achieves(::google::protobuf::int32 value) {
  set_changed();
  
  achieves_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_look.achieves)
}

// int32 chenghao = 14;
inline void smsg_player_look::clear_chenghao() {
  set_changed();
  chenghao_ = 0;
}
inline ::google::protobuf::int32 smsg_player_look::chenghao() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.chenghao)
  return chenghao_;
}
inline void smsg_player_look::set_chenghao(::google::protobuf::int32 value) {
  set_changed();
  
  chenghao_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_look.chenghao)
}

// uint64 guid = 15;
inline void smsg_player_look::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_player_look::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.guid)
  return guid_;
}
inline void smsg_player_look::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_look.guid)
}

// string serverid = 16;
inline void smsg_player_look::clear_serverid() {
  set_changed();
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_player_look::serverid() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.serverid)
  return serverid_.GetNoArena();
}
inline void smsg_player_look::set_serverid(const ::std::string& value) {
  set_changed();
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_look.serverid)
}
#if LANG_CXX11
inline void smsg_player_look::set_serverid(::std::string&& value) {
  set_changed();
  
  serverid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_player_look.serverid)
}
#endif
inline void smsg_player_look::set_serverid(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_player_look.serverid)
}
inline void smsg_player_look::set_serverid(const char* value, size_t size) {
  set_changed();
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_player_look.serverid)
}
inline ::std::string* smsg_player_look::mutable_serverid() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_player_look.serverid)
  return serverid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_player_look::release_serverid() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_player_look.serverid)
  
  return serverid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_player_look::set_allocated_serverid(::std::string* serverid) {
  set_changed();
  if (serverid != NULL) {
    
  } else {
    
  }
  serverid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverid);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_player_look.serverid)
}

// int32 nalflag = 17;
inline void smsg_player_look::clear_nalflag() {
  set_changed();
  nalflag_ = 0;
}
inline ::google::protobuf::int32 smsg_player_look::nalflag() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_look.nalflag)
  return nalflag_;
}
inline void smsg_player_look::set_nalflag(::google::protobuf::int32 value) {
  set_changed();
  
  nalflag_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_look.nalflag)
}

// -------------------------------------------------------------------

// smsg_random_event_look

// int32 id = 1;
inline void smsg_random_event_look::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 smsg_random_event_look::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_random_event_look.id)
  return id_;
}
inline void smsg_random_event_look::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_random_event_look.id)
}

// -------------------------------------------------------------------

// cmsg_random_event_get

// .protocol.game.msg_common comm = 1;
inline bool cmsg_random_event_get::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_random_event_get::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_random_event_get::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_random_event_get::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_random_event_get.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_random_event_get::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_random_event_get.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_random_event_get::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_random_event_get.comm)
  return comm_;
}
inline void cmsg_random_event_get::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_random_event_get.comm)
}

// int32 index = 2;
inline void cmsg_random_event_get::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 cmsg_random_event_get::index() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_random_event_get.index)
  return index_;
}
inline void cmsg_random_event_get::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_random_event_get.index)
}

// -------------------------------------------------------------------

// smsg_random_event_get

// uint64 random_event_time = 1;
inline void smsg_random_event_get::clear_random_event_time() {
  set_changed();
  random_event_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_random_event_get::random_event_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_random_event_get.random_event_time)
  return random_event_time_;
}
inline void smsg_random_event_get::set_random_event_time(::google::protobuf::uint64 value) {
  set_changed();
  
  random_event_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_random_event_get.random_event_time)
}

// -------------------------------------------------------------------

// smsg_gundong

// string text = 1;
inline void smsg_gundong::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_gundong::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_gundong.text)
  return text_.GetNoArena();
}
inline void smsg_gundong::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_gundong.text)
}
#if LANG_CXX11
inline void smsg_gundong::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_gundong.text)
}
#endif
inline void smsg_gundong::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_gundong.text)
}
inline void smsg_gundong::set_text(const char* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_gundong.text)
}
inline ::std::string* smsg_gundong::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_gundong.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_gundong::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_gundong.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_gundong::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_gundong.text)
}

// -------------------------------------------------------------------

// smsg_gundong_server

// string text = 1;
inline void smsg_gundong_server::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_gundong_server::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_gundong_server.text)
  return text_.GetNoArena();
}
inline void smsg_gundong_server::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_gundong_server.text)
}
#if LANG_CXX11
inline void smsg_gundong_server::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_gundong_server.text)
}
#endif
inline void smsg_gundong_server::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_gundong_server.text)
}
inline void smsg_gundong_server::set_text(const char* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_gundong_server.text)
}
inline ::std::string* smsg_gundong_server::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_gundong_server.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_gundong_server::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_gundong_server.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_gundong_server::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_gundong_server.text)
}

// repeated string gundong_Pars = 2;
inline int smsg_gundong_server::gundong_pars_size() const {
  return gundong_pars_.size();
}
inline void smsg_gundong_server::clear_gundong_pars() {
  set_changed();
  gundong_pars_.Clear();
}
inline const ::std::string& smsg_gundong_server::gundong_pars(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_gundong_server.gundong_Pars)
  return gundong_pars_.Get(index);
}
inline ::std::string* smsg_gundong_server::mutable_gundong_pars(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_gundong_server.gundong_Pars)
  return gundong_pars_.Mutable(index);
}
inline void smsg_gundong_server::set_gundong_pars(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_gundong_server.gundong_Pars)
  gundong_pars_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void smsg_gundong_server::set_gundong_pars(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_gundong_server.gundong_Pars)
  gundong_pars_.Mutable(index)->assign(std::move(value));
}
#endif
inline void smsg_gundong_server::set_gundong_pars(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  gundong_pars_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_gundong_server.gundong_Pars)
}
inline void smsg_gundong_server::set_gundong_pars(int index, const char* value, size_t size) {
  set_changed();
  gundong_pars_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_gundong_server.gundong_Pars)
}
inline ::std::string* smsg_gundong_server::add_gundong_pars() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.smsg_gundong_server.gundong_Pars)
  return gundong_pars_.Add();
}
inline void smsg_gundong_server::add_gundong_pars(const ::std::string& value) {
  set_changed();
  gundong_pars_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_gundong_server.gundong_Pars)
}
#if LANG_CXX11
inline void smsg_gundong_server::add_gundong_pars(::std::string&& value) {
  set_changed();
  gundong_pars_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.smsg_gundong_server.gundong_Pars)
}
#endif
inline void smsg_gundong_server::add_gundong_pars(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  gundong_pars_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.smsg_gundong_server.gundong_Pars)
}
inline void smsg_gundong_server::add_gundong_pars(const char* value, size_t size) {
  set_changed();
  gundong_pars_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.smsg_gundong_server.gundong_Pars)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
smsg_gundong_server::gundong_pars() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_gundong_server.gundong_Pars)
  return gundong_pars_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
smsg_gundong_server::mutable_gundong_pars() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_gundong_server.gundong_Pars)
  return &gundong_pars_;
}

// -------------------------------------------------------------------

// cmsg_mission_goumai

// .protocol.game.msg_common comm = 1;
inline bool cmsg_mission_goumai::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_mission_goumai::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_mission_goumai::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_mission_goumai::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_mission_goumai.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_mission_goumai::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_mission_goumai.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_mission_goumai::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_mission_goumai.comm)
  return comm_;
}
inline void cmsg_mission_goumai::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_mission_goumai.comm)
}

// int32 mission_id = 2;
inline void cmsg_mission_goumai::clear_mission_id() {
  set_changed();
  mission_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_mission_goumai::mission_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_mission_goumai.mission_id)
  return mission_id_;
}
inline void cmsg_mission_goumai::set_mission_id(::google::protobuf::int32 value) {
  set_changed();
  
  mission_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_mission_goumai.mission_id)
}

// -------------------------------------------------------------------

// cmsg_guild_create

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_create::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_create::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_create::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_create::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_create.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_create::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_create.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_create::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_create.comm)
  return comm_;
}
inline void cmsg_guild_create::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_create.comm)
}

// string guild_name = 2;
inline void cmsg_guild_create::clear_guild_name() {
  set_changed();
  guild_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_guild_create::guild_name() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_create.guild_name)
  return guild_name_.GetNoArena();
}
inline void cmsg_guild_create::set_guild_name(const ::std::string& value) {
  set_changed();
  
  guild_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_create.guild_name)
}
#if LANG_CXX11
inline void cmsg_guild_create::set_guild_name(::std::string&& value) {
  set_changed();
  
  guild_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_guild_create.guild_name)
}
#endif
inline void cmsg_guild_create::set_guild_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  guild_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_guild_create.guild_name)
}
inline void cmsg_guild_create::set_guild_name(const char* value, size_t size) {
  set_changed();
  
  guild_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_guild_create.guild_name)
}
inline ::std::string* cmsg_guild_create::mutable_guild_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_create.guild_name)
  return guild_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_guild_create::release_guild_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_create.guild_name)
  
  return guild_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_guild_create::set_allocated_guild_name(::std::string* guild_name) {
  set_changed();
  if (guild_name != NULL) {
    
  } else {
    
  }
  guild_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guild_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_create.guild_name)
}

// -------------------------------------------------------------------

// cmsg_guild_apply

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_apply::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_apply::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_apply::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_apply::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_apply.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_apply::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_apply.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_apply::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_apply.comm)
  return comm_;
}
inline void cmsg_guild_apply::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_apply.comm)
}

// uint64 guild_guid = 2;
inline void cmsg_guild_apply::clear_guild_guid() {
  set_changed();
  guild_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_guild_apply::guild_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_apply.guild_guid)
  return guild_guid_;
}
inline void cmsg_guild_apply::set_guild_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guild_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_apply.guild_guid)
}

// -------------------------------------------------------------------

// cmsg_guild_agree

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_agree::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_agree::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_agree::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_agree::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_agree.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_agree::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_agree.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_agree::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_agree.comm)
  return comm_;
}
inline void cmsg_guild_agree::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_agree.comm)
}

// uint64 player_guid = 2;
inline void cmsg_guild_agree::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_guild_agree::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_agree.player_guid)
  return player_guid_;
}
inline void cmsg_guild_agree::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_agree.player_guid)
}

// bool argree = 3;
inline void cmsg_guild_agree::clear_argree() {
  set_changed();
  argree_ = false;
}
inline bool cmsg_guild_agree::argree() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_agree.argree)
  return argree_;
}
inline void cmsg_guild_agree::set_argree(bool value) {
  set_changed();
  
  argree_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_agree.argree)
}

// -------------------------------------------------------------------

// cmsg_guild_join

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_join::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_join::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_join::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_join::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_join.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_join::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_join.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_join::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_join.comm)
  return comm_;
}
inline void cmsg_guild_join::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_join.comm)
}

// uint64 guild_guid = 2;
inline void cmsg_guild_join::clear_guild_guid() {
  set_changed();
  guild_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_guild_join::guild_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_join.guild_guid)
  return guild_guid_;
}
inline void cmsg_guild_join::set_guild_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guild_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_join.guild_guid)
}

// -------------------------------------------------------------------

// smsg_guild_data

// .dhc.guild_t guild = 1;
inline bool smsg_guild_data::has_guild() const {
  return this != internal_default_instance() && guild_ != NULL;
}
inline const ::dhc::guild_t& smsg_guild_data::_internal_guild() const {
  return *guild_;
}
inline const ::dhc::guild_t& smsg_guild_data::guild() const {
  const ::dhc::guild_t* p = guild_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_data.guild)
  return p != NULL ? *p : *reinterpret_cast<const ::dhc::guild_t*>(
      &::dhc::_guild_t_default_instance_);
}
inline ::dhc::guild_t* smsg_guild_data::release_guild() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_guild_data.guild)
  
  ::dhc::guild_t* temp = guild_;
  guild_ = NULL;
  return temp;
}
inline ::dhc::guild_t* smsg_guild_data::mutable_guild() {
  
  if (guild_ == NULL) {
    auto* p = CreateMaybeMessage<::dhc::guild_t>(GetArenaNoVirtual());
    guild_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_data.guild)
  return guild_;
}
inline void smsg_guild_data::set_allocated_guild(::dhc::guild_t* guild) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(guild_);
  }
  if (guild) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      guild = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, guild, submessage_arena);
    }
    
  } else {
    
  }
  guild_ = guild;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_guild_data.guild)
}

// int32 zhiwu = 2;
inline void smsg_guild_data::clear_zhiwu() {
  set_changed();
  zhiwu_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_data::zhiwu() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_data.zhiwu)
  return zhiwu_;
}
inline void smsg_guild_data::set_zhiwu(::google::protobuf::int32 value) {
  set_changed();
  
  zhiwu_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_data.zhiwu)
}

// repeated .dhc.guild_event_t guild_event = 3;
inline int smsg_guild_data::guild_event_size() const {
  return guild_event_.size();
}
inline ::dhc::guild_event_t* smsg_guild_data::mutable_guild_event(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_data.guild_event)
  return guild_event_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::guild_event_t >*
smsg_guild_data::mutable_guild_event() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_data.guild_event)
  return &guild_event_;
}
inline const ::dhc::guild_event_t& smsg_guild_data::guild_event(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_data.guild_event)
  return guild_event_.Get(index);
}
inline ::dhc::guild_event_t* smsg_guild_data::add_guild_event() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_data.guild_event)
  return guild_event_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::guild_event_t >&
smsg_guild_data::guild_event() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_data.guild_event)
  return guild_event_;
}

// int32 success = 4;
inline void smsg_guild_data::clear_success() {
  set_changed();
  success_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_data::success() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_data.success)
  return success_;
}
inline void smsg_guild_data::set_success(::google::protobuf::int32 value) {
  set_changed();
  
  success_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_data.success)
}

// bool can_mobai = 5;
inline void smsg_guild_data::clear_can_mobai() {
  set_changed();
  can_mobai_ = false;
}
inline bool smsg_guild_data::can_mobai() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_data.can_mobai)
  return can_mobai_;
}
inline void smsg_guild_data::set_can_mobai(bool value) {
  set_changed();
  
  can_mobai_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_data.can_mobai)
}

// bool can_fight = 6;
inline void smsg_guild_data::clear_can_fight() {
  set_changed();
  can_fight_ = false;
}
inline bool smsg_guild_data::can_fight() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_data.can_fight)
  return can_fight_;
}
inline void smsg_guild_data::set_can_fight(bool value) {
  set_changed();
  
  can_fight_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_data.can_fight)
}

// int32 msg_count = 7;
inline void smsg_guild_data::clear_msg_count() {
  set_changed();
  msg_count_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_data::msg_count() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_data.msg_count)
  return msg_count_;
}
inline void smsg_guild_data::set_msg_count(::google::protobuf::int32 value) {
  set_changed();
  
  msg_count_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_data.msg_count)
}

// bool has_apply = 8;
inline void smsg_guild_data::clear_has_apply() {
  set_changed();
  has_apply_ = false;
}
inline bool smsg_guild_data::has_apply() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_data.has_apply)
  return has_apply_;
}
inline void smsg_guild_data::set_has_apply(bool value) {
  set_changed();
  
  has_apply_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_data.has_apply)
}

// bool has_hongbao = 9;
inline void smsg_guild_data::clear_has_hongbao() {
  set_changed();
  has_hongbao_ = false;
}
inline bool smsg_guild_data::has_hongbao() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_data.has_hongbao)
  return has_hongbao_;
}
inline void smsg_guild_data::set_has_hongbao(bool value) {
  set_changed();
  
  has_hongbao_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_data.has_hongbao)
}

// bool guildpvp = 10;
inline void smsg_guild_data::clear_guildpvp() {
  set_changed();
  guildpvp_ = false;
}
inline bool smsg_guild_data::guildpvp() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_data.guildpvp)
  return guildpvp_;
}
inline void smsg_guild_data::set_guildpvp(bool value) {
  set_changed();
  
  guildpvp_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_data.guildpvp)
}

// -------------------------------------------------------------------

// smsg_guild_list_recommend

// repeated uint64 guild_guids = 1;
inline int smsg_guild_list_recommend::guild_guids_size() const {
  return guild_guids_.size();
}
inline void smsg_guild_list_recommend::clear_guild_guids() {
  set_changed();
  guild_guids_.Clear();
}
inline ::google::protobuf::uint64 smsg_guild_list_recommend::guild_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_list_recommend.guild_guids)
  return guild_guids_.Get(index);
}
inline void smsg_guild_list_recommend::set_guild_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  guild_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_list_recommend.guild_guids)
}
inline void smsg_guild_list_recommend::add_guild_guids(::google::protobuf::uint64 value) {
  set_changed();
  guild_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_list_recommend.guild_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
smsg_guild_list_recommend::guild_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_list_recommend.guild_guids)
  return guild_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
smsg_guild_list_recommend::mutable_guild_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_list_recommend.guild_guids)
  return &guild_guids_;
}

// repeated string guild_names = 2;
inline int smsg_guild_list_recommend::guild_names_size() const {
  return guild_names_.size();
}
inline void smsg_guild_list_recommend::clear_guild_names() {
  set_changed();
  guild_names_.Clear();
}
inline const ::std::string& smsg_guild_list_recommend::guild_names(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_list_recommend.guild_names)
  return guild_names_.Get(index);
}
inline ::std::string* smsg_guild_list_recommend::mutable_guild_names(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_list_recommend.guild_names)
  return guild_names_.Mutable(index);
}
inline void smsg_guild_list_recommend::set_guild_names(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_list_recommend.guild_names)
  guild_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void smsg_guild_list_recommend::set_guild_names(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_list_recommend.guild_names)
  guild_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void smsg_guild_list_recommend::set_guild_names(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  guild_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_guild_list_recommend.guild_names)
}
inline void smsg_guild_list_recommend::set_guild_names(int index, const char* value, size_t size) {
  set_changed();
  guild_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_guild_list_recommend.guild_names)
}
inline ::std::string* smsg_guild_list_recommend::add_guild_names() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.smsg_guild_list_recommend.guild_names)
  return guild_names_.Add();
}
inline void smsg_guild_list_recommend::add_guild_names(const ::std::string& value) {
  set_changed();
  guild_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_list_recommend.guild_names)
}
#if LANG_CXX11
inline void smsg_guild_list_recommend::add_guild_names(::std::string&& value) {
  set_changed();
  guild_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_list_recommend.guild_names)
}
#endif
inline void smsg_guild_list_recommend::add_guild_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  guild_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.smsg_guild_list_recommend.guild_names)
}
inline void smsg_guild_list_recommend::add_guild_names(const char* value, size_t size) {
  set_changed();
  guild_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.smsg_guild_list_recommend.guild_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
smsg_guild_list_recommend::guild_names() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_list_recommend.guild_names)
  return guild_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
smsg_guild_list_recommend::mutable_guild_names() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_list_recommend.guild_names)
  return &guild_names_;
}

// repeated int32 guild_levels = 3;
inline int smsg_guild_list_recommend::guild_levels_size() const {
  return guild_levels_.size();
}
inline void smsg_guild_list_recommend::clear_guild_levels() {
  set_changed();
  guild_levels_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_list_recommend::guild_levels(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_list_recommend.guild_levels)
  return guild_levels_.Get(index);
}
inline void smsg_guild_list_recommend::set_guild_levels(int index, ::google::protobuf::int32 value) {
  set_changed();
  guild_levels_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_list_recommend.guild_levels)
}
inline void smsg_guild_list_recommend::add_guild_levels(::google::protobuf::int32 value) {
  set_changed();
  guild_levels_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_list_recommend.guild_levels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_list_recommend::guild_levels() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_list_recommend.guild_levels)
  return guild_levels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_list_recommend::mutable_guild_levels() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_list_recommend.guild_levels)
  return &guild_levels_;
}

// repeated int32 guild_members = 4;
inline int smsg_guild_list_recommend::guild_members_size() const {
  return guild_members_.size();
}
inline void smsg_guild_list_recommend::clear_guild_members() {
  set_changed();
  guild_members_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_list_recommend::guild_members(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_list_recommend.guild_members)
  return guild_members_.Get(index);
}
inline void smsg_guild_list_recommend::set_guild_members(int index, ::google::protobuf::int32 value) {
  set_changed();
  guild_members_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_list_recommend.guild_members)
}
inline void smsg_guild_list_recommend::add_guild_members(::google::protobuf::int32 value) {
  set_changed();
  guild_members_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_list_recommend.guild_members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_list_recommend::guild_members() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_list_recommend.guild_members)
  return guild_members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_list_recommend::mutable_guild_members() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_list_recommend.guild_members)
  return &guild_members_;
}

// repeated int32 guild_icons = 5;
inline int smsg_guild_list_recommend::guild_icons_size() const {
  return guild_icons_.size();
}
inline void smsg_guild_list_recommend::clear_guild_icons() {
  set_changed();
  guild_icons_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_list_recommend::guild_icons(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_list_recommend.guild_icons)
  return guild_icons_.Get(index);
}
inline void smsg_guild_list_recommend::set_guild_icons(int index, ::google::protobuf::int32 value) {
  set_changed();
  guild_icons_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_list_recommend.guild_icons)
}
inline void smsg_guild_list_recommend::add_guild_icons(::google::protobuf::int32 value) {
  set_changed();
  guild_icons_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_list_recommend.guild_icons)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_list_recommend::guild_icons() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_list_recommend.guild_icons)
  return guild_icons_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_list_recommend::mutable_guild_icons() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_list_recommend.guild_icons)
  return &guild_icons_;
}

// repeated uint64 apply_list = 6;
inline int smsg_guild_list_recommend::apply_list_size() const {
  return apply_list_.size();
}
inline void smsg_guild_list_recommend::clear_apply_list() {
  set_changed();
  apply_list_.Clear();
}
inline ::google::protobuf::uint64 smsg_guild_list_recommend::apply_list(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_list_recommend.apply_list)
  return apply_list_.Get(index);
}
inline void smsg_guild_list_recommend::set_apply_list(int index, ::google::protobuf::uint64 value) {
  set_changed();
  apply_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_list_recommend.apply_list)
}
inline void smsg_guild_list_recommend::add_apply_list(::google::protobuf::uint64 value) {
  set_changed();
  apply_list_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_list_recommend.apply_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
smsg_guild_list_recommend::apply_list() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_list_recommend.apply_list)
  return apply_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
smsg_guild_list_recommend::mutable_apply_list() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_list_recommend.apply_list)
  return &apply_list_;
}

// -------------------------------------------------------------------

// cmsg_guild_query

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_query::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_query::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_query::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_query::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_query.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_query::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_query.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_query::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_query.comm)
  return comm_;
}
inline void cmsg_guild_query::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_query.comm)
}

// string guild_name = 2;
inline void cmsg_guild_query::clear_guild_name() {
  set_changed();
  guild_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_guild_query::guild_name() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_query.guild_name)
  return guild_name_.GetNoArena();
}
inline void cmsg_guild_query::set_guild_name(const ::std::string& value) {
  set_changed();
  
  guild_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_query.guild_name)
}
#if LANG_CXX11
inline void cmsg_guild_query::set_guild_name(::std::string&& value) {
  set_changed();
  
  guild_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_guild_query.guild_name)
}
#endif
inline void cmsg_guild_query::set_guild_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  guild_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_guild_query.guild_name)
}
inline void cmsg_guild_query::set_guild_name(const char* value, size_t size) {
  set_changed();
  
  guild_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_guild_query.guild_name)
}
inline ::std::string* cmsg_guild_query::mutable_guild_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_query.guild_name)
  return guild_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_guild_query::release_guild_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_query.guild_name)
  
  return guild_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_guild_query::set_allocated_guild_name(::std::string* guild_name) {
  set_changed();
  if (guild_name != NULL) {
    
  } else {
    
  }
  guild_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guild_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_query.guild_name)
}

// -------------------------------------------------------------------

// cmsg_guild_modify_bulletin

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_modify_bulletin::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_modify_bulletin::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_modify_bulletin::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_modify_bulletin::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_modify_bulletin.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_modify_bulletin::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_modify_bulletin.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_modify_bulletin::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_modify_bulletin.comm)
  return comm_;
}
inline void cmsg_guild_modify_bulletin::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_modify_bulletin.comm)
}

// string bulletin = 2;
inline void cmsg_guild_modify_bulletin::clear_bulletin() {
  set_changed();
  bulletin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_guild_modify_bulletin::bulletin() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_modify_bulletin.bulletin)
  return bulletin_.GetNoArena();
}
inline void cmsg_guild_modify_bulletin::set_bulletin(const ::std::string& value) {
  set_changed();
  
  bulletin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_modify_bulletin.bulletin)
}
#if LANG_CXX11
inline void cmsg_guild_modify_bulletin::set_bulletin(::std::string&& value) {
  set_changed();
  
  bulletin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_guild_modify_bulletin.bulletin)
}
#endif
inline void cmsg_guild_modify_bulletin::set_bulletin(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  bulletin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_guild_modify_bulletin.bulletin)
}
inline void cmsg_guild_modify_bulletin::set_bulletin(const char* value, size_t size) {
  set_changed();
  
  bulletin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_guild_modify_bulletin.bulletin)
}
inline ::std::string* cmsg_guild_modify_bulletin::mutable_bulletin() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_modify_bulletin.bulletin)
  return bulletin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_guild_modify_bulletin::release_bulletin() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_modify_bulletin.bulletin)
  
  return bulletin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_guild_modify_bulletin::set_allocated_bulletin(::std::string* bulletin) {
  set_changed();
  if (bulletin != NULL) {
    
  } else {
    
  }
  bulletin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bulletin);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_modify_bulletin.bulletin)
}

// -------------------------------------------------------------------

// cmsg_guild_modify_icon

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_modify_icon::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_modify_icon::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_modify_icon::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_modify_icon::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_modify_icon.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_modify_icon::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_modify_icon.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_modify_icon::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_modify_icon.comm)
  return comm_;
}
inline void cmsg_guild_modify_icon::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_modify_icon.comm)
}

// int32 icon = 2;
inline void cmsg_guild_modify_icon::clear_icon() {
  set_changed();
  icon_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_modify_icon::icon() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_modify_icon.icon)
  return icon_;
}
inline void cmsg_guild_modify_icon::set_icon(::google::protobuf::int32 value) {
  set_changed();
  
  icon_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_modify_icon.icon)
}

// -------------------------------------------------------------------

// cmsg_guild_change_member_duty

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_change_member_duty::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_change_member_duty::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_change_member_duty::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_change_member_duty::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_change_member_duty.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_change_member_duty::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_change_member_duty.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_change_member_duty::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_change_member_duty.comm)
  return comm_;
}
inline void cmsg_guild_change_member_duty::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_change_member_duty.comm)
}

// uint64 member_guid = 2;
inline void cmsg_guild_change_member_duty::clear_member_guid() {
  set_changed();
  member_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_guild_change_member_duty::member_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_change_member_duty.member_guid)
  return member_guid_;
}
inline void cmsg_guild_change_member_duty::set_member_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  member_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_change_member_duty.member_guid)
}

// int32 new_duty = 3;
inline void cmsg_guild_change_member_duty::clear_new_duty() {
  set_changed();
  new_duty_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_change_member_duty::new_duty() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_change_member_duty.new_duty)
  return new_duty_;
}
inline void cmsg_guild_change_member_duty::set_new_duty(::google::protobuf::int32 value) {
  set_changed();
  
  new_duty_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_change_member_duty.new_duty)
}

// -------------------------------------------------------------------

// cmsg_guild_kick_member

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_kick_member::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_kick_member::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_kick_member::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_kick_member::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_kick_member.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_kick_member::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_kick_member.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_kick_member::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_kick_member.comm)
  return comm_;
}
inline void cmsg_guild_kick_member::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_kick_member.comm)
}

// uint64 member_guid = 2;
inline void cmsg_guild_kick_member::clear_member_guid() {
  set_changed();
  member_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_guild_kick_member::member_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_kick_member.member_guid)
  return member_guid_;
}
inline void cmsg_guild_kick_member::set_member_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  member_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_kick_member.member_guid)
}

// -------------------------------------------------------------------

// cmsg_guild_set_join_condition

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_set_join_condition::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_set_join_condition::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_set_join_condition::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_set_join_condition::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_set_join_condition.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_set_join_condition::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_set_join_condition.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_set_join_condition::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_set_join_condition.comm)
  return comm_;
}
inline void cmsg_guild_set_join_condition::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_set_join_condition.comm)
}

// int32 min_bf = 2;
inline void cmsg_guild_set_join_condition::clear_min_bf() {
  set_changed();
  min_bf_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_set_join_condition::min_bf() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_set_join_condition.min_bf)
  return min_bf_;
}
inline void cmsg_guild_set_join_condition::set_min_bf(::google::protobuf::int32 value) {
  set_changed();
  
  min_bf_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_set_join_condition.min_bf)
}

// -------------------------------------------------------------------

// cmsg_guild_sign_in

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_sign_in::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_sign_in::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_sign_in::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_sign_in::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_sign_in.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_sign_in::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_sign_in.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_sign_in::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_sign_in.comm)
  return comm_;
}
inline void cmsg_guild_sign_in::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_sign_in.comm)
}

// int32 sign_in_type = 2;
inline void cmsg_guild_sign_in::clear_sign_in_type() {
  set_changed();
  sign_in_type_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_sign_in::sign_in_type() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_sign_in.sign_in_type)
  return sign_in_type_;
}
inline void cmsg_guild_sign_in::set_sign_in_type(::google::protobuf::int32 value) {
  set_changed();
  
  sign_in_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_sign_in.sign_in_type)
}

// -------------------------------------------------------------------

// cmsg_guild_sign_reward

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_sign_reward::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_sign_reward::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_sign_reward::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_sign_reward::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_sign_reward.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_sign_reward::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_sign_reward.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_sign_reward::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_sign_reward.comm)
  return comm_;
}
inline void cmsg_guild_sign_reward::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_sign_reward.comm)
}

// int32 id = 2;
inline void cmsg_guild_sign_reward::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_sign_reward::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_sign_reward.id)
  return id_;
}
inline void cmsg_guild_sign_reward::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_sign_reward.id)
}

// -------------------------------------------------------------------

// smsg_guild_message_view

// repeated .dhc.guild_message_t msgs = 1;
inline int smsg_guild_message_view::msgs_size() const {
  return msgs_.size();
}
inline ::dhc::guild_message_t* smsg_guild_message_view::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_message_view.msgs)
  return msgs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::guild_message_t >*
smsg_guild_message_view::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_message_view.msgs)
  return &msgs_;
}
inline const ::dhc::guild_message_t& smsg_guild_message_view::msgs(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_message_view.msgs)
  return msgs_.Get(index);
}
inline ::dhc::guild_message_t* smsg_guild_message_view::add_msgs() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_message_view.msgs)
  return msgs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::guild_message_t >&
smsg_guild_message_view::msgs() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_message_view.msgs)
  return msgs_;
}

// -------------------------------------------------------------------

// cmsg_guild_message_add

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_message_add::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_message_add::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_message_add::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_message_add::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_message_add.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_message_add::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_message_add.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_message_add::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_message_add.comm)
  return comm_;
}
inline void cmsg_guild_message_add::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_message_add.comm)
}

// string text = 2;
inline void cmsg_guild_message_add::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_guild_message_add::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_message_add.text)
  return text_.GetNoArena();
}
inline void cmsg_guild_message_add::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_message_add.text)
}
#if LANG_CXX11
inline void cmsg_guild_message_add::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_guild_message_add.text)
}
#endif
inline void cmsg_guild_message_add::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_guild_message_add.text)
}
inline void cmsg_guild_message_add::set_text(const char* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_guild_message_add.text)
}
inline ::std::string* cmsg_guild_message_add::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_message_add.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_guild_message_add::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_message_add.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_guild_message_add::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_message_add.text)
}

// -------------------------------------------------------------------

// cmsg_guild_message_delete

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_message_delete::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_message_delete::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_message_delete::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_message_delete::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_message_delete.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_message_delete::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_message_delete.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_message_delete::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_message_delete.comm)
  return comm_;
}
inline void cmsg_guild_message_delete::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_message_delete.comm)
}

// uint64 msg_guid = 2;
inline void cmsg_guild_message_delete::clear_msg_guid() {
  set_changed();
  msg_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_guild_message_delete::msg_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_message_delete.msg_guid)
  return msg_guid_;
}
inline void cmsg_guild_message_delete::set_msg_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  msg_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_message_delete.msg_guid)
}

// -------------------------------------------------------------------

// cmsg_guild_message_top

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_message_top::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_message_top::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_message_top::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_message_top::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_message_top.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_message_top::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_message_top.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_message_top::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_message_top.comm)
  return comm_;
}
inline void cmsg_guild_message_top::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_message_top.comm)
}

// uint64 msg_guid = 2;
inline void cmsg_guild_message_top::clear_msg_guid() {
  set_changed();
  msg_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_guild_message_top::msg_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_message_top.msg_guid)
  return msg_guid_;
}
inline void cmsg_guild_message_top::set_msg_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  msg_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_message_top.msg_guid)
}

// -------------------------------------------------------------------

// smsg_guild_member_view

// repeated .dhc.guild_member_t guild_members = 1;
inline int smsg_guild_member_view::guild_members_size() const {
  return guild_members_.size();
}
inline ::dhc::guild_member_t* smsg_guild_member_view::mutable_guild_members(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_member_view.guild_members)
  return guild_members_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::guild_member_t >*
smsg_guild_member_view::mutable_guild_members() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_member_view.guild_members)
  return &guild_members_;
}
inline const ::dhc::guild_member_t& smsg_guild_member_view::guild_members(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_member_view.guild_members)
  return guild_members_.Get(index);
}
inline ::dhc::guild_member_t* smsg_guild_member_view::add_guild_members() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_member_view.guild_members)
  return guild_members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::guild_member_t >&
smsg_guild_member_view::guild_members() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_member_view.guild_members)
  return guild_members_;
}

// -------------------------------------------------------------------

// smsg_guild_ranking

// repeated string guild_names = 1;
inline int smsg_guild_ranking::guild_names_size() const {
  return guild_names_.size();
}
inline void smsg_guild_ranking::clear_guild_names() {
  set_changed();
  guild_names_.Clear();
}
inline const ::std::string& smsg_guild_ranking::guild_names(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_ranking.guild_names)
  return guild_names_.Get(index);
}
inline ::std::string* smsg_guild_ranking::mutable_guild_names(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_ranking.guild_names)
  return guild_names_.Mutable(index);
}
inline void smsg_guild_ranking::set_guild_names(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_ranking.guild_names)
  guild_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void smsg_guild_ranking::set_guild_names(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_ranking.guild_names)
  guild_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void smsg_guild_ranking::set_guild_names(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  guild_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_guild_ranking.guild_names)
}
inline void smsg_guild_ranking::set_guild_names(int index, const char* value, size_t size) {
  set_changed();
  guild_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_guild_ranking.guild_names)
}
inline ::std::string* smsg_guild_ranking::add_guild_names() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.smsg_guild_ranking.guild_names)
  return guild_names_.Add();
}
inline void smsg_guild_ranking::add_guild_names(const ::std::string& value) {
  set_changed();
  guild_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_ranking.guild_names)
}
#if LANG_CXX11
inline void smsg_guild_ranking::add_guild_names(::std::string&& value) {
  set_changed();
  guild_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_ranking.guild_names)
}
#endif
inline void smsg_guild_ranking::add_guild_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  guild_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.smsg_guild_ranking.guild_names)
}
inline void smsg_guild_ranking::add_guild_names(const char* value, size_t size) {
  set_changed();
  guild_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.smsg_guild_ranking.guild_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
smsg_guild_ranking::guild_names() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_ranking.guild_names)
  return guild_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
smsg_guild_ranking::mutable_guild_names() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_ranking.guild_names)
  return &guild_names_;
}

// repeated int32 guild_levels = 2;
inline int smsg_guild_ranking::guild_levels_size() const {
  return guild_levels_.size();
}
inline void smsg_guild_ranking::clear_guild_levels() {
  set_changed();
  guild_levels_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_ranking::guild_levels(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_ranking.guild_levels)
  return guild_levels_.Get(index);
}
inline void smsg_guild_ranking::set_guild_levels(int index, ::google::protobuf::int32 value) {
  set_changed();
  guild_levels_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_ranking.guild_levels)
}
inline void smsg_guild_ranking::add_guild_levels(::google::protobuf::int32 value) {
  set_changed();
  guild_levels_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_ranking.guild_levels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_ranking::guild_levels() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_ranking.guild_levels)
  return guild_levels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_ranking::mutable_guild_levels() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_ranking.guild_levels)
  return &guild_levels_;
}

// repeated int32 guild_members = 3;
inline int smsg_guild_ranking::guild_members_size() const {
  return guild_members_.size();
}
inline void smsg_guild_ranking::clear_guild_members() {
  set_changed();
  guild_members_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_ranking::guild_members(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_ranking.guild_members)
  return guild_members_.Get(index);
}
inline void smsg_guild_ranking::set_guild_members(int index, ::google::protobuf::int32 value) {
  set_changed();
  guild_members_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_ranking.guild_members)
}
inline void smsg_guild_ranking::add_guild_members(::google::protobuf::int32 value) {
  set_changed();
  guild_members_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_ranking.guild_members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_ranking::guild_members() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_ranking.guild_members)
  return guild_members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_ranking::mutable_guild_members() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_ranking.guild_members)
  return &guild_members_;
}

// repeated int32 guild_icons = 4;
inline int smsg_guild_ranking::guild_icons_size() const {
  return guild_icons_.size();
}
inline void smsg_guild_ranking::clear_guild_icons() {
  set_changed();
  guild_icons_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_ranking::guild_icons(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_ranking.guild_icons)
  return guild_icons_.Get(index);
}
inline void smsg_guild_ranking::set_guild_icons(int index, ::google::protobuf::int32 value) {
  set_changed();
  guild_icons_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_ranking.guild_icons)
}
inline void smsg_guild_ranking::add_guild_icons(::google::protobuf::int32 value) {
  set_changed();
  guild_icons_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_ranking.guild_icons)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_ranking::guild_icons() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_ranking.guild_icons)
  return guild_icons_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_ranking::mutable_guild_icons() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_ranking.guild_icons)
  return &guild_icons_;
}

// -------------------------------------------------------------------

// smsg_guild_mission_ranking

// repeated string guild_name = 1;
inline int smsg_guild_mission_ranking::guild_name_size() const {
  return guild_name_.size();
}
inline void smsg_guild_mission_ranking::clear_guild_name() {
  set_changed();
  guild_name_.Clear();
}
inline const ::std::string& smsg_guild_mission_ranking::guild_name(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_ranking.guild_name)
  return guild_name_.Get(index);
}
inline ::std::string* smsg_guild_mission_ranking::mutable_guild_name(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_mission_ranking.guild_name)
  return guild_name_.Mutable(index);
}
inline void smsg_guild_mission_ranking::set_guild_name(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_ranking.guild_name)
  guild_name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void smsg_guild_mission_ranking::set_guild_name(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_ranking.guild_name)
  guild_name_.Mutable(index)->assign(std::move(value));
}
#endif
inline void smsg_guild_mission_ranking::set_guild_name(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  guild_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_guild_mission_ranking.guild_name)
}
inline void smsg_guild_mission_ranking::set_guild_name(int index, const char* value, size_t size) {
  set_changed();
  guild_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_guild_mission_ranking.guild_name)
}
inline ::std::string* smsg_guild_mission_ranking::add_guild_name() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.smsg_guild_mission_ranking.guild_name)
  return guild_name_.Add();
}
inline void smsg_guild_mission_ranking::add_guild_name(const ::std::string& value) {
  set_changed();
  guild_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_mission_ranking.guild_name)
}
#if LANG_CXX11
inline void smsg_guild_mission_ranking::add_guild_name(::std::string&& value) {
  set_changed();
  guild_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_mission_ranking.guild_name)
}
#endif
inline void smsg_guild_mission_ranking::add_guild_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  guild_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.smsg_guild_mission_ranking.guild_name)
}
inline void smsg_guild_mission_ranking::add_guild_name(const char* value, size_t size) {
  set_changed();
  guild_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.smsg_guild_mission_ranking.guild_name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
smsg_guild_mission_ranking::guild_name() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_mission_ranking.guild_name)
  return guild_name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
smsg_guild_mission_ranking::mutable_guild_name() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_mission_ranking.guild_name)
  return &guild_name_;
}

// repeated int32 icon = 2;
inline int smsg_guild_mission_ranking::icon_size() const {
  return icon_.size();
}
inline void smsg_guild_mission_ranking::clear_icon() {
  set_changed();
  icon_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_mission_ranking::icon(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_ranking.icon)
  return icon_.Get(index);
}
inline void smsg_guild_mission_ranking::set_icon(int index, ::google::protobuf::int32 value) {
  set_changed();
  icon_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_ranking.icon)
}
inline void smsg_guild_mission_ranking::add_icon(::google::protobuf::int32 value) {
  set_changed();
  icon_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_mission_ranking.icon)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_mission_ranking::icon() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_mission_ranking.icon)
  return icon_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_mission_ranking::mutable_icon() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_mission_ranking.icon)
  return &icon_;
}

// repeated int32 ceng = 3;
inline int smsg_guild_mission_ranking::ceng_size() const {
  return ceng_.size();
}
inline void smsg_guild_mission_ranking::clear_ceng() {
  set_changed();
  ceng_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_mission_ranking::ceng(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_ranking.ceng)
  return ceng_.Get(index);
}
inline void smsg_guild_mission_ranking::set_ceng(int index, ::google::protobuf::int32 value) {
  set_changed();
  ceng_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_ranking.ceng)
}
inline void smsg_guild_mission_ranking::add_ceng(::google::protobuf::int32 value) {
  set_changed();
  ceng_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_mission_ranking.ceng)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_mission_ranking::ceng() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_mission_ranking.ceng)
  return ceng_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_mission_ranking::mutable_ceng() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_mission_ranking.ceng)
  return &ceng_;
}

// repeated int32 bot = 4;
inline int smsg_guild_mission_ranking::bot_size() const {
  return bot_.size();
}
inline void smsg_guild_mission_ranking::clear_bot() {
  set_changed();
  bot_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_mission_ranking::bot(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_ranking.bot)
  return bot_.Get(index);
}
inline void smsg_guild_mission_ranking::set_bot(int index, ::google::protobuf::int32 value) {
  set_changed();
  bot_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_ranking.bot)
}
inline void smsg_guild_mission_ranking::add_bot(::google::protobuf::int32 value) {
  set_changed();
  bot_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_mission_ranking.bot)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_mission_ranking::bot() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_mission_ranking.bot)
  return bot_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_mission_ranking::mutable_bot() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_mission_ranking.bot)
  return &bot_;
}

// repeated int64 hp = 5;
inline int smsg_guild_mission_ranking::hp_size() const {
  return hp_.size();
}
inline void smsg_guild_mission_ranking::clear_hp() {
  set_changed();
  hp_.Clear();
}
inline ::google::protobuf::int64 smsg_guild_mission_ranking::hp(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_ranking.hp)
  return hp_.Get(index);
}
inline void smsg_guild_mission_ranking::set_hp(int index, ::google::protobuf::int64 value) {
  set_changed();
  hp_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_ranking.hp)
}
inline void smsg_guild_mission_ranking::add_hp(::google::protobuf::int64 value) {
  set_changed();
  hp_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_mission_ranking.hp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
smsg_guild_mission_ranking::hp() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_mission_ranking.hp)
  return hp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
smsg_guild_mission_ranking::mutable_hp() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_mission_ranking.hp)
  return &hp_;
}

// repeated int64 max_hp = 6;
inline int smsg_guild_mission_ranking::max_hp_size() const {
  return max_hp_.size();
}
inline void smsg_guild_mission_ranking::clear_max_hp() {
  set_changed();
  max_hp_.Clear();
}
inline ::google::protobuf::int64 smsg_guild_mission_ranking::max_hp(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_ranking.max_hp)
  return max_hp_.Get(index);
}
inline void smsg_guild_mission_ranking::set_max_hp(int index, ::google::protobuf::int64 value) {
  set_changed();
  max_hp_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_ranking.max_hp)
}
inline void smsg_guild_mission_ranking::add_max_hp(::google::protobuf::int64 value) {
  set_changed();
  max_hp_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_mission_ranking.max_hp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
smsg_guild_mission_ranking::max_hp() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_mission_ranking.max_hp)
  return max_hp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
smsg_guild_mission_ranking::mutable_max_hp() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_mission_ranking.max_hp)
  return &max_hp_;
}

// repeated int32 guild_level = 7;
inline int smsg_guild_mission_ranking::guild_level_size() const {
  return guild_level_.size();
}
inline void smsg_guild_mission_ranking::clear_guild_level() {
  set_changed();
  guild_level_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_mission_ranking::guild_level(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_ranking.guild_level)
  return guild_level_.Get(index);
}
inline void smsg_guild_mission_ranking::set_guild_level(int index, ::google::protobuf::int32 value) {
  set_changed();
  guild_level_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_ranking.guild_level)
}
inline void smsg_guild_mission_ranking::add_guild_level(::google::protobuf::int32 value) {
  set_changed();
  guild_level_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_mission_ranking.guild_level)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_mission_ranking::guild_level() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_mission_ranking.guild_level)
  return guild_level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_mission_ranking::mutable_guild_level() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_mission_ranking.guild_level)
  return &guild_level_;
}

// -------------------------------------------------------------------

// smsg_guild_activity

// int32 sign_flag = 1;
inline void smsg_guild_activity::clear_sign_flag() {
  set_changed();
  sign_flag_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_activity::sign_flag() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_activity.sign_flag)
  return sign_flag_;
}
inline void smsg_guild_activity::set_sign_flag(::google::protobuf::int32 value) {
  set_changed();
  
  sign_flag_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_activity.sign_flag)
}

// repeated int32 mobai_ids = 2;
inline int smsg_guild_activity::mobai_ids_size() const {
  return mobai_ids_.size();
}
inline void smsg_guild_activity::clear_mobai_ids() {
  set_changed();
  mobai_ids_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_activity::mobai_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_activity.mobai_ids)
  return mobai_ids_.Get(index);
}
inline void smsg_guild_activity::set_mobai_ids(int index, ::google::protobuf::int32 value) {
  set_changed();
  mobai_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_activity.mobai_ids)
}
inline void smsg_guild_activity::add_mobai_ids(::google::protobuf::int32 value) {
  set_changed();
  mobai_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_activity.mobai_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_activity::mobai_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_activity.mobai_ids)
  return mobai_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_activity::mutable_mobai_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_activity.mobai_ids)
  return &mobai_ids_;
}

// -------------------------------------------------------------------

// cmsg_guild_shop_buy

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_shop_buy::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_shop_buy::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_shop_buy::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_shop_buy::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_shop_buy.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_shop_buy::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_shop_buy.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_shop_buy::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_shop_buy.comm)
  return comm_;
}
inline void cmsg_guild_shop_buy::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_shop_buy.comm)
}

// int32 shop_id = 2;
inline void cmsg_guild_shop_buy::clear_shop_id() {
  set_changed();
  shop_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_shop_buy::shop_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_shop_buy.shop_id)
  return shop_id_;
}
inline void cmsg_guild_shop_buy::set_shop_id(::google::protobuf::int32 value) {
  set_changed();
  
  shop_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_shop_buy.shop_id)
}

// -------------------------------------------------------------------

// smsg_guild_mission_look

// .dhc.guild_mission_t mission = 1;
inline bool smsg_guild_mission_look::has_mission() const {
  return this != internal_default_instance() && mission_ != NULL;
}
inline const ::dhc::guild_mission_t& smsg_guild_mission_look::_internal_mission() const {
  return *mission_;
}
inline const ::dhc::guild_mission_t& smsg_guild_mission_look::mission() const {
  const ::dhc::guild_mission_t* p = mission_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_look.mission)
  return p != NULL ? *p : *reinterpret_cast<const ::dhc::guild_mission_t*>(
      &::dhc::_guild_mission_t_default_instance_);
}
inline ::dhc::guild_mission_t* smsg_guild_mission_look::release_mission() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_guild_mission_look.mission)
  
  ::dhc::guild_mission_t* temp = mission_;
  mission_ = NULL;
  return temp;
}
inline ::dhc::guild_mission_t* smsg_guild_mission_look::mutable_mission() {
  
  if (mission_ == NULL) {
    auto* p = CreateMaybeMessage<::dhc::guild_mission_t>(GetArenaNoVirtual());
    mission_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_mission_look.mission)
  return mission_;
}
inline void smsg_guild_mission_look::set_allocated_mission(::dhc::guild_mission_t* mission) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mission_);
  }
  if (mission) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mission = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mission, submessage_arena);
    }
    
  } else {
    
  }
  mission_ = mission;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_guild_mission_look.mission)
}

// int32 num = 2;
inline void smsg_guild_mission_look::clear_num() {
  set_changed();
  num_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_mission_look::num() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_look.num)
  return num_;
}
inline void smsg_guild_mission_look::set_num(::google::protobuf::int32 value) {
  set_changed();
  
  num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_look.num)
}

// int32 buy_num = 3;
inline void smsg_guild_mission_look::clear_buy_num() {
  set_changed();
  buy_num_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_mission_look::buy_num() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_look.buy_num)
  return buy_num_;
}
inline void smsg_guild_mission_look::set_buy_num(::google::protobuf::int32 value) {
  set_changed();
  
  buy_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_look.buy_num)
}

// uint64 last_time = 4;
inline void smsg_guild_mission_look::clear_last_time() {
  set_changed();
  last_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_guild_mission_look::last_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_look.last_time)
  return last_time_;
}
inline void smsg_guild_mission_look::set_last_time(::google::protobuf::uint64 value) {
  set_changed();
  
  last_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_look.last_time)
}

// repeated int32 mission_rewards = 5;
inline int smsg_guild_mission_look::mission_rewards_size() const {
  return mission_rewards_.size();
}
inline void smsg_guild_mission_look::clear_mission_rewards() {
  set_changed();
  mission_rewards_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_mission_look::mission_rewards(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_look.mission_rewards)
  return mission_rewards_.Get(index);
}
inline void smsg_guild_mission_look::set_mission_rewards(int index, ::google::protobuf::int32 value) {
  set_changed();
  mission_rewards_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_look.mission_rewards)
}
inline void smsg_guild_mission_look::add_mission_rewards(::google::protobuf::int32 value) {
  set_changed();
  mission_rewards_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_mission_look.mission_rewards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_mission_look::mission_rewards() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_mission_look.mission_rewards)
  return mission_rewards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_mission_look::mutable_mission_rewards() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_mission_look.mission_rewards)
  return &mission_rewards_;
}

// -------------------------------------------------------------------

// cmsg_guild_mission_fight_end

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_mission_fight_end::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_mission_fight_end::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_mission_fight_end::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_mission_fight_end::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_mission_fight_end.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_mission_fight_end::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_mission_fight_end.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_mission_fight_end::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_mission_fight_end.comm)
  return comm_;
}
inline void cmsg_guild_mission_fight_end::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_mission_fight_end.comm)
}

// int32 index = 2;
inline void cmsg_guild_mission_fight_end::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_mission_fight_end::index() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_mission_fight_end.index)
  return index_;
}
inline void cmsg_guild_mission_fight_end::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_mission_fight_end.index)
}

// -------------------------------------------------------------------

// smsg_guild_mission_fight_end

// int32 result = 1;
inline void smsg_guild_mission_fight_end::clear_result() {
  set_changed();
  result_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_mission_fight_end::result() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_fight_end.result)
  return result_;
}
inline void smsg_guild_mission_fight_end::set_result(::google::protobuf::int32 value) {
  set_changed();
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_fight_end.result)
}

// bytes text = 2;
inline void smsg_guild_mission_fight_end::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_guild_mission_fight_end::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_fight_end.text)
  return text_.GetNoArena();
}
inline void smsg_guild_mission_fight_end::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_fight_end.text)
}
#if LANG_CXX11
inline void smsg_guild_mission_fight_end::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_guild_mission_fight_end.text)
}
#endif
inline void smsg_guild_mission_fight_end::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_guild_mission_fight_end.text)
}
inline void smsg_guild_mission_fight_end::set_text(const void* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_guild_mission_fight_end.text)
}
inline ::std::string* smsg_guild_mission_fight_end::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_mission_fight_end.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_guild_mission_fight_end::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_guild_mission_fight_end.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_guild_mission_fight_end::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_guild_mission_fight_end.text)
}

// int32 contri = 3;
inline void smsg_guild_mission_fight_end::clear_contri() {
  set_changed();
  contri_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_mission_fight_end::contri() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_fight_end.contri)
  return contri_;
}
inline void smsg_guild_mission_fight_end::set_contri(::google::protobuf::int32 value) {
  set_changed();
  
  contri_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_fight_end.contri)
}

// int32 hit_contri = 4;
inline void smsg_guild_mission_fight_end::clear_hit_contri() {
  set_changed();
  hit_contri_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_mission_fight_end::hit_contri() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_fight_end.hit_contri)
  return hit_contri_;
}
inline void smsg_guild_mission_fight_end::set_hit_contri(::google::protobuf::int32 value) {
  set_changed();
  
  hit_contri_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_fight_end.hit_contri)
}

// double hit = 5;
inline void smsg_guild_mission_fight_end::clear_hit() {
  set_changed();
  hit_ = 0;
}
inline double smsg_guild_mission_fight_end::hit() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_fight_end.hit)
  return hit_;
}
inline void smsg_guild_mission_fight_end::set_hit(double value) {
  set_changed();
  
  hit_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_fight_end.hit)
}

// -------------------------------------------------------------------

// cmsg_guild_mission_complete_reward_view

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_mission_complete_reward_view::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_mission_complete_reward_view::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_mission_complete_reward_view::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_mission_complete_reward_view::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_mission_complete_reward_view.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_mission_complete_reward_view::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_mission_complete_reward_view.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_mission_complete_reward_view::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_mission_complete_reward_view.comm)
  return comm_;
}
inline void cmsg_guild_mission_complete_reward_view::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_mission_complete_reward_view.comm)
}

// int32 ceng = 2;
inline void cmsg_guild_mission_complete_reward_view::clear_ceng() {
  set_changed();
  ceng_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_mission_complete_reward_view::ceng() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_mission_complete_reward_view.ceng)
  return ceng_;
}
inline void cmsg_guild_mission_complete_reward_view::set_ceng(::google::protobuf::int32 value) {
  set_changed();
  
  ceng_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_mission_complete_reward_view.ceng)
}

// -------------------------------------------------------------------

// smsg_guild_mission_complete_reward_view

// repeated .dhc.guild_box_t boxes = 1;
inline int smsg_guild_mission_complete_reward_view::boxes_size() const {
  return boxes_.size();
}
inline ::dhc::guild_box_t* smsg_guild_mission_complete_reward_view::mutable_boxes(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_mission_complete_reward_view.boxes)
  return boxes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::guild_box_t >*
smsg_guild_mission_complete_reward_view::mutable_boxes() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_mission_complete_reward_view.boxes)
  return &boxes_;
}
inline const ::dhc::guild_box_t& smsg_guild_mission_complete_reward_view::boxes(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_complete_reward_view.boxes)
  return boxes_.Get(index);
}
inline ::dhc::guild_box_t* smsg_guild_mission_complete_reward_view::add_boxes() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_mission_complete_reward_view.boxes)
  return boxes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::guild_box_t >&
smsg_guild_mission_complete_reward_view::boxes() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_mission_complete_reward_view.boxes)
  return boxes_;
}

// -------------------------------------------------------------------

// cmsg_guild_mission_complete_reward

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_mission_complete_reward::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_mission_complete_reward::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_mission_complete_reward::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_mission_complete_reward::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_mission_complete_reward.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_mission_complete_reward::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_mission_complete_reward.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_mission_complete_reward::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_mission_complete_reward.comm)
  return comm_;
}
inline void cmsg_guild_mission_complete_reward::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_mission_complete_reward.comm)
}

// int32 ceng = 2;
inline void cmsg_guild_mission_complete_reward::clear_ceng() {
  set_changed();
  ceng_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_mission_complete_reward::ceng() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_mission_complete_reward.ceng)
  return ceng_;
}
inline void cmsg_guild_mission_complete_reward::set_ceng(::google::protobuf::int32 value) {
  set_changed();
  
  ceng_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_mission_complete_reward.ceng)
}

// int32 index = 3;
inline void cmsg_guild_mission_complete_reward::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_mission_complete_reward::index() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_mission_complete_reward.index)
  return index_;
}
inline void cmsg_guild_mission_complete_reward::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_mission_complete_reward.index)
}

// int32 box = 4;
inline void cmsg_guild_mission_complete_reward::clear_box() {
  set_changed();
  box_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_mission_complete_reward::box() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_mission_complete_reward.box)
  return box_;
}
inline void cmsg_guild_mission_complete_reward::set_box(::google::protobuf::int32 value) {
  set_changed();
  
  box_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_mission_complete_reward.box)
}

// -------------------------------------------------------------------

// smsg_guild_mission_complete_reward

// int32 reward_index = 1;
inline void smsg_guild_mission_complete_reward::clear_reward_index() {
  set_changed();
  reward_index_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_mission_complete_reward::reward_index() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_mission_complete_reward.reward_index)
  return reward_index_;
}
inline void smsg_guild_mission_complete_reward::set_reward_index(::google::protobuf::int32 value) {
  set_changed();
  
  reward_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_mission_complete_reward.reward_index)
}

// -------------------------------------------------------------------

// cmsg_guild_mission_ceng_reward

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_mission_ceng_reward::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_mission_ceng_reward::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_mission_ceng_reward::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_mission_ceng_reward::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_mission_ceng_reward.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_mission_ceng_reward::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_mission_ceng_reward.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_mission_ceng_reward::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_mission_ceng_reward.comm)
  return comm_;
}
inline void cmsg_guild_mission_ceng_reward::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_mission_ceng_reward.comm)
}

// int32 ceng = 2;
inline void cmsg_guild_mission_ceng_reward::clear_ceng() {
  set_changed();
  ceng_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_mission_ceng_reward::ceng() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_mission_ceng_reward.ceng)
  return ceng_;
}
inline void cmsg_guild_mission_ceng_reward::set_ceng(::google::protobuf::int32 value) {
  set_changed();
  
  ceng_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_mission_ceng_reward.ceng)
}

// -------------------------------------------------------------------

// cmsg_guild_keji

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_keji::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_keji::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_keji::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_keji::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_keji.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_keji::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_keji.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_keji::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_keji.comm)
  return comm_;
}
inline void cmsg_guild_keji::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_keji.comm)
}

// int32 id = 2;
inline void cmsg_guild_keji::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_keji::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_keji.id)
  return id_;
}
inline void cmsg_guild_keji::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_keji.id)
}

// -------------------------------------------------------------------

// cmsg_guild_red_deliver

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_red_deliver::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_red_deliver::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_red_deliver::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_red_deliver::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_red_deliver.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_red_deliver::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_red_deliver.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_red_deliver::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_red_deliver.comm)
  return comm_;
}
inline void cmsg_guild_red_deliver::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_red_deliver.comm)
}

// int32 id = 2;
inline void cmsg_guild_red_deliver::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_red_deliver::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_red_deliver.id)
  return id_;
}
inline void cmsg_guild_red_deliver::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_red_deliver.id)
}

// string text = 3;
inline void cmsg_guild_red_deliver::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_guild_red_deliver::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_red_deliver.text)
  return text_.GetNoArena();
}
inline void cmsg_guild_red_deliver::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_red_deliver.text)
}
#if LANG_CXX11
inline void cmsg_guild_red_deliver::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_guild_red_deliver.text)
}
#endif
inline void cmsg_guild_red_deliver::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_guild_red_deliver.text)
}
inline void cmsg_guild_red_deliver::set_text(const char* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_guild_red_deliver.text)
}
inline ::std::string* cmsg_guild_red_deliver::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_red_deliver.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_guild_red_deliver::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_red_deliver.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_guild_red_deliver::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_red_deliver.text)
}

// -------------------------------------------------------------------

// smsg_guild_red_deliver

// .dhc.guild_red_t guild_red = 1;
inline bool smsg_guild_red_deliver::has_guild_red() const {
  return this != internal_default_instance() && guild_red_ != NULL;
}
inline const ::dhc::guild_red_t& smsg_guild_red_deliver::_internal_guild_red() const {
  return *guild_red_;
}
inline const ::dhc::guild_red_t& smsg_guild_red_deliver::guild_red() const {
  const ::dhc::guild_red_t* p = guild_red_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_red_deliver.guild_red)
  return p != NULL ? *p : *reinterpret_cast<const ::dhc::guild_red_t*>(
      &::dhc::_guild_red_t_default_instance_);
}
inline ::dhc::guild_red_t* smsg_guild_red_deliver::release_guild_red() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_guild_red_deliver.guild_red)
  
  ::dhc::guild_red_t* temp = guild_red_;
  guild_red_ = NULL;
  return temp;
}
inline ::dhc::guild_red_t* smsg_guild_red_deliver::mutable_guild_red() {
  
  if (guild_red_ == NULL) {
    auto* p = CreateMaybeMessage<::dhc::guild_red_t>(GetArenaNoVirtual());
    guild_red_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_red_deliver.guild_red)
  return guild_red_;
}
inline void smsg_guild_red_deliver::set_allocated_guild_red(::dhc::guild_red_t* guild_red) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(guild_red_);
  }
  if (guild_red) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      guild_red = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, guild_red, submessage_arena);
    }
    
  } else {
    
  }
  guild_red_ = guild_red;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_guild_red_deliver.guild_red)
}

// -------------------------------------------------------------------

// smsg_guild_red_view

// repeated .dhc.guild_red_t guild_reds = 1;
inline int smsg_guild_red_view::guild_reds_size() const {
  return guild_reds_.size();
}
inline ::dhc::guild_red_t* smsg_guild_red_view::mutable_guild_reds(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_red_view.guild_reds)
  return guild_reds_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::guild_red_t >*
smsg_guild_red_view::mutable_guild_reds() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_red_view.guild_reds)
  return &guild_reds_;
}
inline const ::dhc::guild_red_t& smsg_guild_red_view::guild_reds(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_red_view.guild_reds)
  return guild_reds_.Get(index);
}
inline ::dhc::guild_red_t* smsg_guild_red_view::add_guild_reds() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_red_view.guild_reds)
  return guild_reds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::guild_red_t >&
smsg_guild_red_view::guild_reds() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_red_view.guild_reds)
  return guild_reds_;
}

// -------------------------------------------------------------------

// cmsg_guild_red_rob

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_red_rob::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_red_rob::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_red_rob::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_red_rob::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_red_rob.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_red_rob::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_red_rob.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_red_rob::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_red_rob.comm)
  return comm_;
}
inline void cmsg_guild_red_rob::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_red_rob.comm)
}

// uint64 guid = 2;
inline void cmsg_guild_red_rob::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_guild_red_rob::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_red_rob.guid)
  return guid_;
}
inline void cmsg_guild_red_rob::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_red_rob.guid)
}

// -------------------------------------------------------------------

// smsg_guild_red_rob

// int32 jewel = 1;
inline void smsg_guild_red_rob::clear_jewel() {
  set_changed();
  jewel_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_red_rob::jewel() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_red_rob.jewel)
  return jewel_;
}
inline void smsg_guild_red_rob::set_jewel(::google::protobuf::int32 value) {
  set_changed();
  
  jewel_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_red_rob.jewel)
}

// -------------------------------------------------------------------

// cmsg_guild_red_target

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_red_target::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_red_target::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_red_target::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_red_target::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_red_target.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_red_target::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_red_target.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_red_target::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_red_target.comm)
  return comm_;
}
inline void cmsg_guild_red_target::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_red_target.comm)
}

// int32 id = 2;
inline void cmsg_guild_red_target::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_red_target::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_red_target.id)
  return id_;
}
inline void cmsg_guild_red_target::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_red_target.id)
}

// -------------------------------------------------------------------

// cmsg_guild_look_zhankuang

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_look_zhankuang::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_look_zhankuang::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_look_zhankuang::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_look_zhankuang::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_look_zhankuang.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_look_zhankuang::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_look_zhankuang.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_look_zhankuang::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_look_zhankuang.comm)
  return comm_;
}
inline void cmsg_guild_look_zhankuang::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_look_zhankuang.comm)
}

// uint64 guild = 2;
inline void cmsg_guild_look_zhankuang::clear_guild() {
  set_changed();
  guild_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_guild_look_zhankuang::guild() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_look_zhankuang.guild)
  return guild_;
}
inline void cmsg_guild_look_zhankuang::set_guild(::google::protobuf::uint64 value) {
  set_changed();
  
  guild_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_look_zhankuang.guild)
}

// int32 type = 3;
inline void cmsg_guild_look_zhankuang::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_look_zhankuang::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_look_zhankuang.type)
  return type_;
}
inline void cmsg_guild_look_zhankuang::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_look_zhankuang.type)
}

// -------------------------------------------------------------------

// smsg_guild_look_zhankuang

// repeated string guild_name = 1;
inline int smsg_guild_look_zhankuang::guild_name_size() const {
  return guild_name_.size();
}
inline void smsg_guild_look_zhankuang::clear_guild_name() {
  set_changed();
  guild_name_.Clear();
}
inline const ::std::string& smsg_guild_look_zhankuang::guild_name(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhankuang.guild_name)
  return guild_name_.Get(index);
}
inline ::std::string* smsg_guild_look_zhankuang::mutable_guild_name(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_look_zhankuang.guild_name)
  return guild_name_.Mutable(index);
}
inline void smsg_guild_look_zhankuang::set_guild_name(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhankuang.guild_name)
  guild_name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void smsg_guild_look_zhankuang::set_guild_name(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhankuang.guild_name)
  guild_name_.Mutable(index)->assign(std::move(value));
}
#endif
inline void smsg_guild_look_zhankuang::set_guild_name(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  guild_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_guild_look_zhankuang.guild_name)
}
inline void smsg_guild_look_zhankuang::set_guild_name(int index, const char* value, size_t size) {
  set_changed();
  guild_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_guild_look_zhankuang.guild_name)
}
inline ::std::string* smsg_guild_look_zhankuang::add_guild_name() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.smsg_guild_look_zhankuang.guild_name)
  return guild_name_.Add();
}
inline void smsg_guild_look_zhankuang::add_guild_name(const ::std::string& value) {
  set_changed();
  guild_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhankuang.guild_name)
}
#if LANG_CXX11
inline void smsg_guild_look_zhankuang::add_guild_name(::std::string&& value) {
  set_changed();
  guild_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhankuang.guild_name)
}
#endif
inline void smsg_guild_look_zhankuang::add_guild_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  guild_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.smsg_guild_look_zhankuang.guild_name)
}
inline void smsg_guild_look_zhankuang::add_guild_name(const char* value, size_t size) {
  set_changed();
  guild_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.smsg_guild_look_zhankuang.guild_name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
smsg_guild_look_zhankuang::guild_name() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_look_zhankuang.guild_name)
  return guild_name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
smsg_guild_look_zhankuang::mutable_guild_name() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_look_zhankuang.guild_name)
  return &guild_name_;
}

// repeated int32 guild_icon = 2;
inline int smsg_guild_look_zhankuang::guild_icon_size() const {
  return guild_icon_.size();
}
inline void smsg_guild_look_zhankuang::clear_guild_icon() {
  set_changed();
  guild_icon_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_look_zhankuang::guild_icon(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhankuang.guild_icon)
  return guild_icon_.Get(index);
}
inline void smsg_guild_look_zhankuang::set_guild_icon(int index, ::google::protobuf::int32 value) {
  set_changed();
  guild_icon_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhankuang.guild_icon)
}
inline void smsg_guild_look_zhankuang::add_guild_icon(::google::protobuf::int32 value) {
  set_changed();
  guild_icon_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhankuang.guild_icon)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_look_zhankuang::guild_icon() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_look_zhankuang.guild_icon)
  return guild_icon_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_look_zhankuang::mutable_guild_icon() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_look_zhankuang.guild_icon)
  return &guild_icon_;
}

// int32 guild_zhanji = 3;
inline void smsg_guild_look_zhankuang::clear_guild_zhanji() {
  set_changed();
  guild_zhanji_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_look_zhankuang::guild_zhanji() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhankuang.guild_zhanji)
  return guild_zhanji_;
}
inline void smsg_guild_look_zhankuang::set_guild_zhanji(::google::protobuf::int32 value) {
  set_changed();
  
  guild_zhanji_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhankuang.guild_zhanji)
}

// repeated int32 guild_player_nums = 4;
inline int smsg_guild_look_zhankuang::guild_player_nums_size() const {
  return guild_player_nums_.size();
}
inline void smsg_guild_look_zhankuang::clear_guild_player_nums() {
  set_changed();
  guild_player_nums_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_look_zhankuang::guild_player_nums(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhankuang.guild_player_nums)
  return guild_player_nums_.Get(index);
}
inline void smsg_guild_look_zhankuang::set_guild_player_nums(int index, ::google::protobuf::int32 value) {
  set_changed();
  guild_player_nums_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhankuang.guild_player_nums)
}
inline void smsg_guild_look_zhankuang::add_guild_player_nums(::google::protobuf::int32 value) {
  set_changed();
  guild_player_nums_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhankuang.guild_player_nums)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_look_zhankuang::guild_player_nums() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_look_zhankuang.guild_player_nums)
  return guild_player_nums_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_look_zhankuang::mutable_guild_player_nums() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_look_zhankuang.guild_player_nums)
  return &guild_player_nums_;
}

// repeated int32 guild_val_nums = 5;
inline int smsg_guild_look_zhankuang::guild_val_nums_size() const {
  return guild_val_nums_.size();
}
inline void smsg_guild_look_zhankuang::clear_guild_val_nums() {
  set_changed();
  guild_val_nums_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_look_zhankuang::guild_val_nums(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhankuang.guild_val_nums)
  return guild_val_nums_.Get(index);
}
inline void smsg_guild_look_zhankuang::set_guild_val_nums(int index, ::google::protobuf::int32 value) {
  set_changed();
  guild_val_nums_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhankuang.guild_val_nums)
}
inline void smsg_guild_look_zhankuang::add_guild_val_nums(::google::protobuf::int32 value) {
  set_changed();
  guild_val_nums_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhankuang.guild_val_nums)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_look_zhankuang::guild_val_nums() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_look_zhankuang.guild_val_nums)
  return guild_val_nums_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_look_zhankuang::mutable_guild_val_nums() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_look_zhankuang.guild_val_nums)
  return &guild_val_nums_;
}

// repeated int32 guild_level = 6;
inline int smsg_guild_look_zhankuang::guild_level_size() const {
  return guild_level_.size();
}
inline void smsg_guild_look_zhankuang::clear_guild_level() {
  set_changed();
  guild_level_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_look_zhankuang::guild_level(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhankuang.guild_level)
  return guild_level_.Get(index);
}
inline void smsg_guild_look_zhankuang::set_guild_level(int index, ::google::protobuf::int32 value) {
  set_changed();
  guild_level_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhankuang.guild_level)
}
inline void smsg_guild_look_zhankuang::add_guild_level(::google::protobuf::int32 value) {
  set_changed();
  guild_level_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhankuang.guild_level)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_look_zhankuang::guild_level() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_look_zhankuang.guild_level)
  return guild_level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_look_zhankuang::mutable_guild_level() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_look_zhankuang.guild_level)
  return &guild_level_;
}

// -------------------------------------------------------------------

// cmsg_guild_look_zhanji

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_look_zhanji::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_look_zhanji::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_look_zhanji::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_look_zhanji::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_look_zhanji.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_look_zhanji::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_look_zhanji.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_look_zhanji::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_look_zhanji.comm)
  return comm_;
}
inline void cmsg_guild_look_zhanji::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_look_zhanji.comm)
}

// uint64 guild = 2;
inline void cmsg_guild_look_zhanji::clear_guild() {
  set_changed();
  guild_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_guild_look_zhanji::guild() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_look_zhanji.guild)
  return guild_;
}
inline void cmsg_guild_look_zhanji::set_guild(::google::protobuf::uint64 value) {
  set_changed();
  
  guild_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_look_zhanji.guild)
}

// -------------------------------------------------------------------

// smsg_guild_look_zhanji

// repeated uint64 player_guids = 10;
inline int smsg_guild_look_zhanji::player_guids_size() const {
  return player_guids_.size();
}
inline void smsg_guild_look_zhanji::clear_player_guids() {
  set_changed();
  player_guids_.Clear();
}
inline ::google::protobuf::uint64 smsg_guild_look_zhanji::player_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhanji.player_guids)
  return player_guids_.Get(index);
}
inline void smsg_guild_look_zhanji::set_player_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhanji.player_guids)
}
inline void smsg_guild_look_zhanji::add_player_guids(::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhanji.player_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
smsg_guild_look_zhanji::player_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_look_zhanji.player_guids)
  return player_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
smsg_guild_look_zhanji::mutable_player_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_look_zhanji.player_guids)
  return &player_guids_;
}

// repeated string player_names = 11;
inline int smsg_guild_look_zhanji::player_names_size() const {
  return player_names_.size();
}
inline void smsg_guild_look_zhanji::clear_player_names() {
  set_changed();
  player_names_.Clear();
}
inline const ::std::string& smsg_guild_look_zhanji::player_names(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhanji.player_names)
  return player_names_.Get(index);
}
inline ::std::string* smsg_guild_look_zhanji::mutable_player_names(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_look_zhanji.player_names)
  return player_names_.Mutable(index);
}
inline void smsg_guild_look_zhanji::set_player_names(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhanji.player_names)
  player_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void smsg_guild_look_zhanji::set_player_names(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhanji.player_names)
  player_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void smsg_guild_look_zhanji::set_player_names(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  player_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_guild_look_zhanji.player_names)
}
inline void smsg_guild_look_zhanji::set_player_names(int index, const char* value, size_t size) {
  set_changed();
  player_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_guild_look_zhanji.player_names)
}
inline ::std::string* smsg_guild_look_zhanji::add_player_names() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.smsg_guild_look_zhanji.player_names)
  return player_names_.Add();
}
inline void smsg_guild_look_zhanji::add_player_names(const ::std::string& value) {
  set_changed();
  player_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhanji.player_names)
}
#if LANG_CXX11
inline void smsg_guild_look_zhanji::add_player_names(::std::string&& value) {
  set_changed();
  player_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhanji.player_names)
}
#endif
inline void smsg_guild_look_zhanji::add_player_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  player_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.smsg_guild_look_zhanji.player_names)
}
inline void smsg_guild_look_zhanji::add_player_names(const char* value, size_t size) {
  set_changed();
  player_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.smsg_guild_look_zhanji.player_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
smsg_guild_look_zhanji::player_names() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_look_zhanji.player_names)
  return player_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
smsg_guild_look_zhanji::mutable_player_names() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_look_zhanji.player_names)
  return &player_names_;
}

// repeated int32 player_template = 12;
inline int smsg_guild_look_zhanji::player_template_size() const {
  return player_template_.size();
}
inline void smsg_guild_look_zhanji::clear_player_template() {
  set_changed();
  player_template_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_look_zhanji::player_template(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhanji.player_template)
  return player_template_.Get(index);
}
inline void smsg_guild_look_zhanji::set_player_template(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_template_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhanji.player_template)
}
inline void smsg_guild_look_zhanji::add_player_template(::google::protobuf::int32 value) {
  set_changed();
  player_template_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhanji.player_template)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_look_zhanji::player_template() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_look_zhanji.player_template)
  return player_template_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_look_zhanji::mutable_player_template() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_look_zhanji.player_template)
  return &player_template_;
}

// repeated int32 player_level = 13;
inline int smsg_guild_look_zhanji::player_level_size() const {
  return player_level_.size();
}
inline void smsg_guild_look_zhanji::clear_player_level() {
  set_changed();
  player_level_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_look_zhanji::player_level(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhanji.player_level)
  return player_level_.Get(index);
}
inline void smsg_guild_look_zhanji::set_player_level(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_level_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhanji.player_level)
}
inline void smsg_guild_look_zhanji::add_player_level(::google::protobuf::int32 value) {
  set_changed();
  player_level_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhanji.player_level)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_look_zhanji::player_level() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_look_zhanji.player_level)
  return player_level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_look_zhanji::mutable_player_level() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_look_zhanji.player_level)
  return &player_level_;
}

// repeated int32 player_bat_eff = 14;
inline int smsg_guild_look_zhanji::player_bat_eff_size() const {
  return player_bat_eff_.size();
}
inline void smsg_guild_look_zhanji::clear_player_bat_eff() {
  set_changed();
  player_bat_eff_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_look_zhanji::player_bat_eff(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhanji.player_bat_eff)
  return player_bat_eff_.Get(index);
}
inline void smsg_guild_look_zhanji::set_player_bat_eff(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_bat_eff_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhanji.player_bat_eff)
}
inline void smsg_guild_look_zhanji::add_player_bat_eff(::google::protobuf::int32 value) {
  set_changed();
  player_bat_eff_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhanji.player_bat_eff)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_look_zhanji::player_bat_eff() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_look_zhanji.player_bat_eff)
  return player_bat_eff_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_look_zhanji::mutable_player_bat_eff() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_look_zhanji.player_bat_eff)
  return &player_bat_eff_;
}

// repeated int32 player_vip = 15;
inline int smsg_guild_look_zhanji::player_vip_size() const {
  return player_vip_.size();
}
inline void smsg_guild_look_zhanji::clear_player_vip() {
  set_changed();
  player_vip_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_look_zhanji::player_vip(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhanji.player_vip)
  return player_vip_.Get(index);
}
inline void smsg_guild_look_zhanji::set_player_vip(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_vip_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhanji.player_vip)
}
inline void smsg_guild_look_zhanji::add_player_vip(::google::protobuf::int32 value) {
  set_changed();
  player_vip_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhanji.player_vip)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_look_zhanji::player_vip() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_look_zhanji.player_vip)
  return player_vip_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_look_zhanji::mutable_player_vip() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_look_zhanji.player_vip)
  return &player_vip_;
}

// repeated int32 player_achieve = 16;
inline int smsg_guild_look_zhanji::player_achieve_size() const {
  return player_achieve_.size();
}
inline void smsg_guild_look_zhanji::clear_player_achieve() {
  set_changed();
  player_achieve_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_look_zhanji::player_achieve(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhanji.player_achieve)
  return player_achieve_.Get(index);
}
inline void smsg_guild_look_zhanji::set_player_achieve(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_achieve_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhanji.player_achieve)
}
inline void smsg_guild_look_zhanji::add_player_achieve(::google::protobuf::int32 value) {
  set_changed();
  player_achieve_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhanji.player_achieve)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_look_zhanji::player_achieve() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_look_zhanji.player_achieve)
  return player_achieve_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_look_zhanji::mutable_player_achieve() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_look_zhanji.player_achieve)
  return &player_achieve_;
}

// repeated int32 player_zhanjis = 17;
inline int smsg_guild_look_zhanji::player_zhanjis_size() const {
  return player_zhanjis_.size();
}
inline void smsg_guild_look_zhanji::clear_player_zhanjis() {
  set_changed();
  player_zhanjis_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_look_zhanji::player_zhanjis(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhanji.player_zhanjis)
  return player_zhanjis_.Get(index);
}
inline void smsg_guild_look_zhanji::set_player_zhanjis(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_zhanjis_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhanji.player_zhanjis)
}
inline void smsg_guild_look_zhanji::add_player_zhanjis(::google::protobuf::int32 value) {
  set_changed();
  player_zhanjis_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhanji.player_zhanjis)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_look_zhanji::player_zhanjis() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_look_zhanji.player_zhanjis)
  return player_zhanjis_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_look_zhanji::mutable_player_zhanjis() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_look_zhanji.player_zhanjis)
  return &player_zhanjis_;
}

// repeated int32 player_total_zhanjis = 18;
inline int smsg_guild_look_zhanji::player_total_zhanjis_size() const {
  return player_total_zhanjis_.size();
}
inline void smsg_guild_look_zhanji::clear_player_total_zhanjis() {
  set_changed();
  player_total_zhanjis_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_look_zhanji::player_total_zhanjis(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhanji.player_total_zhanjis)
  return player_total_zhanjis_.Get(index);
}
inline void smsg_guild_look_zhanji::set_player_total_zhanjis(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_total_zhanjis_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhanji.player_total_zhanjis)
}
inline void smsg_guild_look_zhanji::add_player_total_zhanjis(::google::protobuf::int32 value) {
  set_changed();
  player_total_zhanjis_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhanji.player_total_zhanjis)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_look_zhanji::player_total_zhanjis() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_look_zhanji.player_total_zhanjis)
  return player_total_zhanjis_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_look_zhanji::mutable_player_total_zhanjis() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_look_zhanji.player_total_zhanjis)
  return &player_total_zhanjis_;
}

// repeated int32 player_nalflags = 19;
inline int smsg_guild_look_zhanji::player_nalflags_size() const {
  return player_nalflags_.size();
}
inline void smsg_guild_look_zhanji::clear_player_nalflags() {
  set_changed();
  player_nalflags_.Clear();
}
inline ::google::protobuf::int32 smsg_guild_look_zhanji::player_nalflags(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_look_zhanji.player_nalflags)
  return player_nalflags_.Get(index);
}
inline void smsg_guild_look_zhanji::set_player_nalflags(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_nalflags_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_look_zhanji.player_nalflags)
}
inline void smsg_guild_look_zhanji::add_player_nalflags(::google::protobuf::int32 value) {
  set_changed();
  player_nalflags_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_guild_look_zhanji.player_nalflags)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_guild_look_zhanji::player_nalflags() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_guild_look_zhanji.player_nalflags)
  return player_nalflags_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_guild_look_zhanji::mutable_player_nalflags() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_guild_look_zhanji.player_nalflags)
  return &player_nalflags_;
}

// -------------------------------------------------------------------

// tmsg_guild_pvp_load

// repeated .dhc.guild_arrange_t ars = 1;
inline int tmsg_guild_pvp_load::ars_size() const {
  return ars_.size();
}
inline ::dhc::guild_arrange_t* tmsg_guild_pvp_load::mutable_ars(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.tmsg_guild_pvp_load.ars)
  return ars_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::guild_arrange_t >*
tmsg_guild_pvp_load::mutable_ars() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.tmsg_guild_pvp_load.ars)
  return &ars_;
}
inline const ::dhc::guild_arrange_t& tmsg_guild_pvp_load::ars(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.tmsg_guild_pvp_load.ars)
  return ars_.Get(index);
}
inline ::dhc::guild_arrange_t* tmsg_guild_pvp_load::add_ars() {
  // @@protoc_insertion_point(field_add:protocol.game.tmsg_guild_pvp_load.ars)
  return ars_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::guild_arrange_t >&
tmsg_guild_pvp_load::ars() const {
  // @@protoc_insertion_point(field_list:protocol.game.tmsg_guild_pvp_load.ars)
  return ars_;
}

// -------------------------------------------------------------------

// tmsg_guild_pvp_load_fight

// repeated .dhc.guild_fight_t ars = 1;
inline int tmsg_guild_pvp_load_fight::ars_size() const {
  return ars_.size();
}
inline ::dhc::guild_fight_t* tmsg_guild_pvp_load_fight::mutable_ars(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.tmsg_guild_pvp_load_fight.ars)
  return ars_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::guild_fight_t >*
tmsg_guild_pvp_load_fight::mutable_ars() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.tmsg_guild_pvp_load_fight.ars)
  return &ars_;
}
inline const ::dhc::guild_fight_t& tmsg_guild_pvp_load_fight::ars(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.tmsg_guild_pvp_load_fight.ars)
  return ars_.Get(index);
}
inline ::dhc::guild_fight_t* tmsg_guild_pvp_load_fight::add_ars() {
  // @@protoc_insertion_point(field_add:protocol.game.tmsg_guild_pvp_load_fight.ars)
  return ars_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::guild_fight_t >&
tmsg_guild_pvp_load_fight::ars() const {
  // @@protoc_insertion_point(field_list:protocol.game.tmsg_guild_pvp_load_fight.ars)
  return ars_;
}

// -------------------------------------------------------------------

// msg_guild_member_info

// repeated uint64 player_guids = 1;
inline int msg_guild_member_info::player_guids_size() const {
  return player_guids_.size();
}
inline void msg_guild_member_info::clear_player_guids() {
  set_changed();
  player_guids_.Clear();
}
inline ::google::protobuf::uint64 msg_guild_member_info::player_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_member_info.player_guids)
  return player_guids_.Get(index);
}
inline void msg_guild_member_info::set_player_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_member_info.player_guids)
}
inline void msg_guild_member_info::add_player_guids(::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_member_info.player_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
msg_guild_member_info::player_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_member_info.player_guids)
  return player_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
msg_guild_member_info::mutable_player_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_member_info.player_guids)
  return &player_guids_;
}

// repeated string player_names = 2;
inline int msg_guild_member_info::player_names_size() const {
  return player_names_.size();
}
inline void msg_guild_member_info::clear_player_names() {
  set_changed();
  player_names_.Clear();
}
inline const ::std::string& msg_guild_member_info::player_names(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_member_info.player_names)
  return player_names_.Get(index);
}
inline ::std::string* msg_guild_member_info::mutable_player_names(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_guild_member_info.player_names)
  return player_names_.Mutable(index);
}
inline void msg_guild_member_info::set_player_names(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_member_info.player_names)
  player_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void msg_guild_member_info::set_player_names(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_member_info.player_names)
  player_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void msg_guild_member_info::set_player_names(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  player_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_guild_member_info.player_names)
}
inline void msg_guild_member_info::set_player_names(int index, const char* value, size_t size) {
  set_changed();
  player_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_guild_member_info.player_names)
}
inline ::std::string* msg_guild_member_info::add_player_names() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.msg_guild_member_info.player_names)
  return player_names_.Add();
}
inline void msg_guild_member_info::add_player_names(const ::std::string& value) {
  set_changed();
  player_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_member_info.player_names)
}
#if LANG_CXX11
inline void msg_guild_member_info::add_player_names(::std::string&& value) {
  set_changed();
  player_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_member_info.player_names)
}
#endif
inline void msg_guild_member_info::add_player_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  player_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.msg_guild_member_info.player_names)
}
inline void msg_guild_member_info::add_player_names(const char* value, size_t size) {
  set_changed();
  player_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.msg_guild_member_info.player_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
msg_guild_member_info::player_names() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_member_info.player_names)
  return player_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
msg_guild_member_info::mutable_player_names() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_member_info.player_names)
  return &player_names_;
}

// repeated int32 player_template = 3;
inline int msg_guild_member_info::player_template_size() const {
  return player_template_.size();
}
inline void msg_guild_member_info::clear_player_template() {
  set_changed();
  player_template_.Clear();
}
inline ::google::protobuf::int32 msg_guild_member_info::player_template(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_member_info.player_template)
  return player_template_.Get(index);
}
inline void msg_guild_member_info::set_player_template(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_template_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_member_info.player_template)
}
inline void msg_guild_member_info::add_player_template(::google::protobuf::int32 value) {
  set_changed();
  player_template_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_member_info.player_template)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_member_info::player_template() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_member_info.player_template)
  return player_template_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_member_info::mutable_player_template() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_member_info.player_template)
  return &player_template_;
}

// repeated int32 player_level = 4;
inline int msg_guild_member_info::player_level_size() const {
  return player_level_.size();
}
inline void msg_guild_member_info::clear_player_level() {
  set_changed();
  player_level_.Clear();
}
inline ::google::protobuf::int32 msg_guild_member_info::player_level(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_member_info.player_level)
  return player_level_.Get(index);
}
inline void msg_guild_member_info::set_player_level(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_level_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_member_info.player_level)
}
inline void msg_guild_member_info::add_player_level(::google::protobuf::int32 value) {
  set_changed();
  player_level_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_member_info.player_level)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_member_info::player_level() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_member_info.player_level)
  return player_level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_member_info::mutable_player_level() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_member_info.player_level)
  return &player_level_;
}

// repeated int32 player_bat_eff = 5;
inline int msg_guild_member_info::player_bat_eff_size() const {
  return player_bat_eff_.size();
}
inline void msg_guild_member_info::clear_player_bat_eff() {
  set_changed();
  player_bat_eff_.Clear();
}
inline ::google::protobuf::int32 msg_guild_member_info::player_bat_eff(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_member_info.player_bat_eff)
  return player_bat_eff_.Get(index);
}
inline void msg_guild_member_info::set_player_bat_eff(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_bat_eff_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_member_info.player_bat_eff)
}
inline void msg_guild_member_info::add_player_bat_eff(::google::protobuf::int32 value) {
  set_changed();
  player_bat_eff_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_member_info.player_bat_eff)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_member_info::player_bat_eff() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_member_info.player_bat_eff)
  return player_bat_eff_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_member_info::mutable_player_bat_eff() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_member_info.player_bat_eff)
  return &player_bat_eff_;
}

// repeated int32 player_vip = 6;
inline int msg_guild_member_info::player_vip_size() const {
  return player_vip_.size();
}
inline void msg_guild_member_info::clear_player_vip() {
  set_changed();
  player_vip_.Clear();
}
inline ::google::protobuf::int32 msg_guild_member_info::player_vip(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_member_info.player_vip)
  return player_vip_.Get(index);
}
inline void msg_guild_member_info::set_player_vip(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_vip_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_member_info.player_vip)
}
inline void msg_guild_member_info::add_player_vip(::google::protobuf::int32 value) {
  set_changed();
  player_vip_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_member_info.player_vip)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_member_info::player_vip() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_member_info.player_vip)
  return player_vip_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_member_info::mutable_player_vip() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_member_info.player_vip)
  return &player_vip_;
}

// repeated int32 player_achieve = 7;
inline int msg_guild_member_info::player_achieve_size() const {
  return player_achieve_.size();
}
inline void msg_guild_member_info::clear_player_achieve() {
  set_changed();
  player_achieve_.Clear();
}
inline ::google::protobuf::int32 msg_guild_member_info::player_achieve(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_member_info.player_achieve)
  return player_achieve_.Get(index);
}
inline void msg_guild_member_info::set_player_achieve(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_achieve_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_member_info.player_achieve)
}
inline void msg_guild_member_info::add_player_achieve(::google::protobuf::int32 value) {
  set_changed();
  player_achieve_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_member_info.player_achieve)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_member_info::player_achieve() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_member_info.player_achieve)
  return player_achieve_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_member_info::mutable_player_achieve() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_member_info.player_achieve)
  return &player_achieve_;
}

// repeated uint64 player_join_time = 8;
inline int msg_guild_member_info::player_join_time_size() const {
  return player_join_time_.size();
}
inline void msg_guild_member_info::clear_player_join_time() {
  set_changed();
  player_join_time_.Clear();
}
inline ::google::protobuf::uint64 msg_guild_member_info::player_join_time(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_member_info.player_join_time)
  return player_join_time_.Get(index);
}
inline void msg_guild_member_info::set_player_join_time(int index, ::google::protobuf::uint64 value) {
  set_changed();
  player_join_time_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_member_info.player_join_time)
}
inline void msg_guild_member_info::add_player_join_time(::google::protobuf::uint64 value) {
  set_changed();
  player_join_time_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_member_info.player_join_time)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
msg_guild_member_info::player_join_time() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_member_info.player_join_time)
  return player_join_time_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
msg_guild_member_info::mutable_player_join_time() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_member_info.player_join_time)
  return &player_join_time_;
}

// -------------------------------------------------------------------

// msg_guild_arrange

// repeated uint64 player_guids = 1;
inline int msg_guild_arrange::player_guids_size() const {
  return player_guids_.size();
}
inline void msg_guild_arrange::clear_player_guids() {
  set_changed();
  player_guids_.Clear();
}
inline ::google::protobuf::uint64 msg_guild_arrange::player_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_arrange.player_guids)
  return player_guids_.Get(index);
}
inline void msg_guild_arrange::set_player_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_arrange.player_guids)
}
inline void msg_guild_arrange::add_player_guids(::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_arrange.player_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
msg_guild_arrange::player_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_arrange.player_guids)
  return player_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
msg_guild_arrange::mutable_player_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_arrange.player_guids)
  return &player_guids_;
}

// repeated string player_names = 2;
inline int msg_guild_arrange::player_names_size() const {
  return player_names_.size();
}
inline void msg_guild_arrange::clear_player_names() {
  set_changed();
  player_names_.Clear();
}
inline const ::std::string& msg_guild_arrange::player_names(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_arrange.player_names)
  return player_names_.Get(index);
}
inline ::std::string* msg_guild_arrange::mutable_player_names(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_guild_arrange.player_names)
  return player_names_.Mutable(index);
}
inline void msg_guild_arrange::set_player_names(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_arrange.player_names)
  player_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void msg_guild_arrange::set_player_names(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_arrange.player_names)
  player_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void msg_guild_arrange::set_player_names(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  player_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_guild_arrange.player_names)
}
inline void msg_guild_arrange::set_player_names(int index, const char* value, size_t size) {
  set_changed();
  player_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_guild_arrange.player_names)
}
inline ::std::string* msg_guild_arrange::add_player_names() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.msg_guild_arrange.player_names)
  return player_names_.Add();
}
inline void msg_guild_arrange::add_player_names(const ::std::string& value) {
  set_changed();
  player_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_arrange.player_names)
}
#if LANG_CXX11
inline void msg_guild_arrange::add_player_names(::std::string&& value) {
  set_changed();
  player_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_arrange.player_names)
}
#endif
inline void msg_guild_arrange::add_player_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  player_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.msg_guild_arrange.player_names)
}
inline void msg_guild_arrange::add_player_names(const char* value, size_t size) {
  set_changed();
  player_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.msg_guild_arrange.player_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
msg_guild_arrange::player_names() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_arrange.player_names)
  return player_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
msg_guild_arrange::mutable_player_names() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_arrange.player_names)
  return &player_names_;
}

// repeated int32 player_template = 3;
inline int msg_guild_arrange::player_template_size() const {
  return player_template_.size();
}
inline void msg_guild_arrange::clear_player_template() {
  set_changed();
  player_template_.Clear();
}
inline ::google::protobuf::int32 msg_guild_arrange::player_template(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_arrange.player_template)
  return player_template_.Get(index);
}
inline void msg_guild_arrange::set_player_template(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_template_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_arrange.player_template)
}
inline void msg_guild_arrange::add_player_template(::google::protobuf::int32 value) {
  set_changed();
  player_template_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_arrange.player_template)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_arrange::player_template() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_arrange.player_template)
  return player_template_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_arrange::mutable_player_template() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_arrange.player_template)
  return &player_template_;
}

// repeated int32 player_level = 4;
inline int msg_guild_arrange::player_level_size() const {
  return player_level_.size();
}
inline void msg_guild_arrange::clear_player_level() {
  set_changed();
  player_level_.Clear();
}
inline ::google::protobuf::int32 msg_guild_arrange::player_level(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_arrange.player_level)
  return player_level_.Get(index);
}
inline void msg_guild_arrange::set_player_level(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_level_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_arrange.player_level)
}
inline void msg_guild_arrange::add_player_level(::google::protobuf::int32 value) {
  set_changed();
  player_level_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_arrange.player_level)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_arrange::player_level() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_arrange.player_level)
  return player_level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_arrange::mutable_player_level() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_arrange.player_level)
  return &player_level_;
}

// repeated int32 player_bat_eff = 5;
inline int msg_guild_arrange::player_bat_eff_size() const {
  return player_bat_eff_.size();
}
inline void msg_guild_arrange::clear_player_bat_eff() {
  set_changed();
  player_bat_eff_.Clear();
}
inline ::google::protobuf::int32 msg_guild_arrange::player_bat_eff(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_arrange.player_bat_eff)
  return player_bat_eff_.Get(index);
}
inline void msg_guild_arrange::set_player_bat_eff(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_bat_eff_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_arrange.player_bat_eff)
}
inline void msg_guild_arrange::add_player_bat_eff(::google::protobuf::int32 value) {
  set_changed();
  player_bat_eff_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_arrange.player_bat_eff)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_arrange::player_bat_eff() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_arrange.player_bat_eff)
  return player_bat_eff_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_arrange::mutable_player_bat_eff() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_arrange.player_bat_eff)
  return &player_bat_eff_;
}

// repeated int32 player_vip = 6;
inline int msg_guild_arrange::player_vip_size() const {
  return player_vip_.size();
}
inline void msg_guild_arrange::clear_player_vip() {
  set_changed();
  player_vip_.Clear();
}
inline ::google::protobuf::int32 msg_guild_arrange::player_vip(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_arrange.player_vip)
  return player_vip_.Get(index);
}
inline void msg_guild_arrange::set_player_vip(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_vip_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_arrange.player_vip)
}
inline void msg_guild_arrange::add_player_vip(::google::protobuf::int32 value) {
  set_changed();
  player_vip_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_arrange.player_vip)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_arrange::player_vip() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_arrange.player_vip)
  return player_vip_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_arrange::mutable_player_vip() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_arrange.player_vip)
  return &player_vip_;
}

// repeated int32 player_achieve = 7;
inline int msg_guild_arrange::player_achieve_size() const {
  return player_achieve_.size();
}
inline void msg_guild_arrange::clear_player_achieve() {
  set_changed();
  player_achieve_.Clear();
}
inline ::google::protobuf::int32 msg_guild_arrange::player_achieve(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_arrange.player_achieve)
  return player_achieve_.Get(index);
}
inline void msg_guild_arrange::set_player_achieve(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_achieve_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_arrange.player_achieve)
}
inline void msg_guild_arrange::add_player_achieve(::google::protobuf::int32 value) {
  set_changed();
  player_achieve_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_arrange.player_achieve)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_arrange::player_achieve() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_arrange.player_achieve)
  return player_achieve_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_arrange::mutable_player_achieve() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_arrange.player_achieve)
  return &player_achieve_;
}

// -------------------------------------------------------------------

// msg_guild_zhanji

// int32 guild_zhanji = 1;
inline void msg_guild_zhanji::clear_guild_zhanji() {
  set_changed();
  guild_zhanji_ = 0;
}
inline ::google::protobuf::int32 msg_guild_zhanji::guild_zhanji() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_zhanji.guild_zhanji)
  return guild_zhanji_;
}
inline void msg_guild_zhanji::set_guild_zhanji(::google::protobuf::int32 value) {
  set_changed();
  
  guild_zhanji_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_zhanji.guild_zhanji)
}

// int32 guild_total_zhanji = 2;
inline void msg_guild_zhanji::clear_guild_total_zhanji() {
  set_changed();
  guild_total_zhanji_ = 0;
}
inline ::google::protobuf::int32 msg_guild_zhanji::guild_total_zhanji() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_zhanji.guild_total_zhanji)
  return guild_total_zhanji_;
}
inline void msg_guild_zhanji::set_guild_total_zhanji(::google::protobuf::int32 value) {
  set_changed();
  
  guild_total_zhanji_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_zhanji.guild_total_zhanji)
}

// int32 guild_exp = 3;
inline void msg_guild_zhanji::clear_guild_exp() {
  set_changed();
  guild_exp_ = 0;
}
inline ::google::protobuf::int32 msg_guild_zhanji::guild_exp() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_zhanji.guild_exp)
  return guild_exp_;
}
inline void msg_guild_zhanji::set_guild_exp(::google::protobuf::int32 value) {
  set_changed();
  
  guild_exp_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_zhanji.guild_exp)
}

// int32 zhanji = 4;
inline void msg_guild_zhanji::clear_zhanji() {
  set_changed();
  zhanji_ = 0;
}
inline ::google::protobuf::int32 msg_guild_zhanji::zhanji() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_zhanji.zhanji)
  return zhanji_;
}
inline void msg_guild_zhanji::set_zhanji(::google::protobuf::int32 value) {
  set_changed();
  
  zhanji_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_zhanji.zhanji)
}

// int32 total_zhanji = 5;
inline void msg_guild_zhanji::clear_total_zhanji() {
  set_changed();
  total_zhanji_ = 0;
}
inline ::google::protobuf::int32 msg_guild_zhanji::total_zhanji() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_zhanji.total_zhanji)
  return total_zhanji_;
}
inline void msg_guild_zhanji::set_total_zhanji(::google::protobuf::int32 value) {
  set_changed();
  
  total_zhanji_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_zhanji.total_zhanji)
}

// int32 judian = 6;
inline void msg_guild_zhanji::clear_judian() {
  set_changed();
  judian_ = 0;
}
inline ::google::protobuf::int32 msg_guild_zhanji::judian() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_zhanji.judian)
  return judian_;
}
inline void msg_guild_zhanji::set_judian(::google::protobuf::int32 value) {
  set_changed();
  
  judian_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_zhanji.judian)
}

// int32 jidi = 7;
inline void msg_guild_zhanji::clear_jidi() {
  set_changed();
  jidi_ = 0;
}
inline ::google::protobuf::int32 msg_guild_zhanji::jidi() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_zhanji.jidi)
  return jidi_;
}
inline void msg_guild_zhanji::set_jidi(::google::protobuf::int32 value) {
  set_changed();
  
  jidi_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_zhanji.jidi)
}

// int32 perfect = 8;
inline void msg_guild_zhanji::clear_perfect() {
  set_changed();
  perfect_ = 0;
}
inline ::google::protobuf::int32 msg_guild_zhanji::perfect() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_zhanji.perfect)
  return perfect_;
}
inline void msg_guild_zhanji::set_perfect(::google::protobuf::int32 value) {
  set_changed();
  
  perfect_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_zhanji.perfect)
}

// .protocol.game.msg_guild_member_info bushu = 9;
inline bool msg_guild_zhanji::has_bushu() const {
  return this != internal_default_instance() && bushu_ != NULL;
}
inline void msg_guild_zhanji::clear_bushu() {
  if (GetArenaNoVirtual() == NULL && bushu_ != NULL) {
    delete bushu_;
  }
  bushu_ = NULL;
}
inline const ::protocol::game::msg_guild_member_info& msg_guild_zhanji::_internal_bushu() const {
  return *bushu_;
}
inline const ::protocol::game::msg_guild_member_info& msg_guild_zhanji::bushu() const {
  const ::protocol::game::msg_guild_member_info* p = bushu_;
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_zhanji.bushu)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_guild_member_info*>(
      &::protocol::game::_msg_guild_member_info_default_instance_);
}
inline ::protocol::game::msg_guild_member_info* msg_guild_zhanji::release_bushu() {
  // @@protoc_insertion_point(field_release:protocol.game.msg_guild_zhanji.bushu)
  
  ::protocol::game::msg_guild_member_info* temp = bushu_;
  bushu_ = NULL;
  return temp;
}
inline ::protocol::game::msg_guild_member_info* msg_guild_zhanji::mutable_bushu() {
  
  if (bushu_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_guild_member_info>(GetArenaNoVirtual());
    bushu_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_guild_zhanji.bushu)
  return bushu_;
}
inline void msg_guild_zhanji::set_allocated_bushu(::protocol::game::msg_guild_member_info* bushu) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bushu_;
  }
  if (bushu) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bushu = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bushu, submessage_arena);
    }
    
  } else {
    
  }
  bushu_ = bushu;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_guild_zhanji.bushu)
}

// -------------------------------------------------------------------

// msg_guild_fight

// repeated .protocol.game.msg_guild_fight_info fights = 1;
inline int msg_guild_fight::fights_size() const {
  return fights_.size();
}
inline void msg_guild_fight::clear_fights() {
  fights_.Clear();
}
inline ::protocol::game::msg_guild_fight_info* msg_guild_fight::mutable_fights(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_guild_fight.fights)
  return fights_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_guild_fight_info >*
msg_guild_fight::mutable_fights() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_fight.fights)
  return &fights_;
}
inline const ::protocol::game::msg_guild_fight_info& msg_guild_fight::fights(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight.fights)
  return fights_.Get(index);
}
inline ::protocol::game::msg_guild_fight_info* msg_guild_fight::add_fights() {
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_fight.fights)
  return fights_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_guild_fight_info >&
msg_guild_fight::fights() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_fight.fights)
  return fights_;
}

// int32 guild_zhanji = 2;
inline void msg_guild_fight::clear_guild_zhanji() {
  set_changed();
  guild_zhanji_ = 0;
}
inline ::google::protobuf::int32 msg_guild_fight::guild_zhanji() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight.guild_zhanji)
  return guild_zhanji_;
}
inline void msg_guild_fight::set_guild_zhanji(::google::protobuf::int32 value) {
  set_changed();
  
  guild_zhanji_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight.guild_zhanji)
}

// int32 zhanji = 3;
inline void msg_guild_fight::clear_zhanji() {
  set_changed();
  zhanji_ = 0;
}
inline ::google::protobuf::int32 msg_guild_fight::zhanji() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight.zhanji)
  return zhanji_;
}
inline void msg_guild_fight::set_zhanji(::google::protobuf::int32 value) {
  set_changed();
  
  zhanji_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight.zhanji)
}

// int32 total_zhanji = 4;
inline void msg_guild_fight::clear_total_zhanji() {
  set_changed();
  total_zhanji_ = 0;
}
inline ::google::protobuf::int32 msg_guild_fight::total_zhanji() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight.total_zhanji)
  return total_zhanji_;
}
inline void msg_guild_fight::set_total_zhanji(::google::protobuf::int32 value) {
  set_changed();
  
  total_zhanji_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight.total_zhanji)
}

// repeated int32 reward_ids = 5;
inline int msg_guild_fight::reward_ids_size() const {
  return reward_ids_.size();
}
inline void msg_guild_fight::clear_reward_ids() {
  set_changed();
  reward_ids_.Clear();
}
inline ::google::protobuf::int32 msg_guild_fight::reward_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight.reward_ids)
  return reward_ids_.Get(index);
}
inline void msg_guild_fight::set_reward_ids(int index, ::google::protobuf::int32 value) {
  set_changed();
  reward_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight.reward_ids)
}
inline void msg_guild_fight::add_reward_ids(::google::protobuf::int32 value) {
  set_changed();
  reward_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_fight.reward_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_fight::reward_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_fight.reward_ids)
  return reward_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_fight::mutable_reward_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_fight.reward_ids)
  return &reward_ids_;
}

// int32 judian = 6;
inline void msg_guild_fight::clear_judian() {
  set_changed();
  judian_ = 0;
}
inline ::google::protobuf::int32 msg_guild_fight::judian() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight.judian)
  return judian_;
}
inline void msg_guild_fight::set_judian(::google::protobuf::int32 value) {
  set_changed();
  
  judian_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight.judian)
}

// int32 jidi = 7;
inline void msg_guild_fight::clear_jidi() {
  set_changed();
  jidi_ = 0;
}
inline ::google::protobuf::int32 msg_guild_fight::jidi() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight.jidi)
  return jidi_;
}
inline void msg_guild_fight::set_jidi(::google::protobuf::int32 value) {
  set_changed();
  
  jidi_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight.jidi)
}

// int32 perfect = 8;
inline void msg_guild_fight::clear_perfect() {
  set_changed();
  perfect_ = 0;
}
inline ::google::protobuf::int32 msg_guild_fight::perfect() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight.perfect)
  return perfect_;
}
inline void msg_guild_fight::set_perfect(::google::protobuf::int32 value) {
  set_changed();
  
  perfect_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight.perfect)
}

// -------------------------------------------------------------------

// msg_guild_fight_info

// uint64 guild = 1;
inline void msg_guild_fight_info::clear_guild() {
  set_changed();
  guild_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 msg_guild_fight_info::guild() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight_info.guild)
  return guild_;
}
inline void msg_guild_fight_info::set_guild(::google::protobuf::uint64 value) {
  set_changed();
  
  guild_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.guild)
}

// int32 guild_server = 2;
inline void msg_guild_fight_info::clear_guild_server() {
  set_changed();
  guild_server_ = 0;
}
inline ::google::protobuf::int32 msg_guild_fight_info::guild_server() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight_info.guild_server)
  return guild_server_;
}
inline void msg_guild_fight_info::set_guild_server(::google::protobuf::int32 value) {
  set_changed();
  
  guild_server_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.guild_server)
}

// string guild_name = 3;
inline void msg_guild_fight_info::clear_guild_name() {
  set_changed();
  guild_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_guild_fight_info::guild_name() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight_info.guild_name)
  return guild_name_.GetNoArena();
}
inline void msg_guild_fight_info::set_guild_name(const ::std::string& value) {
  set_changed();
  
  guild_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.guild_name)
}
#if LANG_CXX11
inline void msg_guild_fight_info::set_guild_name(::std::string&& value) {
  set_changed();
  
  guild_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_guild_fight_info.guild_name)
}
#endif
inline void msg_guild_fight_info::set_guild_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  guild_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_guild_fight_info.guild_name)
}
inline void msg_guild_fight_info::set_guild_name(const char* value, size_t size) {
  set_changed();
  
  guild_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_guild_fight_info.guild_name)
}
inline ::std::string* msg_guild_fight_info::mutable_guild_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_guild_fight_info.guild_name)
  return guild_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_guild_fight_info::release_guild_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_guild_fight_info.guild_name)
  
  return guild_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_guild_fight_info::set_allocated_guild_name(::std::string* guild_name) {
  set_changed();
  if (guild_name != NULL) {
    
  } else {
    
  }
  guild_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guild_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_guild_fight_info.guild_name)
}

// int32 guild_icon = 4;
inline void msg_guild_fight_info::clear_guild_icon() {
  set_changed();
  guild_icon_ = 0;
}
inline ::google::protobuf::int32 msg_guild_fight_info::guild_icon() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight_info.guild_icon)
  return guild_icon_;
}
inline void msg_guild_fight_info::set_guild_icon(::google::protobuf::int32 value) {
  set_changed();
  
  guild_icon_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.guild_icon)
}

// int32 guild_level = 5;
inline void msg_guild_fight_info::clear_guild_level() {
  set_changed();
  guild_level_ = 0;
}
inline ::google::protobuf::int32 msg_guild_fight_info::guild_level() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight_info.guild_level)
  return guild_level_;
}
inline void msg_guild_fight_info::set_guild_level(::google::protobuf::int32 value) {
  set_changed();
  
  guild_level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.guild_level)
}

// repeated uint64 target_guids = 6;
inline int msg_guild_fight_info::target_guids_size() const {
  return target_guids_.size();
}
inline void msg_guild_fight_info::clear_target_guids() {
  set_changed();
  target_guids_.Clear();
}
inline ::google::protobuf::uint64 msg_guild_fight_info::target_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight_info.target_guids)
  return target_guids_.Get(index);
}
inline void msg_guild_fight_info::set_target_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  target_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.target_guids)
}
inline void msg_guild_fight_info::add_target_guids(::google::protobuf::uint64 value) {
  set_changed();
  target_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_fight_info.target_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
msg_guild_fight_info::target_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_fight_info.target_guids)
  return target_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
msg_guild_fight_info::mutable_target_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_fight_info.target_guids)
  return &target_guids_;
}

// repeated string target_names = 7;
inline int msg_guild_fight_info::target_names_size() const {
  return target_names_.size();
}
inline void msg_guild_fight_info::clear_target_names() {
  set_changed();
  target_names_.Clear();
}
inline const ::std::string& msg_guild_fight_info::target_names(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight_info.target_names)
  return target_names_.Get(index);
}
inline ::std::string* msg_guild_fight_info::mutable_target_names(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_guild_fight_info.target_names)
  return target_names_.Mutable(index);
}
inline void msg_guild_fight_info::set_target_names(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.target_names)
  target_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void msg_guild_fight_info::set_target_names(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.target_names)
  target_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void msg_guild_fight_info::set_target_names(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  target_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_guild_fight_info.target_names)
}
inline void msg_guild_fight_info::set_target_names(int index, const char* value, size_t size) {
  set_changed();
  target_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_guild_fight_info.target_names)
}
inline ::std::string* msg_guild_fight_info::add_target_names() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.msg_guild_fight_info.target_names)
  return target_names_.Add();
}
inline void msg_guild_fight_info::add_target_names(const ::std::string& value) {
  set_changed();
  target_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_fight_info.target_names)
}
#if LANG_CXX11
inline void msg_guild_fight_info::add_target_names(::std::string&& value) {
  set_changed();
  target_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_fight_info.target_names)
}
#endif
inline void msg_guild_fight_info::add_target_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  target_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.msg_guild_fight_info.target_names)
}
inline void msg_guild_fight_info::add_target_names(const char* value, size_t size) {
  set_changed();
  target_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.msg_guild_fight_info.target_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
msg_guild_fight_info::target_names() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_fight_info.target_names)
  return target_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
msg_guild_fight_info::mutable_target_names() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_fight_info.target_names)
  return &target_names_;
}

// repeated int32 target_templates = 8;
inline int msg_guild_fight_info::target_templates_size() const {
  return target_templates_.size();
}
inline void msg_guild_fight_info::clear_target_templates() {
  set_changed();
  target_templates_.Clear();
}
inline ::google::protobuf::int32 msg_guild_fight_info::target_templates(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight_info.target_templates)
  return target_templates_.Get(index);
}
inline void msg_guild_fight_info::set_target_templates(int index, ::google::protobuf::int32 value) {
  set_changed();
  target_templates_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.target_templates)
}
inline void msg_guild_fight_info::add_target_templates(::google::protobuf::int32 value) {
  set_changed();
  target_templates_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_fight_info.target_templates)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_fight_info::target_templates() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_fight_info.target_templates)
  return target_templates_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_fight_info::mutable_target_templates() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_fight_info.target_templates)
  return &target_templates_;
}

// repeated int32 target_levels = 9;
inline int msg_guild_fight_info::target_levels_size() const {
  return target_levels_.size();
}
inline void msg_guild_fight_info::clear_target_levels() {
  set_changed();
  target_levels_.Clear();
}
inline ::google::protobuf::int32 msg_guild_fight_info::target_levels(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight_info.target_levels)
  return target_levels_.Get(index);
}
inline void msg_guild_fight_info::set_target_levels(int index, ::google::protobuf::int32 value) {
  set_changed();
  target_levels_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.target_levels)
}
inline void msg_guild_fight_info::add_target_levels(::google::protobuf::int32 value) {
  set_changed();
  target_levels_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_fight_info.target_levels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_fight_info::target_levels() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_fight_info.target_levels)
  return target_levels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_fight_info::mutable_target_levels() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_fight_info.target_levels)
  return &target_levels_;
}

// repeated int32 target_bat_effs = 10;
inline int msg_guild_fight_info::target_bat_effs_size() const {
  return target_bat_effs_.size();
}
inline void msg_guild_fight_info::clear_target_bat_effs() {
  set_changed();
  target_bat_effs_.Clear();
}
inline ::google::protobuf::int32 msg_guild_fight_info::target_bat_effs(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight_info.target_bat_effs)
  return target_bat_effs_.Get(index);
}
inline void msg_guild_fight_info::set_target_bat_effs(int index, ::google::protobuf::int32 value) {
  set_changed();
  target_bat_effs_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.target_bat_effs)
}
inline void msg_guild_fight_info::add_target_bat_effs(::google::protobuf::int32 value) {
  set_changed();
  target_bat_effs_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_fight_info.target_bat_effs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_fight_info::target_bat_effs() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_fight_info.target_bat_effs)
  return target_bat_effs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_fight_info::mutable_target_bat_effs() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_fight_info.target_bat_effs)
  return &target_bat_effs_;
}

// repeated int32 target_vips = 11;
inline int msg_guild_fight_info::target_vips_size() const {
  return target_vips_.size();
}
inline void msg_guild_fight_info::clear_target_vips() {
  set_changed();
  target_vips_.Clear();
}
inline ::google::protobuf::int32 msg_guild_fight_info::target_vips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight_info.target_vips)
  return target_vips_.Get(index);
}
inline void msg_guild_fight_info::set_target_vips(int index, ::google::protobuf::int32 value) {
  set_changed();
  target_vips_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.target_vips)
}
inline void msg_guild_fight_info::add_target_vips(::google::protobuf::int32 value) {
  set_changed();
  target_vips_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_fight_info.target_vips)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_fight_info::target_vips() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_fight_info.target_vips)
  return target_vips_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_fight_info::mutable_target_vips() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_fight_info.target_vips)
  return &target_vips_;
}

// repeated int32 target_achieves = 12;
inline int msg_guild_fight_info::target_achieves_size() const {
  return target_achieves_.size();
}
inline void msg_guild_fight_info::clear_target_achieves() {
  set_changed();
  target_achieves_.Clear();
}
inline ::google::protobuf::int32 msg_guild_fight_info::target_achieves(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight_info.target_achieves)
  return target_achieves_.Get(index);
}
inline void msg_guild_fight_info::set_target_achieves(int index, ::google::protobuf::int32 value) {
  set_changed();
  target_achieves_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.target_achieves)
}
inline void msg_guild_fight_info::add_target_achieves(::google::protobuf::int32 value) {
  set_changed();
  target_achieves_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_fight_info.target_achieves)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_fight_info::target_achieves() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_fight_info.target_achieves)
  return target_achieves_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_fight_info::mutable_target_achieves() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_fight_info.target_achieves)
  return &target_achieves_;
}

// repeated int32 target_defense_nums = 13;
inline int msg_guild_fight_info::target_defense_nums_size() const {
  return target_defense_nums_.size();
}
inline void msg_guild_fight_info::clear_target_defense_nums() {
  set_changed();
  target_defense_nums_.Clear();
}
inline ::google::protobuf::int32 msg_guild_fight_info::target_defense_nums(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight_info.target_defense_nums)
  return target_defense_nums_.Get(index);
}
inline void msg_guild_fight_info::set_target_defense_nums(int index, ::google::protobuf::int32 value) {
  set_changed();
  target_defense_nums_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.target_defense_nums)
}
inline void msg_guild_fight_info::add_target_defense_nums(::google::protobuf::int32 value) {
  set_changed();
  target_defense_nums_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_fight_info.target_defense_nums)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_fight_info::target_defense_nums() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_fight_info.target_defense_nums)
  return target_defense_nums_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_fight_info::mutable_target_defense_nums() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_fight_info.target_defense_nums)
  return &target_defense_nums_;
}

// repeated int32 guard_points = 14;
inline int msg_guild_fight_info::guard_points_size() const {
  return guard_points_.size();
}
inline void msg_guild_fight_info::clear_guard_points() {
  set_changed();
  guard_points_.Clear();
}
inline ::google::protobuf::int32 msg_guild_fight_info::guard_points(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight_info.guard_points)
  return guard_points_.Get(index);
}
inline void msg_guild_fight_info::set_guard_points(int index, ::google::protobuf::int32 value) {
  set_changed();
  guard_points_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.guard_points)
}
inline void msg_guild_fight_info::add_guard_points(::google::protobuf::int32 value) {
  set_changed();
  guard_points_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_fight_info.guard_points)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_fight_info::guard_points() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_fight_info.guard_points)
  return guard_points_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_fight_info::mutable_guard_points() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_fight_info.guard_points)
  return &guard_points_;
}

// repeated int32 guard_gongpo = 15;
inline int msg_guild_fight_info::guard_gongpo_size() const {
  return guard_gongpo_.size();
}
inline void msg_guild_fight_info::clear_guard_gongpo() {
  set_changed();
  guard_gongpo_.Clear();
}
inline ::google::protobuf::int32 msg_guild_fight_info::guard_gongpo(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_guild_fight_info.guard_gongpo)
  return guard_gongpo_.Get(index);
}
inline void msg_guild_fight_info::set_guard_gongpo(int index, ::google::protobuf::int32 value) {
  set_changed();
  guard_gongpo_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_guild_fight_info.guard_gongpo)
}
inline void msg_guild_fight_info::add_guard_gongpo(::google::protobuf::int32 value) {
  set_changed();
  guard_gongpo_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.msg_guild_fight_info.guard_gongpo)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
msg_guild_fight_info::guard_gongpo() const {
  // @@protoc_insertion_point(field_list:protocol.game.msg_guild_fight_info.guard_gongpo)
  return guard_gongpo_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
msg_guild_fight_info::mutable_guard_gongpo() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.msg_guild_fight_info.guard_gongpo)
  return &guard_gongpo_;
}

// -------------------------------------------------------------------

// smsg_guild_fight_pvp_look

// int32 stat = 1;
inline void smsg_guild_fight_pvp_look::clear_stat() {
  set_changed();
  stat_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_fight_pvp_look::stat() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_fight_pvp_look.stat)
  return stat_;
}
inline void smsg_guild_fight_pvp_look::set_stat(::google::protobuf::int32 value) {
  set_changed();
  
  stat_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_fight_pvp_look.stat)
}

// .protocol.game.msg_guild_arrange arrange = 2;
inline bool smsg_guild_fight_pvp_look::has_arrange() const {
  return this != internal_default_instance() && arrange_ != NULL;
}
inline void smsg_guild_fight_pvp_look::clear_arrange() {
  if (GetArenaNoVirtual() == NULL && arrange_ != NULL) {
    delete arrange_;
  }
  arrange_ = NULL;
}
inline const ::protocol::game::msg_guild_arrange& smsg_guild_fight_pvp_look::_internal_arrange() const {
  return *arrange_;
}
inline const ::protocol::game::msg_guild_arrange& smsg_guild_fight_pvp_look::arrange() const {
  const ::protocol::game::msg_guild_arrange* p = arrange_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_fight_pvp_look.arrange)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_guild_arrange*>(
      &::protocol::game::_msg_guild_arrange_default_instance_);
}
inline ::protocol::game::msg_guild_arrange* smsg_guild_fight_pvp_look::release_arrange() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_guild_fight_pvp_look.arrange)
  
  ::protocol::game::msg_guild_arrange* temp = arrange_;
  arrange_ = NULL;
  return temp;
}
inline ::protocol::game::msg_guild_arrange* smsg_guild_fight_pvp_look::mutable_arrange() {
  
  if (arrange_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_guild_arrange>(GetArenaNoVirtual());
    arrange_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_fight_pvp_look.arrange)
  return arrange_;
}
inline void smsg_guild_fight_pvp_look::set_allocated_arrange(::protocol::game::msg_guild_arrange* arrange) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete arrange_;
  }
  if (arrange) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      arrange = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arrange, submessage_arena);
    }
    
  } else {
    
  }
  arrange_ = arrange;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_guild_fight_pvp_look.arrange)
}

// .protocol.game.msg_guild_zhanji zhanji = 3;
inline bool smsg_guild_fight_pvp_look::has_zhanji() const {
  return this != internal_default_instance() && zhanji_ != NULL;
}
inline void smsg_guild_fight_pvp_look::clear_zhanji() {
  if (GetArenaNoVirtual() == NULL && zhanji_ != NULL) {
    delete zhanji_;
  }
  zhanji_ = NULL;
}
inline const ::protocol::game::msg_guild_zhanji& smsg_guild_fight_pvp_look::_internal_zhanji() const {
  return *zhanji_;
}
inline const ::protocol::game::msg_guild_zhanji& smsg_guild_fight_pvp_look::zhanji() const {
  const ::protocol::game::msg_guild_zhanji* p = zhanji_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_fight_pvp_look.zhanji)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_guild_zhanji*>(
      &::protocol::game::_msg_guild_zhanji_default_instance_);
}
inline ::protocol::game::msg_guild_zhanji* smsg_guild_fight_pvp_look::release_zhanji() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_guild_fight_pvp_look.zhanji)
  
  ::protocol::game::msg_guild_zhanji* temp = zhanji_;
  zhanji_ = NULL;
  return temp;
}
inline ::protocol::game::msg_guild_zhanji* smsg_guild_fight_pvp_look::mutable_zhanji() {
  
  if (zhanji_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_guild_zhanji>(GetArenaNoVirtual());
    zhanji_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_fight_pvp_look.zhanji)
  return zhanji_;
}
inline void smsg_guild_fight_pvp_look::set_allocated_zhanji(::protocol::game::msg_guild_zhanji* zhanji) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete zhanji_;
  }
  if (zhanji) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      zhanji = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, zhanji, submessage_arena);
    }
    
  } else {
    
  }
  zhanji_ = zhanji;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_guild_fight_pvp_look.zhanji)
}

// .protocol.game.msg_guild_fight fight = 4;
inline bool smsg_guild_fight_pvp_look::has_fight() const {
  return this != internal_default_instance() && fight_ != NULL;
}
inline void smsg_guild_fight_pvp_look::clear_fight() {
  if (GetArenaNoVirtual() == NULL && fight_ != NULL) {
    delete fight_;
  }
  fight_ = NULL;
}
inline const ::protocol::game::msg_guild_fight& smsg_guild_fight_pvp_look::_internal_fight() const {
  return *fight_;
}
inline const ::protocol::game::msg_guild_fight& smsg_guild_fight_pvp_look::fight() const {
  const ::protocol::game::msg_guild_fight* p = fight_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_fight_pvp_look.fight)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_guild_fight*>(
      &::protocol::game::_msg_guild_fight_default_instance_);
}
inline ::protocol::game::msg_guild_fight* smsg_guild_fight_pvp_look::release_fight() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_guild_fight_pvp_look.fight)
  
  ::protocol::game::msg_guild_fight* temp = fight_;
  fight_ = NULL;
  return temp;
}
inline ::protocol::game::msg_guild_fight* smsg_guild_fight_pvp_look::mutable_fight() {
  
  if (fight_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_guild_fight>(GetArenaNoVirtual());
    fight_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_fight_pvp_look.fight)
  return fight_;
}
inline void smsg_guild_fight_pvp_look::set_allocated_fight(::protocol::game::msg_guild_fight* fight) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fight_;
  }
  if (fight) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fight = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fight, submessage_arena);
    }
    
  } else {
    
  }
  fight_ = fight;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_guild_fight_pvp_look.fight)
}

// .protocol.game.msg_guild_member_info member = 5;
inline bool smsg_guild_fight_pvp_look::has_member() const {
  return this != internal_default_instance() && member_ != NULL;
}
inline void smsg_guild_fight_pvp_look::clear_member() {
  if (GetArenaNoVirtual() == NULL && member_ != NULL) {
    delete member_;
  }
  member_ = NULL;
}
inline const ::protocol::game::msg_guild_member_info& smsg_guild_fight_pvp_look::_internal_member() const {
  return *member_;
}
inline const ::protocol::game::msg_guild_member_info& smsg_guild_fight_pvp_look::member() const {
  const ::protocol::game::msg_guild_member_info* p = member_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_fight_pvp_look.member)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_guild_member_info*>(
      &::protocol::game::_msg_guild_member_info_default_instance_);
}
inline ::protocol::game::msg_guild_member_info* smsg_guild_fight_pvp_look::release_member() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_guild_fight_pvp_look.member)
  
  ::protocol::game::msg_guild_member_info* temp = member_;
  member_ = NULL;
  return temp;
}
inline ::protocol::game::msg_guild_member_info* smsg_guild_fight_pvp_look::mutable_member() {
  
  if (member_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_guild_member_info>(GetArenaNoVirtual());
    member_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_fight_pvp_look.member)
  return member_;
}
inline void smsg_guild_fight_pvp_look::set_allocated_member(::protocol::game::msg_guild_member_info* member) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete member_;
  }
  if (member) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      member = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, member, submessage_arena);
    }
    
  } else {
    
  }
  member_ = member;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_guild_fight_pvp_look.member)
}

// -------------------------------------------------------------------

// cmsg_guild_pvp_bushu

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_pvp_bushu::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_pvp_bushu::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_pvp_bushu::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_pvp_bushu::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_pvp_bushu.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_pvp_bushu::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_pvp_bushu.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_pvp_bushu::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_pvp_bushu.comm)
  return comm_;
}
inline void cmsg_guild_pvp_bushu::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_pvp_bushu.comm)
}

// repeated uint64 player_guids = 2;
inline int cmsg_guild_pvp_bushu::player_guids_size() const {
  return player_guids_.size();
}
inline void cmsg_guild_pvp_bushu::clear_player_guids() {
  set_changed();
  player_guids_.Clear();
}
inline ::google::protobuf::uint64 cmsg_guild_pvp_bushu::player_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_pvp_bushu.player_guids)
  return player_guids_.Get(index);
}
inline void cmsg_guild_pvp_bushu::set_player_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_pvp_bushu.player_guids)
}
inline void cmsg_guild_pvp_bushu::add_player_guids(::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_guild_pvp_bushu.player_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
cmsg_guild_pvp_bushu::player_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_guild_pvp_bushu.player_guids)
  return player_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
cmsg_guild_pvp_bushu::mutable_player_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_guild_pvp_bushu.player_guids)
  return &player_guids_;
}

// -------------------------------------------------------------------

// cmsg_guild_fight

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_fight::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_fight::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_fight::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_fight::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_fight.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_fight::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_fight.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_fight::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_fight.comm)
  return comm_;
}
inline void cmsg_guild_fight::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_fight.comm)
}

// uint64 target_guild = 2;
inline void cmsg_guild_fight::clear_target_guild() {
  set_changed();
  target_guild_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_guild_fight::target_guild() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_fight.target_guild)
  return target_guild_;
}
inline void cmsg_guild_fight::set_target_guild(::google::protobuf::uint64 value) {
  set_changed();
  
  target_guild_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_fight.target_guild)
}

// int32 target_index = 3;
inline void cmsg_guild_fight::clear_target_index() {
  set_changed();
  target_index_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_fight::target_index() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_fight.target_index)
  return target_index_;
}
inline void cmsg_guild_fight::set_target_index(::google::protobuf::int32 value) {
  set_changed();
  
  target_index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_fight.target_index)
}

// -------------------------------------------------------------------

// smsg_guild_fight

// bytes text = 1;
inline void smsg_guild_fight::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_guild_fight::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_fight.text)
  return text_.GetNoArena();
}
inline void smsg_guild_fight::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_fight.text)
}
#if LANG_CXX11
inline void smsg_guild_fight::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_guild_fight.text)
}
#endif
inline void smsg_guild_fight::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_guild_fight.text)
}
inline void smsg_guild_fight::set_text(const void* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_guild_fight.text)
}
inline ::std::string* smsg_guild_fight::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_guild_fight.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_guild_fight::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_guild_fight.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_guild_fight::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_guild_fight.text)
}

// int32 result = 2;
inline void smsg_guild_fight::clear_result() {
  set_changed();
  result_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_fight::result() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_fight.result)
  return result_;
}
inline void smsg_guild_fight::set_result(::google::protobuf::int32 value) {
  set_changed();
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_fight.result)
}

// int32 guard_point = 3;
inline void smsg_guild_fight::clear_guard_point() {
  set_changed();
  guard_point_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_fight::guard_point() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_fight.guard_point)
  return guard_point_;
}
inline void smsg_guild_fight::set_guard_point(::google::protobuf::int32 value) {
  set_changed();
  
  guard_point_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_fight.guard_point)
}

// int32 gongxian = 4;
inline void smsg_guild_fight::clear_gongxian() {
  set_changed();
  gongxian_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_fight::gongxian() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_fight.gongxian)
  return gongxian_;
}
inline void smsg_guild_fight::set_gongxian(::google::protobuf::int32 value) {
  set_changed();
  
  gongxian_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_fight.gongxian)
}

// int32 zhanji = 5;
inline void smsg_guild_fight::clear_zhanji() {
  set_changed();
  zhanji_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_fight::zhanji() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_fight.zhanji)
  return zhanji_;
}
inline void smsg_guild_fight::set_zhanji(::google::protobuf::int32 value) {
  set_changed();
  
  zhanji_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_fight.zhanji)
}

// int32 judian = 6;
inline void smsg_guild_fight::clear_judian() {
  set_changed();
  judian_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_fight::judian() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_fight.judian)
  return judian_;
}
inline void smsg_guild_fight::set_judian(::google::protobuf::int32 value) {
  set_changed();
  
  judian_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_fight.judian)
}

// int32 jidi = 7;
inline void smsg_guild_fight::clear_jidi() {
  set_changed();
  jidi_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_fight::jidi() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_fight.jidi)
  return jidi_;
}
inline void smsg_guild_fight::set_jidi(::google::protobuf::int32 value) {
  set_changed();
  
  jidi_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_fight.jidi)
}

// int32 perfect = 8;
inline void smsg_guild_fight::clear_perfect() {
  set_changed();
  perfect_ = 0;
}
inline ::google::protobuf::int32 smsg_guild_fight::perfect() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_guild_fight.perfect)
  return perfect_;
}
inline void smsg_guild_fight::set_perfect(::google::protobuf::int32 value) {
  set_changed();
  
  perfect_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_guild_fight.perfect)
}

// -------------------------------------------------------------------

// cmsg_guild_pvp_reward

// .protocol.game.msg_common comm = 1;
inline bool cmsg_guild_pvp_reward::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_guild_pvp_reward::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_guild_pvp_reward::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_guild_pvp_reward::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_pvp_reward.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_guild_pvp_reward::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_guild_pvp_reward.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_guild_pvp_reward::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_guild_pvp_reward.comm)
  return comm_;
}
inline void cmsg_guild_pvp_reward::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_guild_pvp_reward.comm)
}

// int32 id = 2;
inline void cmsg_guild_pvp_reward::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_guild_pvp_reward::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_guild_pvp_reward.id)
  return id_;
}
inline void cmsg_guild_pvp_reward::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_guild_pvp_reward.id)
}

// -------------------------------------------------------------------

// cmsg_rank_view

// .protocol.game.msg_common comm = 1;
inline bool cmsg_rank_view::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_rank_view::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_rank_view::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_rank_view::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_rank_view.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_rank_view::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_rank_view.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_rank_view::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_rank_view.comm)
  return comm_;
}
inline void cmsg_rank_view::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_rank_view.comm)
}

// int32 type = 2;
inline void cmsg_rank_view::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 cmsg_rank_view::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_rank_view.type)
  return type_;
}
inline void cmsg_rank_view::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_rank_view.type)
}

// -------------------------------------------------------------------

// smsg_rank_view

// .dhc.rank_t rank_list = 1;
inline bool smsg_rank_view::has_rank_list() const {
  return this != internal_default_instance() && rank_list_ != NULL;
}
inline const ::dhc::rank_t& smsg_rank_view::_internal_rank_list() const {
  return *rank_list_;
}
inline const ::dhc::rank_t& smsg_rank_view::rank_list() const {
  const ::dhc::rank_t* p = rank_list_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_rank_view.rank_list)
  return p != NULL ? *p : *reinterpret_cast<const ::dhc::rank_t*>(
      &::dhc::_rank_t_default_instance_);
}
inline ::dhc::rank_t* smsg_rank_view::release_rank_list() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_rank_view.rank_list)
  
  ::dhc::rank_t* temp = rank_list_;
  rank_list_ = NULL;
  return temp;
}
inline ::dhc::rank_t* smsg_rank_view::mutable_rank_list() {
  
  if (rank_list_ == NULL) {
    auto* p = CreateMaybeMessage<::dhc::rank_t>(GetArenaNoVirtual());
    rank_list_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_rank_view.rank_list)
  return rank_list_;
}
inline void smsg_rank_view::set_allocated_rank_list(::dhc::rank_t* rank_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rank_list_);
  }
  if (rank_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rank_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rank_list, submessage_arena);
    }
    
  } else {
    
  }
  rank_list_ = rank_list;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_rank_view.rank_list)
}

// -------------------------------------------------------------------

// smsg_social_look

// repeated .dhc.social_t social = 1;
inline int smsg_social_look::social_size() const {
  return social_.size();
}
inline ::dhc::social_t* smsg_social_look::mutable_social(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_social_look.social)
  return social_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::social_t >*
smsg_social_look::mutable_social() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_social_look.social)
  return &social_;
}
inline const ::dhc::social_t& smsg_social_look::social(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_social_look.social)
  return social_.Get(index);
}
inline ::dhc::social_t* smsg_social_look::add_social() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_social_look.social)
  return social_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::social_t >&
smsg_social_look::social() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_social_look.social)
  return social_;
}

// -------------------------------------------------------------------

// msg_social_player

// uint64 player_guid = 1;
inline void msg_social_player::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 msg_social_player::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_social_player.player_guid)
  return player_guid_;
}
inline void msg_social_player::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_social_player.player_guid)
}

// string player_name = 2;
inline void msg_social_player::clear_player_name() {
  set_changed();
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_social_player::player_name() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_social_player.player_name)
  return player_name_.GetNoArena();
}
inline void msg_social_player::set_player_name(const ::std::string& value) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_social_player.player_name)
}
#if LANG_CXX11
inline void msg_social_player::set_player_name(::std::string&& value) {
  set_changed();
  
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_social_player.player_name)
}
#endif
inline void msg_social_player::set_player_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_social_player.player_name)
}
inline void msg_social_player::set_player_name(const char* value, size_t size) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_social_player.player_name)
}
inline ::std::string* msg_social_player::mutable_player_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_social_player.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_social_player::release_player_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_social_player.player_name)
  
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_social_player::set_allocated_player_name(::std::string* player_name) {
  set_changed();
  if (player_name != NULL) {
    
  } else {
    
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_social_player.player_name)
}

// uint64 player_template = 3;
inline void msg_social_player::clear_player_template() {
  set_changed();
  player_template_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 msg_social_player::player_template() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_social_player.player_template)
  return player_template_;
}
inline void msg_social_player::set_player_template(::google::protobuf::uint64 value) {
  set_changed();
  
  player_template_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_social_player.player_template)
}

// int32 player_level = 4;
inline void msg_social_player::clear_player_level() {
  set_changed();
  player_level_ = 0;
}
inline ::google::protobuf::int32 msg_social_player::player_level() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_social_player.player_level)
  return player_level_;
}
inline void msg_social_player::set_player_level(::google::protobuf::int32 value) {
  set_changed();
  
  player_level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_social_player.player_level)
}

// uint64 player_bf = 5;
inline void msg_social_player::clear_player_bf() {
  set_changed();
  player_bf_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 msg_social_player::player_bf() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_social_player.player_bf)
  return player_bf_;
}
inline void msg_social_player::set_player_bf(::google::protobuf::uint64 value) {
  set_changed();
  
  player_bf_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_social_player.player_bf)
}

// int32 player_vip = 6;
inline void msg_social_player::clear_player_vip() {
  set_changed();
  player_vip_ = 0;
}
inline ::google::protobuf::int32 msg_social_player::player_vip() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_social_player.player_vip)
  return player_vip_;
}
inline void msg_social_player::set_player_vip(::google::protobuf::int32 value) {
  set_changed();
  
  player_vip_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_social_player.player_vip)
}

// int32 player_achieve = 7;
inline void msg_social_player::clear_player_achieve() {
  set_changed();
  player_achieve_ = 0;
}
inline ::google::protobuf::int32 msg_social_player::player_achieve() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_social_player.player_achieve)
  return player_achieve_;
}
inline void msg_social_player::set_player_achieve(::google::protobuf::int32 value) {
  set_changed();
  
  player_achieve_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_social_player.player_achieve)
}

// uint64 offline_time = 8;
inline void msg_social_player::clear_offline_time() {
  set_changed();
  offline_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 msg_social_player::offline_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_social_player.offline_time)
  return offline_time_;
}
inline void msg_social_player::set_offline_time(::google::protobuf::uint64 value) {
  set_changed();
  
  offline_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_social_player.offline_time)
}

// int32 nalflag = 9;
inline void msg_social_player::clear_nalflag() {
  set_changed();
  nalflag_ = 0;
}
inline ::google::protobuf::int32 msg_social_player::nalflag() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_social_player.nalflag)
  return nalflag_;
}
inline void msg_social_player::set_nalflag(::google::protobuf::int32 value) {
  set_changed();
  
  nalflag_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_social_player.nalflag)
}

// -------------------------------------------------------------------

// smsg_social_rand

// repeated .protocol.game.msg_social_player social_player = 1;
inline int smsg_social_rand::social_player_size() const {
  return social_player_.size();
}
inline void smsg_social_rand::clear_social_player() {
  social_player_.Clear();
}
inline ::protocol::game::msg_social_player* smsg_social_rand::mutable_social_player(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_social_rand.social_player)
  return social_player_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_social_player >*
smsg_social_rand::mutable_social_player() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_social_rand.social_player)
  return &social_player_;
}
inline const ::protocol::game::msg_social_player& smsg_social_rand::social_player(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_social_rand.social_player)
  return social_player_.Get(index);
}
inline ::protocol::game::msg_social_player* smsg_social_rand::add_social_player() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_social_rand.social_player)
  return social_player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_social_player >&
smsg_social_rand::social_player() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_social_rand.social_player)
  return social_player_;
}

// -------------------------------------------------------------------

// cmsg_social_add

// .protocol.game.msg_common comm = 1;
inline bool cmsg_social_add::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_social_add::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_social_add::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_social_add::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_social_add.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_social_add::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_social_add.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_social_add::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_social_add.comm)
  return comm_;
}
inline void cmsg_social_add::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_social_add.comm)
}

// uint64 player_guid = 2;
inline void cmsg_social_add::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_social_add::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_social_add.player_guid)
  return player_guid_;
}
inline void cmsg_social_add::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_social_add.player_guid)
}

// -------------------------------------------------------------------

// smsg_social_add

// uint64 player_guid = 1;
inline void smsg_social_add::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_social_add::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_social_add.player_guid)
  return player_guid_;
}
inline void smsg_social_add::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_social_add.player_guid)
}

// -------------------------------------------------------------------

// smsg_social_look_new

// repeated .protocol.game.msg_social_player social_player = 1;
inline int smsg_social_look_new::social_player_size() const {
  return social_player_.size();
}
inline void smsg_social_look_new::clear_social_player() {
  social_player_.Clear();
}
inline ::protocol::game::msg_social_player* smsg_social_look_new::mutable_social_player(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_social_look_new.social_player)
  return social_player_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_social_player >*
smsg_social_look_new::mutable_social_player() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_social_look_new.social_player)
  return &social_player_;
}
inline const ::protocol::game::msg_social_player& smsg_social_look_new::social_player(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_social_look_new.social_player)
  return social_player_.Get(index);
}
inline ::protocol::game::msg_social_player* smsg_social_look_new::add_social_player() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_social_look_new.social_player)
  return social_player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_social_player >&
smsg_social_look_new::social_player() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_social_look_new.social_player)
  return social_player_;
}

// -------------------------------------------------------------------

// cmsg_social_agree

// .protocol.game.msg_common comm = 1;
inline bool cmsg_social_agree::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_social_agree::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_social_agree::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_social_agree::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_social_agree.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_social_agree::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_social_agree.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_social_agree::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_social_agree.comm)
  return comm_;
}
inline void cmsg_social_agree::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_social_agree.comm)
}

// uint64 player_guid = 2;
inline void cmsg_social_agree::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_social_agree::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_social_agree.player_guid)
  return player_guid_;
}
inline void cmsg_social_agree::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_social_agree.player_guid)
}

// int32 agree = 3;
inline void cmsg_social_agree::clear_agree() {
  set_changed();
  agree_ = 0;
}
inline ::google::protobuf::int32 cmsg_social_agree::agree() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_social_agree.agree)
  return agree_;
}
inline void cmsg_social_agree::set_agree(::google::protobuf::int32 value) {
  set_changed();
  
  agree_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_social_agree.agree)
}

// -------------------------------------------------------------------

// smsg_social_agree

// uint64 player_guid = 1;
inline void smsg_social_agree::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_social_agree::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_social_agree.player_guid)
  return player_guid_;
}
inline void smsg_social_agree::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_social_agree.player_guid)
}

// int32 agree = 2;
inline void smsg_social_agree::clear_agree() {
  set_changed();
  agree_ = 0;
}
inline ::google::protobuf::int32 smsg_social_agree::agree() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_social_agree.agree)
  return agree_;
}
inline void smsg_social_agree::set_agree(::google::protobuf::int32 value) {
  set_changed();
  
  agree_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_social_agree.agree)
}

// -------------------------------------------------------------------

// cmsg_social_delete

// .protocol.game.msg_common comm = 1;
inline bool cmsg_social_delete::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_social_delete::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_social_delete::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_social_delete::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_social_delete.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_social_delete::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_social_delete.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_social_delete::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_social_delete.comm)
  return comm_;
}
inline void cmsg_social_delete::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_social_delete.comm)
}

// uint64 social_guid = 2;
inline void cmsg_social_delete::clear_social_guid() {
  set_changed();
  social_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_social_delete::social_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_social_delete.social_guid)
  return social_guid_;
}
inline void cmsg_social_delete::set_social_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  social_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_social_delete.social_guid)
}

// -------------------------------------------------------------------

// smsg_social_delete

// uint64 social_guid = 1;
inline void smsg_social_delete::clear_social_guid() {
  set_changed();
  social_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_social_delete::social_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_social_delete.social_guid)
  return social_guid_;
}
inline void smsg_social_delete::set_social_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  social_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_social_delete.social_guid)
}

// -------------------------------------------------------------------

// cmsg_social_song

// .protocol.game.msg_common comm = 1;
inline bool cmsg_social_song::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_social_song::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_social_song::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_social_song::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_social_song.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_social_song::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_social_song.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_social_song::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_social_song.comm)
  return comm_;
}
inline void cmsg_social_song::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_social_song.comm)
}

// uint64 social_guid = 2;
inline void cmsg_social_song::clear_social_guid() {
  set_changed();
  social_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_social_song::social_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_social_song.social_guid)
  return social_guid_;
}
inline void cmsg_social_song::set_social_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  social_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_social_song.social_guid)
}

// -------------------------------------------------------------------

// smsg_social_song

// uint64 social_guid = 1;
inline void smsg_social_song::clear_social_guid() {
  set_changed();
  social_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_social_song::social_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_social_song.social_guid)
  return social_guid_;
}
inline void smsg_social_song::set_social_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  social_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_social_song.social_guid)
}

// -------------------------------------------------------------------

// smsg_social_shou

// repeated uint64 social_guids = 1;
inline int smsg_social_shou::social_guids_size() const {
  return social_guids_.size();
}
inline void smsg_social_shou::clear_social_guids() {
  set_changed();
  social_guids_.Clear();
}
inline ::google::protobuf::uint64 smsg_social_shou::social_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_social_shou.social_guids)
  return social_guids_.Get(index);
}
inline void smsg_social_shou::set_social_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  social_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_social_shou.social_guids)
}
inline void smsg_social_shou::add_social_guids(::google::protobuf::uint64 value) {
  set_changed();
  social_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_social_shou.social_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
smsg_social_shou::social_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_social_shou.social_guids)
  return social_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
smsg_social_shou::mutable_social_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_social_shou.social_guids)
  return &social_guids_;
}

// -------------------------------------------------------------------

// cmsg_social_invite_active

// .protocol.game.msg_common comm = 1;
inline bool cmsg_social_invite_active::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_social_invite_active::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_social_invite_active::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_social_invite_active::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_social_invite_active.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_social_invite_active::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_social_invite_active.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_social_invite_active::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_social_invite_active.comm)
  return comm_;
}
inline void cmsg_social_invite_active::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_social_invite_active.comm)
}

// int32 id = 2;
inline void cmsg_social_invite_active::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_social_invite_active::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_social_invite_active.id)
  return id_;
}
inline void cmsg_social_invite_active::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_social_invite_active.id)
}

// -------------------------------------------------------------------

// smsg_player_check

// int32 post = 1;
inline void smsg_player_check::clear_post() {
  set_changed();
  post_ = 0;
}
inline ::google::protobuf::int32 smsg_player_check::post() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.post)
  return post_;
}
inline void smsg_player_check::set_post(::google::protobuf::int32 value) {
  set_changed();
  
  post_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.post)
}

// int32 friend_apply = 2;
inline void smsg_player_check::clear_friend_apply() {
  set_changed();
  friend_apply_ = 0;
}
inline ::google::protobuf::int32 smsg_player_check::friend_apply() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.friend_apply)
  return friend_apply_;
}
inline void smsg_player_check::set_friend_apply(::google::protobuf::int32 value) {
  set_changed();
  
  friend_apply_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.friend_apply)
}

// int32 friend_tili = 3;
inline void smsg_player_check::clear_friend_tili() {
  set_changed();
  friend_tili_ = 0;
}
inline ::google::protobuf::int32 smsg_player_check::friend_tili() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.friend_tili)
  return friend_tili_;
}
inline void smsg_player_check::set_friend_tili(::google::protobuf::int32 value) {
  set_changed();
  
  friend_tili_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.friend_tili)
}

// int32 kaifu = 4;
inline void smsg_player_check::clear_kaifu() {
  set_changed();
  kaifu_ = 0;
}
inline ::google::protobuf::int32 smsg_player_check::kaifu() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.kaifu)
  return kaifu_;
}
inline void smsg_player_check::set_kaifu(::google::protobuf::int32 value) {
  set_changed();
  
  kaifu_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.kaifu)
}

// int32 pttq = 5;
inline void smsg_player_check::clear_pttq() {
  set_changed();
  pttq_ = 0;
}
inline ::google::protobuf::int32 smsg_player_check::pttq() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.pttq)
  return pttq_;
}
inline void smsg_player_check::set_pttq(::google::protobuf::int32 value) {
  set_changed();
  
  pttq_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.pttq)
}

// int32 yb = 6;
inline void smsg_player_check::clear_yb() {
  set_changed();
  yb_ = 0;
}
inline ::google::protobuf::int32 smsg_player_check::yb() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.yb)
  return yb_;
}
inline void smsg_player_check::set_yb(::google::protobuf::int32 value) {
  set_changed();
  
  yb_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.yb)
}

// int32 qd = 7;
inline void smsg_player_check::clear_qd() {
  set_changed();
  qd_ = 0;
}
inline ::google::protobuf::int32 smsg_player_check::qd() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.qd)
  return qd_;
}
inline void smsg_player_check::set_qd(::google::protobuf::int32 value) {
  set_changed();
  
  qd_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.qd)
}

// int32 jjc = 8;
inline void smsg_player_check::clear_jjc() {
  set_changed();
  jjc_ = 0;
}
inline ::google::protobuf::int32 smsg_player_check::jjc() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.jjc)
  return jjc_;
}
inline void smsg_player_check::set_jjc(::google::protobuf::int32 value) {
  set_changed();
  
  jjc_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.jjc)
}

// int32 shop_refresh = 9;
inline void smsg_player_check::clear_shop_refresh() {
  set_changed();
  shop_refresh_ = 0;
}
inline ::google::protobuf::int32 smsg_player_check::shop_refresh() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.shop_refresh)
  return shop_refresh_;
}
inline void smsg_player_check::set_shop_refresh(::google::protobuf::int32 value) {
  set_changed();
  
  shop_refresh_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.shop_refresh)
}

// int32 guild = 10;
inline void smsg_player_check::clear_guild() {
  set_changed();
  guild_ = 0;
}
inline ::google::protobuf::int32 smsg_player_check::guild() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.guild)
  return guild_;
}
inline void smsg_player_check::set_guild(::google::protobuf::int32 value) {
  set_changed();
  
  guild_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.guild)
}

// string huodong = 11;
inline void smsg_player_check::clear_huodong() {
  set_changed();
  huodong_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_player_check::huodong() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.huodong)
  return huodong_.GetNoArena();
}
inline void smsg_player_check::set_huodong(const ::std::string& value) {
  set_changed();
  
  huodong_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.huodong)
}
#if LANG_CXX11
inline void smsg_player_check::set_huodong(::std::string&& value) {
  set_changed();
  
  huodong_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_player_check.huodong)
}
#endif
inline void smsg_player_check::set_huodong(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  huodong_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_player_check.huodong)
}
inline void smsg_player_check::set_huodong(const char* value, size_t size) {
  set_changed();
  
  huodong_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_player_check.huodong)
}
inline ::std::string* smsg_player_check::mutable_huodong() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_player_check.huodong)
  return huodong_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_player_check::release_huodong() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_player_check.huodong)
  
  return huodong_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_player_check::set_allocated_huodong(::std::string* huodong) {
  set_changed();
  if (huodong != NULL) {
    
  } else {
    
  }
  huodong_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), huodong);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_player_check.huodong)
}

// string huodong_item1 = 12;
inline void smsg_player_check::clear_huodong_item1() {
  set_changed();
  huodong_item1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_player_check::huodong_item1() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.huodong_item1)
  return huodong_item1_.GetNoArena();
}
inline void smsg_player_check::set_huodong_item1(const ::std::string& value) {
  set_changed();
  
  huodong_item1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.huodong_item1)
}
#if LANG_CXX11
inline void smsg_player_check::set_huodong_item1(::std::string&& value) {
  set_changed();
  
  huodong_item1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_player_check.huodong_item1)
}
#endif
inline void smsg_player_check::set_huodong_item1(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  huodong_item1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_player_check.huodong_item1)
}
inline void smsg_player_check::set_huodong_item1(const char* value, size_t size) {
  set_changed();
  
  huodong_item1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_player_check.huodong_item1)
}
inline ::std::string* smsg_player_check::mutable_huodong_item1() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_player_check.huodong_item1)
  return huodong_item1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_player_check::release_huodong_item1() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_player_check.huodong_item1)
  
  return huodong_item1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_player_check::set_allocated_huodong_item1(::std::string* huodong_item1) {
  set_changed();
  if (huodong_item1 != NULL) {
    
  } else {
    
  }
  huodong_item1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), huodong_item1);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_player_check.huodong_item1)
}

// string huodong_des1 = 13;
inline void smsg_player_check::clear_huodong_des1() {
  set_changed();
  huodong_des1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_player_check::huodong_des1() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.huodong_des1)
  return huodong_des1_.GetNoArena();
}
inline void smsg_player_check::set_huodong_des1(const ::std::string& value) {
  set_changed();
  
  huodong_des1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.huodong_des1)
}
#if LANG_CXX11
inline void smsg_player_check::set_huodong_des1(::std::string&& value) {
  set_changed();
  
  huodong_des1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_player_check.huodong_des1)
}
#endif
inline void smsg_player_check::set_huodong_des1(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  huodong_des1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_player_check.huodong_des1)
}
inline void smsg_player_check::set_huodong_des1(const char* value, size_t size) {
  set_changed();
  
  huodong_des1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_player_check.huodong_des1)
}
inline ::std::string* smsg_player_check::mutable_huodong_des1() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_player_check.huodong_des1)
  return huodong_des1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_player_check::release_huodong_des1() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_player_check.huodong_des1)
  
  return huodong_des1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_player_check::set_allocated_huodong_des1(::std::string* huodong_des1) {
  set_changed();
  if (huodong_des1 != NULL) {
    
  } else {
    
  }
  huodong_des1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), huodong_des1);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_player_check.huodong_des1)
}

// string huodong_item2 = 14;
inline void smsg_player_check::clear_huodong_item2() {
  set_changed();
  huodong_item2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_player_check::huodong_item2() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.huodong_item2)
  return huodong_item2_.GetNoArena();
}
inline void smsg_player_check::set_huodong_item2(const ::std::string& value) {
  set_changed();
  
  huodong_item2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.huodong_item2)
}
#if LANG_CXX11
inline void smsg_player_check::set_huodong_item2(::std::string&& value) {
  set_changed();
  
  huodong_item2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_player_check.huodong_item2)
}
#endif
inline void smsg_player_check::set_huodong_item2(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  huodong_item2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_player_check.huodong_item2)
}
inline void smsg_player_check::set_huodong_item2(const char* value, size_t size) {
  set_changed();
  
  huodong_item2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_player_check.huodong_item2)
}
inline ::std::string* smsg_player_check::mutable_huodong_item2() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_player_check.huodong_item2)
  return huodong_item2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_player_check::release_huodong_item2() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_player_check.huodong_item2)
  
  return huodong_item2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_player_check::set_allocated_huodong_item2(::std::string* huodong_item2) {
  set_changed();
  if (huodong_item2 != NULL) {
    
  } else {
    
  }
  huodong_item2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), huodong_item2);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_player_check.huodong_item2)
}

// string huodong_des2 = 15;
inline void smsg_player_check::clear_huodong_des2() {
  set_changed();
  huodong_des2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_player_check::huodong_des2() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.huodong_des2)
  return huodong_des2_.GetNoArena();
}
inline void smsg_player_check::set_huodong_des2(const ::std::string& value) {
  set_changed();
  
  huodong_des2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.huodong_des2)
}
#if LANG_CXX11
inline void smsg_player_check::set_huodong_des2(::std::string&& value) {
  set_changed();
  
  huodong_des2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_player_check.huodong_des2)
}
#endif
inline void smsg_player_check::set_huodong_des2(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  huodong_des2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_player_check.huodong_des2)
}
inline void smsg_player_check::set_huodong_des2(const char* value, size_t size) {
  set_changed();
  
  huodong_des2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_player_check.huodong_des2)
}
inline ::std::string* smsg_player_check::mutable_huodong_des2() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_player_check.huodong_des2)
  return huodong_des2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_player_check::release_huodong_des2() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_player_check.huodong_des2)
  
  return huodong_des2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_player_check::set_allocated_huodong_des2(::std::string* huodong_des2) {
  set_changed();
  if (huodong_des2 != NULL) {
    
  } else {
    
  }
  huodong_des2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), huodong_des2);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_player_check.huodong_des2)
}

// bool jieri_chanchu = 16;
inline void smsg_player_check::clear_jieri_chanchu() {
  set_changed();
  jieri_chanchu_ = false;
}
inline bool smsg_player_check::jieri_chanchu() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.jieri_chanchu)
  return jieri_chanchu_;
}
inline void smsg_player_check::set_jieri_chanchu(bool value) {
  set_changed();
  
  jieri_chanchu_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.jieri_chanchu)
}

// int32 jieri_point = 17;
inline void smsg_player_check::clear_jieri_point() {
  set_changed();
  jieri_point_ = 0;
}
inline ::google::protobuf::int32 smsg_player_check::jieri_point() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.jieri_point)
  return jieri_point_;
}
inline void smsg_player_check::set_jieri_point(::google::protobuf::int32 value) {
  set_changed();
  
  jieri_point_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.jieri_point)
}

// int32 xingheqidian = 18;
inline void smsg_player_check::clear_xingheqidian() {
  set_changed();
  xingheqidian_ = 0;
}
inline ::google::protobuf::int32 smsg_player_check::xingheqidian() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.xingheqidian)
  return xingheqidian_;
}
inline void smsg_player_check::set_xingheqidian(::google::protobuf::int32 value) {
  set_changed();
  
  xingheqidian_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.xingheqidian)
}

// int32 bingyuan = 19;
inline void smsg_player_check::clear_bingyuan() {
  set_changed();
  bingyuan_ = 0;
}
inline ::google::protobuf::int32 smsg_player_check::bingyuan() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.bingyuan)
  return bingyuan_;
}
inline void smsg_player_check::set_bingyuan(::google::protobuf::int32 value) {
  set_changed();
  
  bingyuan_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.bingyuan)
}

// int32 duanwei = 20;
inline void smsg_player_check::clear_duanwei() {
  set_changed();
  duanwei_ = 0;
}
inline ::google::protobuf::int32 smsg_player_check::duanwei() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_player_check.duanwei)
  return duanwei_;
}
inline void smsg_player_check::set_duanwei(::google::protobuf::int32 value) {
  set_changed();
  
  duanwei_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_player_check.duanwei)
}

// -------------------------------------------------------------------

// cmsg_dress_on

// .protocol.game.msg_common comm = 1;
inline bool cmsg_dress_on::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_dress_on::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_dress_on::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_dress_on::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_dress_on.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_dress_on::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_dress_on.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_dress_on::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_dress_on.comm)
  return comm_;
}
inline void cmsg_dress_on::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_dress_on.comm)
}

// int32 dress_id = 2;
inline void cmsg_dress_on::clear_dress_id() {
  set_changed();
  dress_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_dress_on::dress_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_dress_on.dress_id)
  return dress_id_;
}
inline void cmsg_dress_on::set_dress_id(::google::protobuf::int32 value) {
  set_changed();
  
  dress_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_dress_on.dress_id)
}

// -------------------------------------------------------------------

// cmsg_dress_off

// .protocol.game.msg_common comm = 1;
inline bool cmsg_dress_off::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_dress_off::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_dress_off::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_dress_off::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_dress_off.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_dress_off::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_dress_off.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_dress_off::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_dress_off.comm)
  return comm_;
}
inline void cmsg_dress_off::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_dress_off.comm)
}

// int32 dress_id = 2;
inline void cmsg_dress_off::clear_dress_id() {
  set_changed();
  dress_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_dress_off::dress_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_dress_off.dress_id)
  return dress_id_;
}
inline void cmsg_dress_off::set_dress_id(::google::protobuf::int32 value) {
  set_changed();
  
  dress_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_dress_off.dress_id)
}

// -------------------------------------------------------------------

// cmsg_dress_buy

// .protocol.game.msg_common comm = 1;
inline bool cmsg_dress_buy::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_dress_buy::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_dress_buy::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_dress_buy::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_dress_buy.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_dress_buy::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_dress_buy.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_dress_buy::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_dress_buy.comm)
  return comm_;
}
inline void cmsg_dress_buy::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_dress_buy.comm)
}

// int32 dress_id = 2;
inline void cmsg_dress_buy::clear_dress_id() {
  set_changed();
  dress_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_dress_buy::dress_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_dress_buy.dress_id)
  return dress_id_;
}
inline void cmsg_dress_buy::set_dress_id(::google::protobuf::int32 value) {
  set_changed();
  
  dress_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_dress_buy.dress_id)
}

// -------------------------------------------------------------------

// cmsg_dress_unlock

// .protocol.game.msg_common comm = 1;
inline bool cmsg_dress_unlock::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_dress_unlock::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_dress_unlock::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_dress_unlock::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_dress_unlock.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_dress_unlock::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_dress_unlock.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_dress_unlock::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_dress_unlock.comm)
  return comm_;
}
inline void cmsg_dress_unlock::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_dress_unlock.comm)
}

// int32 dress_id = 2;
inline void cmsg_dress_unlock::clear_dress_id() {
  set_changed();
  dress_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_dress_unlock::dress_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_dress_unlock.dress_id)
  return dress_id_;
}
inline void cmsg_dress_unlock::set_dress_id(::google::protobuf::int32 value) {
  set_changed();
  
  dress_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_dress_unlock.dress_id)
}

// -------------------------------------------------------------------

// cmsg_dress_unlock_achieve

// .protocol.game.msg_common comm = 1;
inline bool cmsg_dress_unlock_achieve::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_dress_unlock_achieve::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_dress_unlock_achieve::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_dress_unlock_achieve::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_dress_unlock_achieve.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_dress_unlock_achieve::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_dress_unlock_achieve.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_dress_unlock_achieve::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_dress_unlock_achieve.comm)
  return comm_;
}
inline void cmsg_dress_unlock_achieve::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_dress_unlock_achieve.comm)
}

// int32 achieve_id = 2;
inline void cmsg_dress_unlock_achieve::clear_achieve_id() {
  set_changed();
  achieve_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_dress_unlock_achieve::achieve_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_dress_unlock_achieve.achieve_id)
  return achieve_id_;
}
inline void cmsg_dress_unlock_achieve::set_achieve_id(::google::protobuf::int32 value) {
  set_changed();
  
  achieve_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_dress_unlock_achieve.achieve_id)
}

// -------------------------------------------------------------------

// cmsg_libao

// .protocol.game.msg_common comm = 1;
inline bool cmsg_libao::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_libao::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_libao::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_libao::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_libao.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_libao::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_libao.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_libao::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_libao.comm)
  return comm_;
}
inline void cmsg_libao::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_libao.comm)
}

// string code = 2;
inline void cmsg_libao::clear_code() {
  set_changed();
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& cmsg_libao::code() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_libao.code)
  return code_.GetNoArena();
}
inline void cmsg_libao::set_code(const ::std::string& value) {
  set_changed();
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_libao.code)
}
#if LANG_CXX11
inline void cmsg_libao::set_code(::std::string&& value) {
  set_changed();
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.cmsg_libao.code)
}
#endif
inline void cmsg_libao::set_code(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.cmsg_libao.code)
}
inline void cmsg_libao::set_code(const char* value, size_t size) {
  set_changed();
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.cmsg_libao.code)
}
inline ::std::string* cmsg_libao::mutable_code() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_libao.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* cmsg_libao::release_code() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_libao.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void cmsg_libao::set_allocated_code(::std::string* code) {
  set_changed();
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_libao.code)
}

// -------------------------------------------------------------------

// smsg_libao

// repeated int32 types = 1;
inline int smsg_libao::types_size() const {
  return types_.size();
}
inline void smsg_libao::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_libao::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_libao.types)
  return types_.Get(index);
}
inline void smsg_libao::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_libao.types)
}
inline void smsg_libao::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_libao.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_libao::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_libao.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_libao::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_libao.types)
  return &types_;
}

// repeated int32 value1s = 2;
inline int smsg_libao::value1s_size() const {
  return value1s_.size();
}
inline void smsg_libao::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_libao::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_libao.value1s)
  return value1s_.Get(index);
}
inline void smsg_libao::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_libao.value1s)
}
inline void smsg_libao::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_libao.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_libao::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_libao.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_libao::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_libao.value1s)
  return &value1s_;
}

// repeated int32 value2s = 3;
inline int smsg_libao::value2s_size() const {
  return value2s_.size();
}
inline void smsg_libao::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_libao::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_libao.value2s)
  return value2s_.Get(index);
}
inline void smsg_libao::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_libao.value2s)
}
inline void smsg_libao::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_libao.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_libao::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_libao.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_libao::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_libao.value2s)
  return &value2s_;
}

// repeated int32 value3s = 4;
inline int smsg_libao::value3s_size() const {
  return value3s_.size();
}
inline void smsg_libao::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_libao::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_libao.value3s)
  return value3s_.Get(index);
}
inline void smsg_libao::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_libao.value3s)
}
inline void smsg_libao::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_libao.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_libao::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_libao.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_libao::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_libao.value3s)
  return &value3s_;
}

// repeated .dhc.equip_t equips = 5;
inline int smsg_libao::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_libao::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_libao.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_libao::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_libao.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_libao::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_libao.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_libao::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_libao.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_libao::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_libao.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 6;
inline int smsg_libao::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_libao::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_libao.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_libao::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_libao.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_libao::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_libao.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_libao::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_libao.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_libao::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_libao.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 7;
inline int smsg_libao::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_libao::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_libao.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_libao::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_libao.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_libao::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_libao.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_libao::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_libao.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_libao::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_libao.roles)
  return roles_;
}

// int32 chongzhi = 8;
inline void smsg_libao::clear_chongzhi() {
  set_changed();
  chongzhi_ = 0;
}
inline ::google::protobuf::int32 smsg_libao::chongzhi() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_libao.chongzhi)
  return chongzhi_;
}
inline void smsg_libao::set_chongzhi(::google::protobuf::int32 value) {
  set_changed();
  
  chongzhi_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_libao.chongzhi)
}

// -------------------------------------------------------------------

// cmsg_xjbz_get

// .protocol.game.msg_common comm = 1;
inline bool cmsg_xjbz_get::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_xjbz_get::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_xjbz_get::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_xjbz_get::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_xjbz_get.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_xjbz_get::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_xjbz_get.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_xjbz_get::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_xjbz_get.comm)
  return comm_;
}
inline void cmsg_xjbz_get::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_xjbz_get.comm)
}

// int32 site = 2;
inline void cmsg_xjbz_get::clear_site() {
  set_changed();
  site_ = 0;
}
inline ::google::protobuf::int32 cmsg_xjbz_get::site() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_xjbz_get.site)
  return site_;
}
inline void cmsg_xjbz_get::set_site(::google::protobuf::int32 value) {
  set_changed();
  
  site_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_xjbz_get.site)
}

// -------------------------------------------------------------------

// smsg_xjbz_get

// int32 gold = 1;
inline void smsg_xjbz_get::clear_gold() {
  set_changed();
  gold_ = 0;
}
inline ::google::protobuf::int32 smsg_xjbz_get::gold() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_xjbz_get.gold)
  return gold_;
}
inline void smsg_xjbz_get::set_gold(::google::protobuf::int32 value) {
  set_changed();
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_xjbz_get.gold)
}

// int32 baoshi = 2;
inline void smsg_xjbz_get::clear_baoshi() {
  set_changed();
  baoshi_ = 0;
}
inline ::google::protobuf::int32 smsg_xjbz_get::baoshi() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_xjbz_get.baoshi)
  return baoshi_;
}
inline void smsg_xjbz_get::set_baoshi(::google::protobuf::int32 value) {
  set_changed();
  
  baoshi_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_xjbz_get.baoshi)
}

// int32 zz = 3;
inline void smsg_xjbz_get::clear_zz() {
  set_changed();
  zz_ = 0;
}
inline ::google::protobuf::int32 smsg_xjbz_get::zz() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_xjbz_get.zz)
  return zz_;
}
inline void smsg_xjbz_get::set_zz(::google::protobuf::int32 value) {
  set_changed();
  
  zz_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_xjbz_get.zz)
}

// -------------------------------------------------------------------

// smsg_recharge_check_ex

// repeated int32 rdz_ids = 1;
inline int smsg_recharge_check_ex::rdz_ids_size() const {
  return rdz_ids_.size();
}
inline void smsg_recharge_check_ex::clear_rdz_ids() {
  set_changed();
  rdz_ids_.Clear();
}
inline ::google::protobuf::int32 smsg_recharge_check_ex::rdz_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_recharge_check_ex.rdz_ids)
  return rdz_ids_.Get(index);
}
inline void smsg_recharge_check_ex::set_rdz_ids(int index, ::google::protobuf::int32 value) {
  set_changed();
  rdz_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_recharge_check_ex.rdz_ids)
}
inline void smsg_recharge_check_ex::add_rdz_ids(::google::protobuf::int32 value) {
  set_changed();
  rdz_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_recharge_check_ex.rdz_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_recharge_check_ex::rdz_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_recharge_check_ex.rdz_ids)
  return rdz_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_recharge_check_ex::mutable_rdz_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_recharge_check_ex.rdz_ids)
  return &rdz_ids_;
}

// repeated int32 rdz_counts = 2;
inline int smsg_recharge_check_ex::rdz_counts_size() const {
  return rdz_counts_.size();
}
inline void smsg_recharge_check_ex::clear_rdz_counts() {
  set_changed();
  rdz_counts_.Clear();
}
inline ::google::protobuf::int32 smsg_recharge_check_ex::rdz_counts(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_recharge_check_ex.rdz_counts)
  return rdz_counts_.Get(index);
}
inline void smsg_recharge_check_ex::set_rdz_counts(int index, ::google::protobuf::int32 value) {
  set_changed();
  rdz_counts_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_recharge_check_ex.rdz_counts)
}
inline void smsg_recharge_check_ex::add_rdz_counts(::google::protobuf::int32 value) {
  set_changed();
  rdz_counts_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_recharge_check_ex.rdz_counts)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_recharge_check_ex::rdz_counts() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_recharge_check_ex.rdz_counts)
  return rdz_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_recharge_check_ex::mutable_rdz_counts() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_recharge_check_ex.rdz_counts)
  return &rdz_counts_;
}

// repeated int32 type_judge = 3;
inline int smsg_recharge_check_ex::type_judge_size() const {
  return type_judge_.size();
}
inline void smsg_recharge_check_ex::clear_type_judge() {
  set_changed();
  type_judge_.Clear();
}
inline ::google::protobuf::int32 smsg_recharge_check_ex::type_judge(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_recharge_check_ex.type_judge)
  return type_judge_.Get(index);
}
inline void smsg_recharge_check_ex::set_type_judge(int index, ::google::protobuf::int32 value) {
  set_changed();
  type_judge_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_recharge_check_ex.type_judge)
}
inline void smsg_recharge_check_ex::add_type_judge(::google::protobuf::int32 value) {
  set_changed();
  type_judge_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_recharge_check_ex.type_judge)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_recharge_check_ex::type_judge() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_recharge_check_ex.type_judge)
  return type_judge_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_recharge_check_ex::mutable_type_judge() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_recharge_check_ex.type_judge)
  return &type_judge_;
}

// repeated int32 types = 4;
inline int smsg_recharge_check_ex::types_size() const {
  return types_.size();
}
inline void smsg_recharge_check_ex::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_recharge_check_ex::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_recharge_check_ex.types)
  return types_.Get(index);
}
inline void smsg_recharge_check_ex::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_recharge_check_ex.types)
}
inline void smsg_recharge_check_ex::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_recharge_check_ex.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_recharge_check_ex::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_recharge_check_ex.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_recharge_check_ex::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_recharge_check_ex.types)
  return &types_;
}

// repeated int32 value1s = 5;
inline int smsg_recharge_check_ex::value1s_size() const {
  return value1s_.size();
}
inline void smsg_recharge_check_ex::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_recharge_check_ex::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_recharge_check_ex.value1s)
  return value1s_.Get(index);
}
inline void smsg_recharge_check_ex::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_recharge_check_ex.value1s)
}
inline void smsg_recharge_check_ex::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_recharge_check_ex.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_recharge_check_ex::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_recharge_check_ex.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_recharge_check_ex::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_recharge_check_ex.value1s)
  return &value1s_;
}

// repeated int32 value2s = 6;
inline int smsg_recharge_check_ex::value2s_size() const {
  return value2s_.size();
}
inline void smsg_recharge_check_ex::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_recharge_check_ex::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_recharge_check_ex.value2s)
  return value2s_.Get(index);
}
inline void smsg_recharge_check_ex::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_recharge_check_ex.value2s)
}
inline void smsg_recharge_check_ex::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_recharge_check_ex.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_recharge_check_ex::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_recharge_check_ex.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_recharge_check_ex::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_recharge_check_ex.value2s)
  return &value2s_;
}

// repeated int32 value3s = 7;
inline int smsg_recharge_check_ex::value3s_size() const {
  return value3s_.size();
}
inline void smsg_recharge_check_ex::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_recharge_check_ex::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_recharge_check_ex.value3s)
  return value3s_.Get(index);
}
inline void smsg_recharge_check_ex::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_recharge_check_ex.value3s)
}
inline void smsg_recharge_check_ex::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_recharge_check_ex.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_recharge_check_ex::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_recharge_check_ex.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_recharge_check_ex::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_recharge_check_ex.value3s)
  return &value3s_;
}

// repeated .dhc.equip_t equips = 8;
inline int smsg_recharge_check_ex::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_recharge_check_ex::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_recharge_check_ex.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_recharge_check_ex::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_recharge_check_ex.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_recharge_check_ex::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_recharge_check_ex.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_recharge_check_ex::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_recharge_check_ex.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_recharge_check_ex::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_recharge_check_ex.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 9;
inline int smsg_recharge_check_ex::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_recharge_check_ex::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_recharge_check_ex.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_recharge_check_ex::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_recharge_check_ex.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_recharge_check_ex::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_recharge_check_ex.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_recharge_check_ex::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_recharge_check_ex.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_recharge_check_ex::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_recharge_check_ex.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 10;
inline int smsg_recharge_check_ex::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_recharge_check_ex::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_recharge_check_ex.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_recharge_check_ex::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_recharge_check_ex.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_recharge_check_ex::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_recharge_check_ex.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_recharge_check_ex::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_recharge_check_ex.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_recharge_check_ex::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_recharge_check_ex.roles)
  return roles_;
}

// repeated .dhc.pet_t pets = 11;
inline int smsg_recharge_check_ex::pets_size() const {
  return pets_.size();
}
inline ::dhc::pet_t* smsg_recharge_check_ex::mutable_pets(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_recharge_check_ex.pets)
  return pets_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >*
smsg_recharge_check_ex::mutable_pets() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_recharge_check_ex.pets)
  return &pets_;
}
inline const ::dhc::pet_t& smsg_recharge_check_ex::pets(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_recharge_check_ex.pets)
  return pets_.Get(index);
}
inline ::dhc::pet_t* smsg_recharge_check_ex::add_pets() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_recharge_check_ex.pets)
  return pets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::pet_t >&
smsg_recharge_check_ex::pets() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_recharge_check_ex.pets)
  return pets_;
}

// -------------------------------------------------------------------

// cmsg_treasure_hecheng

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_hecheng::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_hecheng::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_hecheng::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_hecheng::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_hecheng.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_hecheng::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_hecheng.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_hecheng::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_hecheng.comm)
  return comm_;
}
inline void cmsg_treasure_hecheng::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_hecheng.comm)
}

// int32 id = 2;
inline void cmsg_treasure_hecheng::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_treasure_hecheng::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_hecheng.id)
  return id_;
}
inline void cmsg_treasure_hecheng::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_hecheng.id)
}

// -------------------------------------------------------------------

// smsg_treasure_hecheng

// .dhc.treasure_t treasure = 1;
inline bool smsg_treasure_hecheng::has_treasure() const {
  return this != internal_default_instance() && treasure_ != NULL;
}
inline const ::dhc::treasure_t& smsg_treasure_hecheng::_internal_treasure() const {
  return *treasure_;
}
inline const ::dhc::treasure_t& smsg_treasure_hecheng::treasure() const {
  const ::dhc::treasure_t* p = treasure_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_hecheng.treasure)
  return p != NULL ? *p : *reinterpret_cast<const ::dhc::treasure_t*>(
      &::dhc::_treasure_t_default_instance_);
}
inline ::dhc::treasure_t* smsg_treasure_hecheng::release_treasure() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_treasure_hecheng.treasure)
  
  ::dhc::treasure_t* temp = treasure_;
  treasure_ = NULL;
  return temp;
}
inline ::dhc::treasure_t* smsg_treasure_hecheng::mutable_treasure() {
  
  if (treasure_ == NULL) {
    auto* p = CreateMaybeMessage<::dhc::treasure_t>(GetArenaNoVirtual());
    treasure_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_hecheng.treasure)
  return treasure_;
}
inline void smsg_treasure_hecheng::set_allocated_treasure(::dhc::treasure_t* treasure) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(treasure_);
  }
  if (treasure) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      treasure = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, treasure, submessage_arena);
    }
    
  } else {
    
  }
  treasure_ = treasure;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_treasure_hecheng.treasure)
}

// -------------------------------------------------------------------

// cmsg_treasure_init

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_init::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_init::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_init::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_init::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_init.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_init::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_init.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_init::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_init.comm)
  return comm_;
}
inline void cmsg_treasure_init::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_init.comm)
}

// uint64 treasure_guids = 2;
inline void cmsg_treasure_init::clear_treasure_guids() {
  set_changed();
  treasure_guids_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_treasure_init::treasure_guids() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_init.treasure_guids)
  return treasure_guids_;
}
inline void cmsg_treasure_init::set_treasure_guids(::google::protobuf::uint64 value) {
  set_changed();
  
  treasure_guids_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_init.treasure_guids)
}

// -------------------------------------------------------------------

// smsg_treasure_init

// repeated int32 types = 1;
inline int smsg_treasure_init::types_size() const {
  return types_.size();
}
inline void smsg_treasure_init::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_init::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_init.types)
  return types_.Get(index);
}
inline void smsg_treasure_init::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_init.types)
}
inline void smsg_treasure_init::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_init.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_init::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_init.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_init::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_init.types)
  return &types_;
}

// repeated int32 value1s = 2;
inline int smsg_treasure_init::value1s_size() const {
  return value1s_.size();
}
inline void smsg_treasure_init::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_init::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_init.value1s)
  return value1s_.Get(index);
}
inline void smsg_treasure_init::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_init.value1s)
}
inline void smsg_treasure_init::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_init.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_init::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_init.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_init::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_init.value1s)
  return &value1s_;
}

// repeated int32 value2s = 3;
inline int smsg_treasure_init::value2s_size() const {
  return value2s_.size();
}
inline void smsg_treasure_init::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_init::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_init.value2s)
  return value2s_.Get(index);
}
inline void smsg_treasure_init::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_init.value2s)
}
inline void smsg_treasure_init::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_init.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_init::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_init.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_init::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_init.value2s)
  return &value2s_;
}

// repeated int32 value3s = 4;
inline int smsg_treasure_init::value3s_size() const {
  return value3s_.size();
}
inline void smsg_treasure_init::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_init::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_init.value3s)
  return value3s_.Get(index);
}
inline void smsg_treasure_init::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_init.value3s)
}
inline void smsg_treasure_init::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_init.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_init::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_init.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_init::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_init.value3s)
  return &value3s_;
}

// repeated .dhc.treasure_t treasures = 5;
inline int smsg_treasure_init::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_treasure_init::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_init.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_treasure_init::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_init.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_treasure_init::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_init.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_treasure_init::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_init.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_treasure_init::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_init.treasures)
  return treasures_;
}

// repeated .dhc.equip_t equips = 6;
inline int smsg_treasure_init::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_treasure_init::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_init.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_treasure_init::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_init.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_treasure_init::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_init.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_treasure_init::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_init.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_treasure_init::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_init.equips)
  return equips_;
}

// repeated .dhc.role_t roles = 7;
inline int smsg_treasure_init::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_treasure_init::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_init.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_treasure_init::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_init.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_treasure_init::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_init.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_treasure_init::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_init.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_treasure_init::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_init.roles)
  return roles_;
}

// -------------------------------------------------------------------

// cmsg_treasure_enhance

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_enhance::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_enhance::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_enhance::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_enhance::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_enhance.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_enhance::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_enhance.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_enhance::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_enhance.comm)
  return comm_;
}
inline void cmsg_treasure_enhance::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_enhance.comm)
}

// uint64 enhance_guid = 2;
inline void cmsg_treasure_enhance::clear_enhance_guid() {
  set_changed();
  enhance_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_treasure_enhance::enhance_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_enhance.enhance_guid)
  return enhance_guid_;
}
inline void cmsg_treasure_enhance::set_enhance_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  enhance_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_enhance.enhance_guid)
}

// repeated uint64 treasure_guids = 3;
inline int cmsg_treasure_enhance::treasure_guids_size() const {
  return treasure_guids_.size();
}
inline void cmsg_treasure_enhance::clear_treasure_guids() {
  set_changed();
  treasure_guids_.Clear();
}
inline ::google::protobuf::uint64 cmsg_treasure_enhance::treasure_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_enhance.treasure_guids)
  return treasure_guids_.Get(index);
}
inline void cmsg_treasure_enhance::set_treasure_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  treasure_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_enhance.treasure_guids)
}
inline void cmsg_treasure_enhance::add_treasure_guids(::google::protobuf::uint64 value) {
  set_changed();
  treasure_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_treasure_enhance.treasure_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
cmsg_treasure_enhance::treasure_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_treasure_enhance.treasure_guids)
  return treasure_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
cmsg_treasure_enhance::mutable_treasure_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_treasure_enhance.treasure_guids)
  return &treasure_guids_;
}

// -------------------------------------------------------------------

// cmsg_treasure_jinlian

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_jinlian::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_jinlian::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_jinlian::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_jinlian::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_jinlian.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_jinlian::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_jinlian.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_jinlian::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_jinlian.comm)
  return comm_;
}
inline void cmsg_treasure_jinlian::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_jinlian.comm)
}

// uint64 jinlian_guid = 2;
inline void cmsg_treasure_jinlian::clear_jinlian_guid() {
  set_changed();
  jinlian_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_treasure_jinlian::jinlian_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_jinlian.jinlian_guid)
  return jinlian_guid_;
}
inline void cmsg_treasure_jinlian::set_jinlian_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  jinlian_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_jinlian.jinlian_guid)
}

// repeated uint64 treasure_guid = 3;
inline int cmsg_treasure_jinlian::treasure_guid_size() const {
  return treasure_guid_.size();
}
inline void cmsg_treasure_jinlian::clear_treasure_guid() {
  set_changed();
  treasure_guid_.Clear();
}
inline ::google::protobuf::uint64 cmsg_treasure_jinlian::treasure_guid(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_jinlian.treasure_guid)
  return treasure_guid_.Get(index);
}
inline void cmsg_treasure_jinlian::set_treasure_guid(int index, ::google::protobuf::uint64 value) {
  set_changed();
  treasure_guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_jinlian.treasure_guid)
}
inline void cmsg_treasure_jinlian::add_treasure_guid(::google::protobuf::uint64 value) {
  set_changed();
  treasure_guid_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_treasure_jinlian.treasure_guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
cmsg_treasure_jinlian::treasure_guid() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_treasure_jinlian.treasure_guid)
  return treasure_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
cmsg_treasure_jinlian::mutable_treasure_guid() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_treasure_jinlian.treasure_guid)
  return &treasure_guid_;
}

// -------------------------------------------------------------------

// smsg_treasure_jinlian

// repeated uint64 treasures = 1;
inline int smsg_treasure_jinlian::treasures_size() const {
  return treasures_.size();
}
inline void smsg_treasure_jinlian::clear_treasures() {
  set_changed();
  treasures_.Clear();
}
inline ::google::protobuf::uint64 smsg_treasure_jinlian::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_jinlian.treasures)
  return treasures_.Get(index);
}
inline void smsg_treasure_jinlian::set_treasures(int index, ::google::protobuf::uint64 value) {
  set_changed();
  treasures_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_jinlian.treasures)
}
inline void smsg_treasure_jinlian::add_treasures(::google::protobuf::uint64 value) {
  set_changed();
  treasures_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_jinlian.treasures)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
smsg_treasure_jinlian::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_jinlian.treasures)
  return treasures_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
smsg_treasure_jinlian::mutable_treasures() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_jinlian.treasures)
  return &treasures_;
}

// -------------------------------------------------------------------

// cmsg_treasure_star

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_star::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_star::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_star::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_star::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_star.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_star::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_star.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_star::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_star.comm)
  return comm_;
}
inline void cmsg_treasure_star::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_star.comm)
}

// uint64 star_guid = 2;
inline void cmsg_treasure_star::clear_star_guid() {
  set_changed();
  star_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_treasure_star::star_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_star.star_guid)
  return star_guid_;
}
inline void cmsg_treasure_star::set_star_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  star_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_star.star_guid)
}

// repeated int32 types = 3;
inline int cmsg_treasure_star::types_size() const {
  return types_.size();
}
inline void cmsg_treasure_star::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 cmsg_treasure_star::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_star.types)
  return types_.Get(index);
}
inline void cmsg_treasure_star::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_star.types)
}
inline void cmsg_treasure_star::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_treasure_star.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
cmsg_treasure_star::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_treasure_star.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
cmsg_treasure_star::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_treasure_star.types)
  return &types_;
}

// -------------------------------------------------------------------

// smsg_treasure_star

// repeated int32 rates = 1;
inline int smsg_treasure_star::rates_size() const {
  return rates_.size();
}
inline void smsg_treasure_star::clear_rates() {
  set_changed();
  rates_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_star::rates(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_star.rates)
  return rates_.Get(index);
}
inline void smsg_treasure_star::set_rates(int index, ::google::protobuf::int32 value) {
  set_changed();
  rates_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_star.rates)
}
inline void smsg_treasure_star::add_rates(::google::protobuf::int32 value) {
  set_changed();
  rates_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_star.rates)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_star::rates() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_star.rates)
  return rates_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_star::mutable_rates() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_star.rates)
  return &rates_;
}

// repeated int32 bjs = 2;
inline int smsg_treasure_star::bjs_size() const {
  return bjs_.size();
}
inline void smsg_treasure_star::clear_bjs() {
  set_changed();
  bjs_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_star::bjs(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_star.bjs)
  return bjs_.Get(index);
}
inline void smsg_treasure_star::set_bjs(int index, ::google::protobuf::int32 value) {
  set_changed();
  bjs_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_star.bjs)
}
inline void smsg_treasure_star::add_bjs(::google::protobuf::int32 value) {
  set_changed();
  bjs_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_star.bjs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_star::bjs() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_star.bjs)
  return bjs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_star::mutable_bjs() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_star.bjs)
  return &bjs_;
}

// -------------------------------------------------------------------

// cmsg_treasure_ronglian

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_ronglian::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_ronglian::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_ronglian::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_ronglian::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_ronglian.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_ronglian::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_ronglian.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_ronglian::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_ronglian.comm)
  return comm_;
}
inline void cmsg_treasure_ronglian::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_ronglian.comm)
}

// uint64 treasure_guid = 2;
inline void cmsg_treasure_ronglian::clear_treasure_guid() {
  set_changed();
  treasure_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_treasure_ronglian::treasure_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_ronglian.treasure_guid)
  return treasure_guid_;
}
inline void cmsg_treasure_ronglian::set_treasure_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  treasure_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_ronglian.treasure_guid)
}

// int32 suipian_id = 3;
inline void cmsg_treasure_ronglian::clear_suipian_id() {
  set_changed();
  suipian_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_treasure_ronglian::suipian_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_ronglian.suipian_id)
  return suipian_id_;
}
inline void cmsg_treasure_ronglian::set_suipian_id(::google::protobuf::int32 value) {
  set_changed();
  
  suipian_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_ronglian.suipian_id)
}

// -------------------------------------------------------------------

// cmsg_treasure_zhuzao

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_zhuzao::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_zhuzao::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_zhuzao::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_zhuzao::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_zhuzao.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_zhuzao::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_zhuzao.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_zhuzao::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_zhuzao.comm)
  return comm_;
}
inline void cmsg_treasure_zhuzao::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_zhuzao.comm)
}

// uint64 treasure_guid = 2;
inline void cmsg_treasure_zhuzao::clear_treasure_guid() {
  set_changed();
  treasure_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_treasure_zhuzao::treasure_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_zhuzao.treasure_guid)
  return treasure_guid_;
}
inline void cmsg_treasure_zhuzao::set_treasure_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  treasure_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_zhuzao.treasure_guid)
}

// -------------------------------------------------------------------

// smsg_treasure_zhuzao

// int32 level = 1;
inline void smsg_treasure_zhuzao::clear_level() {
  set_changed();
  level_ = 0;
}
inline ::google::protobuf::int32 smsg_treasure_zhuzao::level() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_zhuzao.level)
  return level_;
}
inline void smsg_treasure_zhuzao::set_level(::google::protobuf::int32 value) {
  set_changed();
  
  level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_zhuzao.level)
}

// int32 exp = 2;
inline void smsg_treasure_zhuzao::clear_exp() {
  set_changed();
  exp_ = 0;
}
inline ::google::protobuf::int32 smsg_treasure_zhuzao::exp() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_zhuzao.exp)
  return exp_;
}
inline void smsg_treasure_zhuzao::set_exp(::google::protobuf::int32 value) {
  set_changed();
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_zhuzao.exp)
}

// -------------------------------------------------------------------

// cmsg_treasure_lock

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_lock::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_lock::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_lock::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_lock::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_lock.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_lock::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_lock.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_lock::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_lock.comm)
  return comm_;
}
inline void cmsg_treasure_lock::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_lock.comm)
}

// uint64 treasure_guid = 2;
inline void cmsg_treasure_lock::clear_treasure_guid() {
  set_changed();
  treasure_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_treasure_lock::treasure_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_lock.treasure_guid)
  return treasure_guid_;
}
inline void cmsg_treasure_lock::set_treasure_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  treasure_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_lock.treasure_guid)
}

// bool locked = 3;
inline void cmsg_treasure_lock::clear_locked() {
  set_changed();
  locked_ = false;
}
inline bool cmsg_treasure_lock::locked() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_lock.locked)
  return locked_;
}
inline void cmsg_treasure_lock::set_locked(bool value) {
  set_changed();
  
  locked_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_lock.locked)
}

// -------------------------------------------------------------------

// cmsg_treasure_equip

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_equip::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_equip::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_equip::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_equip::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_equip.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_equip::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_equip.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_equip::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_equip.comm)
  return comm_;
}
inline void cmsg_treasure_equip::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_equip.comm)
}

// uint64 role_guid = 2;
inline void cmsg_treasure_equip::clear_role_guid() {
  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_treasure_equip::role_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_equip.role_guid)
  return role_guid_;
}
inline void cmsg_treasure_equip::set_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  role_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_equip.role_guid)
}

// repeated int32 index = 3;
inline int cmsg_treasure_equip::index_size() const {
  return index_.size();
}
inline void cmsg_treasure_equip::clear_index() {
  set_changed();
  index_.Clear();
}
inline ::google::protobuf::int32 cmsg_treasure_equip::index(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_equip.index)
  return index_.Get(index);
}
inline void cmsg_treasure_equip::set_index(int index, ::google::protobuf::int32 value) {
  set_changed();
  index_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_equip.index)
}
inline void cmsg_treasure_equip::add_index(::google::protobuf::int32 value) {
  set_changed();
  index_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_treasure_equip.index)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
cmsg_treasure_equip::index() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_treasure_equip.index)
  return index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
cmsg_treasure_equip::mutable_index() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_treasure_equip.index)
  return &index_;
}

// repeated uint64 treasure_guid = 4;
inline int cmsg_treasure_equip::treasure_guid_size() const {
  return treasure_guid_.size();
}
inline void cmsg_treasure_equip::clear_treasure_guid() {
  set_changed();
  treasure_guid_.Clear();
}
inline ::google::protobuf::uint64 cmsg_treasure_equip::treasure_guid(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_equip.treasure_guid)
  return treasure_guid_.Get(index);
}
inline void cmsg_treasure_equip::set_treasure_guid(int index, ::google::protobuf::uint64 value) {
  set_changed();
  treasure_guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_equip.treasure_guid)
}
inline void cmsg_treasure_equip::add_treasure_guid(::google::protobuf::uint64 value) {
  set_changed();
  treasure_guid_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_treasure_equip.treasure_guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
cmsg_treasure_equip::treasure_guid() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_treasure_equip.treasure_guid)
  return treasure_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
cmsg_treasure_equip::mutable_treasure_guid() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_treasure_equip.treasure_guid)
  return &treasure_guid_;
}

// -------------------------------------------------------------------

// cmsg_treasure_protect

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_protect::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_protect::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_protect::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_protect::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_protect.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_protect::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_protect.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_protect::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_protect.comm)
  return comm_;
}
inline void cmsg_treasure_protect::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_protect.comm)
}

// int32 type = 2;
inline void cmsg_treasure_protect::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 cmsg_treasure_protect::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_protect.type)
  return type_;
}
inline void cmsg_treasure_protect::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_protect.type)
}

// -------------------------------------------------------------------

// smsg_treasure_protect

// uint64 next_time = 1;
inline void smsg_treasure_protect::clear_next_time() {
  set_changed();
  next_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_treasure_protect::next_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_protect.next_time)
  return next_time_;
}
inline void smsg_treasure_protect::set_next_time(::google::protobuf::uint64 value) {
  set_changed();
  
  next_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_protect.next_time)
}

// uint64 cd_time = 2;
inline void smsg_treasure_protect::clear_cd_time() {
  set_changed();
  cd_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_treasure_protect::cd_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_protect.cd_time)
  return cd_time_;
}
inline void smsg_treasure_protect::set_cd_time(::google::protobuf::uint64 value) {
  set_changed();
  
  cd_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_protect.cd_time)
}

// -------------------------------------------------------------------

// cmsg_treasure_buy

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_buy::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_buy::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_buy::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_buy::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_buy.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_buy::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_buy.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_buy::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_buy.comm)
  return comm_;
}
inline void cmsg_treasure_buy::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_buy.comm)
}

// int32 type = 2;
inline void cmsg_treasure_buy::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 cmsg_treasure_buy::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_buy.type)
  return type_;
}
inline void cmsg_treasure_buy::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_buy.type)
}

// -------------------------------------------------------------------

// cmsg_treasure_rob_view

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_rob_view::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_rob_view::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_rob_view::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_rob_view::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_rob_view.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_rob_view::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_rob_view.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_rob_view::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_rob_view.comm)
  return comm_;
}
inline void cmsg_treasure_rob_view::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_rob_view.comm)
}

// int32 treasure_suipian = 2;
inline void cmsg_treasure_rob_view::clear_treasure_suipian() {
  set_changed();
  treasure_suipian_ = 0;
}
inline ::google::protobuf::int32 cmsg_treasure_rob_view::treasure_suipian() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_rob_view.treasure_suipian)
  return treasure_suipian_;
}
inline void cmsg_treasure_rob_view::set_treasure_suipian(::google::protobuf::int32 value) {
  set_changed();
  
  treasure_suipian_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_rob_view.treasure_suipian)
}

// -------------------------------------------------------------------

// smsg_treasure_rob_view

// repeated uint64 player_guids = 1;
inline int smsg_treasure_rob_view::player_guids_size() const {
  return player_guids_.size();
}
inline void smsg_treasure_rob_view::clear_player_guids() {
  set_changed();
  player_guids_.Clear();
}
inline ::google::protobuf::uint64 smsg_treasure_rob_view::player_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_rob_view.player_guids)
  return player_guids_.Get(index);
}
inline void smsg_treasure_rob_view::set_player_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_rob_view.player_guids)
}
inline void smsg_treasure_rob_view::add_player_guids(::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_rob_view.player_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
smsg_treasure_rob_view::player_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_rob_view.player_guids)
  return player_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
smsg_treasure_rob_view::mutable_player_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_rob_view.player_guids)
  return &player_guids_;
}

// repeated bytes player_names = 2;
inline int smsg_treasure_rob_view::player_names_size() const {
  return player_names_.size();
}
inline void smsg_treasure_rob_view::clear_player_names() {
  set_changed();
  player_names_.Clear();
}
inline const ::std::string& smsg_treasure_rob_view::player_names(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_rob_view.player_names)
  return player_names_.Get(index);
}
inline ::std::string* smsg_treasure_rob_view::mutable_player_names(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_rob_view.player_names)
  return player_names_.Mutable(index);
}
inline void smsg_treasure_rob_view::set_player_names(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_rob_view.player_names)
  player_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void smsg_treasure_rob_view::set_player_names(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_rob_view.player_names)
  player_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void smsg_treasure_rob_view::set_player_names(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  player_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_treasure_rob_view.player_names)
}
inline void smsg_treasure_rob_view::set_player_names(int index, const void* value, size_t size) {
  set_changed();
  player_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_treasure_rob_view.player_names)
}
inline ::std::string* smsg_treasure_rob_view::add_player_names() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.smsg_treasure_rob_view.player_names)
  return player_names_.Add();
}
inline void smsg_treasure_rob_view::add_player_names(const ::std::string& value) {
  set_changed();
  player_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_rob_view.player_names)
}
#if LANG_CXX11
inline void smsg_treasure_rob_view::add_player_names(::std::string&& value) {
  set_changed();
  player_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_rob_view.player_names)
}
#endif
inline void smsg_treasure_rob_view::add_player_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  player_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.smsg_treasure_rob_view.player_names)
}
inline void smsg_treasure_rob_view::add_player_names(const void* value, size_t size) {
  set_changed();
  player_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.smsg_treasure_rob_view.player_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
smsg_treasure_rob_view::player_names() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_rob_view.player_names)
  return player_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
smsg_treasure_rob_view::mutable_player_names() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_rob_view.player_names)
  return &player_names_;
}

// repeated int32 player_templates = 3;
inline int smsg_treasure_rob_view::player_templates_size() const {
  return player_templates_.size();
}
inline void smsg_treasure_rob_view::clear_player_templates() {
  set_changed();
  player_templates_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_rob_view::player_templates(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_rob_view.player_templates)
  return player_templates_.Get(index);
}
inline void smsg_treasure_rob_view::set_player_templates(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_templates_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_rob_view.player_templates)
}
inline void smsg_treasure_rob_view::add_player_templates(::google::protobuf::int32 value) {
  set_changed();
  player_templates_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_rob_view.player_templates)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_rob_view::player_templates() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_rob_view.player_templates)
  return player_templates_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_rob_view::mutable_player_templates() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_rob_view.player_templates)
  return &player_templates_;
}

// repeated int32 player_levels = 4;
inline int smsg_treasure_rob_view::player_levels_size() const {
  return player_levels_.size();
}
inline void smsg_treasure_rob_view::clear_player_levels() {
  set_changed();
  player_levels_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_rob_view::player_levels(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_rob_view.player_levels)
  return player_levels_.Get(index);
}
inline void smsg_treasure_rob_view::set_player_levels(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_levels_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_rob_view.player_levels)
}
inline void smsg_treasure_rob_view::add_player_levels(::google::protobuf::int32 value) {
  set_changed();
  player_levels_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_rob_view.player_levels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_rob_view::player_levels() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_rob_view.player_levels)
  return player_levels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_rob_view::mutable_player_levels() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_rob_view.player_levels)
  return &player_levels_;
}

// repeated int32 player_bfs = 5;
inline int smsg_treasure_rob_view::player_bfs_size() const {
  return player_bfs_.size();
}
inline void smsg_treasure_rob_view::clear_player_bfs() {
  set_changed();
  player_bfs_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_rob_view::player_bfs(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_rob_view.player_bfs)
  return player_bfs_.Get(index);
}
inline void smsg_treasure_rob_view::set_player_bfs(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_bfs_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_rob_view.player_bfs)
}
inline void smsg_treasure_rob_view::add_player_bfs(::google::protobuf::int32 value) {
  set_changed();
  player_bfs_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_rob_view.player_bfs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_rob_view::player_bfs() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_rob_view.player_bfs)
  return player_bfs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_rob_view::mutable_player_bfs() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_rob_view.player_bfs)
  return &player_bfs_;
}

// repeated int32 player_rates = 6;
inline int smsg_treasure_rob_view::player_rates_size() const {
  return player_rates_.size();
}
inline void smsg_treasure_rob_view::clear_player_rates() {
  set_changed();
  player_rates_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_rob_view::player_rates(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_rob_view.player_rates)
  return player_rates_.Get(index);
}
inline void smsg_treasure_rob_view::set_player_rates(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_rates_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_rob_view.player_rates)
}
inline void smsg_treasure_rob_view::add_player_rates(::google::protobuf::int32 value) {
  set_changed();
  player_rates_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_rob_view.player_rates)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_rob_view::player_rates() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_rob_view.player_rates)
  return player_rates_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_rob_view::mutable_player_rates() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_rob_view.player_rates)
  return &player_rates_;
}

// repeated bool player_npcs = 7;
inline int smsg_treasure_rob_view::player_npcs_size() const {
  return player_npcs_.size();
}
inline void smsg_treasure_rob_view::clear_player_npcs() {
  set_changed();
  player_npcs_.Clear();
}
inline bool smsg_treasure_rob_view::player_npcs(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_rob_view.player_npcs)
  return player_npcs_.Get(index);
}
inline void smsg_treasure_rob_view::set_player_npcs(int index, bool value) {
  set_changed();
  player_npcs_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_rob_view.player_npcs)
}
inline void smsg_treasure_rob_view::add_player_npcs(bool value) {
  set_changed();
  player_npcs_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_rob_view.player_npcs)
}
inline const ::google::protobuf::RepeatedField< bool >&
smsg_treasure_rob_view::player_npcs() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_rob_view.player_npcs)
  return player_npcs_;
}
inline ::google::protobuf::RepeatedField< bool >*
smsg_treasure_rob_view::mutable_player_npcs() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_rob_view.player_npcs)
  return &player_npcs_;
}

// repeated int32 player_vips = 8;
inline int smsg_treasure_rob_view::player_vips_size() const {
  return player_vips_.size();
}
inline void smsg_treasure_rob_view::clear_player_vips() {
  set_changed();
  player_vips_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_rob_view::player_vips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_rob_view.player_vips)
  return player_vips_.Get(index);
}
inline void smsg_treasure_rob_view::set_player_vips(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_vips_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_rob_view.player_vips)
}
inline void smsg_treasure_rob_view::add_player_vips(::google::protobuf::int32 value) {
  set_changed();
  player_vips_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_rob_view.player_vips)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_rob_view::player_vips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_rob_view.player_vips)
  return player_vips_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_rob_view::mutable_player_vips() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_rob_view.player_vips)
  return &player_vips_;
}

// repeated int32 player_achieves = 9;
inline int smsg_treasure_rob_view::player_achieves_size() const {
  return player_achieves_.size();
}
inline void smsg_treasure_rob_view::clear_player_achieves() {
  set_changed();
  player_achieves_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_rob_view::player_achieves(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_rob_view.player_achieves)
  return player_achieves_.Get(index);
}
inline void smsg_treasure_rob_view::set_player_achieves(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_achieves_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_rob_view.player_achieves)
}
inline void smsg_treasure_rob_view::add_player_achieves(::google::protobuf::int32 value) {
  set_changed();
  player_achieves_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_rob_view.player_achieves)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_rob_view::player_achieves() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_rob_view.player_achieves)
  return player_achieves_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_rob_view::mutable_player_achieves() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_rob_view.player_achieves)
  return &player_achieves_;
}

// repeated int32 player_chenghaos = 10;
inline int smsg_treasure_rob_view::player_chenghaos_size() const {
  return player_chenghaos_.size();
}
inline void smsg_treasure_rob_view::clear_player_chenghaos() {
  set_changed();
  player_chenghaos_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_rob_view::player_chenghaos(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_rob_view.player_chenghaos)
  return player_chenghaos_.Get(index);
}
inline void smsg_treasure_rob_view::set_player_chenghaos(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_chenghaos_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_rob_view.player_chenghaos)
}
inline void smsg_treasure_rob_view::add_player_chenghaos(::google::protobuf::int32 value) {
  set_changed();
  player_chenghaos_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_rob_view.player_chenghaos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_rob_view::player_chenghaos() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_rob_view.player_chenghaos)
  return player_chenghaos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_rob_view::mutable_player_chenghaos() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_rob_view.player_chenghaos)
  return &player_chenghaos_;
}

// repeated int32 player_nalflags = 11;
inline int smsg_treasure_rob_view::player_nalflags_size() const {
  return player_nalflags_.size();
}
inline void smsg_treasure_rob_view::clear_player_nalflags() {
  set_changed();
  player_nalflags_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_rob_view::player_nalflags(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_rob_view.player_nalflags)
  return player_nalflags_.Get(index);
}
inline void smsg_treasure_rob_view::set_player_nalflags(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_nalflags_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_rob_view.player_nalflags)
}
inline void smsg_treasure_rob_view::add_player_nalflags(::google::protobuf::int32 value) {
  set_changed();
  player_nalflags_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_rob_view.player_nalflags)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_rob_view::player_nalflags() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_rob_view.player_nalflags)
  return player_nalflags_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_rob_view::mutable_player_nalflags() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_rob_view.player_nalflags)
  return &player_nalflags_;
}

// -------------------------------------------------------------------

// cmsg_treasure_fight

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_fight::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_fight::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_fight::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_fight::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_fight.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_fight::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_fight.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_fight::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_fight.comm)
  return comm_;
}
inline void cmsg_treasure_fight::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_fight.comm)
}

// uint64 player_guid = 2;
inline void cmsg_treasure_fight::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_treasure_fight::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_fight.player_guid)
  return player_guid_;
}
inline void cmsg_treasure_fight::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_fight.player_guid)
}

// -------------------------------------------------------------------

// smsg_treasure_fight

// .dhc.player_t player = 1;
inline bool smsg_treasure_fight::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline const ::dhc::player_t& smsg_treasure_fight::_internal_player() const {
  return *player_;
}
inline const ::dhc::player_t& smsg_treasure_fight::player() const {
  const ::dhc::player_t* p = player_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight.player)
  return p != NULL ? *p : *reinterpret_cast<const ::dhc::player_t*>(
      &::dhc::_player_t_default_instance_);
}
inline ::dhc::player_t* smsg_treasure_fight::release_player() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_treasure_fight.player)
  
  ::dhc::player_t* temp = player_;
  player_ = NULL;
  return temp;
}
inline ::dhc::player_t* smsg_treasure_fight::mutable_player() {
  
  if (player_ == NULL) {
    auto* p = CreateMaybeMessage<::dhc::player_t>(GetArenaNoVirtual());
    player_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_fight.player)
  return player_;
}
inline void smsg_treasure_fight::set_allocated_player(::dhc::player_t* player) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(player_);
  }
  if (player) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_treasure_fight.player)
}

// repeated .dhc.role_t roles = 2;
inline int smsg_treasure_fight::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_treasure_fight::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_fight.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_treasure_fight::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_fight.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_treasure_fight::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_treasure_fight::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_fight.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_treasure_fight::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_fight.roles)
  return roles_;
}

// repeated .dhc.equip_t equips = 3;
inline int smsg_treasure_fight::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_treasure_fight::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_fight.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_treasure_fight::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_fight.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_treasure_fight::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_treasure_fight::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_fight.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_treasure_fight::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_fight.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 4;
inline int smsg_treasure_fight::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_treasure_fight::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_fight.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_treasure_fight::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_fight.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_treasure_fight::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_treasure_fight::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_fight.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_treasure_fight::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_fight.treasures)
  return treasures_;
}

// -------------------------------------------------------------------

// cmsg_treasure_fight_end

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_fight_end::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_fight_end::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_fight_end::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_fight_end::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_fight_end.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_fight_end::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_fight_end.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_fight_end::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_fight_end.comm)
  return comm_;
}
inline void cmsg_treasure_fight_end::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_fight_end.comm)
}

// uint64 player_guid = 2;
inline void cmsg_treasure_fight_end::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_treasure_fight_end::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_fight_end.player_guid)
  return player_guid_;
}
inline void cmsg_treasure_fight_end::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_fight_end.player_guid)
}

// -------------------------------------------------------------------

// smsg_treasure_fight_end

// int32 result = 1;
inline void smsg_treasure_fight_end::clear_result() {
  set_changed();
  result_ = 0;
}
inline ::google::protobuf::int32 smsg_treasure_fight_end::result() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight_end.result)
  return result_;
}
inline void smsg_treasure_fight_end::set_result(::google::protobuf::int32 value) {
  set_changed();
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_fight_end.result)
}

// bytes text = 2;
inline void smsg_treasure_fight_end::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_treasure_fight_end::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight_end.text)
  return text_.GetNoArena();
}
inline void smsg_treasure_fight_end::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_fight_end.text)
}
#if LANG_CXX11
inline void smsg_treasure_fight_end::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_treasure_fight_end.text)
}
#endif
inline void smsg_treasure_fight_end::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_treasure_fight_end.text)
}
inline void smsg_treasure_fight_end::set_text(const void* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_treasure_fight_end.text)
}
inline ::std::string* smsg_treasure_fight_end::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_fight_end.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_treasure_fight_end::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_treasure_fight_end.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_treasure_fight_end::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_treasure_fight_end.text)
}

// int32 suipian_id = 3;
inline void smsg_treasure_fight_end::clear_suipian_id() {
  set_changed();
  suipian_id_ = 0;
}
inline ::google::protobuf::int32 smsg_treasure_fight_end::suipian_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight_end.suipian_id)
  return suipian_id_;
}
inline void smsg_treasure_fight_end::set_suipian_id(::google::protobuf::int32 value) {
  set_changed();
  
  suipian_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_fight_end.suipian_id)
}

// int32 card = 4;
inline void smsg_treasure_fight_end::clear_card() {
  set_changed();
  card_ = 0;
}
inline ::google::protobuf::int32 smsg_treasure_fight_end::card() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight_end.card)
  return card_;
}
inline void smsg_treasure_fight_end::set_card(::google::protobuf::int32 value) {
  set_changed();
  
  card_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_fight_end.card)
}

// int32 pgold = 5;
inline void smsg_treasure_fight_end::clear_pgold() {
  set_changed();
  pgold_ = 0;
}
inline ::google::protobuf::int32 smsg_treasure_fight_end::pgold() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight_end.pgold)
  return pgold_;
}
inline void smsg_treasure_fight_end::set_pgold(::google::protobuf::int32 value) {
  set_changed();
  
  pgold_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_fight_end.pgold)
}

// repeated int32 types = 6;
inline int smsg_treasure_fight_end::types_size() const {
  return types_.size();
}
inline void smsg_treasure_fight_end::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_fight_end::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight_end.types)
  return types_.Get(index);
}
inline void smsg_treasure_fight_end::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_fight_end.types)
}
inline void smsg_treasure_fight_end::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_fight_end.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_fight_end::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_fight_end.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_fight_end::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_fight_end.types)
  return &types_;
}

// repeated int32 value1s = 7;
inline int smsg_treasure_fight_end::value1s_size() const {
  return value1s_.size();
}
inline void smsg_treasure_fight_end::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_fight_end::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight_end.value1s)
  return value1s_.Get(index);
}
inline void smsg_treasure_fight_end::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_fight_end.value1s)
}
inline void smsg_treasure_fight_end::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_fight_end.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_fight_end::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_fight_end.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_fight_end::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_fight_end.value1s)
  return &value1s_;
}

// repeated int32 value2s = 8;
inline int smsg_treasure_fight_end::value2s_size() const {
  return value2s_.size();
}
inline void smsg_treasure_fight_end::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_fight_end::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight_end.value2s)
  return value2s_.Get(index);
}
inline void smsg_treasure_fight_end::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_fight_end.value2s)
}
inline void smsg_treasure_fight_end::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_fight_end.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_fight_end::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_fight_end.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_fight_end::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_fight_end.value2s)
  return &value2s_;
}

// repeated int32 value3s = 9;
inline int smsg_treasure_fight_end::value3s_size() const {
  return value3s_.size();
}
inline void smsg_treasure_fight_end::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_fight_end::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight_end.value3s)
  return value3s_.Get(index);
}
inline void smsg_treasure_fight_end::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_fight_end.value3s)
}
inline void smsg_treasure_fight_end::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_fight_end.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_fight_end::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_fight_end.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_fight_end::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_fight_end.value3s)
  return &value3s_;
}

// repeated .dhc.equip_t equips = 10;
inline int smsg_treasure_fight_end::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_treasure_fight_end::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_fight_end.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_treasure_fight_end::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_fight_end.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_treasure_fight_end::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight_end.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_treasure_fight_end::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_fight_end.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_treasure_fight_end::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_fight_end.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 11;
inline int smsg_treasure_fight_end::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_treasure_fight_end::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_fight_end.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_treasure_fight_end::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_fight_end.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_treasure_fight_end::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight_end.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_treasure_fight_end::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_fight_end.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_treasure_fight_end::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_fight_end.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 12;
inline int smsg_treasure_fight_end::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_treasure_fight_end::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_fight_end.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_treasure_fight_end::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_fight_end.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_treasure_fight_end::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_fight_end.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_treasure_fight_end::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_fight_end.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_treasure_fight_end::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_fight_end.roles)
  return roles_;
}

// -------------------------------------------------------------------

// cmsg_treasure_saodang

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_saodang::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_saodang::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_saodang::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_saodang::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_saodang.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_saodang::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_saodang.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_saodang::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_saodang.comm)
  return comm_;
}
inline void cmsg_treasure_saodang::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_saodang.comm)
}

// uint64 player_guid = 2;
inline void cmsg_treasure_saodang::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_treasure_saodang::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_saodang.player_guid)
  return player_guid_;
}
inline void cmsg_treasure_saodang::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_saodang.player_guid)
}

// -------------------------------------------------------------------

// cmsg_treasure_yijian_saodang

// .protocol.game.msg_common comm = 1;
inline bool cmsg_treasure_yijian_saodang::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_yijian_saodang::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_treasure_yijian_saodang::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_treasure_yijian_saodang::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_yijian_saodang.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_treasure_yijian_saodang::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_yijian_saodang.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_treasure_yijian_saodang::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_yijian_saodang.comm)
  return comm_;
}
inline void cmsg_treasure_yijian_saodang::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_yijian_saodang.comm)
}

// int32 treasure_id = 2;
inline void cmsg_treasure_yijian_saodang::clear_treasure_id() {
  set_changed();
  treasure_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_treasure_yijian_saodang::treasure_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_yijian_saodang.treasure_id)
  return treasure_id_;
}
inline void cmsg_treasure_yijian_saodang::set_treasure_id(::google::protobuf::int32 value) {
  set_changed();
  
  treasure_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_yijian_saodang.treasure_id)
}

// bool use_yaosui = 3;
inline void cmsg_treasure_yijian_saodang::clear_use_yaosui() {
  set_changed();
  use_yaosui_ = false;
}
inline bool cmsg_treasure_yijian_saodang::use_yaosui() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_yijian_saodang.use_yaosui)
  return use_yaosui_;
}
inline void cmsg_treasure_yijian_saodang::set_use_yaosui(bool value) {
  set_changed();
  
  use_yaosui_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_treasure_yijian_saodang.use_yaosui)
}

// -------------------------------------------------------------------

// smsg_treasure_saodang

// repeated .protocol.game.smsg_treasure_fight_end rewards = 1;
inline int smsg_treasure_saodang::rewards_size() const {
  return rewards_.size();
}
inline void smsg_treasure_saodang::clear_rewards() {
  rewards_.Clear();
}
inline ::protocol::game::smsg_treasure_fight_end* smsg_treasure_saodang::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_saodang.rewards)
  return rewards_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_treasure_fight_end >*
smsg_treasure_saodang::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_saodang.rewards)
  return &rewards_;
}
inline const ::protocol::game::smsg_treasure_fight_end& smsg_treasure_saodang::rewards(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_saodang.rewards)
  return rewards_.Get(index);
}
inline ::protocol::game::smsg_treasure_fight_end* smsg_treasure_saodang::add_rewards() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_saodang.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_treasure_fight_end >&
smsg_treasure_saodang::rewards() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_saodang.rewards)
  return rewards_;
}

// -------------------------------------------------------------------

// smsg_treasure_yijian_saodang

// repeated .protocol.game.smsg_treasure_fight_end rewards = 1;
inline int smsg_treasure_yijian_saodang::rewards_size() const {
  return rewards_.size();
}
inline void smsg_treasure_yijian_saodang::clear_rewards() {
  rewards_.Clear();
}
inline ::protocol::game::smsg_treasure_fight_end* smsg_treasure_yijian_saodang::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_yijian_saodang.rewards)
  return rewards_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_treasure_fight_end >*
smsg_treasure_yijian_saodang::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_yijian_saodang.rewards)
  return &rewards_;
}
inline const ::protocol::game::smsg_treasure_fight_end& smsg_treasure_yijian_saodang::rewards(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_yijian_saodang.rewards)
  return rewards_.Get(index);
}
inline ::protocol::game::smsg_treasure_fight_end* smsg_treasure_yijian_saodang::add_rewards() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_yijian_saodang.rewards)
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::smsg_treasure_fight_end >&
smsg_treasure_yijian_saodang::rewards() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_yijian_saodang.rewards)
  return rewards_;
}

// int32 yaosui_num = 2;
inline void smsg_treasure_yijian_saodang::clear_yaosui_num() {
  set_changed();
  yaosui_num_ = 0;
}
inline ::google::protobuf::int32 smsg_treasure_yijian_saodang::yaosui_num() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_yijian_saodang.yaosui_num)
  return yaosui_num_;
}
inline void smsg_treasure_yijian_saodang::set_yaosui_num(::google::protobuf::int32 value) {
  set_changed();
  
  yaosui_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_yijian_saodang.yaosui_num)
}

// bool success = 3;
inline void smsg_treasure_yijian_saodang::clear_success() {
  set_changed();
  success_ = false;
}
inline bool smsg_treasure_yijian_saodang::success() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_yijian_saodang.success)
  return success_;
}
inline void smsg_treasure_yijian_saodang::set_success(bool value) {
  set_changed();
  
  success_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_yijian_saodang.success)
}

// -------------------------------------------------------------------

// smsg_treasure_point

// int32 has_point = 1;
inline void smsg_treasure_point::clear_has_point() {
  set_changed();
  has_point_ = 0;
}
inline ::google::protobuf::int32 smsg_treasure_point::has_point() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_point.has_point)
  return has_point_;
}
inline void smsg_treasure_point::set_has_point(::google::protobuf::int32 value) {
  set_changed();
  
  has_point_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_point.has_point)
}

// -------------------------------------------------------------------

// cmsg_treasure_report_ex

// .protocol.game.msg_common_ex comm = 1;
inline bool cmsg_treasure_report_ex::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_treasure_report_ex::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common_ex& cmsg_treasure_report_ex::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common_ex& cmsg_treasure_report_ex::comm() const {
  const ::protocol::game::msg_common_ex* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_treasure_report_ex.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common_ex*>(
      &::protocol::game::_msg_common_ex_default_instance_);
}
inline ::protocol::game::msg_common_ex* cmsg_treasure_report_ex::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_treasure_report_ex.comm)
  
  ::protocol::game::msg_common_ex* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common_ex* cmsg_treasure_report_ex::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common_ex>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_treasure_report_ex.comm)
  return comm_;
}
inline void cmsg_treasure_report_ex::set_allocated_comm(::protocol::game::msg_common_ex* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_treasure_report_ex.comm)
}

// -------------------------------------------------------------------

// smsg_treasure_report

// repeated .dhc.treasure_report_t reports = 1;
inline int smsg_treasure_report::reports_size() const {
  return reports_.size();
}
inline ::dhc::treasure_report_t* smsg_treasure_report::mutable_reports(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_treasure_report.reports)
  return reports_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_report_t >*
smsg_treasure_report::mutable_reports() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_report.reports)
  return &reports_;
}
inline const ::dhc::treasure_report_t& smsg_treasure_report::reports(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_report.reports)
  return reports_.Get(index);
}
inline ::dhc::treasure_report_t* smsg_treasure_report::add_reports() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_report.reports)
  return reports_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_report_t >&
smsg_treasure_report::reports() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_report.reports)
  return reports_;
}

// repeated int32 suipian_ids = 2;
inline int smsg_treasure_report::suipian_ids_size() const {
  return suipian_ids_.size();
}
inline void smsg_treasure_report::clear_suipian_ids() {
  set_changed();
  suipian_ids_.Clear();
}
inline ::google::protobuf::int32 smsg_treasure_report::suipian_ids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_treasure_report.suipian_ids)
  return suipian_ids_.Get(index);
}
inline void smsg_treasure_report::set_suipian_ids(int index, ::google::protobuf::int32 value) {
  set_changed();
  suipian_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_treasure_report.suipian_ids)
}
inline void smsg_treasure_report::add_suipian_ids(::google::protobuf::int32 value) {
  set_changed();
  suipian_ids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_treasure_report.suipian_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_treasure_report::suipian_ids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_treasure_report.suipian_ids)
  return suipian_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_treasure_report::mutable_suipian_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_treasure_report.suipian_ids)
  return &suipian_ids_;
}

// -------------------------------------------------------------------

// smsg_yb_refresh

// int32 type = 1;
inline void smsg_yb_refresh::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 smsg_yb_refresh::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_refresh.type)
  return type_;
}
inline void smsg_yb_refresh::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_yb_refresh.type)
}

// -------------------------------------------------------------------

// cmsg_yb_look_ex

// .protocol.game.msg_common_ex comm = 1;
inline bool cmsg_yb_look_ex::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_yb_look_ex::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common_ex& cmsg_yb_look_ex::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common_ex& cmsg_yb_look_ex::comm() const {
  const ::protocol::game::msg_common_ex* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_yb_look_ex.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common_ex*>(
      &::protocol::game::_msg_common_ex_default_instance_);
}
inline ::protocol::game::msg_common_ex* cmsg_yb_look_ex::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_yb_look_ex.comm)
  
  ::protocol::game::msg_common_ex* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common_ex* cmsg_yb_look_ex::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common_ex>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_yb_look_ex.comm)
  return comm_;
}
inline void cmsg_yb_look_ex::set_allocated_comm(::protocol::game::msg_common_ex* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_yb_look_ex.comm)
}

// int32 player_id = 2;
inline void cmsg_yb_look_ex::clear_player_id() {
  set_changed();
  player_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_yb_look_ex::player_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_yb_look_ex.player_id)
  return player_id_;
}
inline void cmsg_yb_look_ex::set_player_id(::google::protobuf::int32 value) {
  set_changed();
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_yb_look_ex.player_id)
}

// -------------------------------------------------------------------

// msg_yb_player

// uint64 player_guid = 1;
inline void msg_yb_player::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 msg_yb_player::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_player.player_guid)
  return player_guid_;
}
inline void msg_yb_player::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_player.player_guid)
}

// string player_name = 2;
inline void msg_yb_player::clear_player_name() {
  set_changed();
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_yb_player::player_name() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_player.player_name)
  return player_name_.GetNoArena();
}
inline void msg_yb_player::set_player_name(const ::std::string& value) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_player.player_name)
}
#if LANG_CXX11
inline void msg_yb_player::set_player_name(::std::string&& value) {
  set_changed();
  
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_yb_player.player_name)
}
#endif
inline void msg_yb_player::set_player_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_yb_player.player_name)
}
inline void msg_yb_player::set_player_name(const char* value, size_t size) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_yb_player.player_name)
}
inline ::std::string* msg_yb_player::mutable_player_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_yb_player.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_yb_player::release_player_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_yb_player.player_name)
  
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_yb_player::set_allocated_player_name(::std::string* player_name) {
  set_changed();
  if (player_name != NULL) {
    
  } else {
    
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_yb_player.player_name)
}

// int32 player_level = 3;
inline void msg_yb_player::clear_player_level() {
  set_changed();
  player_level_ = 0;
}
inline ::google::protobuf::int32 msg_yb_player::player_level() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_player.player_level)
  return player_level_;
}
inline void msg_yb_player::set_player_level(::google::protobuf::int32 value) {
  set_changed();
  
  player_level_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_player.player_level)
}

// int32 player_bf = 4;
inline void msg_yb_player::clear_player_bf() {
  set_changed();
  player_bf_ = 0;
}
inline ::google::protobuf::int32 msg_yb_player::player_bf() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_player.player_bf)
  return player_bf_;
}
inline void msg_yb_player::set_player_bf(::google::protobuf::int32 value) {
  set_changed();
  
  player_bf_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_player.player_bf)
}

// int32 player_type = 5;
inline void msg_yb_player::clear_player_type() {
  set_changed();
  player_type_ = 0;
}
inline ::google::protobuf::int32 msg_yb_player::player_type() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_player.player_type)
  return player_type_;
}
inline void msg_yb_player::set_player_type(::google::protobuf::int32 value) {
  set_changed();
  
  player_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_player.player_type)
}

// int32 player_per = 6;
inline void msg_yb_player::clear_player_per() {
  set_changed();
  player_per_ = 0;
}
inline ::google::protobuf::int32 msg_yb_player::player_per() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_player.player_per)
  return player_per_;
}
inline void msg_yb_player::set_player_per(::google::protobuf::int32 value) {
  set_changed();
  
  player_per_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_player.player_per)
}

// uint64 start_time = 7;
inline void msg_yb_player::clear_start_time() {
  set_changed();
  start_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 msg_yb_player::start_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_player.start_time)
  return start_time_;
}
inline void msg_yb_player::set_start_time(::google::protobuf::uint64 value) {
  set_changed();
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_player.start_time)
}

// uint64 jiasu_time = 8;
inline void msg_yb_player::clear_jiasu_time() {
  set_changed();
  jiasu_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 msg_yb_player::jiasu_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_player.jiasu_time)
  return jiasu_time_;
}
inline void msg_yb_player::set_jiasu_time(::google::protobuf::uint64 value) {
  set_changed();
  
  jiasu_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_player.jiasu_time)
}

// int32 player_ybq_num = 9;
inline void msg_yb_player::clear_player_ybq_num() {
  set_changed();
  player_ybq_num_ = 0;
}
inline ::google::protobuf::int32 msg_yb_player::player_ybq_num() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_player.player_ybq_num)
  return player_ybq_num_;
}
inline void msg_yb_player::set_player_ybq_num(::google::protobuf::int32 value) {
  set_changed();
  
  player_ybq_num_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_player.player_ybq_num)
}

// int32 player_vip = 10;
inline void msg_yb_player::clear_player_vip() {
  set_changed();
  player_vip_ = 0;
}
inline ::google::protobuf::int32 msg_yb_player::player_vip() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_player.player_vip)
  return player_vip_;
}
inline void msg_yb_player::set_player_vip(::google::protobuf::int32 value) {
  set_changed();
  
  player_vip_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_player.player_vip)
}

// int32 player_achieve = 11;
inline void msg_yb_player::clear_player_achieve() {
  set_changed();
  player_achieve_ = 0;
}
inline ::google::protobuf::int32 msg_yb_player::player_achieve() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_player.player_achieve)
  return player_achieve_;
}
inline void msg_yb_player::set_player_achieve(::google::protobuf::int32 value) {
  set_changed();
  
  player_achieve_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_player.player_achieve)
}

// int32 player_template = 12;
inline void msg_yb_player::clear_player_template() {
  set_changed();
  player_template_ = 0;
}
inline ::google::protobuf::int32 msg_yb_player::player_template() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_player.player_template)
  return player_template_;
}
inline void msg_yb_player::set_player_template(::google::protobuf::int32 value) {
  set_changed();
  
  player_template_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_player.player_template)
}

// int32 player_nalflag = 13;
inline void msg_yb_player::clear_player_nalflag() {
  set_changed();
  player_nalflag_ = 0;
}
inline ::google::protobuf::int32 msg_yb_player::player_nalflag() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_player.player_nalflag)
  return player_nalflag_;
}
inline void msg_yb_player::set_player_nalflag(::google::protobuf::int32 value) {
  set_changed();
  
  player_nalflag_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_player.player_nalflag)
}

// -------------------------------------------------------------------

// msg_yb_info

// int32 info_id = 1;
inline void msg_yb_info::clear_info_id() {
  set_changed();
  info_id_ = 0;
}
inline ::google::protobuf::int32 msg_yb_info::info_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_info.info_id)
  return info_id_;
}
inline void msg_yb_info::set_info_id(::google::protobuf::int32 value) {
  set_changed();
  
  info_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_info.info_id)
}

// int32 type = 2;
inline void msg_yb_info::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 msg_yb_info::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_info.type)
  return type_;
}
inline void msg_yb_info::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_info.type)
}

// string player_name = 3;
inline void msg_yb_info::clear_player_name() {
  set_changed();
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_yb_info::player_name() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_info.player_name)
  return player_name_.GetNoArena();
}
inline void msg_yb_info::set_player_name(const ::std::string& value) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_info.player_name)
}
#if LANG_CXX11
inline void msg_yb_info::set_player_name(::std::string&& value) {
  set_changed();
  
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_yb_info.player_name)
}
#endif
inline void msg_yb_info::set_player_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_yb_info.player_name)
}
inline void msg_yb_info::set_player_name(const char* value, size_t size) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_yb_info.player_name)
}
inline ::std::string* msg_yb_info::mutable_player_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_yb_info.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_yb_info::release_player_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_yb_info.player_name)
  
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_yb_info::set_allocated_player_name(::std::string* player_name) {
  set_changed();
  if (player_name != NULL) {
    
  } else {
    
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_yb_info.player_name)
}

// string target_name = 4;
inline void msg_yb_info::clear_target_name() {
  set_changed();
  target_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_yb_info::target_name() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_info.target_name)
  return target_name_.GetNoArena();
}
inline void msg_yb_info::set_target_name(const ::std::string& value) {
  set_changed();
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_info.target_name)
}
#if LANG_CXX11
inline void msg_yb_info::set_target_name(::std::string&& value) {
  set_changed();
  
  target_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_yb_info.target_name)
}
#endif
inline void msg_yb_info::set_target_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_yb_info.target_name)
}
inline void msg_yb_info::set_target_name(const char* value, size_t size) {
  set_changed();
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_yb_info.target_name)
}
inline ::std::string* msg_yb_info::mutable_target_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_yb_info.target_name)
  return target_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_yb_info::release_target_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_yb_info.target_name)
  
  return target_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_yb_info::set_allocated_target_name(::std::string* target_name) {
  set_changed();
  if (target_name != NULL) {
    
  } else {
    
  }
  target_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_yb_info.target_name)
}

// int32 yb_type = 5;
inline void msg_yb_info::clear_yb_type() {
  set_changed();
  yb_type_ = 0;
}
inline ::google::protobuf::int32 msg_yb_info::yb_type() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_info.yb_type)
  return yb_type_;
}
inline void msg_yb_info::set_yb_type(::google::protobuf::int32 value) {
  set_changed();
  
  yb_type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_info.yb_type)
}

// int32 yuanli = 6;
inline void msg_yb_info::clear_yuanli() {
  set_changed();
  yuanli_ = 0;
}
inline ::google::protobuf::int32 msg_yb_info::yuanli() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_yb_info.yuanli)
  return yuanli_;
}
inline void msg_yb_info::set_yuanli(::google::protobuf::int32 value) {
  set_changed();
  
  yuanli_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_yb_info.yuanli)
}

// -------------------------------------------------------------------

// msg_ybq_info

// int32 info_id = 1;
inline void msg_ybq_info::clear_info_id() {
  set_changed();
  info_id_ = 0;
}
inline ::google::protobuf::int32 msg_ybq_info::info_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_ybq_info.info_id)
  return info_id_;
}
inline void msg_ybq_info::set_info_id(::google::protobuf::int32 value) {
  set_changed();
  
  info_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_ybq_info.info_id)
}

// int32 type = 2;
inline void msg_ybq_info::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 msg_ybq_info::type() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_ybq_info.type)
  return type_;
}
inline void msg_ybq_info::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_ybq_info.type)
}

// string player_name = 3;
inline void msg_ybq_info::clear_player_name() {
  set_changed();
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& msg_ybq_info::player_name() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_ybq_info.player_name)
  return player_name_.GetNoArena();
}
inline void msg_ybq_info::set_player_name(const ::std::string& value) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.msg_ybq_info.player_name)
}
#if LANG_CXX11
inline void msg_ybq_info::set_player_name(::std::string&& value) {
  set_changed();
  
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.msg_ybq_info.player_name)
}
#endif
inline void msg_ybq_info::set_player_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.msg_ybq_info.player_name)
}
inline void msg_ybq_info::set_player_name(const char* value, size_t size) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.msg_ybq_info.player_name)
}
inline ::std::string* msg_ybq_info::mutable_player_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.msg_ybq_info.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* msg_ybq_info::release_player_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.msg_ybq_info.player_name)
  
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void msg_ybq_info::set_allocated_player_name(::std::string* player_name) {
  set_changed();
  if (player_name != NULL) {
    
  } else {
    
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.msg_ybq_info.player_name)
}

// int32 yuanli = 4;
inline void msg_ybq_info::clear_yuanli() {
  set_changed();
  yuanli_ = 0;
}
inline ::google::protobuf::int32 msg_ybq_info::yuanli() const {
  // @@protoc_insertion_point(field_get:protocol.game.msg_ybq_info.yuanli)
  return yuanli_;
}
inline void msg_ybq_info::set_yuanli(::google::protobuf::int32 value) {
  set_changed();
  
  yuanli_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.msg_ybq_info.yuanli)
}

// -------------------------------------------------------------------

// smsg_yb_look

// repeated .protocol.game.msg_yb_player players = 1;
inline int smsg_yb_look::players_size() const {
  return players_.size();
}
inline void smsg_yb_look::clear_players() {
  players_.Clear();
}
inline ::protocol::game::msg_yb_player* smsg_yb_look::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_yb_look.players)
  return players_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_yb_player >*
smsg_yb_look::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_yb_look.players)
  return &players_;
}
inline const ::protocol::game::msg_yb_player& smsg_yb_look::players(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_look.players)
  return players_.Get(index);
}
inline ::protocol::game::msg_yb_player* smsg_yb_look::add_players() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_yb_look.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_yb_player >&
smsg_yb_look::players() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_yb_look.players)
  return players_;
}

// repeated .protocol.game.msg_yb_info yb_infos = 2;
inline int smsg_yb_look::yb_infos_size() const {
  return yb_infos_.size();
}
inline void smsg_yb_look::clear_yb_infos() {
  yb_infos_.Clear();
}
inline ::protocol::game::msg_yb_info* smsg_yb_look::mutable_yb_infos(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_yb_look.yb_infos)
  return yb_infos_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_yb_info >*
smsg_yb_look::mutable_yb_infos() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_yb_look.yb_infos)
  return &yb_infos_;
}
inline const ::protocol::game::msg_yb_info& smsg_yb_look::yb_infos(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_look.yb_infos)
  return yb_infos_.Get(index);
}
inline ::protocol::game::msg_yb_info* smsg_yb_look::add_yb_infos() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_yb_look.yb_infos)
  return yb_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_yb_info >&
smsg_yb_look::yb_infos() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_yb_look.yb_infos)
  return yb_infos_;
}

// repeated uint64 ybq_guids = 3;
inline int smsg_yb_look::ybq_guids_size() const {
  return ybq_guids_.size();
}
inline void smsg_yb_look::clear_ybq_guids() {
  set_changed();
  ybq_guids_.Clear();
}
inline ::google::protobuf::uint64 smsg_yb_look::ybq_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_look.ybq_guids)
  return ybq_guids_.Get(index);
}
inline void smsg_yb_look::set_ybq_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  ybq_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_yb_look.ybq_guids)
}
inline void smsg_yb_look::add_ybq_guids(::google::protobuf::uint64 value) {
  set_changed();
  ybq_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_yb_look.ybq_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
smsg_yb_look::ybq_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_yb_look.ybq_guids)
  return ybq_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
smsg_yb_look::mutable_ybq_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_yb_look.ybq_guids)
  return &ybq_guids_;
}

// repeated .protocol.game.msg_ybq_info ybq_infos = 4;
inline int smsg_yb_look::ybq_infos_size() const {
  return ybq_infos_.size();
}
inline void smsg_yb_look::clear_ybq_infos() {
  ybq_infos_.Clear();
}
inline ::protocol::game::msg_ybq_info* smsg_yb_look::mutable_ybq_infos(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_yb_look.ybq_infos)
  return ybq_infos_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_ybq_info >*
smsg_yb_look::mutable_ybq_infos() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_yb_look.ybq_infos)
  return &ybq_infos_;
}
inline const ::protocol::game::msg_ybq_info& smsg_yb_look::ybq_infos(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_look.ybq_infos)
  return ybq_infos_.Get(index);
}
inline ::protocol::game::msg_ybq_info* smsg_yb_look::add_ybq_infos() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_yb_look.ybq_infos)
  return ybq_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::game::msg_ybq_info >&
smsg_yb_look::ybq_infos() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_yb_look.ybq_infos)
  return ybq_infos_;
}

// int32 player_id = 5;
inline void smsg_yb_look::clear_player_id() {
  set_changed();
  player_id_ = 0;
}
inline ::google::protobuf::int32 smsg_yb_look::player_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_look.player_id)
  return player_id_;
}
inline void smsg_yb_look::set_player_id(::google::protobuf::int32 value) {
  set_changed();
  
  player_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_yb_look.player_id)
}

// -------------------------------------------------------------------

// cmsg_yb_ybq_fight_end

// .protocol.game.msg_common comm = 1;
inline bool cmsg_yb_ybq_fight_end::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_yb_ybq_fight_end::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_yb_ybq_fight_end::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_yb_ybq_fight_end::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_yb_ybq_fight_end.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_yb_ybq_fight_end::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_yb_ybq_fight_end.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_yb_ybq_fight_end::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_yb_ybq_fight_end.comm)
  return comm_;
}
inline void cmsg_yb_ybq_fight_end::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_yb_ybq_fight_end.comm)
}

// uint64 target_guid = 2;
inline void cmsg_yb_ybq_fight_end::clear_target_guid() {
  set_changed();
  target_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_yb_ybq_fight_end::target_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_yb_ybq_fight_end.target_guid)
  return target_guid_;
}
inline void cmsg_yb_ybq_fight_end::set_target_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  target_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_yb_ybq_fight_end.target_guid)
}

// -------------------------------------------------------------------

// smsg_yb_ybq_fight_end

// int32 result = 1;
inline void smsg_yb_ybq_fight_end::clear_result() {
  set_changed();
  result_ = 0;
}
inline ::google::protobuf::int32 smsg_yb_ybq_fight_end::result() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_ybq_fight_end.result)
  return result_;
}
inline void smsg_yb_ybq_fight_end::set_result(::google::protobuf::int32 value) {
  set_changed();
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_yb_ybq_fight_end.result)
}

// bytes text = 2;
inline void smsg_yb_ybq_fight_end::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_yb_ybq_fight_end::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_ybq_fight_end.text)
  return text_.GetNoArena();
}
inline void smsg_yb_ybq_fight_end::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_yb_ybq_fight_end.text)
}
#if LANG_CXX11
inline void smsg_yb_ybq_fight_end::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_yb_ybq_fight_end.text)
}
#endif
inline void smsg_yb_ybq_fight_end::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_yb_ybq_fight_end.text)
}
inline void smsg_yb_ybq_fight_end::set_text(const void* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_yb_ybq_fight_end.text)
}
inline ::std::string* smsg_yb_ybq_fight_end::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_yb_ybq_fight_end.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_yb_ybq_fight_end::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_yb_ybq_fight_end.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_yb_ybq_fight_end::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_yb_ybq_fight_end.text)
}

// repeated int32 types = 3;
inline int smsg_yb_ybq_fight_end::types_size() const {
  return types_.size();
}
inline void smsg_yb_ybq_fight_end::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_yb_ybq_fight_end::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_ybq_fight_end.types)
  return types_.Get(index);
}
inline void smsg_yb_ybq_fight_end::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_yb_ybq_fight_end.types)
}
inline void smsg_yb_ybq_fight_end::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_yb_ybq_fight_end.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_yb_ybq_fight_end::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_yb_ybq_fight_end.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_yb_ybq_fight_end::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_yb_ybq_fight_end.types)
  return &types_;
}

// repeated int32 value1s = 4;
inline int smsg_yb_ybq_fight_end::value1s_size() const {
  return value1s_.size();
}
inline void smsg_yb_ybq_fight_end::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_yb_ybq_fight_end::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_ybq_fight_end.value1s)
  return value1s_.Get(index);
}
inline void smsg_yb_ybq_fight_end::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_yb_ybq_fight_end.value1s)
}
inline void smsg_yb_ybq_fight_end::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_yb_ybq_fight_end.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_yb_ybq_fight_end::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_yb_ybq_fight_end.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_yb_ybq_fight_end::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_yb_ybq_fight_end.value1s)
  return &value1s_;
}

// repeated int32 value2s = 5;
inline int smsg_yb_ybq_fight_end::value2s_size() const {
  return value2s_.size();
}
inline void smsg_yb_ybq_fight_end::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_yb_ybq_fight_end::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_ybq_fight_end.value2s)
  return value2s_.Get(index);
}
inline void smsg_yb_ybq_fight_end::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_yb_ybq_fight_end.value2s)
}
inline void smsg_yb_ybq_fight_end::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_yb_ybq_fight_end.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_yb_ybq_fight_end::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_yb_ybq_fight_end.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_yb_ybq_fight_end::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_yb_ybq_fight_end.value2s)
  return &value2s_;
}

// repeated int32 value3s = 6;
inline int smsg_yb_ybq_fight_end::value3s_size() const {
  return value3s_.size();
}
inline void smsg_yb_ybq_fight_end::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_yb_ybq_fight_end::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_ybq_fight_end.value3s)
  return value3s_.Get(index);
}
inline void smsg_yb_ybq_fight_end::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_yb_ybq_fight_end.value3s)
}
inline void smsg_yb_ybq_fight_end::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_yb_ybq_fight_end.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_yb_ybq_fight_end::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_yb_ybq_fight_end.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_yb_ybq_fight_end::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_yb_ybq_fight_end.value3s)
  return &value3s_;
}

// repeated .dhc.equip_t equips = 7;
inline int smsg_yb_ybq_fight_end::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_yb_ybq_fight_end::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_yb_ybq_fight_end.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_yb_ybq_fight_end::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_yb_ybq_fight_end.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_yb_ybq_fight_end::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_ybq_fight_end.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_yb_ybq_fight_end::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_yb_ybq_fight_end.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_yb_ybq_fight_end::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_yb_ybq_fight_end.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 8;
inline int smsg_yb_ybq_fight_end::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_yb_ybq_fight_end::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_yb_ybq_fight_end.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_yb_ybq_fight_end::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_yb_ybq_fight_end.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_yb_ybq_fight_end::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_ybq_fight_end.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_yb_ybq_fight_end::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_yb_ybq_fight_end.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_yb_ybq_fight_end::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_yb_ybq_fight_end.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 9;
inline int smsg_yb_ybq_fight_end::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_yb_ybq_fight_end::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_yb_ybq_fight_end.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_yb_ybq_fight_end::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_yb_ybq_fight_end.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_yb_ybq_fight_end::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_ybq_fight_end.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_yb_ybq_fight_end::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_yb_ybq_fight_end.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_yb_ybq_fight_end::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_yb_ybq_fight_end.roles)
  return roles_;
}

// -------------------------------------------------------------------

// smsg_yb_reward

// int32 yuanli = 1;
inline void smsg_yb_reward::clear_yuanli() {
  set_changed();
  yuanli_ = 0;
}
inline ::google::protobuf::int32 smsg_yb_reward::yuanli() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_yb_reward.yuanli)
  return yuanli_;
}
inline void smsg_yb_reward::set_yuanli(::google::protobuf::int32 value) {
  set_changed();
  
  yuanli_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_yb_reward.yuanli)
}

// -------------------------------------------------------------------

// cmsg_ore_fight_end

// .protocol.game.msg_common comm = 1;
inline bool cmsg_ore_fight_end::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_ore_fight_end::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_ore_fight_end::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_ore_fight_end::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_ore_fight_end.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_ore_fight_end::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_ore_fight_end.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_ore_fight_end::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_ore_fight_end.comm)
  return comm_;
}
inline void cmsg_ore_fight_end::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_ore_fight_end.comm)
}

// int32 index = 2;
inline void cmsg_ore_fight_end::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 cmsg_ore_fight_end::index() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_ore_fight_end.index)
  return index_;
}
inline void cmsg_ore_fight_end::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_ore_fight_end.index)
}

// -------------------------------------------------------------------

// smsg_ore_fight_end

// int32 result = 1;
inline void smsg_ore_fight_end::clear_result() {
  set_changed();
  result_ = 0;
}
inline ::google::protobuf::int32 smsg_ore_fight_end::result() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ore_fight_end.result)
  return result_;
}
inline void smsg_ore_fight_end::set_result(::google::protobuf::int32 value) {
  set_changed();
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ore_fight_end.result)
}

// bytes text = 2;
inline void smsg_ore_fight_end::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_ore_fight_end::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ore_fight_end.text)
  return text_.GetNoArena();
}
inline void smsg_ore_fight_end::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ore_fight_end.text)
}
#if LANG_CXX11
inline void smsg_ore_fight_end::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_ore_fight_end.text)
}
#endif
inline void smsg_ore_fight_end::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_ore_fight_end.text)
}
inline void smsg_ore_fight_end::set_text(const void* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_ore_fight_end.text)
}
inline ::std::string* smsg_ore_fight_end::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_ore_fight_end.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_ore_fight_end::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_ore_fight_end.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_ore_fight_end::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_ore_fight_end.text)
}

// repeated int32 types = 3;
inline int smsg_ore_fight_end::types_size() const {
  return types_.size();
}
inline void smsg_ore_fight_end::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_ore_fight_end::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ore_fight_end.types)
  return types_.Get(index);
}
inline void smsg_ore_fight_end::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ore_fight_end.types)
}
inline void smsg_ore_fight_end::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ore_fight_end.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_ore_fight_end::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ore_fight_end.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_ore_fight_end::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ore_fight_end.types)
  return &types_;
}

// repeated int32 value1s = 4;
inline int smsg_ore_fight_end::value1s_size() const {
  return value1s_.size();
}
inline void smsg_ore_fight_end::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_ore_fight_end::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ore_fight_end.value1s)
  return value1s_.Get(index);
}
inline void smsg_ore_fight_end::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ore_fight_end.value1s)
}
inline void smsg_ore_fight_end::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ore_fight_end.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_ore_fight_end::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ore_fight_end.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_ore_fight_end::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ore_fight_end.value1s)
  return &value1s_;
}

// repeated int32 value2s = 5;
inline int smsg_ore_fight_end::value2s_size() const {
  return value2s_.size();
}
inline void smsg_ore_fight_end::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_ore_fight_end::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ore_fight_end.value2s)
  return value2s_.Get(index);
}
inline void smsg_ore_fight_end::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ore_fight_end.value2s)
}
inline void smsg_ore_fight_end::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ore_fight_end.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_ore_fight_end::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ore_fight_end.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_ore_fight_end::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ore_fight_end.value2s)
  return &value2s_;
}

// repeated int32 value3s = 6;
inline int smsg_ore_fight_end::value3s_size() const {
  return value3s_.size();
}
inline void smsg_ore_fight_end::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_ore_fight_end::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ore_fight_end.value3s)
  return value3s_.Get(index);
}
inline void smsg_ore_fight_end::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ore_fight_end.value3s)
}
inline void smsg_ore_fight_end::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ore_fight_end.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_ore_fight_end::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ore_fight_end.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_ore_fight_end::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ore_fight_end.value3s)
  return &value3s_;
}

// repeated .dhc.role_t roles = 7;
inline int smsg_ore_fight_end::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_ore_fight_end::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_ore_fight_end.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_ore_fight_end::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ore_fight_end.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_ore_fight_end::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ore_fight_end.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_ore_fight_end::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ore_fight_end.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_ore_fight_end::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ore_fight_end.roles)
  return roles_;
}

// repeated .dhc.treasure_t treasures = 8;
inline int smsg_ore_fight_end::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_ore_fight_end::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_ore_fight_end.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_ore_fight_end::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ore_fight_end.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_ore_fight_end::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ore_fight_end.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_ore_fight_end::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ore_fight_end.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_ore_fight_end::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ore_fight_end.treasures)
  return treasures_;
}

// repeated .dhc.equip_t equips = 9;
inline int smsg_ore_fight_end::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_ore_fight_end::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_ore_fight_end.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_ore_fight_end::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_ore_fight_end.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_ore_fight_end::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ore_fight_end.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_ore_fight_end::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_ore_fight_end.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_ore_fight_end::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_ore_fight_end.equips)
  return equips_;
}

// int32 hp = 10;
inline void smsg_ore_fight_end::clear_hp() {
  set_changed();
  hp_ = 0;
}
inline ::google::protobuf::int32 smsg_ore_fight_end::hp() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ore_fight_end.hp)
  return hp_;
}
inline void smsg_ore_fight_end::set_hp(::google::protobuf::int32 value) {
  set_changed();
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ore_fight_end.hp)
}

// -------------------------------------------------------------------

// smsg_pvp_view

// repeated uint64 player_guids = 1;
inline int smsg_pvp_view::player_guids_size() const {
  return player_guids_.size();
}
inline void smsg_pvp_view::clear_player_guids() {
  set_changed();
  player_guids_.Clear();
}
inline ::google::protobuf::uint64 smsg_pvp_view::player_guids(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_view.player_guids)
  return player_guids_.Get(index);
}
inline void smsg_pvp_view::set_player_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_view.player_guids)
}
inline void smsg_pvp_view::add_player_guids(::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_view.player_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
smsg_pvp_view::player_guids() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_view.player_guids)
  return player_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
smsg_pvp_view::mutable_player_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_view.player_guids)
  return &player_guids_;
}

// repeated string player_names = 2;
inline int smsg_pvp_view::player_names_size() const {
  return player_names_.size();
}
inline void smsg_pvp_view::clear_player_names() {
  set_changed();
  player_names_.Clear();
}
inline const ::std::string& smsg_pvp_view::player_names(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_view.player_names)
  return player_names_.Get(index);
}
inline ::std::string* smsg_pvp_view::mutable_player_names(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_pvp_view.player_names)
  return player_names_.Mutable(index);
}
inline void smsg_pvp_view::set_player_names(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_view.player_names)
  player_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void smsg_pvp_view::set_player_names(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_view.player_names)
  player_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void smsg_pvp_view::set_player_names(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  player_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_pvp_view.player_names)
}
inline void smsg_pvp_view::set_player_names(int index, const char* value, size_t size) {
  set_changed();
  player_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_pvp_view.player_names)
}
inline ::std::string* smsg_pvp_view::add_player_names() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.smsg_pvp_view.player_names)
  return player_names_.Add();
}
inline void smsg_pvp_view::add_player_names(const ::std::string& value) {
  set_changed();
  player_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_view.player_names)
}
#if LANG_CXX11
inline void smsg_pvp_view::add_player_names(::std::string&& value) {
  set_changed();
  player_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_view.player_names)
}
#endif
inline void smsg_pvp_view::add_player_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  player_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.smsg_pvp_view.player_names)
}
inline void smsg_pvp_view::add_player_names(const char* value, size_t size) {
  set_changed();
  player_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.smsg_pvp_view.player_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
smsg_pvp_view::player_names() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_view.player_names)
  return player_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
smsg_pvp_view::mutable_player_names() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_view.player_names)
  return &player_names_;
}

// repeated int32 player_templates = 3;
inline int smsg_pvp_view::player_templates_size() const {
  return player_templates_.size();
}
inline void smsg_pvp_view::clear_player_templates() {
  set_changed();
  player_templates_.Clear();
}
inline ::google::protobuf::int32 smsg_pvp_view::player_templates(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_view.player_templates)
  return player_templates_.Get(index);
}
inline void smsg_pvp_view::set_player_templates(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_templates_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_view.player_templates)
}
inline void smsg_pvp_view::add_player_templates(::google::protobuf::int32 value) {
  set_changed();
  player_templates_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_view.player_templates)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pvp_view::player_templates() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_view.player_templates)
  return player_templates_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pvp_view::mutable_player_templates() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_view.player_templates)
  return &player_templates_;
}

// repeated int32 player_servers = 4;
inline int smsg_pvp_view::player_servers_size() const {
  return player_servers_.size();
}
inline void smsg_pvp_view::clear_player_servers() {
  set_changed();
  player_servers_.Clear();
}
inline ::google::protobuf::int32 smsg_pvp_view::player_servers(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_view.player_servers)
  return player_servers_.Get(index);
}
inline void smsg_pvp_view::set_player_servers(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_servers_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_view.player_servers)
}
inline void smsg_pvp_view::add_player_servers(::google::protobuf::int32 value) {
  set_changed();
  player_servers_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_view.player_servers)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pvp_view::player_servers() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_view.player_servers)
  return player_servers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pvp_view::mutable_player_servers() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_view.player_servers)
  return &player_servers_;
}

// repeated int32 player_bfs = 5;
inline int smsg_pvp_view::player_bfs_size() const {
  return player_bfs_.size();
}
inline void smsg_pvp_view::clear_player_bfs() {
  set_changed();
  player_bfs_.Clear();
}
inline ::google::protobuf::int32 smsg_pvp_view::player_bfs(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_view.player_bfs)
  return player_bfs_.Get(index);
}
inline void smsg_pvp_view::set_player_bfs(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_bfs_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_view.player_bfs)
}
inline void smsg_pvp_view::add_player_bfs(::google::protobuf::int32 value) {
  set_changed();
  player_bfs_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_view.player_bfs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pvp_view::player_bfs() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_view.player_bfs)
  return player_bfs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pvp_view::mutable_player_bfs() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_view.player_bfs)
  return &player_bfs_;
}

// repeated int32 player_points = 6;
inline int smsg_pvp_view::player_points_size() const {
  return player_points_.size();
}
inline void smsg_pvp_view::clear_player_points() {
  set_changed();
  player_points_.Clear();
}
inline ::google::protobuf::int32 smsg_pvp_view::player_points(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_view.player_points)
  return player_points_.Get(index);
}
inline void smsg_pvp_view::set_player_points(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_points_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_view.player_points)
}
inline void smsg_pvp_view::add_player_points(::google::protobuf::int32 value) {
  set_changed();
  player_points_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_view.player_points)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pvp_view::player_points() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_view.player_points)
  return player_points_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pvp_view::mutable_player_points() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_view.player_points)
  return &player_points_;
}

// repeated int32 player_wins = 7;
inline int smsg_pvp_view::player_wins_size() const {
  return player_wins_.size();
}
inline void smsg_pvp_view::clear_player_wins() {
  set_changed();
  player_wins_.Clear();
}
inline ::google::protobuf::int32 smsg_pvp_view::player_wins(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_view.player_wins)
  return player_wins_.Get(index);
}
inline void smsg_pvp_view::set_player_wins(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_wins_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_view.player_wins)
}
inline void smsg_pvp_view::add_player_wins(::google::protobuf::int32 value) {
  set_changed();
  player_wins_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_view.player_wins)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pvp_view::player_wins() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_view.player_wins)
  return player_wins_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pvp_view::mutable_player_wins() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_view.player_wins)
  return &player_wins_;
}

// repeated int32 player_vips = 8;
inline int smsg_pvp_view::player_vips_size() const {
  return player_vips_.size();
}
inline void smsg_pvp_view::clear_player_vips() {
  set_changed();
  player_vips_.Clear();
}
inline ::google::protobuf::int32 smsg_pvp_view::player_vips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_view.player_vips)
  return player_vips_.Get(index);
}
inline void smsg_pvp_view::set_player_vips(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_vips_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_view.player_vips)
}
inline void smsg_pvp_view::add_player_vips(::google::protobuf::int32 value) {
  set_changed();
  player_vips_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_view.player_vips)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pvp_view::player_vips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_view.player_vips)
  return player_vips_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pvp_view::mutable_player_vips() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_view.player_vips)
  return &player_vips_;
}

// repeated int32 player_achieves = 9;
inline int smsg_pvp_view::player_achieves_size() const {
  return player_achieves_.size();
}
inline void smsg_pvp_view::clear_player_achieves() {
  set_changed();
  player_achieves_.Clear();
}
inline ::google::protobuf::int32 smsg_pvp_view::player_achieves(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_view.player_achieves)
  return player_achieves_.Get(index);
}
inline void smsg_pvp_view::set_player_achieves(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_achieves_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_view.player_achieves)
}
inline void smsg_pvp_view::add_player_achieves(::google::protobuf::int32 value) {
  set_changed();
  player_achieves_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_view.player_achieves)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pvp_view::player_achieves() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_view.player_achieves)
  return player_achieves_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pvp_view::mutable_player_achieves() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_view.player_achieves)
  return &player_achieves_;
}

// repeated int32 player_guanghuans = 10;
inline int smsg_pvp_view::player_guanghuans_size() const {
  return player_guanghuans_.size();
}
inline void smsg_pvp_view::clear_player_guanghuans() {
  set_changed();
  player_guanghuans_.Clear();
}
inline ::google::protobuf::int32 smsg_pvp_view::player_guanghuans(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_view.player_guanghuans)
  return player_guanghuans_.Get(index);
}
inline void smsg_pvp_view::set_player_guanghuans(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_guanghuans_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_view.player_guanghuans)
}
inline void smsg_pvp_view::add_player_guanghuans(::google::protobuf::int32 value) {
  set_changed();
  player_guanghuans_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_view.player_guanghuans)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pvp_view::player_guanghuans() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_view.player_guanghuans)
  return player_guanghuans_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pvp_view::mutable_player_guanghuans() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_view.player_guanghuans)
  return &player_guanghuans_;
}

// repeated int32 player_dress = 11;
inline int smsg_pvp_view::player_dress_size() const {
  return player_dress_.size();
}
inline void smsg_pvp_view::clear_player_dress() {
  set_changed();
  player_dress_.Clear();
}
inline ::google::protobuf::int32 smsg_pvp_view::player_dress(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_view.player_dress)
  return player_dress_.Get(index);
}
inline void smsg_pvp_view::set_player_dress(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_dress_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_view.player_dress)
}
inline void smsg_pvp_view::add_player_dress(::google::protobuf::int32 value) {
  set_changed();
  player_dress_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_view.player_dress)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pvp_view::player_dress() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_view.player_dress)
  return player_dress_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pvp_view::mutable_player_dress() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_view.player_dress)
  return &player_dress_;
}

// repeated int32 player_chenghaos = 12;
inline int smsg_pvp_view::player_chenghaos_size() const {
  return player_chenghaos_.size();
}
inline void smsg_pvp_view::clear_player_chenghaos() {
  set_changed();
  player_chenghaos_.Clear();
}
inline ::google::protobuf::int32 smsg_pvp_view::player_chenghaos(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_view.player_chenghaos)
  return player_chenghaos_.Get(index);
}
inline void smsg_pvp_view::set_player_chenghaos(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_chenghaos_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_view.player_chenghaos)
}
inline void smsg_pvp_view::add_player_chenghaos(::google::protobuf::int32 value) {
  set_changed();
  player_chenghaos_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_view.player_chenghaos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pvp_view::player_chenghaos() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_view.player_chenghaos)
  return player_chenghaos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pvp_view::mutable_player_chenghaos() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_view.player_chenghaos)
  return &player_chenghaos_;
}

// repeated int32 player_nalflags = 13;
inline int smsg_pvp_view::player_nalflags_size() const {
  return player_nalflags_.size();
}
inline void smsg_pvp_view::clear_player_nalflags() {
  set_changed();
  player_nalflags_.Clear();
}
inline ::google::protobuf::int32 smsg_pvp_view::player_nalflags(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_view.player_nalflags)
  return player_nalflags_.Get(index);
}
inline void smsg_pvp_view::set_player_nalflags(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_nalflags_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_view.player_nalflags)
}
inline void smsg_pvp_view::add_player_nalflags(::google::protobuf::int32 value) {
  set_changed();
  player_nalflags_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_view.player_nalflags)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pvp_view::player_nalflags() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_view.player_nalflags)
  return player_nalflags_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pvp_view::mutable_player_nalflags() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_view.player_nalflags)
  return &player_nalflags_;
}

// -------------------------------------------------------------------

// cmsg_pvp_fight_end

// .protocol.game.msg_common comm = 1;
inline bool cmsg_pvp_fight_end::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_pvp_fight_end::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_pvp_fight_end::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_pvp_fight_end::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pvp_fight_end.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_pvp_fight_end::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_pvp_fight_end.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_pvp_fight_end::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_pvp_fight_end.comm)
  return comm_;
}
inline void cmsg_pvp_fight_end::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_pvp_fight_end.comm)
}

// int32 index = 2;
inline void cmsg_pvp_fight_end::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 cmsg_pvp_fight_end::index() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pvp_fight_end.index)
  return index_;
}
inline void cmsg_pvp_fight_end::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_pvp_fight_end.index)
}

// -------------------------------------------------------------------

// smsg_pvp_fight_end

// int32 result = 1;
inline void smsg_pvp_fight_end::clear_result() {
  set_changed();
  result_ = 0;
}
inline ::google::protobuf::int32 smsg_pvp_fight_end::result() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_fight_end.result)
  return result_;
}
inline void smsg_pvp_fight_end::set_result(::google::protobuf::int32 value) {
  set_changed();
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_fight_end.result)
}

// bytes text = 2;
inline void smsg_pvp_fight_end::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_pvp_fight_end::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_fight_end.text)
  return text_.GetNoArena();
}
inline void smsg_pvp_fight_end::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_fight_end.text)
}
#if LANG_CXX11
inline void smsg_pvp_fight_end::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_pvp_fight_end.text)
}
#endif
inline void smsg_pvp_fight_end::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_pvp_fight_end.text)
}
inline void smsg_pvp_fight_end::set_text(const void* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_pvp_fight_end.text)
}
inline ::std::string* smsg_pvp_fight_end::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_pvp_fight_end.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_pvp_fight_end::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_pvp_fight_end.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_pvp_fight_end::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_pvp_fight_end.text)
}

// int32 pvp_point = 3;
inline void smsg_pvp_fight_end::clear_pvp_point() {
  set_changed();
  pvp_point_ = 0;
}
inline ::google::protobuf::int32 smsg_pvp_fight_end::pvp_point() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_fight_end.pvp_point)
  return pvp_point_;
}
inline void smsg_pvp_fight_end::set_pvp_point(::google::protobuf::int32 value) {
  set_changed();
  
  pvp_point_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_fight_end.pvp_point)
}

// repeated int32 types = 4;
inline int smsg_pvp_fight_end::types_size() const {
  return types_.size();
}
inline void smsg_pvp_fight_end::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_pvp_fight_end::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_fight_end.types)
  return types_.Get(index);
}
inline void smsg_pvp_fight_end::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_fight_end.types)
}
inline void smsg_pvp_fight_end::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_fight_end.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pvp_fight_end::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_fight_end.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pvp_fight_end::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_fight_end.types)
  return &types_;
}

// repeated int32 value1s = 5;
inline int smsg_pvp_fight_end::value1s_size() const {
  return value1s_.size();
}
inline void smsg_pvp_fight_end::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_pvp_fight_end::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_fight_end.value1s)
  return value1s_.Get(index);
}
inline void smsg_pvp_fight_end::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_fight_end.value1s)
}
inline void smsg_pvp_fight_end::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_fight_end.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pvp_fight_end::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_fight_end.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pvp_fight_end::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_fight_end.value1s)
  return &value1s_;
}

// repeated int32 value2s = 6;
inline int smsg_pvp_fight_end::value2s_size() const {
  return value2s_.size();
}
inline void smsg_pvp_fight_end::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_pvp_fight_end::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_fight_end.value2s)
  return value2s_.Get(index);
}
inline void smsg_pvp_fight_end::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_fight_end.value2s)
}
inline void smsg_pvp_fight_end::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_fight_end.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pvp_fight_end::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_fight_end.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pvp_fight_end::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_fight_end.value2s)
  return &value2s_;
}

// repeated int32 value3s = 7;
inline int smsg_pvp_fight_end::value3s_size() const {
  return value3s_.size();
}
inline void smsg_pvp_fight_end::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_pvp_fight_end::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_fight_end.value3s)
  return value3s_.Get(index);
}
inline void smsg_pvp_fight_end::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pvp_fight_end.value3s)
}
inline void smsg_pvp_fight_end::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_fight_end.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pvp_fight_end::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_fight_end.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pvp_fight_end::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_fight_end.value3s)
  return &value3s_;
}

// repeated .dhc.role_t roles = 8;
inline int smsg_pvp_fight_end::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_pvp_fight_end::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_pvp_fight_end.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_pvp_fight_end::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_fight_end.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_pvp_fight_end::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_fight_end.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_pvp_fight_end::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_fight_end.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_pvp_fight_end::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_fight_end.roles)
  return roles_;
}

// repeated .dhc.treasure_t treasures = 9;
inline int smsg_pvp_fight_end::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_pvp_fight_end::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_pvp_fight_end.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_pvp_fight_end::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_fight_end.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_pvp_fight_end::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_fight_end.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_pvp_fight_end::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_fight_end.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_pvp_fight_end::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_fight_end.treasures)
  return treasures_;
}

// repeated .dhc.equip_t equips = 10;
inline int smsg_pvp_fight_end::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_pvp_fight_end::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_pvp_fight_end.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_pvp_fight_end::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pvp_fight_end.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_pvp_fight_end::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pvp_fight_end.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_pvp_fight_end::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pvp_fight_end.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_pvp_fight_end::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pvp_fight_end.equips)
  return equips_;
}

// -------------------------------------------------------------------

// cmsg_bingyuan_fight

// .protocol.game.msg_common comm = 1;
inline bool cmsg_bingyuan_fight::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_bingyuan_fight::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_bingyuan_fight::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_bingyuan_fight::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_bingyuan_fight.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_bingyuan_fight::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_bingyuan_fight.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_bingyuan_fight::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_bingyuan_fight.comm)
  return comm_;
}
inline void cmsg_bingyuan_fight::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_bingyuan_fight.comm)
}

// uint64 id = 2;
inline void cmsg_bingyuan_fight::clear_id() {
  set_changed();
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_bingyuan_fight::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_bingyuan_fight.id)
  return id_;
}
inline void cmsg_bingyuan_fight::set_id(::google::protobuf::uint64 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_bingyuan_fight.id)
}

// -------------------------------------------------------------------

// smsg_bingyuan_fight_end

// int32 bingjing = 1;
inline void smsg_bingyuan_fight_end::clear_bingjing() {
  set_changed();
  bingjing_ = 0;
}
inline ::google::protobuf::int32 smsg_bingyuan_fight_end::bingjing() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_bingyuan_fight_end.bingjing)
  return bingjing_;
}
inline void smsg_bingyuan_fight_end::set_bingjing(::google::protobuf::int32 value) {
  set_changed();
  
  bingjing_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_bingyuan_fight_end.bingjing)
}

// int32 point = 2;
inline void smsg_bingyuan_fight_end::clear_point() {
  set_changed();
  point_ = 0;
}
inline ::google::protobuf::int32 smsg_bingyuan_fight_end::point() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_bingyuan_fight_end.point)
  return point_;
}
inline void smsg_bingyuan_fight_end::set_point(::google::protobuf::int32 value) {
  set_changed();
  
  point_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_bingyuan_fight_end.point)
}

// -------------------------------------------------------------------

// smsg_team_friend_view

// repeated uint64 guid = 1;
inline int smsg_team_friend_view::guid_size() const {
  return guid_.size();
}
inline void smsg_team_friend_view::clear_guid() {
  set_changed();
  guid_.Clear();
}
inline ::google::protobuf::uint64 smsg_team_friend_view::guid(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_team_friend_view.guid)
  return guid_.Get(index);
}
inline void smsg_team_friend_view::set_guid(int index, ::google::protobuf::uint64 value) {
  set_changed();
  guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_team_friend_view.guid)
}
inline void smsg_team_friend_view::add_guid(::google::protobuf::uint64 value) {
  set_changed();
  guid_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_team_friend_view.guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
smsg_team_friend_view::guid() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_team_friend_view.guid)
  return guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
smsg_team_friend_view::mutable_guid() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_team_friend_view.guid)
  return &guid_;
}

// repeated string name = 2;
inline int smsg_team_friend_view::name_size() const {
  return name_.size();
}
inline void smsg_team_friend_view::clear_name() {
  set_changed();
  name_.Clear();
}
inline const ::std::string& smsg_team_friend_view::name(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_team_friend_view.name)
  return name_.Get(index);
}
inline ::std::string* smsg_team_friend_view::mutable_name(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_team_friend_view.name)
  return name_.Mutable(index);
}
inline void smsg_team_friend_view::set_name(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_team_friend_view.name)
  name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void smsg_team_friend_view::set_name(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_team_friend_view.name)
  name_.Mutable(index)->assign(std::move(value));
}
#endif
inline void smsg_team_friend_view::set_name(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_team_friend_view.name)
}
inline void smsg_team_friend_view::set_name(int index, const char* value, size_t size) {
  set_changed();
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_team_friend_view.name)
}
inline ::std::string* smsg_team_friend_view::add_name() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.smsg_team_friend_view.name)
  return name_.Add();
}
inline void smsg_team_friend_view::add_name(const ::std::string& value) {
  set_changed();
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_team_friend_view.name)
}
#if LANG_CXX11
inline void smsg_team_friend_view::add_name(::std::string&& value) {
  set_changed();
  name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.smsg_team_friend_view.name)
}
#endif
inline void smsg_team_friend_view::add_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.smsg_team_friend_view.name)
}
inline void smsg_team_friend_view::add_name(const char* value, size_t size) {
  set_changed();
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.smsg_team_friend_view.name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
smsg_team_friend_view::name() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_team_friend_view.name)
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
smsg_team_friend_view::mutable_name() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_team_friend_view.name)
  return &name_;
}

// repeated int32 id = 3;
inline int smsg_team_friend_view::id_size() const {
  return id_.size();
}
inline void smsg_team_friend_view::clear_id() {
  set_changed();
  id_.Clear();
}
inline ::google::protobuf::int32 smsg_team_friend_view::id(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_team_friend_view.id)
  return id_.Get(index);
}
inline void smsg_team_friend_view::set_id(int index, ::google::protobuf::int32 value) {
  set_changed();
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_team_friend_view.id)
}
inline void smsg_team_friend_view::add_id(::google::protobuf::int32 value) {
  set_changed();
  id_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_team_friend_view.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_team_friend_view::id() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_team_friend_view.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_team_friend_view::mutable_id() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_team_friend_view.id)
  return &id_;
}

// repeated int32 chenghao = 4;
inline int smsg_team_friend_view::chenghao_size() const {
  return chenghao_.size();
}
inline void smsg_team_friend_view::clear_chenghao() {
  set_changed();
  chenghao_.Clear();
}
inline ::google::protobuf::int32 smsg_team_friend_view::chenghao(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_team_friend_view.chenghao)
  return chenghao_.Get(index);
}
inline void smsg_team_friend_view::set_chenghao(int index, ::google::protobuf::int32 value) {
  set_changed();
  chenghao_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_team_friend_view.chenghao)
}
inline void smsg_team_friend_view::add_chenghao(::google::protobuf::int32 value) {
  set_changed();
  chenghao_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_team_friend_view.chenghao)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_team_friend_view::chenghao() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_team_friend_view.chenghao)
  return chenghao_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_team_friend_view::mutable_chenghao() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_team_friend_view.chenghao)
  return &chenghao_;
}

// repeated int32 bf = 5;
inline int smsg_team_friend_view::bf_size() const {
  return bf_.size();
}
inline void smsg_team_friend_view::clear_bf() {
  set_changed();
  bf_.Clear();
}
inline ::google::protobuf::int32 smsg_team_friend_view::bf(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_team_friend_view.bf)
  return bf_.Get(index);
}
inline void smsg_team_friend_view::set_bf(int index, ::google::protobuf::int32 value) {
  set_changed();
  bf_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_team_friend_view.bf)
}
inline void smsg_team_friend_view::add_bf(::google::protobuf::int32 value) {
  set_changed();
  bf_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_team_friend_view.bf)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_team_friend_view::bf() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_team_friend_view.bf)
  return bf_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_team_friend_view::mutable_bf() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_team_friend_view.bf)
  return &bf_;
}

// repeated string guild = 6;
inline int smsg_team_friend_view::guild_size() const {
  return guild_.size();
}
inline void smsg_team_friend_view::clear_guild() {
  set_changed();
  guild_.Clear();
}
inline const ::std::string& smsg_team_friend_view::guild(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_team_friend_view.guild)
  return guild_.Get(index);
}
inline ::std::string* smsg_team_friend_view::mutable_guild(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_team_friend_view.guild)
  return guild_.Mutable(index);
}
inline void smsg_team_friend_view::set_guild(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_team_friend_view.guild)
  guild_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void smsg_team_friend_view::set_guild(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:protocol.game.smsg_team_friend_view.guild)
  guild_.Mutable(index)->assign(std::move(value));
}
#endif
inline void smsg_team_friend_view::set_guild(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  guild_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_team_friend_view.guild)
}
inline void smsg_team_friend_view::set_guild(int index, const char* value, size_t size) {
  set_changed();
  guild_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_team_friend_view.guild)
}
inline ::std::string* smsg_team_friend_view::add_guild() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:protocol.game.smsg_team_friend_view.guild)
  return guild_.Add();
}
inline void smsg_team_friend_view::add_guild(const ::std::string& value) {
  set_changed();
  guild_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_team_friend_view.guild)
}
#if LANG_CXX11
inline void smsg_team_friend_view::add_guild(::std::string&& value) {
  set_changed();
  guild_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protocol.game.smsg_team_friend_view.guild)
}
#endif
inline void smsg_team_friend_view::add_guild(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  guild_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protocol.game.smsg_team_friend_view.guild)
}
inline void smsg_team_friend_view::add_guild(const char* value, size_t size) {
  set_changed();
  guild_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protocol.game.smsg_team_friend_view.guild)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
smsg_team_friend_view::guild() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_team_friend_view.guild)
  return guild_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
smsg_team_friend_view::mutable_guild() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_team_friend_view.guild)
  return &guild_;
}

// repeated int32 level = 7;
inline int smsg_team_friend_view::level_size() const {
  return level_.size();
}
inline void smsg_team_friend_view::clear_level() {
  set_changed();
  level_.Clear();
}
inline ::google::protobuf::int32 smsg_team_friend_view::level(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_team_friend_view.level)
  return level_.Get(index);
}
inline void smsg_team_friend_view::set_level(int index, ::google::protobuf::int32 value) {
  set_changed();
  level_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_team_friend_view.level)
}
inline void smsg_team_friend_view::add_level(::google::protobuf::int32 value) {
  set_changed();
  level_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_team_friend_view.level)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_team_friend_view::level() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_team_friend_view.level)
  return level_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_team_friend_view::mutable_level() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_team_friend_view.level)
  return &level_;
}

// repeated int32 vip = 8;
inline int smsg_team_friend_view::vip_size() const {
  return vip_.size();
}
inline void smsg_team_friend_view::clear_vip() {
  set_changed();
  vip_.Clear();
}
inline ::google::protobuf::int32 smsg_team_friend_view::vip(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_team_friend_view.vip)
  return vip_.Get(index);
}
inline void smsg_team_friend_view::set_vip(int index, ::google::protobuf::int32 value) {
  set_changed();
  vip_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_team_friend_view.vip)
}
inline void smsg_team_friend_view::add_vip(::google::protobuf::int32 value) {
  set_changed();
  vip_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_team_friend_view.vip)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_team_friend_view::vip() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_team_friend_view.vip)
  return vip_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_team_friend_view::mutable_vip() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_team_friend_view.vip)
  return &vip_;
}

// repeated int32 achieve = 9;
inline int smsg_team_friend_view::achieve_size() const {
  return achieve_.size();
}
inline void smsg_team_friend_view::clear_achieve() {
  set_changed();
  achieve_.Clear();
}
inline ::google::protobuf::int32 smsg_team_friend_view::achieve(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_team_friend_view.achieve)
  return achieve_.Get(index);
}
inline void smsg_team_friend_view::set_achieve(int index, ::google::protobuf::int32 value) {
  set_changed();
  achieve_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_team_friend_view.achieve)
}
inline void smsg_team_friend_view::add_achieve(::google::protobuf::int32 value) {
  set_changed();
  achieve_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_team_friend_view.achieve)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_team_friend_view::achieve() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_team_friend_view.achieve)
  return achieve_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_team_friend_view::mutable_achieve() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_team_friend_view.achieve)
  return &achieve_;
}

// repeated int32 nalflag = 10;
inline int smsg_team_friend_view::nalflag_size() const {
  return nalflag_.size();
}
inline void smsg_team_friend_view::clear_nalflag() {
  set_changed();
  nalflag_.Clear();
}
inline ::google::protobuf::int32 smsg_team_friend_view::nalflag(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_team_friend_view.nalflag)
  return nalflag_.Get(index);
}
inline void smsg_team_friend_view::set_nalflag(int index, ::google::protobuf::int32 value) {
  set_changed();
  nalflag_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_team_friend_view.nalflag)
}
inline void smsg_team_friend_view::add_nalflag(::google::protobuf::int32 value) {
  set_changed();
  nalflag_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_team_friend_view.nalflag)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_team_friend_view::nalflag() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_team_friend_view.nalflag)
  return nalflag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_team_friend_view::mutable_nalflag() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_team_friend_view.nalflag)
  return &nalflag_;
}

// -------------------------------------------------------------------

// cmsg_team_invite_friend

// .protocol.game.msg_common comm = 1;
inline bool cmsg_team_invite_friend::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_team_invite_friend::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_team_invite_friend::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_team_invite_friend::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_team_invite_friend.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_team_invite_friend::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_team_invite_friend.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_team_invite_friend::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_team_invite_friend.comm)
  return comm_;
}
inline void cmsg_team_invite_friend::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_team_invite_friend.comm)
}

// uint64 friends = 2;
inline void cmsg_team_invite_friend::clear_friends() {
  set_changed();
  friends_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_team_invite_friend::friends() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_team_invite_friend.friends)
  return friends_;
}
inline void cmsg_team_invite_friend::set_friends(::google::protobuf::uint64 value) {
  set_changed();
  
  friends_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_team_invite_friend.friends)
}

// -------------------------------------------------------------------

// cmsg_chenghao_on

// .protocol.game.msg_common comm = 1;
inline bool cmsg_chenghao_on::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_chenghao_on::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_chenghao_on::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_chenghao_on::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_chenghao_on.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_chenghao_on::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_chenghao_on.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_chenghao_on::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_chenghao_on.comm)
  return comm_;
}
inline void cmsg_chenghao_on::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_chenghao_on.comm)
}

// int32 id = 2;
inline void cmsg_chenghao_on::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 cmsg_chenghao_on::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_chenghao_on.id)
  return id_;
}
inline void cmsg_chenghao_on::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_chenghao_on.id)
}

// -------------------------------------------------------------------

// cmsg_qiecuo

// .protocol.game.msg_common comm = 1;
inline bool cmsg_qiecuo::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_qiecuo::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_qiecuo::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_qiecuo::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_qiecuo.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_qiecuo::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_qiecuo.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_qiecuo::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_qiecuo.comm)
  return comm_;
}
inline void cmsg_qiecuo::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_qiecuo.comm)
}

// uint64 target = 2;
inline void cmsg_qiecuo::clear_target() {
  set_changed();
  target_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_qiecuo::target() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_qiecuo.target)
  return target_;
}
inline void cmsg_qiecuo::set_target(::google::protobuf::uint64 value) {
  set_changed();
  
  target_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_qiecuo.target)
}

// -------------------------------------------------------------------

// smsg_qiecuo

// int32 result = 1;
inline void smsg_qiecuo::clear_result() {
  set_changed();
  result_ = 0;
}
inline ::google::protobuf::int32 smsg_qiecuo::result() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_qiecuo.result)
  return result_;
}
inline void smsg_qiecuo::set_result(::google::protobuf::int32 value) {
  set_changed();
  
  result_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_qiecuo.result)
}

// bytes text = 2;
inline void smsg_qiecuo::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& smsg_qiecuo::text() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_qiecuo.text)
  return text_.GetNoArena();
}
inline void smsg_qiecuo::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_qiecuo.text)
}
#if LANG_CXX11
inline void smsg_qiecuo::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.game.smsg_qiecuo.text)
}
#endif
inline void smsg_qiecuo::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.game.smsg_qiecuo.text)
}
inline void smsg_qiecuo::set_text(const void* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.game.smsg_qiecuo.text)
}
inline ::std::string* smsg_qiecuo::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_qiecuo.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* smsg_qiecuo::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.game.smsg_qiecuo.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void smsg_qiecuo::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_qiecuo.text)
}

// -------------------------------------------------------------------

// cmsg_ds_fight

// .protocol.game.msg_common comm = 1;
inline bool cmsg_ds_fight::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_ds_fight::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_ds_fight::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_ds_fight::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_ds_fight.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_ds_fight::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_ds_fight.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_ds_fight::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_ds_fight.comm)
  return comm_;
}
inline void cmsg_ds_fight::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_ds_fight.comm)
}

// uint64 id = 2;
inline void cmsg_ds_fight::clear_id() {
  set_changed();
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_ds_fight::id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_ds_fight.id)
  return id_;
}
inline void cmsg_ds_fight::set_id(::google::protobuf::uint64 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_ds_fight.id)
}

// -------------------------------------------------------------------

// smsg_ds_fight_end

// int32 xinpian = 1;
inline void smsg_ds_fight_end::clear_xinpian() {
  set_changed();
  xinpian_ = 0;
}
inline ::google::protobuf::int32 smsg_ds_fight_end::xinpian() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ds_fight_end.xinpian)
  return xinpian_;
}
inline void smsg_ds_fight_end::set_xinpian(::google::protobuf::int32 value) {
  set_changed();
  
  xinpian_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ds_fight_end.xinpian)
}

// int32 point = 2;
inline void smsg_ds_fight_end::clear_point() {
  set_changed();
  point_ = 0;
}
inline ::google::protobuf::int32 smsg_ds_fight_end::point() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ds_fight_end.point)
  return point_;
}
inline void smsg_ds_fight_end::set_point(::google::protobuf::int32 value) {
  set_changed();
  
  point_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ds_fight_end.point)
}

// int32 ciliao = 3;
inline void smsg_ds_fight_end::clear_ciliao() {
  set_changed();
  ciliao_ = 0;
}
inline ::google::protobuf::int32 smsg_ds_fight_end::ciliao() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ds_fight_end.ciliao)
  return ciliao_;
}
inline void smsg_ds_fight_end::set_ciliao(::google::protobuf::int32 value) {
  set_changed();
  
  ciliao_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ds_fight_end.ciliao)
}

// int32 duanwei = 4;
inline void smsg_ds_fight_end::clear_duanwei() {
  set_changed();
  duanwei_ = 0;
}
inline ::google::protobuf::int32 smsg_ds_fight_end::duanwei() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ds_fight_end.duanwei)
  return duanwei_;
}
inline void smsg_ds_fight_end::set_duanwei(::google::protobuf::int32 value) {
  set_changed();
  
  duanwei_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ds_fight_end.duanwei)
}

// int32 srank = 5;
inline void smsg_ds_fight_end::clear_srank() {
  set_changed();
  srank_ = 0;
}
inline ::google::protobuf::int32 smsg_ds_fight_end::srank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ds_fight_end.srank)
  return srank_;
}
inline void smsg_ds_fight_end::set_srank(::google::protobuf::int32 value) {
  set_changed();
  
  srank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ds_fight_end.srank)
}

// int32 grank = 6;
inline void smsg_ds_fight_end::clear_grank() {
  set_changed();
  grank_ = 0;
}
inline ::google::protobuf::int32 smsg_ds_fight_end::grank() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ds_fight_end.grank)
  return grank_;
}
inline void smsg_ds_fight_end::set_grank(::google::protobuf::int32 value) {
  set_changed();
  
  grank_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ds_fight_end.grank)
}

// uint64 cd_time = 7;
inline void smsg_ds_fight_end::clear_cd_time() {
  set_changed();
  cd_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 smsg_ds_fight_end::cd_time() const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_ds_fight_end.cd_time)
  return cd_time_;
}
inline void smsg_ds_fight_end::set_cd_time(::google::protobuf::uint64 value) {
  set_changed();
  
  cd_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.smsg_ds_fight_end.cd_time)
}

// -------------------------------------------------------------------

// cmsg_pet_on

// .protocol.game.msg_common comm = 1;
inline bool cmsg_pet_on::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_pet_on::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_pet_on::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_pet_on::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_on.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_pet_on::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_pet_on.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_pet_on::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_pet_on.comm)
  return comm_;
}
inline void cmsg_pet_on::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_pet_on.comm)
}

// uint64 guid = 2;
inline void cmsg_pet_on::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_pet_on::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_on.guid)
  return guid_;
}
inline void cmsg_pet_on::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_pet_on.guid)
}

// -------------------------------------------------------------------

// cmsg_pet_guard

// .protocol.game.msg_common comm = 1;
inline bool cmsg_pet_guard::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_pet_guard::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_pet_guard::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_pet_guard::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_guard.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_pet_guard::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_pet_guard.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_pet_guard::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_pet_guard.comm)
  return comm_;
}
inline void cmsg_pet_guard::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_pet_guard.comm)
}

// uint64 role_guid = 2;
inline void cmsg_pet_guard::clear_role_guid() {
  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_pet_guard::role_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_guard.role_guid)
  return role_guid_;
}
inline void cmsg_pet_guard::set_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  role_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_pet_guard.role_guid)
}

// uint64 pet_guid = 3;
inline void cmsg_pet_guard::clear_pet_guid() {
  set_changed();
  pet_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_pet_guard::pet_guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_guard.pet_guid)
  return pet_guid_;
}
inline void cmsg_pet_guard::set_pet_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  pet_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_pet_guard.pet_guid)
}

// -------------------------------------------------------------------

// cmsg_pet_level

// .protocol.game.msg_common comm = 1;
inline bool cmsg_pet_level::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_pet_level::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_pet_level::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_pet_level::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_level.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_pet_level::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_pet_level.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_pet_level::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_pet_level.comm)
  return comm_;
}
inline void cmsg_pet_level::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_pet_level.comm)
}

// uint64 guid = 2;
inline void cmsg_pet_level::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_pet_level::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_level.guid)
  return guid_;
}
inline void cmsg_pet_level::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_pet_level.guid)
}

// repeated int32 ciliao = 3;
inline int cmsg_pet_level::ciliao_size() const {
  return ciliao_.size();
}
inline void cmsg_pet_level::clear_ciliao() {
  set_changed();
  ciliao_.Clear();
}
inline ::google::protobuf::int32 cmsg_pet_level::ciliao(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_level.ciliao)
  return ciliao_.Get(index);
}
inline void cmsg_pet_level::set_ciliao(int index, ::google::protobuf::int32 value) {
  set_changed();
  ciliao_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_pet_level.ciliao)
}
inline void cmsg_pet_level::add_ciliao(::google::protobuf::int32 value) {
  set_changed();
  ciliao_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_pet_level.ciliao)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
cmsg_pet_level::ciliao() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_pet_level.ciliao)
  return ciliao_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
cmsg_pet_level::mutable_ciliao() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_pet_level.ciliao)
  return &ciliao_;
}

// repeated int32 count = 4;
inline int cmsg_pet_level::count_size() const {
  return count_.size();
}
inline void cmsg_pet_level::clear_count() {
  set_changed();
  count_.Clear();
}
inline ::google::protobuf::int32 cmsg_pet_level::count(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_level.count)
  return count_.Get(index);
}
inline void cmsg_pet_level::set_count(int index, ::google::protobuf::int32 value) {
  set_changed();
  count_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_pet_level.count)
}
inline void cmsg_pet_level::add_count(::google::protobuf::int32 value) {
  set_changed();
  count_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_pet_level.count)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
cmsg_pet_level::count() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_pet_level.count)
  return count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
cmsg_pet_level::mutable_count() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_pet_level.count)
  return &count_;
}

// -------------------------------------------------------------------

// cmsg_pet_jinjie

// .protocol.game.msg_common comm = 1;
inline bool cmsg_pet_jinjie::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_pet_jinjie::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_pet_jinjie::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_pet_jinjie::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_jinjie.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_pet_jinjie::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_pet_jinjie.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_pet_jinjie::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_pet_jinjie.comm)
  return comm_;
}
inline void cmsg_pet_jinjie::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_pet_jinjie.comm)
}

// uint64 guid = 2;
inline void cmsg_pet_jinjie::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_pet_jinjie::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_jinjie.guid)
  return guid_;
}
inline void cmsg_pet_jinjie::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_pet_jinjie.guid)
}

// int32 item_id = 3;
inline void cmsg_pet_jinjie::clear_item_id() {
  set_changed();
  item_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_pet_jinjie::item_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_jinjie.item_id)
  return item_id_;
}
inline void cmsg_pet_jinjie::set_item_id(::google::protobuf::int32 value) {
  set_changed();
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_pet_jinjie.item_id)
}

// int32 index = 4;
inline void cmsg_pet_jinjie::clear_index() {
  set_changed();
  index_ = 0;
}
inline ::google::protobuf::int32 cmsg_pet_jinjie::index() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_jinjie.index)
  return index_;
}
inline void cmsg_pet_jinjie::set_index(::google::protobuf::int32 value) {
  set_changed();
  
  index_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_pet_jinjie.index)
}

// -------------------------------------------------------------------

// cmsg_pet_star

// .protocol.game.msg_common comm = 1;
inline bool cmsg_pet_star::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_pet_star::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_pet_star::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_pet_star::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_star.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_pet_star::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_pet_star.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_pet_star::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_pet_star.comm)
  return comm_;
}
inline void cmsg_pet_star::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_pet_star.comm)
}

// uint64 guid = 2;
inline void cmsg_pet_star::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 cmsg_pet_star::guid() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_star.guid)
  return guid_;
}
inline void cmsg_pet_star::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_pet_star.guid)
}

// -------------------------------------------------------------------

// cmsg_pet_duihuan

// .protocol.game.msg_common comm = 1;
inline bool cmsg_pet_duihuan::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_pet_duihuan::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_pet_duihuan::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_pet_duihuan::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_duihuan.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_pet_duihuan::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_pet_duihuan.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_pet_duihuan::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_pet_duihuan.comm)
  return comm_;
}
inline void cmsg_pet_duihuan::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_pet_duihuan.comm)
}

// int32 item_id = 2;
inline void cmsg_pet_duihuan::clear_item_id() {
  set_changed();
  item_id_ = 0;
}
inline ::google::protobuf::int32 cmsg_pet_duihuan::item_id() const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_duihuan.item_id)
  return item_id_;
}
inline void cmsg_pet_duihuan::set_item_id(::google::protobuf::int32 value) {
  set_changed();
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_pet_duihuan.item_id)
}

// -------------------------------------------------------------------

// smsg_pet_duihuan

// .dhc.pet_t pet = 1;
inline bool smsg_pet_duihuan::has_pet() const {
  return this != internal_default_instance() && pet_ != NULL;
}
inline const ::dhc::pet_t& smsg_pet_duihuan::_internal_pet() const {
  return *pet_;
}
inline const ::dhc::pet_t& smsg_pet_duihuan::pet() const {
  const ::dhc::pet_t* p = pet_;
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pet_duihuan.pet)
  return p != NULL ? *p : *reinterpret_cast<const ::dhc::pet_t*>(
      &::dhc::_pet_t_default_instance_);
}
inline ::dhc::pet_t* smsg_pet_duihuan::release_pet() {
  // @@protoc_insertion_point(field_release:protocol.game.smsg_pet_duihuan.pet)
  
  ::dhc::pet_t* temp = pet_;
  pet_ = NULL;
  return temp;
}
inline ::dhc::pet_t* smsg_pet_duihuan::mutable_pet() {
  
  if (pet_ == NULL) {
    auto* p = CreateMaybeMessage<::dhc::pet_t>(GetArenaNoVirtual());
    pet_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_pet_duihuan.pet)
  return pet_;
}
inline void smsg_pet_duihuan::set_allocated_pet(::dhc::pet_t* pet) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pet_);
  }
  if (pet) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pet = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pet, submessage_arena);
    }
    
  } else {
    
  }
  pet_ = pet;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.smsg_pet_duihuan.pet)
}

// -------------------------------------------------------------------

// cmsg_pet_init

// .protocol.game.msg_common comm = 1;
inline bool cmsg_pet_init::has_comm() const {
  return this != internal_default_instance() && comm_ != NULL;
}
inline void cmsg_pet_init::clear_comm() {
  if (GetArenaNoVirtual() == NULL && comm_ != NULL) {
    delete comm_;
  }
  comm_ = NULL;
}
inline const ::protocol::game::msg_common& cmsg_pet_init::_internal_comm() const {
  return *comm_;
}
inline const ::protocol::game::msg_common& cmsg_pet_init::comm() const {
  const ::protocol::game::msg_common* p = comm_;
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_init.comm)
  return p != NULL ? *p : *reinterpret_cast<const ::protocol::game::msg_common*>(
      &::protocol::game::_msg_common_default_instance_);
}
inline ::protocol::game::msg_common* cmsg_pet_init::release_comm() {
  // @@protoc_insertion_point(field_release:protocol.game.cmsg_pet_init.comm)
  
  ::protocol::game::msg_common* temp = comm_;
  comm_ = NULL;
  return temp;
}
inline ::protocol::game::msg_common* cmsg_pet_init::mutable_comm() {
  
  if (comm_ == NULL) {
    auto* p = CreateMaybeMessage<::protocol::game::msg_common>(GetArenaNoVirtual());
    comm_ = p;
  }
  // @@protoc_insertion_point(field_mutable:protocol.game.cmsg_pet_init.comm)
  return comm_;
}
inline void cmsg_pet_init::set_allocated_comm(::protocol::game::msg_common* comm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete comm_;
  }
  if (comm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      comm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, comm, submessage_arena);
    }
    
  } else {
    
  }
  comm_ = comm;
  // @@protoc_insertion_point(field_set_allocated:protocol.game.cmsg_pet_init.comm)
}

// repeated uint64 guid = 2;
inline int cmsg_pet_init::guid_size() const {
  return guid_.size();
}
inline void cmsg_pet_init::clear_guid() {
  set_changed();
  guid_.Clear();
}
inline ::google::protobuf::uint64 cmsg_pet_init::guid(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.cmsg_pet_init.guid)
  return guid_.Get(index);
}
inline void cmsg_pet_init::set_guid(int index, ::google::protobuf::uint64 value) {
  set_changed();
  guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.cmsg_pet_init.guid)
}
inline void cmsg_pet_init::add_guid(::google::protobuf::uint64 value) {
  set_changed();
  guid_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.cmsg_pet_init.guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
cmsg_pet_init::guid() const {
  // @@protoc_insertion_point(field_list:protocol.game.cmsg_pet_init.guid)
  return guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
cmsg_pet_init::mutable_guid() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.cmsg_pet_init.guid)
  return &guid_;
}

// -------------------------------------------------------------------

// smsg_pet_init

// repeated int32 types = 1;
inline int smsg_pet_init::types_size() const {
  return types_.size();
}
inline void smsg_pet_init::clear_types() {
  set_changed();
  types_.Clear();
}
inline ::google::protobuf::int32 smsg_pet_init::types(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pet_init.types)
  return types_.Get(index);
}
inline void smsg_pet_init::set_types(int index, ::google::protobuf::int32 value) {
  set_changed();
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pet_init.types)
}
inline void smsg_pet_init::add_types(::google::protobuf::int32 value) {
  set_changed();
  types_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pet_init.types)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pet_init::types() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pet_init.types)
  return types_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pet_init::mutable_types() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pet_init.types)
  return &types_;
}

// repeated int32 value1s = 2;
inline int smsg_pet_init::value1s_size() const {
  return value1s_.size();
}
inline void smsg_pet_init::clear_value1s() {
  set_changed();
  value1s_.Clear();
}
inline ::google::protobuf::int32 smsg_pet_init::value1s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pet_init.value1s)
  return value1s_.Get(index);
}
inline void smsg_pet_init::set_value1s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value1s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pet_init.value1s)
}
inline void smsg_pet_init::add_value1s(::google::protobuf::int32 value) {
  set_changed();
  value1s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pet_init.value1s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pet_init::value1s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pet_init.value1s)
  return value1s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pet_init::mutable_value1s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pet_init.value1s)
  return &value1s_;
}

// repeated int32 value2s = 3;
inline int smsg_pet_init::value2s_size() const {
  return value2s_.size();
}
inline void smsg_pet_init::clear_value2s() {
  set_changed();
  value2s_.Clear();
}
inline ::google::protobuf::int32 smsg_pet_init::value2s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pet_init.value2s)
  return value2s_.Get(index);
}
inline void smsg_pet_init::set_value2s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value2s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pet_init.value2s)
}
inline void smsg_pet_init::add_value2s(::google::protobuf::int32 value) {
  set_changed();
  value2s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pet_init.value2s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pet_init::value2s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pet_init.value2s)
  return value2s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pet_init::mutable_value2s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pet_init.value2s)
  return &value2s_;
}

// repeated int32 value3s = 4;
inline int smsg_pet_init::value3s_size() const {
  return value3s_.size();
}
inline void smsg_pet_init::clear_value3s() {
  set_changed();
  value3s_.Clear();
}
inline ::google::protobuf::int32 smsg_pet_init::value3s(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pet_init.value3s)
  return value3s_.Get(index);
}
inline void smsg_pet_init::set_value3s(int index, ::google::protobuf::int32 value) {
  set_changed();
  value3s_.Set(index, value);
  // @@protoc_insertion_point(field_set:protocol.game.smsg_pet_init.value3s)
}
inline void smsg_pet_init::add_value3s(::google::protobuf::int32 value) {
  set_changed();
  value3s_.Add(value);
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pet_init.value3s)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
smsg_pet_init::value3s() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pet_init.value3s)
  return value3s_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
smsg_pet_init::mutable_value3s() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pet_init.value3s)
  return &value3s_;
}

// repeated .dhc.equip_t equips = 5;
inline int smsg_pet_init::equips_size() const {
  return equips_.size();
}
inline ::dhc::equip_t* smsg_pet_init::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_pet_init.equips)
  return equips_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >*
smsg_pet_init::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pet_init.equips)
  return &equips_;
}
inline const ::dhc::equip_t& smsg_pet_init::equips(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pet_init.equips)
  return equips_.Get(index);
}
inline ::dhc::equip_t* smsg_pet_init::add_equips() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pet_init.equips)
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::equip_t >&
smsg_pet_init::equips() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pet_init.equips)
  return equips_;
}

// repeated .dhc.treasure_t treasures = 6;
inline int smsg_pet_init::treasures_size() const {
  return treasures_.size();
}
inline ::dhc::treasure_t* smsg_pet_init::mutable_treasures(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_pet_init.treasures)
  return treasures_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >*
smsg_pet_init::mutable_treasures() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pet_init.treasures)
  return &treasures_;
}
inline const ::dhc::treasure_t& smsg_pet_init::treasures(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pet_init.treasures)
  return treasures_.Get(index);
}
inline ::dhc::treasure_t* smsg_pet_init::add_treasures() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pet_init.treasures)
  return treasures_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::treasure_t >&
smsg_pet_init::treasures() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pet_init.treasures)
  return treasures_;
}

// repeated .dhc.role_t roles = 7;
inline int smsg_pet_init::roles_size() const {
  return roles_.size();
}
inline ::dhc::role_t* smsg_pet_init::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.game.smsg_pet_init.roles)
  return roles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::dhc::role_t >*
smsg_pet_init::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:protocol.game.smsg_pet_init.roles)
  return &roles_;
}
inline const ::dhc::role_t& smsg_pet_init::roles(int index) const {
  // @@protoc_insertion_point(field_get:protocol.game.smsg_pet_init.roles)
  return roles_.Get(index);
}
inline ::dhc::role_t* smsg_pet_init::add_roles() {
  // @@protoc_insertion_point(field_add:protocol.game.smsg_pet_init.roles)
  return roles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dhc::role_t >&
smsg_pet_init::roles() const {
  // @@protoc_insertion_point(field_list:protocol.game.smsg_pet_init.roles)
  return roles_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace game
}  // namespace protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_msg_5fplayer_2eproto
