// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_self.proto

#ifndef PROTOBUF_INCLUDED_msg_5fself_2eproto
#define PROTOBUF_INCLUDED_msg_5fself_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_msg_5fself_2eproto 

namespace protobuf_msg_5fself_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_msg_5fself_2eproto
namespace protocol {
namespace self {
class self_boss_change_name;
class self_boss_change_nameDefaultTypeInternal;
extern self_boss_change_nameDefaultTypeInternal _self_boss_change_name_default_instance_;
class self_player_load;
class self_player_loadDefaultTypeInternal;
extern self_player_loadDefaultTypeInternal _self_player_load_default_instance_;
class self_player_load_libao;
class self_player_load_libaoDefaultTypeInternal;
extern self_player_load_libaoDefaultTypeInternal _self_player_load_libao_default_instance_;
class self_player_load_recharge;
class self_player_load_rechargeDefaultTypeInternal;
extern self_player_load_rechargeDefaultTypeInternal _self_player_load_recharge_default_instance_;
}  // namespace self
}  // namespace protocol
namespace google {
namespace protobuf {
template<> ::protocol::self::self_boss_change_name* Arena::CreateMaybeMessage<::protocol::self::self_boss_change_name>(Arena*);
template<> ::protocol::self::self_player_load* Arena::CreateMaybeMessage<::protocol::self::self_player_load>(Arena*);
template<> ::protocol::self::self_player_load_libao* Arena::CreateMaybeMessage<::protocol::self::self_player_load_libao>(Arena*);
template<> ::protocol::self::self_player_load_recharge* Arena::CreateMaybeMessage<::protocol::self::self_player_load_recharge>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace protocol {
namespace self {

// ===================================================================

class self_player_load : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.self.self_player_load) */ {
 public:
  self_player_load();
  virtual ~self_player_load();

  self_player_load(const self_player_load& from);

  inline self_player_load& operator=(const self_player_load& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  self_player_load(self_player_load&& from) noexcept
    : self_player_load() {
    *this = ::std::move(from);
  }

  inline self_player_load& operator=(self_player_load&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const self_player_load& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const self_player_load* internal_default_instance() {
    return reinterpret_cast<const self_player_load*>(
               &_self_player_load_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(self_player_load* other);
  friend void swap(self_player_load& a, self_player_load& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline self_player_load* New() const final {
    return CreateMaybeMessage<self_player_load>(NULL);
  }

  self_player_load* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<self_player_load>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const self_player_load& from);
  void MergeFrom(const self_player_load& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(self_player_load* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.self.self_player_load)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fself_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class self_player_load_recharge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.self.self_player_load_recharge) */ {
 public:
  self_player_load_recharge();
  virtual ~self_player_load_recharge();

  self_player_load_recharge(const self_player_load_recharge& from);

  inline self_player_load_recharge& operator=(const self_player_load_recharge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  self_player_load_recharge(self_player_load_recharge&& from) noexcept
    : self_player_load_recharge() {
    *this = ::std::move(from);
  }

  inline self_player_load_recharge& operator=(self_player_load_recharge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const self_player_load_recharge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const self_player_load_recharge* internal_default_instance() {
    return reinterpret_cast<const self_player_load_recharge*>(
               &_self_player_load_recharge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(self_player_load_recharge* other);
  friend void swap(self_player_load_recharge& a, self_player_load_recharge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline self_player_load_recharge* New() const final {
    return CreateMaybeMessage<self_player_load_recharge>(NULL);
  }

  self_player_load_recharge* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<self_player_load_recharge>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const self_player_load_recharge& from);
  void MergeFrom(const self_player_load_recharge& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(self_player_load_recharge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string order = 3;
  void clear_order();
  static const int kOrderFieldNumber = 3;
  const ::std::string& order() const;
  void set_order(const ::std::string& value);
  #if LANG_CXX11
  void set_order(::std::string&& value);
  #endif
  void set_order(const char* value);
  void set_order(const char* value, size_t size);
  ::std::string* mutable_order();
  ::std::string* release_order();
  void set_allocated_order(::std::string* order);

  // uint64 player_guid = 1;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 1;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // int32 pid = 2;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  ::google::protobuf::int32 pid() const;
  void set_pid(::google::protobuf::int32 value);

  // int32 count = 4;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // int32 huodong_id = 5;
  void clear_huodong_id();
  static const int kHuodongIdFieldNumber = 5;
  ::google::protobuf::int32 huodong_id() const;
  void set_huodong_id(::google::protobuf::int32 value);

  // int32 entry_id = 6;
  void clear_entry_id();
  static const int kEntryIdFieldNumber = 6;
  ::google::protobuf::int32 entry_id() const;
  void set_entry_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protocol.self.self_player_load_recharge)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr order_;
  ::google::protobuf::uint64 player_guid_;
  ::google::protobuf::int32 pid_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 huodong_id_;
  ::google::protobuf::int32 entry_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fself_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class self_player_load_libao : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.self.self_player_load_libao) */ {
 public:
  self_player_load_libao();
  virtual ~self_player_load_libao();

  self_player_load_libao(const self_player_load_libao& from);

  inline self_player_load_libao& operator=(const self_player_load_libao& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  self_player_load_libao(self_player_load_libao&& from) noexcept
    : self_player_load_libao() {
    *this = ::std::move(from);
  }

  inline self_player_load_libao& operator=(self_player_load_libao&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const self_player_load_libao& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const self_player_load_libao* internal_default_instance() {
    return reinterpret_cast<const self_player_load_libao*>(
               &_self_player_load_libao_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(self_player_load_libao* other);
  friend void swap(self_player_load_libao& a, self_player_load_libao& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline self_player_load_libao* New() const final {
    return CreateMaybeMessage<self_player_load_libao>(NULL);
  }

  self_player_load_libao* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<self_player_load_libao>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const self_player_load_libao& from);
  void MergeFrom(const self_player_load_libao& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(self_player_load_libao* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // uint64 player_guid = 1;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 1;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.self.self_player_load_libao)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::uint64 player_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fself_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class self_boss_change_name : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.self.self_boss_change_name) */ {
 public:
  self_boss_change_name();
  virtual ~self_boss_change_name();

  self_boss_change_name(const self_boss_change_name& from);

  inline self_boss_change_name& operator=(const self_boss_change_name& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  self_boss_change_name(self_boss_change_name&& from) noexcept
    : self_boss_change_name() {
    *this = ::std::move(from);
  }

  inline self_boss_change_name& operator=(self_boss_change_name&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const self_boss_change_name& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const self_boss_change_name* internal_default_instance() {
    return reinterpret_cast<const self_boss_change_name*>(
               &_self_boss_change_name_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(self_boss_change_name* other);
  friend void swap(self_boss_change_name& a, self_boss_change_name& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline self_boss_change_name* New() const final {
    return CreateMaybeMessage<self_boss_change_name>(NULL);
  }

  self_boss_change_name* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<self_boss_change_name>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const self_boss_change_name& from);
  void MergeFrom(const self_boss_change_name& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(self_boss_change_name* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string player_name = 2;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // uint64 player_guid = 1;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 1;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.self.self_boss_change_name)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::uint64 player_guid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_5fself_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// self_player_load

// bytes data = 1;
inline void self_player_load::clear_data() {
  set_changed();
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& self_player_load::data() const {
  // @@protoc_insertion_point(field_get:protocol.self.self_player_load.data)
  return data_.GetNoArena();
}
inline void self_player_load::set_data(const ::std::string& value) {
  set_changed();
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.self.self_player_load.data)
}
#if LANG_CXX11
inline void self_player_load::set_data(::std::string&& value) {
  set_changed();
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.self.self_player_load.data)
}
#endif
inline void self_player_load::set_data(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.self.self_player_load.data)
}
inline void self_player_load::set_data(const void* value, size_t size) {
  set_changed();
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.self.self_player_load.data)
}
inline ::std::string* self_player_load::mutable_data() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.self.self_player_load.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* self_player_load::release_data() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.self.self_player_load.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void self_player_load::set_allocated_data(::std::string* data) {
  set_changed();
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:protocol.self.self_player_load.data)
}

// int32 id = 2;
inline void self_player_load::clear_id() {
  set_changed();
  id_ = 0;
}
inline ::google::protobuf::int32 self_player_load::id() const {
  // @@protoc_insertion_point(field_get:protocol.self.self_player_load.id)
  return id_;
}
inline void self_player_load::set_id(::google::protobuf::int32 value) {
  set_changed();
  
  id_ = value;
  // @@protoc_insertion_point(field_set:protocol.self.self_player_load.id)
}

// string name = 3;
inline void self_player_load::clear_name() {
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& self_player_load::name() const {
  // @@protoc_insertion_point(field_get:protocol.self.self_player_load.name)
  return name_.GetNoArena();
}
inline void self_player_load::set_name(const ::std::string& value) {
  set_changed();
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.self.self_player_load.name)
}
#if LANG_CXX11
inline void self_player_load::set_name(::std::string&& value) {
  set_changed();
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.self.self_player_load.name)
}
#endif
inline void self_player_load::set_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.self.self_player_load.name)
}
inline void self_player_load::set_name(const char* value, size_t size) {
  set_changed();
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.self.self_player_load.name)
}
inline ::std::string* self_player_load::mutable_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.self.self_player_load.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* self_player_load::release_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.self.self_player_load.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void self_player_load::set_allocated_name(::std::string* name) {
  set_changed();
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protocol.self.self_player_load.name)
}

// -------------------------------------------------------------------

// self_player_load_recharge

// uint64 player_guid = 1;
inline void self_player_load_recharge::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 self_player_load_recharge::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.self.self_player_load_recharge.player_guid)
  return player_guid_;
}
inline void self_player_load_recharge::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.self.self_player_load_recharge.player_guid)
}

// int32 pid = 2;
inline void self_player_load_recharge::clear_pid() {
  set_changed();
  pid_ = 0;
}
inline ::google::protobuf::int32 self_player_load_recharge::pid() const {
  // @@protoc_insertion_point(field_get:protocol.self.self_player_load_recharge.pid)
  return pid_;
}
inline void self_player_load_recharge::set_pid(::google::protobuf::int32 value) {
  set_changed();
  
  pid_ = value;
  // @@protoc_insertion_point(field_set:protocol.self.self_player_load_recharge.pid)
}

// string order = 3;
inline void self_player_load_recharge::clear_order() {
  set_changed();
  order_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& self_player_load_recharge::order() const {
  // @@protoc_insertion_point(field_get:protocol.self.self_player_load_recharge.order)
  return order_.GetNoArena();
}
inline void self_player_load_recharge::set_order(const ::std::string& value) {
  set_changed();
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.self.self_player_load_recharge.order)
}
#if LANG_CXX11
inline void self_player_load_recharge::set_order(::std::string&& value) {
  set_changed();
  
  order_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.self.self_player_load_recharge.order)
}
#endif
inline void self_player_load_recharge::set_order(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.self.self_player_load_recharge.order)
}
inline void self_player_load_recharge::set_order(const char* value, size_t size) {
  set_changed();
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.self.self_player_load_recharge.order)
}
inline ::std::string* self_player_load_recharge::mutable_order() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.self.self_player_load_recharge.order)
  return order_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* self_player_load_recharge::release_order() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.self.self_player_load_recharge.order)
  
  return order_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void self_player_load_recharge::set_allocated_order(::std::string* order) {
  set_changed();
  if (order != NULL) {
    
  } else {
    
  }
  order_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order);
  // @@protoc_insertion_point(field_set_allocated:protocol.self.self_player_load_recharge.order)
}

// int32 count = 4;
inline void self_player_load_recharge::clear_count() {
  set_changed();
  count_ = 0;
}
inline ::google::protobuf::int32 self_player_load_recharge::count() const {
  // @@protoc_insertion_point(field_get:protocol.self.self_player_load_recharge.count)
  return count_;
}
inline void self_player_load_recharge::set_count(::google::protobuf::int32 value) {
  set_changed();
  
  count_ = value;
  // @@protoc_insertion_point(field_set:protocol.self.self_player_load_recharge.count)
}

// int32 huodong_id = 5;
inline void self_player_load_recharge::clear_huodong_id() {
  set_changed();
  huodong_id_ = 0;
}
inline ::google::protobuf::int32 self_player_load_recharge::huodong_id() const {
  // @@protoc_insertion_point(field_get:protocol.self.self_player_load_recharge.huodong_id)
  return huodong_id_;
}
inline void self_player_load_recharge::set_huodong_id(::google::protobuf::int32 value) {
  set_changed();
  
  huodong_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.self.self_player_load_recharge.huodong_id)
}

// int32 entry_id = 6;
inline void self_player_load_recharge::clear_entry_id() {
  set_changed();
  entry_id_ = 0;
}
inline ::google::protobuf::int32 self_player_load_recharge::entry_id() const {
  // @@protoc_insertion_point(field_get:protocol.self.self_player_load_recharge.entry_id)
  return entry_id_;
}
inline void self_player_load_recharge::set_entry_id(::google::protobuf::int32 value) {
  set_changed();
  
  entry_id_ = value;
  // @@protoc_insertion_point(field_set:protocol.self.self_player_load_recharge.entry_id)
}

// -------------------------------------------------------------------

// self_player_load_libao

// uint64 player_guid = 1;
inline void self_player_load_libao::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 self_player_load_libao::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.self.self_player_load_libao.player_guid)
  return player_guid_;
}
inline void self_player_load_libao::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.self.self_player_load_libao.player_guid)
}

// string code = 2;
inline void self_player_load_libao::clear_code() {
  set_changed();
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& self_player_load_libao::code() const {
  // @@protoc_insertion_point(field_get:protocol.self.self_player_load_libao.code)
  return code_.GetNoArena();
}
inline void self_player_load_libao::set_code(const ::std::string& value) {
  set_changed();
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.self.self_player_load_libao.code)
}
#if LANG_CXX11
inline void self_player_load_libao::set_code(::std::string&& value) {
  set_changed();
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.self.self_player_load_libao.code)
}
#endif
inline void self_player_load_libao::set_code(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.self.self_player_load_libao.code)
}
inline void self_player_load_libao::set_code(const char* value, size_t size) {
  set_changed();
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.self.self_player_load_libao.code)
}
inline ::std::string* self_player_load_libao::mutable_code() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.self.self_player_load_libao.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* self_player_load_libao::release_code() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.self.self_player_load_libao.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void self_player_load_libao::set_allocated_code(::std::string* code) {
  set_changed();
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:protocol.self.self_player_load_libao.code)
}

// -------------------------------------------------------------------

// self_boss_change_name

// uint64 player_guid = 1;
inline void self_boss_change_name::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 self_boss_change_name::player_guid() const {
  // @@protoc_insertion_point(field_get:protocol.self.self_boss_change_name.player_guid)
  return player_guid_;
}
inline void self_boss_change_name::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.self.self_boss_change_name.player_guid)
}

// string player_name = 2;
inline void self_boss_change_name::clear_player_name() {
  set_changed();
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& self_boss_change_name::player_name() const {
  // @@protoc_insertion_point(field_get:protocol.self.self_boss_change_name.player_name)
  return player_name_.GetNoArena();
}
inline void self_boss_change_name::set_player_name(const ::std::string& value) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.self.self_boss_change_name.player_name)
}
#if LANG_CXX11
inline void self_boss_change_name::set_player_name(::std::string&& value) {
  set_changed();
  
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.self.self_boss_change_name.player_name)
}
#endif
inline void self_boss_change_name::set_player_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.self.self_boss_change_name.player_name)
}
inline void self_boss_change_name::set_player_name(const char* value, size_t size) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.self.self_boss_change_name.player_name)
}
inline ::std::string* self_boss_change_name::mutable_player_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:protocol.self.self_boss_change_name.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* self_boss_change_name::release_player_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:protocol.self.self_boss_change_name.player_name)
  
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void self_boss_change_name::set_allocated_player_name(::std::string* player_name) {
  set_changed();
  if (player_name != NULL) {
    
  } else {
    
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:protocol.self.self_boss_change_name.player_name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace self
}  // namespace protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_msg_5fself_2eproto
