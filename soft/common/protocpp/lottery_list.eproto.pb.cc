// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lottery_list.eproto

#include "lottery_list.eproto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace dhc {
class pvp_list_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pvp_list_t>
      _instance;
} _pvp_list_t_default_instance_;
}  // namespace dhc
namespace protobuf_lottery_5flist_2eeproto {
static void InitDefaultspvp_list_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dhc::_pvp_list_t_default_instance_;
    new (ptr) ::dhc::pvp_list_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dhc::pvp_list_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_pvp_list_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspvp_list_t}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_pvp_list_t.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, player_guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, player_targets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, player_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, player_templates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, player_servers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, player_bfs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, player_pvps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, player_wins_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, player_vips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, player_achieves_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, player_guanghuans_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, player_dress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, player_chenghaos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, player_nalflags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, refresh_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::pvp_list_t, sync_flag_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dhc::pvp_list_t)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dhc::_pvp_list_t_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "lottery_list.eproto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023lottery_list.eproto\022\003dhc\"\211\003\n\npvp_list_"
      "t\022\014\n\004guid\030\001 \001(\004\022\024\n\014player_guids\030\002 \003(\004\022\026\n"
      "\016player_targets\030\003 \003(\004\022\024\n\014player_names\030\004 "
      "\003(\t\022\030\n\020player_templates\030\005 \003(\005\022\026\n\016player_"
      "servers\030\006 \003(\005\022\022\n\nplayer_bfs\030\007 \003(\005\022\023\n\013pla"
      "yer_pvps\030\010 \003(\005\022\023\n\013player_wins\030\t \003(\005\022\023\n\013p"
      "layer_vips\030\n \003(\005\022\027\n\017player_achieves\030\013 \003("
      "\005\022\031\n\021player_guanghuans\030\014 \003(\005\022\024\n\014player_d"
      "ress\030\r \003(\005\022\030\n\020player_chenghaos\030\016 \003(\005\022\027\n\017"
      "player_nalflags\030\017 \003(\005\022\024\n\014refresh_time\030\020 "
      "\001(\004\022\021\n\tsync_flag\030\021 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 430);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "lottery_list.eproto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_lottery_5flist_2eeproto
namespace dhc {

// ===================================================================

void pvp_list_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pvp_list_t::kGuidFieldNumber;
const int pvp_list_t::kPlayerGuidsFieldNumber;
const int pvp_list_t::kPlayerTargetsFieldNumber;
const int pvp_list_t::kPlayerNamesFieldNumber;
const int pvp_list_t::kPlayerTemplatesFieldNumber;
const int pvp_list_t::kPlayerServersFieldNumber;
const int pvp_list_t::kPlayerBfsFieldNumber;
const int pvp_list_t::kPlayerPvpsFieldNumber;
const int pvp_list_t::kPlayerWinsFieldNumber;
const int pvp_list_t::kPlayerVipsFieldNumber;
const int pvp_list_t::kPlayerAchievesFieldNumber;
const int pvp_list_t::kPlayerGuanghuansFieldNumber;
const int pvp_list_t::kPlayerDressFieldNumber;
const int pvp_list_t::kPlayerChenghaosFieldNumber;
const int pvp_list_t::kPlayerNalflagsFieldNumber;
const int pvp_list_t::kRefreshTimeFieldNumber;
const int pvp_list_t::kSyncFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pvp_list_t::pvp_list_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_lottery_5flist_2eeproto::scc_info_pvp_list_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dhc.pvp_list_t)
}
pvp_list_t::pvp_list_t(const pvp_list_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_guids_(from.player_guids_),
      player_targets_(from.player_targets_),
      player_names_(from.player_names_),
      player_templates_(from.player_templates_),
      player_servers_(from.player_servers_),
      player_bfs_(from.player_bfs_),
      player_pvps_(from.player_pvps_),
      player_wins_(from.player_wins_),
      player_vips_(from.player_vips_),
      player_achieves_(from.player_achieves_),
      player_guanghuans_(from.player_guanghuans_),
      player_dress_(from.player_dress_),
      player_chenghaos_(from.player_chenghaos_),
      player_nalflags_(from.player_nalflags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sync_flag_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(sync_flag_));
  // @@protoc_insertion_point(copy_constructor:dhc.pvp_list_t)
}

void pvp_list_t::SharedCtor() {
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sync_flag_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(sync_flag_));
}

pvp_list_t::~pvp_list_t() {
  // @@protoc_insertion_point(destructor:dhc.pvp_list_t)
  SharedDtor();
}

void pvp_list_t::SharedDtor() {
}

void pvp_list_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* pvp_list_t::descriptor() {
  ::protobuf_lottery_5flist_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lottery_5flist_2eeproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pvp_list_t& pvp_list_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_lottery_5flist_2eeproto::scc_info_pvp_list_t.base);
  return *internal_default_instance();
}


void pvp_list_t::Clear() {
// @@protoc_insertion_point(message_clear_start:dhc.pvp_list_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  player_guids_.Clear();
  set_changed();
  player_targets_.Clear();
  set_changed();
  player_names_.Clear();
  set_changed();
  player_templates_.Clear();
  set_changed();
  player_servers_.Clear();
  set_changed();
  player_bfs_.Clear();
  set_changed();
  player_pvps_.Clear();
  set_changed();
  player_wins_.Clear();
  set_changed();
  player_vips_.Clear();
  set_changed();
  player_achieves_.Clear();
  set_changed();
  player_guanghuans_.Clear();
  set_changed();
  player_dress_.Clear();
  set_changed();
  player_chenghaos_.Clear();
  set_changed();
  player_nalflags_.Clear();
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sync_flag_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(sync_flag_));
  _internal_metadata_.Clear();
}

bool pvp_list_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dhc.pvp_list_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 player_guids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_player_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_player_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 player_targets = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_player_targets())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_player_targets())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string player_names = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_player_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->player_names(this->player_names_size() - 1).data(),
            static_cast<int>(this->player_names(this->player_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dhc.pvp_list_t.player_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_templates = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_templates())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_player_templates())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_servers = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_servers())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_player_servers())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_bfs = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_bfs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 58u, input, this->mutable_player_bfs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_pvps = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_pvps())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_player_pvps())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_wins = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_wins())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_player_wins())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_vips = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_vips())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 82u, input, this->mutable_player_vips())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_achieves = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_achieves())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 90u, input, this->mutable_player_achieves())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_guanghuans = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_guanghuans())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 98u, input, this->mutable_player_guanghuans())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_dress = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_dress())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 106u, input, this->mutable_player_dress())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_chenghaos = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_chenghaos())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 114u, input, this->mutable_player_chenghaos())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_nalflags = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_nalflags())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 122u, input, this->mutable_player_nalflags())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 refresh_time = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &refresh_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sync_flag = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sync_flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dhc.pvp_list_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dhc.pvp_list_t)
  return false;
#undef DO_
}

void pvp_list_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dhc.pvp_list_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // repeated uint64 player_guids = 2;
  if (this->player_guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_guids_cached_byte_size_));
  }
  for (int i = 0, n = this->player_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->player_guids(i), output);
  }

  // repeated uint64 player_targets = 3;
  if (this->player_targets_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_targets_cached_byte_size_));
  }
  for (int i = 0, n = this->player_targets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->player_targets(i), output);
  }

  // repeated string player_names = 4;
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_names(i).data(), static_cast<int>(this->player_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.pvp_list_t.player_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->player_names(i), output);
  }

  // repeated int32 player_templates = 5;
  if (this->player_templates_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_templates_cached_byte_size_));
  }
  for (int i = 0, n = this->player_templates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_templates(i), output);
  }

  // repeated int32 player_servers = 6;
  if (this->player_servers_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_servers_cached_byte_size_));
  }
  for (int i = 0, n = this->player_servers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_servers(i), output);
  }

  // repeated int32 player_bfs = 7;
  if (this->player_bfs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_bfs_cached_byte_size_));
  }
  for (int i = 0, n = this->player_bfs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_bfs(i), output);
  }

  // repeated int32 player_pvps = 8;
  if (this->player_pvps_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_pvps_cached_byte_size_));
  }
  for (int i = 0, n = this->player_pvps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_pvps(i), output);
  }

  // repeated int32 player_wins = 9;
  if (this->player_wins_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_wins_cached_byte_size_));
  }
  for (int i = 0, n = this->player_wins_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_wins(i), output);
  }

  // repeated int32 player_vips = 10;
  if (this->player_vips_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_vips_cached_byte_size_));
  }
  for (int i = 0, n = this->player_vips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_vips(i), output);
  }

  // repeated int32 player_achieves = 11;
  if (this->player_achieves_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_achieves_cached_byte_size_));
  }
  for (int i = 0, n = this->player_achieves_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_achieves(i), output);
  }

  // repeated int32 player_guanghuans = 12;
  if (this->player_guanghuans_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_guanghuans_cached_byte_size_));
  }
  for (int i = 0, n = this->player_guanghuans_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_guanghuans(i), output);
  }

  // repeated int32 player_dress = 13;
  if (this->player_dress_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_dress_cached_byte_size_));
  }
  for (int i = 0, n = this->player_dress_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_dress(i), output);
  }

  // repeated int32 player_chenghaos = 14;
  if (this->player_chenghaos_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_chenghaos_cached_byte_size_));
  }
  for (int i = 0, n = this->player_chenghaos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_chenghaos(i), output);
  }

  // repeated int32 player_nalflags = 15;
  if (this->player_nalflags_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_nalflags_cached_byte_size_));
  }
  for (int i = 0, n = this->player_nalflags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_nalflags(i), output);
  }

  // uint64 refresh_time = 16;
  if (this->refresh_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->refresh_time(), output);
  }

  // int32 sync_flag = 17;
  if (this->sync_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->sync_flag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dhc.pvp_list_t)
}

::google::protobuf::uint8* pvp_list_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dhc.pvp_list_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // repeated uint64 player_guids = 2;
  if (this->player_guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_guids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->player_guids_, target);
  }

  // repeated uint64 player_targets = 3;
  if (this->player_targets_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_targets_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->player_targets_, target);
  }

  // repeated string player_names = 4;
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_names(i).data(), static_cast<int>(this->player_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.pvp_list_t.player_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->player_names(i), target);
  }

  // repeated int32 player_templates = 5;
  if (this->player_templates_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_templates_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_templates_, target);
  }

  // repeated int32 player_servers = 6;
  if (this->player_servers_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_servers_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_servers_, target);
  }

  // repeated int32 player_bfs = 7;
  if (this->player_bfs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_bfs_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_bfs_, target);
  }

  // repeated int32 player_pvps = 8;
  if (this->player_pvps_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_pvps_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_pvps_, target);
  }

  // repeated int32 player_wins = 9;
  if (this->player_wins_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_wins_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_wins_, target);
  }

  // repeated int32 player_vips = 10;
  if (this->player_vips_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_vips_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_vips_, target);
  }

  // repeated int32 player_achieves = 11;
  if (this->player_achieves_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_achieves_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_achieves_, target);
  }

  // repeated int32 player_guanghuans = 12;
  if (this->player_guanghuans_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_guanghuans_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_guanghuans_, target);
  }

  // repeated int32 player_dress = 13;
  if (this->player_dress_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_dress_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_dress_, target);
  }

  // repeated int32 player_chenghaos = 14;
  if (this->player_chenghaos_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_chenghaos_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_chenghaos_, target);
  }

  // repeated int32 player_nalflags = 15;
  if (this->player_nalflags_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_nalflags_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_nalflags_, target);
  }

  // uint64 refresh_time = 16;
  if (this->refresh_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->refresh_time(), target);
  }

  // int32 sync_flag = 17;
  if (this->sync_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->sync_flag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dhc.pvp_list_t)
  return target;
}

size_t pvp_list_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dhc.pvp_list_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 player_guids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->player_guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_guids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 player_targets = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->player_targets_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_targets_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string player_names = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->player_names_size());
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->player_names(i));
  }

  // repeated int32 player_templates = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_templates_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_templates_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_servers = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_servers_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_servers_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_bfs = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_bfs_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_bfs_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_pvps = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_pvps_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_pvps_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_wins = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_wins_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_wins_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_vips = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_vips_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_vips_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_achieves = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_achieves_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_achieves_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_guanghuans = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_guanghuans_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_guanghuans_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_dress = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_dress_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_dress_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_chenghaos = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_chenghaos_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_chenghaos_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_nalflags = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_nalflags_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_nalflags_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint64 refresh_time = 16;
  if (this->refresh_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->refresh_time());
  }

  // int32 sync_flag = 17;
  if (this->sync_flag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sync_flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pvp_list_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dhc.pvp_list_t)
  GOOGLE_DCHECK_NE(&from, this);
  const pvp_list_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pvp_list_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dhc.pvp_list_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dhc.pvp_list_t)
    MergeFrom(*source);
  }
}

void pvp_list_t::MergeFrom(const pvp_list_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dhc.pvp_list_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_guids_.MergeFrom(from.player_guids_);
  player_targets_.MergeFrom(from.player_targets_);
  player_names_.MergeFrom(from.player_names_);
  player_templates_.MergeFrom(from.player_templates_);
  player_servers_.MergeFrom(from.player_servers_);
  player_bfs_.MergeFrom(from.player_bfs_);
  player_pvps_.MergeFrom(from.player_pvps_);
  player_wins_.MergeFrom(from.player_wins_);
  player_vips_.MergeFrom(from.player_vips_);
  player_achieves_.MergeFrom(from.player_achieves_);
  player_guanghuans_.MergeFrom(from.player_guanghuans_);
  player_dress_.MergeFrom(from.player_dress_);
  player_chenghaos_.MergeFrom(from.player_chenghaos_);
  player_nalflags_.MergeFrom(from.player_nalflags_);
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.refresh_time() != 0) {
    set_refresh_time(from.refresh_time());
  }
  if (from.sync_flag() != 0) {
    set_sync_flag(from.sync_flag());
  }
}

void pvp_list_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dhc.pvp_list_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pvp_list_t::CopyFrom(const pvp_list_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dhc.pvp_list_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pvp_list_t::IsInitialized() const {
  return true;
}

void pvp_list_t::Swap(pvp_list_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pvp_list_t::InternalSwap(pvp_list_t* other) {
  using std::swap;
  player_guids_.InternalSwap(&other->player_guids_);
  player_targets_.InternalSwap(&other->player_targets_);
  player_names_.InternalSwap(CastToBase(&other->player_names_));
  player_templates_.InternalSwap(&other->player_templates_);
  player_servers_.InternalSwap(&other->player_servers_);
  player_bfs_.InternalSwap(&other->player_bfs_);
  player_pvps_.InternalSwap(&other->player_pvps_);
  player_wins_.InternalSwap(&other->player_wins_);
  player_vips_.InternalSwap(&other->player_vips_);
  player_achieves_.InternalSwap(&other->player_achieves_);
  player_guanghuans_.InternalSwap(&other->player_guanghuans_);
  player_dress_.InternalSwap(&other->player_dress_);
  player_chenghaos_.InternalSwap(&other->player_chenghaos_);
  player_nalflags_.InternalSwap(&other->player_nalflags_);
  swap(guid_, other->guid_);
  swap(refresh_time_, other->refresh_time_);
  swap(sync_flag_, other->sync_flag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata pvp_list_t::GetMetadata() const {
  protobuf_lottery_5flist_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_lottery_5flist_2eeproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dhc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dhc::pvp_list_t* Arena::CreateMaybeMessage< ::dhc::pvp_list_t >(Arena* arena) {
  return Arena::CreateInternal< ::dhc::pvp_list_t >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
