// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: global.eproto

#include "global.eproto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace dhc {
class global_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<global_t>
      _instance;
} _global_t_default_instance_;
}  // namespace dhc
namespace protobuf_global_2eeproto {
static void InitDefaultsglobal_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dhc::_global_t_default_instance_;
    new (ptr) ::dhc::global_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dhc::global_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_global_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsglobal_t}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_global_t.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, huodong_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, huodong_start_times_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, huodong_end_times_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, huodong_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, pttq_vip_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, pttq_player_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, kaifu_xg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, kaifu_xg_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, zzs_rank_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, zzs_rank_jewel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, ore_rank_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, guild_refresh_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, czjh_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, guild_pvp_zhou_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, guild_pvp_suc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::global_t, guild_pvp_ranks_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dhc::global_t)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dhc::_global_t_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "global.eproto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rglobal.eproto\022\003dhc\"\227\003\n\010global_t\022\014\n\004gui"
      "d\030\001 \001(\004\022\023\n\013huodong_ids\030\002 \003(\005\022\033\n\023huodong_"
      "start_times\030\003 \003(\004\022\031\n\021huodong_end_times\030\004"
      " \003(\004\022\025\n\rhuodong_count\030\005 \001(\005\022\023\n\013pttq_vip_"
      "id\030\006 \003(\005\022\030\n\020pttq_player_name\030\007 \003(\t\022\023\n\013ka"
      "ifu_xg_id\030\010 \003(\005\022\026\n\016kaifu_xg_count\030\t \003(\005\022"
      "\026\n\016zzs_rank_names\030\n \003(\t\022\026\n\016zzs_rank_jewe"
      "l\030\013 \003(\005\022\025\n\rore_rank_time\030\022 \001(\004\022\032\n\022guild_"
      "refresh_time\030\023 \001(\004\022\022\n\nczjh_count\030\024 \001(\005\022\026"
      "\n\016guild_pvp_zhou\030\025 \001(\005\022\025\n\rguild_pvp_suc\030"
      "\026 \001(\005\022\027\n\017guild_pvp_ranks\030\027 \003(\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 438);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "global.eproto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_global_2eeproto
namespace dhc {

// ===================================================================

void global_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int global_t::kGuidFieldNumber;
const int global_t::kHuodongIdsFieldNumber;
const int global_t::kHuodongStartTimesFieldNumber;
const int global_t::kHuodongEndTimesFieldNumber;
const int global_t::kHuodongCountFieldNumber;
const int global_t::kPttqVipIdFieldNumber;
const int global_t::kPttqPlayerNameFieldNumber;
const int global_t::kKaifuXgIdFieldNumber;
const int global_t::kKaifuXgCountFieldNumber;
const int global_t::kZzsRankNamesFieldNumber;
const int global_t::kZzsRankJewelFieldNumber;
const int global_t::kOreRankTimeFieldNumber;
const int global_t::kGuildRefreshTimeFieldNumber;
const int global_t::kCzjhCountFieldNumber;
const int global_t::kGuildPvpZhouFieldNumber;
const int global_t::kGuildPvpSucFieldNumber;
const int global_t::kGuildPvpRanksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

global_t::global_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_global_2eeproto::scc_info_global_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dhc.global_t)
}
global_t::global_t(const global_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      huodong_ids_(from.huodong_ids_),
      huodong_start_times_(from.huodong_start_times_),
      huodong_end_times_(from.huodong_end_times_),
      pttq_vip_id_(from.pttq_vip_id_),
      pttq_player_name_(from.pttq_player_name_),
      kaifu_xg_id_(from.kaifu_xg_id_),
      kaifu_xg_count_(from.kaifu_xg_count_),
      zzs_rank_names_(from.zzs_rank_names_),
      zzs_rank_jewel_(from.zzs_rank_jewel_),
      guild_pvp_ranks_(from.guild_pvp_ranks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_pvp_suc_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(guild_pvp_suc_));
  // @@protoc_insertion_point(copy_constructor:dhc.global_t)
}

void global_t::SharedCtor() {
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_pvp_suc_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(guild_pvp_suc_));
}

global_t::~global_t() {
  // @@protoc_insertion_point(destructor:dhc.global_t)
  SharedDtor();
}

void global_t::SharedDtor() {
}

void global_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* global_t::descriptor() {
  ::protobuf_global_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_global_2eeproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const global_t& global_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_global_2eeproto::scc_info_global_t.base);
  return *internal_default_instance();
}


void global_t::Clear() {
// @@protoc_insertion_point(message_clear_start:dhc.global_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  huodong_ids_.Clear();
  set_changed();
  huodong_start_times_.Clear();
  set_changed();
  huodong_end_times_.Clear();
  set_changed();
  pttq_vip_id_.Clear();
  set_changed();
  pttq_player_name_.Clear();
  set_changed();
  kaifu_xg_id_.Clear();
  set_changed();
  kaifu_xg_count_.Clear();
  set_changed();
  zzs_rank_names_.Clear();
  set_changed();
  zzs_rank_jewel_.Clear();
  set_changed();
  guild_pvp_ranks_.Clear();
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_pvp_suc_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(guild_pvp_suc_));
  _internal_metadata_.Clear();
}

bool global_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dhc.global_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 huodong_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_huodong_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_huodong_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 huodong_start_times = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_huodong_start_times())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_huodong_start_times())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 huodong_end_times = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_huodong_end_times())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34u, input, this->mutable_huodong_end_times())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 huodong_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &huodong_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 pttq_vip_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pttq_vip_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_pttq_vip_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string pttq_player_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_pttq_player_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pttq_player_name(this->pttq_player_name_size() - 1).data(),
            static_cast<int>(this->pttq_player_name(this->pttq_player_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dhc.global_t.pttq_player_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 kaifu_xg_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_kaifu_xg_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_kaifu_xg_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 kaifu_xg_count = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_kaifu_xg_count())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74u, input, this->mutable_kaifu_xg_count())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string zzs_rank_names = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_zzs_rank_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zzs_rank_names(this->zzs_rank_names_size() - 1).data(),
            static_cast<int>(this->zzs_rank_names(this->zzs_rank_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dhc.global_t.zzs_rank_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 zzs_rank_jewel = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_zzs_rank_jewel())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 90u, input, this->mutable_zzs_rank_jewel())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ore_rank_time = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ore_rank_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guild_refresh_time = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guild_refresh_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 czjh_count = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &czjh_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_pvp_zhou = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_pvp_zhou_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_pvp_suc = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_pvp_suc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 guild_pvp_ranks = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_guild_pvp_ranks())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 186u, input, this->mutable_guild_pvp_ranks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dhc.global_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dhc.global_t)
  return false;
#undef DO_
}

void global_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dhc.global_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // repeated int32 huodong_ids = 2;
  if (this->huodong_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _huodong_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->huodong_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->huodong_ids(i), output);
  }

  // repeated uint64 huodong_start_times = 3;
  if (this->huodong_start_times_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _huodong_start_times_cached_byte_size_));
  }
  for (int i = 0, n = this->huodong_start_times_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->huodong_start_times(i), output);
  }

  // repeated uint64 huodong_end_times = 4;
  if (this->huodong_end_times_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _huodong_end_times_cached_byte_size_));
  }
  for (int i = 0, n = this->huodong_end_times_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->huodong_end_times(i), output);
  }

  // int32 huodong_count = 5;
  if (this->huodong_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->huodong_count(), output);
  }

  // repeated int32 pttq_vip_id = 6;
  if (this->pttq_vip_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _pttq_vip_id_cached_byte_size_));
  }
  for (int i = 0, n = this->pttq_vip_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->pttq_vip_id(i), output);
  }

  // repeated string pttq_player_name = 7;
  for (int i = 0, n = this->pttq_player_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pttq_player_name(i).data(), static_cast<int>(this->pttq_player_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.global_t.pttq_player_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->pttq_player_name(i), output);
  }

  // repeated int32 kaifu_xg_id = 8;
  if (this->kaifu_xg_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _kaifu_xg_id_cached_byte_size_));
  }
  for (int i = 0, n = this->kaifu_xg_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->kaifu_xg_id(i), output);
  }

  // repeated int32 kaifu_xg_count = 9;
  if (this->kaifu_xg_count_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _kaifu_xg_count_cached_byte_size_));
  }
  for (int i = 0, n = this->kaifu_xg_count_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->kaifu_xg_count(i), output);
  }

  // repeated string zzs_rank_names = 10;
  for (int i = 0, n = this->zzs_rank_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zzs_rank_names(i).data(), static_cast<int>(this->zzs_rank_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.global_t.zzs_rank_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->zzs_rank_names(i), output);
  }

  // repeated int32 zzs_rank_jewel = 11;
  if (this->zzs_rank_jewel_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _zzs_rank_jewel_cached_byte_size_));
  }
  for (int i = 0, n = this->zzs_rank_jewel_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->zzs_rank_jewel(i), output);
  }

  // uint64 ore_rank_time = 18;
  if (this->ore_rank_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(18, this->ore_rank_time(), output);
  }

  // uint64 guild_refresh_time = 19;
  if (this->guild_refresh_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(19, this->guild_refresh_time(), output);
  }

  // int32 czjh_count = 20;
  if (this->czjh_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->czjh_count(), output);
  }

  // int32 guild_pvp_zhou = 21;
  if (this->guild_pvp_zhou() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->guild_pvp_zhou(), output);
  }

  // int32 guild_pvp_suc = 22;
  if (this->guild_pvp_suc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->guild_pvp_suc(), output);
  }

  // repeated uint64 guild_pvp_ranks = 23;
  if (this->guild_pvp_ranks_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(23, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _guild_pvp_ranks_cached_byte_size_));
  }
  for (int i = 0, n = this->guild_pvp_ranks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->guild_pvp_ranks(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dhc.global_t)
}

::google::protobuf::uint8* global_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dhc.global_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // repeated int32 huodong_ids = 2;
  if (this->huodong_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _huodong_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->huodong_ids_, target);
  }

  // repeated uint64 huodong_start_times = 3;
  if (this->huodong_start_times_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _huodong_start_times_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->huodong_start_times_, target);
  }

  // repeated uint64 huodong_end_times = 4;
  if (this->huodong_end_times_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _huodong_end_times_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->huodong_end_times_, target);
  }

  // int32 huodong_count = 5;
  if (this->huodong_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->huodong_count(), target);
  }

  // repeated int32 pttq_vip_id = 6;
  if (this->pttq_vip_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _pttq_vip_id_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->pttq_vip_id_, target);
  }

  // repeated string pttq_player_name = 7;
  for (int i = 0, n = this->pttq_player_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pttq_player_name(i).data(), static_cast<int>(this->pttq_player_name(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.global_t.pttq_player_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->pttq_player_name(i), target);
  }

  // repeated int32 kaifu_xg_id = 8;
  if (this->kaifu_xg_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _kaifu_xg_id_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->kaifu_xg_id_, target);
  }

  // repeated int32 kaifu_xg_count = 9;
  if (this->kaifu_xg_count_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _kaifu_xg_count_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->kaifu_xg_count_, target);
  }

  // repeated string zzs_rank_names = 10;
  for (int i = 0, n = this->zzs_rank_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zzs_rank_names(i).data(), static_cast<int>(this->zzs_rank_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.global_t.zzs_rank_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->zzs_rank_names(i), target);
  }

  // repeated int32 zzs_rank_jewel = 11;
  if (this->zzs_rank_jewel_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _zzs_rank_jewel_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->zzs_rank_jewel_, target);
  }

  // uint64 ore_rank_time = 18;
  if (this->ore_rank_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(18, this->ore_rank_time(), target);
  }

  // uint64 guild_refresh_time = 19;
  if (this->guild_refresh_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(19, this->guild_refresh_time(), target);
  }

  // int32 czjh_count = 20;
  if (this->czjh_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->czjh_count(), target);
  }

  // int32 guild_pvp_zhou = 21;
  if (this->guild_pvp_zhou() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->guild_pvp_zhou(), target);
  }

  // int32 guild_pvp_suc = 22;
  if (this->guild_pvp_suc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->guild_pvp_suc(), target);
  }

  // repeated uint64 guild_pvp_ranks = 23;
  if (this->guild_pvp_ranks_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      23,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _guild_pvp_ranks_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->guild_pvp_ranks_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dhc.global_t)
  return target;
}

size_t global_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dhc.global_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 huodong_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->huodong_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _huodong_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 huodong_start_times = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->huodong_start_times_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _huodong_start_times_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 huodong_end_times = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->huodong_end_times_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _huodong_end_times_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 pttq_vip_id = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->pttq_vip_id_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pttq_vip_id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string pttq_player_name = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pttq_player_name_size());
  for (int i = 0, n = this->pttq_player_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->pttq_player_name(i));
  }

  // repeated int32 kaifu_xg_id = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->kaifu_xg_id_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _kaifu_xg_id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 kaifu_xg_count = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->kaifu_xg_count_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _kaifu_xg_count_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string zzs_rank_names = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->zzs_rank_names_size());
  for (int i = 0, n = this->zzs_rank_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->zzs_rank_names(i));
  }

  // repeated int32 zzs_rank_jewel = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->zzs_rank_jewel_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _zzs_rank_jewel_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 guild_pvp_ranks = 23;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->guild_pvp_ranks_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _guild_pvp_ranks_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // int32 huodong_count = 5;
  if (this->huodong_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->huodong_count());
  }

  // int32 czjh_count = 20;
  if (this->czjh_count() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->czjh_count());
  }

  // uint64 ore_rank_time = 18;
  if (this->ore_rank_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ore_rank_time());
  }

  // uint64 guild_refresh_time = 19;
  if (this->guild_refresh_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guild_refresh_time());
  }

  // int32 guild_pvp_zhou = 21;
  if (this->guild_pvp_zhou() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_pvp_zhou());
  }

  // int32 guild_pvp_suc = 22;
  if (this->guild_pvp_suc() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_pvp_suc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void global_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dhc.global_t)
  GOOGLE_DCHECK_NE(&from, this);
  const global_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const global_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dhc.global_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dhc.global_t)
    MergeFrom(*source);
  }
}

void global_t::MergeFrom(const global_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dhc.global_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  huodong_ids_.MergeFrom(from.huodong_ids_);
  huodong_start_times_.MergeFrom(from.huodong_start_times_);
  huodong_end_times_.MergeFrom(from.huodong_end_times_);
  pttq_vip_id_.MergeFrom(from.pttq_vip_id_);
  pttq_player_name_.MergeFrom(from.pttq_player_name_);
  kaifu_xg_id_.MergeFrom(from.kaifu_xg_id_);
  kaifu_xg_count_.MergeFrom(from.kaifu_xg_count_);
  zzs_rank_names_.MergeFrom(from.zzs_rank_names_);
  zzs_rank_jewel_.MergeFrom(from.zzs_rank_jewel_);
  guild_pvp_ranks_.MergeFrom(from.guild_pvp_ranks_);
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.huodong_count() != 0) {
    set_huodong_count(from.huodong_count());
  }
  if (from.czjh_count() != 0) {
    set_czjh_count(from.czjh_count());
  }
  if (from.ore_rank_time() != 0) {
    set_ore_rank_time(from.ore_rank_time());
  }
  if (from.guild_refresh_time() != 0) {
    set_guild_refresh_time(from.guild_refresh_time());
  }
  if (from.guild_pvp_zhou() != 0) {
    set_guild_pvp_zhou(from.guild_pvp_zhou());
  }
  if (from.guild_pvp_suc() != 0) {
    set_guild_pvp_suc(from.guild_pvp_suc());
  }
}

void global_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dhc.global_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void global_t::CopyFrom(const global_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dhc.global_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool global_t::IsInitialized() const {
  return true;
}

void global_t::Swap(global_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void global_t::InternalSwap(global_t* other) {
  using std::swap;
  huodong_ids_.InternalSwap(&other->huodong_ids_);
  huodong_start_times_.InternalSwap(&other->huodong_start_times_);
  huodong_end_times_.InternalSwap(&other->huodong_end_times_);
  pttq_vip_id_.InternalSwap(&other->pttq_vip_id_);
  pttq_player_name_.InternalSwap(CastToBase(&other->pttq_player_name_));
  kaifu_xg_id_.InternalSwap(&other->kaifu_xg_id_);
  kaifu_xg_count_.InternalSwap(&other->kaifu_xg_count_);
  zzs_rank_names_.InternalSwap(CastToBase(&other->zzs_rank_names_));
  zzs_rank_jewel_.InternalSwap(&other->zzs_rank_jewel_);
  guild_pvp_ranks_.InternalSwap(&other->guild_pvp_ranks_);
  swap(guid_, other->guid_);
  swap(huodong_count_, other->huodong_count_);
  swap(czjh_count_, other->czjh_count_);
  swap(ore_rank_time_, other->ore_rank_time_);
  swap(guild_refresh_time_, other->guild_refresh_time_);
  swap(guild_pvp_zhou_, other->guild_pvp_zhou_);
  swap(guild_pvp_suc_, other->guild_pvp_suc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata global_t::GetMetadata() const {
  protobuf_global_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_global_2eeproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dhc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dhc::global_t* Arena::CreateMaybeMessage< ::dhc::global_t >(Arena* arena) {
  return Arena::CreateInternal< ::dhc::global_t >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
