// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: treasure.eproto

#include "treasure.eproto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace dhc {
class treasure_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<treasure_t>
      _instance;
} _treasure_t_default_instance_;
}  // namespace dhc
namespace protobuf_treasure_2eeproto {
static void InitDefaultstreasure_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dhc::_treasure_t_default_instance_;
    new (ptr) ::dhc::treasure_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dhc::treasure_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_treasure_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstreasure_t}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_treasure_t.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, template_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, role_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, enhance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, enhance_exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, jilian_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, locked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, enhance_counts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, star_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, star_exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, star_gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, star_jewel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, star_var_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, star_rates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, star_bjs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_t, star_luck_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dhc::treasure_t)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dhc::_treasure_t_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "treasure.eproto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017treasure.eproto\022\003dhc\"\307\002\n\ntreasure_t\022\014\n"
      "\004guid\030\001 \001(\004\022\023\n\013player_guid\030\002 \001(\004\022\023\n\013temp"
      "late_id\030\003 \001(\005\022\021\n\trole_guid\030\004 \001(\004\022\017\n\007enha"
      "nce\030\005 \001(\005\022\023\n\013enhance_exp\030\006 \001(\005\022\016\n\006jilian"
      "\030\007 \001(\005\022\016\n\006locked\030\010 \001(\005\022\026\n\016enhance_counts"
      "\030\t \001(\005\022\014\n\004star\030\n \001(\005\022\020\n\010star_exp\030\013 \001(\005\022\021"
      "\n\tstar_gold\030\014 \001(\005\022\022\n\nstar_jewel\030\r \001(\005\022\020\n"
      "\010star_var\030\016 \001(\005\022\022\n\nstar_rates\030\017 \003(\005\022\020\n\010s"
      "tar_bjs\030\020 \003(\005\022\021\n\tstar_luck\030\021 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 360);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "treasure.eproto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_treasure_2eeproto
namespace dhc {

// ===================================================================

void treasure_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int treasure_t::kGuidFieldNumber;
const int treasure_t::kPlayerGuidFieldNumber;
const int treasure_t::kTemplateIdFieldNumber;
const int treasure_t::kRoleGuidFieldNumber;
const int treasure_t::kEnhanceFieldNumber;
const int treasure_t::kEnhanceExpFieldNumber;
const int treasure_t::kJilianFieldNumber;
const int treasure_t::kLockedFieldNumber;
const int treasure_t::kEnhanceCountsFieldNumber;
const int treasure_t::kStarFieldNumber;
const int treasure_t::kStarExpFieldNumber;
const int treasure_t::kStarGoldFieldNumber;
const int treasure_t::kStarJewelFieldNumber;
const int treasure_t::kStarVarFieldNumber;
const int treasure_t::kStarRatesFieldNumber;
const int treasure_t::kStarBjsFieldNumber;
const int treasure_t::kStarLuckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

treasure_t::treasure_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_treasure_2eeproto::scc_info_treasure_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dhc.treasure_t)
}
treasure_t::treasure_t(const treasure_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      star_rates_(from.star_rates_),
      star_bjs_(from.star_bjs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&star_luck_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(star_luck_));
  // @@protoc_insertion_point(copy_constructor:dhc.treasure_t)
}

void treasure_t::SharedCtor() {
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&star_luck_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(star_luck_));
}

treasure_t::~treasure_t() {
  // @@protoc_insertion_point(destructor:dhc.treasure_t)
  SharedDtor();
}

void treasure_t::SharedDtor() {
}

void treasure_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* treasure_t::descriptor() {
  ::protobuf_treasure_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_treasure_2eeproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const treasure_t& treasure_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_treasure_2eeproto::scc_info_treasure_t.base);
  return *internal_default_instance();
}


void treasure_t::Clear() {
// @@protoc_insertion_point(message_clear_start:dhc.treasure_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  star_rates_.Clear();
  set_changed();
  star_bjs_.Clear();
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&star_luck_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(star_luck_));
  _internal_metadata_.Clear();
}

bool treasure_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dhc.treasure_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 template_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &template_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 role_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &role_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 enhance = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enhance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 enhance_exp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enhance_exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 jilian = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jilian_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 locked = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 enhance_counts = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enhance_counts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 star = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &star_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 star_exp = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &star_exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 star_gold = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &star_gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 star_jewel = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &star_jewel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 star_var = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &star_var_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 star_rates = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_star_rates())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 122u, input, this->mutable_star_rates())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 star_bjs = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_star_bjs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 130u, input, this->mutable_star_bjs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 star_luck = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &star_luck_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dhc.treasure_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dhc.treasure_t)
  return false;
#undef DO_
}

void treasure_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dhc.treasure_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_guid(), output);
  }

  // int32 template_id = 3;
  if (this->template_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->template_id(), output);
  }

  // uint64 role_guid = 4;
  if (this->role_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->role_guid(), output);
  }

  // int32 enhance = 5;
  if (this->enhance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->enhance(), output);
  }

  // int32 enhance_exp = 6;
  if (this->enhance_exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->enhance_exp(), output);
  }

  // int32 jilian = 7;
  if (this->jilian() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->jilian(), output);
  }

  // int32 locked = 8;
  if (this->locked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->locked(), output);
  }

  // int32 enhance_counts = 9;
  if (this->enhance_counts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->enhance_counts(), output);
  }

  // int32 star = 10;
  if (this->star() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->star(), output);
  }

  // int32 star_exp = 11;
  if (this->star_exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->star_exp(), output);
  }

  // int32 star_gold = 12;
  if (this->star_gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->star_gold(), output);
  }

  // int32 star_jewel = 13;
  if (this->star_jewel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->star_jewel(), output);
  }

  // int32 star_var = 14;
  if (this->star_var() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->star_var(), output);
  }

  // repeated int32 star_rates = 15;
  if (this->star_rates_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _star_rates_cached_byte_size_));
  }
  for (int i = 0, n = this->star_rates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->star_rates(i), output);
  }

  // repeated int32 star_bjs = 16;
  if (this->star_bjs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(16, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _star_bjs_cached_byte_size_));
  }
  for (int i = 0, n = this->star_bjs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->star_bjs(i), output);
  }

  // int32 star_luck = 17;
  if (this->star_luck() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->star_luck(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dhc.treasure_t)
}

::google::protobuf::uint8* treasure_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dhc.treasure_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_guid(), target);
  }

  // int32 template_id = 3;
  if (this->template_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->template_id(), target);
  }

  // uint64 role_guid = 4;
  if (this->role_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->role_guid(), target);
  }

  // int32 enhance = 5;
  if (this->enhance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->enhance(), target);
  }

  // int32 enhance_exp = 6;
  if (this->enhance_exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->enhance_exp(), target);
  }

  // int32 jilian = 7;
  if (this->jilian() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->jilian(), target);
  }

  // int32 locked = 8;
  if (this->locked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->locked(), target);
  }

  // int32 enhance_counts = 9;
  if (this->enhance_counts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->enhance_counts(), target);
  }

  // int32 star = 10;
  if (this->star() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->star(), target);
  }

  // int32 star_exp = 11;
  if (this->star_exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->star_exp(), target);
  }

  // int32 star_gold = 12;
  if (this->star_gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->star_gold(), target);
  }

  // int32 star_jewel = 13;
  if (this->star_jewel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->star_jewel(), target);
  }

  // int32 star_var = 14;
  if (this->star_var() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->star_var(), target);
  }

  // repeated int32 star_rates = 15;
  if (this->star_rates_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _star_rates_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->star_rates_, target);
  }

  // repeated int32 star_bjs = 16;
  if (this->star_bjs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      16,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _star_bjs_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->star_bjs_, target);
  }

  // int32 star_luck = 17;
  if (this->star_luck() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->star_luck(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dhc.treasure_t)
  return target;
}

size_t treasure_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dhc.treasure_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 star_rates = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->star_rates_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _star_rates_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 star_bjs = 16;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->star_bjs_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _star_bjs_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  // uint64 role_guid = 4;
  if (this->role_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->role_guid());
  }

  // int32 template_id = 3;
  if (this->template_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->template_id());
  }

  // int32 enhance = 5;
  if (this->enhance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->enhance());
  }

  // int32 enhance_exp = 6;
  if (this->enhance_exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->enhance_exp());
  }

  // int32 jilian = 7;
  if (this->jilian() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->jilian());
  }

  // int32 locked = 8;
  if (this->locked() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->locked());
  }

  // int32 enhance_counts = 9;
  if (this->enhance_counts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->enhance_counts());
  }

  // int32 star = 10;
  if (this->star() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->star());
  }

  // int32 star_exp = 11;
  if (this->star_exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->star_exp());
  }

  // int32 star_gold = 12;
  if (this->star_gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->star_gold());
  }

  // int32 star_jewel = 13;
  if (this->star_jewel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->star_jewel());
  }

  // int32 star_var = 14;
  if (this->star_var() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->star_var());
  }

  // int32 star_luck = 17;
  if (this->star_luck() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->star_luck());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void treasure_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dhc.treasure_t)
  GOOGLE_DCHECK_NE(&from, this);
  const treasure_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const treasure_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dhc.treasure_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dhc.treasure_t)
    MergeFrom(*source);
  }
}

void treasure_t::MergeFrom(const treasure_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dhc.treasure_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  star_rates_.MergeFrom(from.star_rates_);
  star_bjs_.MergeFrom(from.star_bjs_);
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.player_guid() != 0) {
    set_player_guid(from.player_guid());
  }
  if (from.role_guid() != 0) {
    set_role_guid(from.role_guid());
  }
  if (from.template_id() != 0) {
    set_template_id(from.template_id());
  }
  if (from.enhance() != 0) {
    set_enhance(from.enhance());
  }
  if (from.enhance_exp() != 0) {
    set_enhance_exp(from.enhance_exp());
  }
  if (from.jilian() != 0) {
    set_jilian(from.jilian());
  }
  if (from.locked() != 0) {
    set_locked(from.locked());
  }
  if (from.enhance_counts() != 0) {
    set_enhance_counts(from.enhance_counts());
  }
  if (from.star() != 0) {
    set_star(from.star());
  }
  if (from.star_exp() != 0) {
    set_star_exp(from.star_exp());
  }
  if (from.star_gold() != 0) {
    set_star_gold(from.star_gold());
  }
  if (from.star_jewel() != 0) {
    set_star_jewel(from.star_jewel());
  }
  if (from.star_var() != 0) {
    set_star_var(from.star_var());
  }
  if (from.star_luck() != 0) {
    set_star_luck(from.star_luck());
  }
}

void treasure_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dhc.treasure_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void treasure_t::CopyFrom(const treasure_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dhc.treasure_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool treasure_t::IsInitialized() const {
  return true;
}

void treasure_t::Swap(treasure_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void treasure_t::InternalSwap(treasure_t* other) {
  using std::swap;
  star_rates_.InternalSwap(&other->star_rates_);
  star_bjs_.InternalSwap(&other->star_bjs_);
  swap(guid_, other->guid_);
  swap(player_guid_, other->player_guid_);
  swap(role_guid_, other->role_guid_);
  swap(template_id_, other->template_id_);
  swap(enhance_, other->enhance_);
  swap(enhance_exp_, other->enhance_exp_);
  swap(jilian_, other->jilian_);
  swap(locked_, other->locked_);
  swap(enhance_counts_, other->enhance_counts_);
  swap(star_, other->star_);
  swap(star_exp_, other->star_exp_);
  swap(star_gold_, other->star_gold_);
  swap(star_jewel_, other->star_jewel_);
  swap(star_var_, other->star_var_);
  swap(star_luck_, other->star_luck_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata treasure_t::GetMetadata() const {
  protobuf_treasure_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_treasure_2eeproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dhc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dhc::treasure_t* Arena::CreateMaybeMessage< ::dhc::treasure_t >(Arena* arena) {
  return Arena::CreateInternal< ::dhc::treasure_t >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
