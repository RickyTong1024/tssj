// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: acc.sproto

#ifndef PROTOBUF_INCLUDED_acc_2esproto
#define PROTOBUF_INCLUDED_acc_2esproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_acc_2esproto 

namespace protobuf_acc_2esproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_acc_2esproto
namespace dhc {
class acc_t;
class acc_tDefaultTypeInternal;
extern acc_tDefaultTypeInternal _acc_t_default_instance_;
}  // namespace dhc
namespace google {
namespace protobuf {
template<> ::dhc::acc_t* Arena::CreateMaybeMessage<::dhc::acc_t>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dhc {

// ===================================================================

class acc_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dhc.acc_t) */ {
 public:
  acc_t();
  virtual ~acc_t();

  acc_t(const acc_t& from);

  inline acc_t& operator=(const acc_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  acc_t(acc_t&& from) noexcept
    : acc_t() {
    *this = ::std::move(from);
  }

  inline acc_t& operator=(acc_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const acc_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const acc_t* internal_default_instance() {
    return reinterpret_cast<const acc_t*>(
               &_acc_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(acc_t* other);
  friend void swap(acc_t& a, acc_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline acc_t* New() const final {
    return CreateMaybeMessage<acc_t>(NULL);
  }

  acc_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<acc_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const acc_t& from);
  void MergeFrom(const acc_t& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(acc_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 2;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // string serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  const ::std::string& serverid() const;
  void set_serverid(const ::std::string& value);
  #if LANG_CXX11
  void set_serverid(::std::string&& value);
  #endif
  void set_serverid(const char* value);
  void set_serverid(const char* value, size_t size);
  ::std::string* mutable_serverid();
  ::std::string* release_serverid();
  void set_allocated_serverid(::std::string* serverid);

  // string extra = 4;
  void clear_extra();
  static const int kExtraFieldNumber = 4;
  const ::std::string& extra() const;
  void set_extra(const ::std::string& value);
  #if LANG_CXX11
  void set_extra(::std::string&& value);
  #endif
  void set_extra(const char* value);
  void set_extra(const char* value, size_t size);
  ::std::string* mutable_extra();
  ::std::string* release_extra();
  void set_allocated_extra(::std::string* extra);

  // string device = 7;
  void clear_device();
  static const int kDeviceFieldNumber = 7;
  const ::std::string& device() const;
  void set_device(const ::std::string& value);
  #if LANG_CXX11
  void set_device(::std::string&& value);
  #endif
  void set_device(const char* value);
  void set_device(const char* value, size_t size);
  ::std::string* mutable_device();
  ::std::string* release_device();
  void set_allocated_device(::std::string* device);

  // string last_device = 10;
  void clear_last_device();
  static const int kLastDeviceFieldNumber = 10;
  const ::std::string& last_device() const;
  void set_last_device(const ::std::string& value);
  #if LANG_CXX11
  void set_last_device(::std::string&& value);
  #endif
  void set_last_device(const char* value);
  void set_last_device(const char* value, size_t size);
  ::std::string* mutable_last_device();
  ::std::string* release_last_device();
  void set_allocated_last_device(::std::string* last_device);

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint64 fenghao_time = 6;
  void clear_fenghao_time();
  static const int kFenghaoTimeFieldNumber = 6;
  ::google::protobuf::uint64 fenghao_time() const;
  void set_fenghao_time(::google::protobuf::uint64 value);

  // int32 gm_level = 5;
  void clear_gm_level();
  static const int kGmLevelFieldNumber = 5;
  ::google::protobuf::int32 gm_level() const;
  void set_gm_level(::google::protobuf::int32 value);

  // int32 version = 8;
  void clear_version();
  static const int kVersionFieldNumber = 8;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // uint64 last_time = 11;
  void clear_last_time();
  static const int kLastTimeFieldNumber = 11;
  ::google::protobuf::uint64 last_time() const;
  void set_last_time(::google::protobuf::uint64 value);

  // uint64 gag_time = 12;
  void clear_gag_time();
  static const int kGagTimeFieldNumber = 12;
  ::google::protobuf::uint64 gag_time() const;
  void set_gag_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:dhc.acc_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr serverid_;
  ::google::protobuf::internal::ArenaStringPtr extra_;
  ::google::protobuf::internal::ArenaStringPtr device_;
  ::google::protobuf::internal::ArenaStringPtr last_device_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 fenghao_time_;
  ::google::protobuf::int32 gm_level_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::uint64 last_time_;
  ::google::protobuf::uint64 gag_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_acc_2esproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// acc_t

// uint64 guid = 1;
inline void acc_t::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 acc_t::guid() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.guid)
  return guid_;
}
inline void acc_t::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.acc_t.guid)
}

// string username = 2;
inline void acc_t::clear_username() {
  set_changed();
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& acc_t::username() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.username)
  return username_.GetNoArena();
}
inline void acc_t::set_username(const ::std::string& value) {
  set_changed();
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dhc.acc_t.username)
}
#if LANG_CXX11
inline void acc_t::set_username(::std::string&& value) {
  set_changed();
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dhc.acc_t.username)
}
#endif
inline void acc_t::set_username(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dhc.acc_t.username)
}
inline void acc_t::set_username(const char* value, size_t size) {
  set_changed();
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dhc.acc_t.username)
}
inline ::std::string* acc_t::mutable_username() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:dhc.acc_t.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* acc_t::release_username() {
  set_changed();
  // @@protoc_insertion_point(field_release:dhc.acc_t.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void acc_t::set_allocated_username(::std::string* username) {
  set_changed();
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:dhc.acc_t.username)
}

// string serverid = 3;
inline void acc_t::clear_serverid() {
  set_changed();
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& acc_t::serverid() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.serverid)
  return serverid_.GetNoArena();
}
inline void acc_t::set_serverid(const ::std::string& value) {
  set_changed();
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dhc.acc_t.serverid)
}
#if LANG_CXX11
inline void acc_t::set_serverid(::std::string&& value) {
  set_changed();
  
  serverid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dhc.acc_t.serverid)
}
#endif
inline void acc_t::set_serverid(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dhc.acc_t.serverid)
}
inline void acc_t::set_serverid(const char* value, size_t size) {
  set_changed();
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dhc.acc_t.serverid)
}
inline ::std::string* acc_t::mutable_serverid() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:dhc.acc_t.serverid)
  return serverid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* acc_t::release_serverid() {
  set_changed();
  // @@protoc_insertion_point(field_release:dhc.acc_t.serverid)
  
  return serverid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void acc_t::set_allocated_serverid(::std::string* serverid) {
  set_changed();
  if (serverid != NULL) {
    
  } else {
    
  }
  serverid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverid);
  // @@protoc_insertion_point(field_set_allocated:dhc.acc_t.serverid)
}

// string extra = 4;
inline void acc_t::clear_extra() {
  set_changed();
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& acc_t::extra() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.extra)
  return extra_.GetNoArena();
}
inline void acc_t::set_extra(const ::std::string& value) {
  set_changed();
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dhc.acc_t.extra)
}
#if LANG_CXX11
inline void acc_t::set_extra(::std::string&& value) {
  set_changed();
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dhc.acc_t.extra)
}
#endif
inline void acc_t::set_extra(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dhc.acc_t.extra)
}
inline void acc_t::set_extra(const char* value, size_t size) {
  set_changed();
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dhc.acc_t.extra)
}
inline ::std::string* acc_t::mutable_extra() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:dhc.acc_t.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* acc_t::release_extra() {
  set_changed();
  // @@protoc_insertion_point(field_release:dhc.acc_t.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void acc_t::set_allocated_extra(::std::string* extra) {
  set_changed();
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:dhc.acc_t.extra)
}

// int32 gm_level = 5;
inline void acc_t::clear_gm_level() {
  set_changed();
  gm_level_ = 0;
}
inline ::google::protobuf::int32 acc_t::gm_level() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.gm_level)
  return gm_level_;
}
inline void acc_t::set_gm_level(::google::protobuf::int32 value) {
  set_changed();
  
  gm_level_ = value;
  // @@protoc_insertion_point(field_set:dhc.acc_t.gm_level)
}

// uint64 fenghao_time = 6;
inline void acc_t::clear_fenghao_time() {
  set_changed();
  fenghao_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 acc_t::fenghao_time() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.fenghao_time)
  return fenghao_time_;
}
inline void acc_t::set_fenghao_time(::google::protobuf::uint64 value) {
  set_changed();
  
  fenghao_time_ = value;
  // @@protoc_insertion_point(field_set:dhc.acc_t.fenghao_time)
}

// string device = 7;
inline void acc_t::clear_device() {
  set_changed();
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& acc_t::device() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.device)
  return device_.GetNoArena();
}
inline void acc_t::set_device(const ::std::string& value) {
  set_changed();
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dhc.acc_t.device)
}
#if LANG_CXX11
inline void acc_t::set_device(::std::string&& value) {
  set_changed();
  
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dhc.acc_t.device)
}
#endif
inline void acc_t::set_device(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dhc.acc_t.device)
}
inline void acc_t::set_device(const char* value, size_t size) {
  set_changed();
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dhc.acc_t.device)
}
inline ::std::string* acc_t::mutable_device() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:dhc.acc_t.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* acc_t::release_device() {
  set_changed();
  // @@protoc_insertion_point(field_release:dhc.acc_t.device)
  
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void acc_t::set_allocated_device(::std::string* device) {
  set_changed();
  if (device != NULL) {
    
  } else {
    
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:dhc.acc_t.device)
}

// int32 version = 8;
inline void acc_t::clear_version() {
  set_changed();
  version_ = 0;
}
inline ::google::protobuf::int32 acc_t::version() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.version)
  return version_;
}
inline void acc_t::set_version(::google::protobuf::int32 value) {
  set_changed();
  
  version_ = value;
  // @@protoc_insertion_point(field_set:dhc.acc_t.version)
}

// string last_device = 10;
inline void acc_t::clear_last_device() {
  set_changed();
  last_device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& acc_t::last_device() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.last_device)
  return last_device_.GetNoArena();
}
inline void acc_t::set_last_device(const ::std::string& value) {
  set_changed();
  
  last_device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dhc.acc_t.last_device)
}
#if LANG_CXX11
inline void acc_t::set_last_device(::std::string&& value) {
  set_changed();
  
  last_device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dhc.acc_t.last_device)
}
#endif
inline void acc_t::set_last_device(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  last_device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dhc.acc_t.last_device)
}
inline void acc_t::set_last_device(const char* value, size_t size) {
  set_changed();
  
  last_device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dhc.acc_t.last_device)
}
inline ::std::string* acc_t::mutable_last_device() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:dhc.acc_t.last_device)
  return last_device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* acc_t::release_last_device() {
  set_changed();
  // @@protoc_insertion_point(field_release:dhc.acc_t.last_device)
  
  return last_device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void acc_t::set_allocated_last_device(::std::string* last_device) {
  set_changed();
  if (last_device != NULL) {
    
  } else {
    
  }
  last_device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_device);
  // @@protoc_insertion_point(field_set_allocated:dhc.acc_t.last_device)
}

// uint64 last_time = 11;
inline void acc_t::clear_last_time() {
  set_changed();
  last_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 acc_t::last_time() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.last_time)
  return last_time_;
}
inline void acc_t::set_last_time(::google::protobuf::uint64 value) {
  set_changed();
  
  last_time_ = value;
  // @@protoc_insertion_point(field_set:dhc.acc_t.last_time)
}

// uint64 gag_time = 12;
inline void acc_t::clear_gag_time() {
  set_changed();
  gag_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 acc_t::gag_time() const {
  // @@protoc_insertion_point(field_get:dhc.acc_t.gag_time)
  return gag_time_;
}
inline void acc_t::set_gag_time(::google::protobuf::uint64 value) {
  set_changed();
  
  gag_time_ = value;
  // @@protoc_insertion_point(field_set:dhc.acc_t.gag_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace dhc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_acc_2esproto
