// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: social.eproto

#include "social.eproto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace dhc {
class social_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<social_t>
      _instance;
} _social_t_default_instance_;
}  // namespace dhc
namespace protobuf_social_2eeproto {
static void InitDefaultssocial_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dhc::_social_t_default_instance_;
    new (ptr) ::dhc::social_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dhc::social_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_social_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssocial_t}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_social_t.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, target_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, template_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, bf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, can_shou_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, last_song_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, vip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, achieve_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, offline_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, chengchao_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, invite_players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, invite_levels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, invite_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::social_t, nalflag_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dhc::social_t)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dhc::_social_t_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "social.eproto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rsocial.eproto\022\003dhc\"\305\002\n\010social_t\022\014\n\004gui"
      "d\030\001 \001(\004\022\023\n\013player_guid\030\002 \001(\004\022\023\n\013target_g"
      "uid\030\003 \001(\004\022\023\n\013template_id\030\004 \001(\005\022\014\n\004name\030\005"
      " \001(\t\022\r\n\005level\030\006 \001(\005\022\n\n\002bf\030\007 \001(\005\022\020\n\010can_s"
      "hou\030\010 \001(\005\022\026\n\016last_song_time\030\t \001(\004\022\013\n\003vip"
      "\030\n \001(\005\022\017\n\007achieve\030\013 \001(\005\022\024\n\014offline_time\030"
      "\014 \001(\004\022\021\n\tchengchao\030\r \001(\005\022\026\n\016invite_playe"
      "rs\030\016 \003(\004\022\025\n\rinvite_levels\030\017 \003(\004\022\022\n\ninvit"
      "e_ids\030\020 \003(\005\022\017\n\007nalflag\030\021 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 356);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "social.eproto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_social_2eeproto
namespace dhc {

// ===================================================================

void social_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int social_t::kGuidFieldNumber;
const int social_t::kPlayerGuidFieldNumber;
const int social_t::kTargetGuidFieldNumber;
const int social_t::kTemplateIdFieldNumber;
const int social_t::kNameFieldNumber;
const int social_t::kLevelFieldNumber;
const int social_t::kBfFieldNumber;
const int social_t::kCanShouFieldNumber;
const int social_t::kLastSongTimeFieldNumber;
const int social_t::kVipFieldNumber;
const int social_t::kAchieveFieldNumber;
const int social_t::kOfflineTimeFieldNumber;
const int social_t::kChengchaoFieldNumber;
const int social_t::kInvitePlayersFieldNumber;
const int social_t::kInviteLevelsFieldNumber;
const int social_t::kInviteIdsFieldNumber;
const int social_t::kNalflagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

social_t::social_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_social_2eeproto::scc_info_social_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dhc.social_t)
}
social_t::social_t(const social_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      invite_players_(from.invite_players_),
      invite_levels_(from.invite_levels_),
      invite_ids_(from.invite_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&nalflag_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(nalflag_));
  // @@protoc_insertion_point(copy_constructor:dhc.social_t)
}

void social_t::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nalflag_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(nalflag_));
}

social_t::~social_t() {
  // @@protoc_insertion_point(destructor:dhc.social_t)
  SharedDtor();
}

void social_t::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void social_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* social_t::descriptor() {
  ::protobuf_social_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_social_2eeproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const social_t& social_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_social_2eeproto::scc_info_social_t.base);
  return *internal_default_instance();
}


void social_t::Clear() {
// @@protoc_insertion_point(message_clear_start:dhc.social_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  invite_players_.Clear();
  set_changed();
  invite_levels_.Clear();
  set_changed();
  invite_ids_.Clear();
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nalflag_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(nalflag_));
  _internal_metadata_.Clear();
}

bool social_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dhc.social_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 target_guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 template_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &template_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dhc.social_t.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bf = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 can_shou = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &can_shou_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 last_song_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &last_song_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vip = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 achieve = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &achieve_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 offline_time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offline_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 chengchao = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chengchao_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 invite_players = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_invite_players())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 114u, input, this->mutable_invite_players())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 invite_levels = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_invite_levels())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 122u, input, this->mutable_invite_levels())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 invite_ids = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_invite_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 130u, input, this->mutable_invite_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nalflag = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nalflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dhc.social_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dhc.social_t)
  return false;
#undef DO_
}

void social_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dhc.social_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_guid(), output);
  }

  // uint64 target_guid = 3;
  if (this->target_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->target_guid(), output);
  }

  // int32 template_id = 4;
  if (this->template_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->template_id(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.social_t.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // int32 level = 6;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->level(), output);
  }

  // int32 bf = 7;
  if (this->bf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->bf(), output);
  }

  // int32 can_shou = 8;
  if (this->can_shou() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->can_shou(), output);
  }

  // uint64 last_song_time = 9;
  if (this->last_song_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->last_song_time(), output);
  }

  // int32 vip = 10;
  if (this->vip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->vip(), output);
  }

  // int32 achieve = 11;
  if (this->achieve() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->achieve(), output);
  }

  // uint64 offline_time = 12;
  if (this->offline_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->offline_time(), output);
  }

  // int32 chengchao = 13;
  if (this->chengchao() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->chengchao(), output);
  }

  // repeated uint64 invite_players = 14;
  if (this->invite_players_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _invite_players_cached_byte_size_));
  }
  for (int i = 0, n = this->invite_players_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->invite_players(i), output);
  }

  // repeated uint64 invite_levels = 15;
  if (this->invite_levels_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _invite_levels_cached_byte_size_));
  }
  for (int i = 0, n = this->invite_levels_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->invite_levels(i), output);
  }

  // repeated int32 invite_ids = 16;
  if (this->invite_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(16, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _invite_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->invite_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->invite_ids(i), output);
  }

  // int32 nalflag = 17;
  if (this->nalflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->nalflag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dhc.social_t)
}

::google::protobuf::uint8* social_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dhc.social_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_guid(), target);
  }

  // uint64 target_guid = 3;
  if (this->target_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->target_guid(), target);
  }

  // int32 template_id = 4;
  if (this->template_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->template_id(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.social_t.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // int32 level = 6;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->level(), target);
  }

  // int32 bf = 7;
  if (this->bf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->bf(), target);
  }

  // int32 can_shou = 8;
  if (this->can_shou() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->can_shou(), target);
  }

  // uint64 last_song_time = 9;
  if (this->last_song_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->last_song_time(), target);
  }

  // int32 vip = 10;
  if (this->vip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->vip(), target);
  }

  // int32 achieve = 11;
  if (this->achieve() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->achieve(), target);
  }

  // uint64 offline_time = 12;
  if (this->offline_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->offline_time(), target);
  }

  // int32 chengchao = 13;
  if (this->chengchao() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->chengchao(), target);
  }

  // repeated uint64 invite_players = 14;
  if (this->invite_players_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _invite_players_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->invite_players_, target);
  }

  // repeated uint64 invite_levels = 15;
  if (this->invite_levels_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _invite_levels_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->invite_levels_, target);
  }

  // repeated int32 invite_ids = 16;
  if (this->invite_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      16,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _invite_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->invite_ids_, target);
  }

  // int32 nalflag = 17;
  if (this->nalflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->nalflag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dhc.social_t)
  return target;
}

size_t social_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dhc.social_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 invite_players = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->invite_players_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _invite_players_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 invite_levels = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->invite_levels_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _invite_levels_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 invite_ids = 16;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->invite_ids_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _invite_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  // uint64 target_guid = 3;
  if (this->target_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->target_guid());
  }

  // int32 template_id = 4;
  if (this->template_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->template_id());
  }

  // int32 level = 6;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int32 bf = 7;
  if (this->bf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bf());
  }

  // int32 can_shou = 8;
  if (this->can_shou() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->can_shou());
  }

  // uint64 last_song_time = 9;
  if (this->last_song_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->last_song_time());
  }

  // int32 vip = 10;
  if (this->vip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vip());
  }

  // int32 achieve = 11;
  if (this->achieve() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->achieve());
  }

  // uint64 offline_time = 12;
  if (this->offline_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offline_time());
  }

  // int32 chengchao = 13;
  if (this->chengchao() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chengchao());
  }

  // int32 nalflag = 17;
  if (this->nalflag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nalflag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void social_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dhc.social_t)
  GOOGLE_DCHECK_NE(&from, this);
  const social_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const social_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dhc.social_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dhc.social_t)
    MergeFrom(*source);
  }
}

void social_t::MergeFrom(const social_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dhc.social_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  invite_players_.MergeFrom(from.invite_players_);
  invite_levels_.MergeFrom(from.invite_levels_);
  invite_ids_.MergeFrom(from.invite_ids_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.player_guid() != 0) {
    set_player_guid(from.player_guid());
  }
  if (from.target_guid() != 0) {
    set_target_guid(from.target_guid());
  }
  if (from.template_id() != 0) {
    set_template_id(from.template_id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.bf() != 0) {
    set_bf(from.bf());
  }
  if (from.can_shou() != 0) {
    set_can_shou(from.can_shou());
  }
  if (from.last_song_time() != 0) {
    set_last_song_time(from.last_song_time());
  }
  if (from.vip() != 0) {
    set_vip(from.vip());
  }
  if (from.achieve() != 0) {
    set_achieve(from.achieve());
  }
  if (from.offline_time() != 0) {
    set_offline_time(from.offline_time());
  }
  if (from.chengchao() != 0) {
    set_chengchao(from.chengchao());
  }
  if (from.nalflag() != 0) {
    set_nalflag(from.nalflag());
  }
}

void social_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dhc.social_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void social_t::CopyFrom(const social_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dhc.social_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool social_t::IsInitialized() const {
  return true;
}

void social_t::Swap(social_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void social_t::InternalSwap(social_t* other) {
  using std::swap;
  invite_players_.InternalSwap(&other->invite_players_);
  invite_levels_.InternalSwap(&other->invite_levels_);
  invite_ids_.InternalSwap(&other->invite_ids_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(player_guid_, other->player_guid_);
  swap(target_guid_, other->target_guid_);
  swap(template_id_, other->template_id_);
  swap(level_, other->level_);
  swap(bf_, other->bf_);
  swap(can_shou_, other->can_shou_);
  swap(last_song_time_, other->last_song_time_);
  swap(vip_, other->vip_);
  swap(achieve_, other->achieve_);
  swap(offline_time_, other->offline_time_);
  swap(chengchao_, other->chengchao_);
  swap(nalflag_, other->nalflag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata social_t::GetMetadata() const {
  protobuf_social_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_social_2eeproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dhc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dhc::social_t* Arena::CreateMaybeMessage< ::dhc::social_t >(Arena* arena) {
  return Arena::CreateInternal< ::dhc::social_t >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
