// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guild_box.eproto

#ifndef PROTOBUF_INCLUDED_guild_5fbox_2eeproto
#define PROTOBUF_INCLUDED_guild_5fbox_2eeproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_guild_5fbox_2eeproto 

namespace protobuf_guild_5fbox_2eeproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_guild_5fbox_2eeproto
namespace dhc {
class guild_box_t;
class guild_box_tDefaultTypeInternal;
extern guild_box_tDefaultTypeInternal _guild_box_t_default_instance_;
}  // namespace dhc
namespace google {
namespace protobuf {
template<> ::dhc::guild_box_t* Arena::CreateMaybeMessage<::dhc::guild_box_t>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dhc {

// ===================================================================

class guild_box_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dhc.guild_box_t) */ {
 public:
  guild_box_t();
  virtual ~guild_box_t();

  guild_box_t(const guild_box_t& from);

  inline guild_box_t& operator=(const guild_box_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  guild_box_t(guild_box_t&& from) noexcept
    : guild_box_t() {
    *this = ::std::move(from);
  }

  inline guild_box_t& operator=(guild_box_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_box_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const guild_box_t* internal_default_instance() {
    return reinterpret_cast<const guild_box_t*>(
               &_guild_box_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(guild_box_t* other);
  friend void swap(guild_box_t& a, guild_box_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline guild_box_t* New() const final {
    return CreateMaybeMessage<guild_box_t>(NULL);
  }

  guild_box_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<guild_box_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const guild_box_t& from);
  void MergeFrom(const guild_box_t& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(guild_box_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 reward_ids = 5;
  int reward_ids_size() const;
  void clear_reward_ids();
  static const int kRewardIdsFieldNumber = 5;
  ::google::protobuf::int32 reward_ids(int index) const;
  void set_reward_ids(int index, ::google::protobuf::int32 value);
  void add_reward_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      reward_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_reward_ids();

  // repeated uint64 reward_guids = 6;
  int reward_guids_size() const;
  void clear_reward_guids();
  static const int kRewardGuidsFieldNumber = 6;
  ::google::protobuf::uint64 reward_guids(int index) const;
  void set_reward_guids(int index, ::google::protobuf::uint64 value);
  void add_reward_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      reward_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_reward_guids();

  // repeated string reward_names = 7;
  int reward_names_size() const;
  void clear_reward_names();
  static const int kRewardNamesFieldNumber = 7;
  const ::std::string& reward_names(int index) const;
  ::std::string* mutable_reward_names(int index);
  void set_reward_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_reward_names(int index, ::std::string&& value);
  #endif
  void set_reward_names(int index, const char* value);
  void set_reward_names(int index, const char* value, size_t size);
  ::std::string* add_reward_names();
  void add_reward_names(const ::std::string& value);
  #if LANG_CXX11
  void add_reward_names(::std::string&& value);
  #endif
  void add_reward_names(const char* value);
  void add_reward_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& reward_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_reward_names();

  // repeated int32 reward_achieves = 8;
  int reward_achieves_size() const;
  void clear_reward_achieves();
  static const int kRewardAchievesFieldNumber = 8;
  ::google::protobuf::int32 reward_achieves(int index) const;
  void set_reward_achieves(int index, ::google::protobuf::int32 value);
  void add_reward_achieves(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      reward_achieves() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_reward_achieves();

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint64 guild_guid = 2;
  void clear_guild_guid();
  static const int kGuildGuidFieldNumber = 2;
  ::google::protobuf::uint64 guild_guid() const;
  void set_guild_guid(::google::protobuf::uint64 value);

  // int32 mceng = 3;
  void clear_mceng();
  static const int kMcengFieldNumber = 3;
  ::google::protobuf::int32 mceng() const;
  void set_mceng(::google::protobuf::int32 value);

  // int32 mindex = 4;
  void clear_mindex();
  static const int kMindexFieldNumber = 4;
  ::google::protobuf::int32 mindex() const;
  void set_mindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dhc.guild_box_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > reward_ids_;
  mutable int _reward_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > reward_guids_;
  mutable int _reward_guids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> reward_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > reward_achieves_;
  mutable int _reward_achieves_cached_byte_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 guild_guid_;
  ::google::protobuf::int32 mceng_;
  ::google::protobuf::int32 mindex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_guild_5fbox_2eeproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// guild_box_t

// uint64 guid = 1;
inline void guild_box_t::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 guild_box_t::guid() const {
  // @@protoc_insertion_point(field_get:dhc.guild_box_t.guid)
  return guid_;
}
inline void guild_box_t::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_box_t.guid)
}

// uint64 guild_guid = 2;
inline void guild_box_t::clear_guild_guid() {
  set_changed();
  guild_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 guild_box_t::guild_guid() const {
  // @@protoc_insertion_point(field_get:dhc.guild_box_t.guild_guid)
  return guild_guid_;
}
inline void guild_box_t::set_guild_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guild_guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_box_t.guild_guid)
}

// int32 mceng = 3;
inline void guild_box_t::clear_mceng() {
  set_changed();
  mceng_ = 0;
}
inline ::google::protobuf::int32 guild_box_t::mceng() const {
  // @@protoc_insertion_point(field_get:dhc.guild_box_t.mceng)
  return mceng_;
}
inline void guild_box_t::set_mceng(::google::protobuf::int32 value) {
  set_changed();
  
  mceng_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_box_t.mceng)
}

// int32 mindex = 4;
inline void guild_box_t::clear_mindex() {
  set_changed();
  mindex_ = 0;
}
inline ::google::protobuf::int32 guild_box_t::mindex() const {
  // @@protoc_insertion_point(field_get:dhc.guild_box_t.mindex)
  return mindex_;
}
inline void guild_box_t::set_mindex(::google::protobuf::int32 value) {
  set_changed();
  
  mindex_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_box_t.mindex)
}

// repeated int32 reward_ids = 5;
inline int guild_box_t::reward_ids_size() const {
  return reward_ids_.size();
}
inline void guild_box_t::clear_reward_ids() {
  set_changed();
  reward_ids_.Clear();
}
inline ::google::protobuf::int32 guild_box_t::reward_ids(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_box_t.reward_ids)
  return reward_ids_.Get(index);
}
inline void guild_box_t::set_reward_ids(int index, ::google::protobuf::int32 value) {
  set_changed();
  reward_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_box_t.reward_ids)
}
inline void guild_box_t::add_reward_ids(::google::protobuf::int32 value) {
  set_changed();
  reward_ids_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_box_t.reward_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_box_t::reward_ids() const {
  // @@protoc_insertion_point(field_list:dhc.guild_box_t.reward_ids)
  return reward_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_box_t::mutable_reward_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_box_t.reward_ids)
  return &reward_ids_;
}

// repeated uint64 reward_guids = 6;
inline int guild_box_t::reward_guids_size() const {
  return reward_guids_.size();
}
inline void guild_box_t::clear_reward_guids() {
  set_changed();
  reward_guids_.Clear();
}
inline ::google::protobuf::uint64 guild_box_t::reward_guids(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_box_t.reward_guids)
  return reward_guids_.Get(index);
}
inline void guild_box_t::set_reward_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  reward_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_box_t.reward_guids)
}
inline void guild_box_t::add_reward_guids(::google::protobuf::uint64 value) {
  set_changed();
  reward_guids_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_box_t.reward_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
guild_box_t::reward_guids() const {
  // @@protoc_insertion_point(field_list:dhc.guild_box_t.reward_guids)
  return reward_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
guild_box_t::mutable_reward_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_box_t.reward_guids)
  return &reward_guids_;
}

// repeated string reward_names = 7;
inline int guild_box_t::reward_names_size() const {
  return reward_names_.size();
}
inline void guild_box_t::clear_reward_names() {
  set_changed();
  reward_names_.Clear();
}
inline const ::std::string& guild_box_t::reward_names(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_box_t.reward_names)
  return reward_names_.Get(index);
}
inline ::std::string* guild_box_t::mutable_reward_names(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:dhc.guild_box_t.reward_names)
  return reward_names_.Mutable(index);
}
inline void guild_box_t::set_reward_names(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:dhc.guild_box_t.reward_names)
  reward_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void guild_box_t::set_reward_names(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:dhc.guild_box_t.reward_names)
  reward_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void guild_box_t::set_reward_names(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  reward_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dhc.guild_box_t.reward_names)
}
inline void guild_box_t::set_reward_names(int index, const char* value, size_t size) {
  set_changed();
  reward_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dhc.guild_box_t.reward_names)
}
inline ::std::string* guild_box_t::add_reward_names() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:dhc.guild_box_t.reward_names)
  return reward_names_.Add();
}
inline void guild_box_t::add_reward_names(const ::std::string& value) {
  set_changed();
  reward_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dhc.guild_box_t.reward_names)
}
#if LANG_CXX11
inline void guild_box_t::add_reward_names(::std::string&& value) {
  set_changed();
  reward_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:dhc.guild_box_t.reward_names)
}
#endif
inline void guild_box_t::add_reward_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  reward_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dhc.guild_box_t.reward_names)
}
inline void guild_box_t::add_reward_names(const char* value, size_t size) {
  set_changed();
  reward_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dhc.guild_box_t.reward_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
guild_box_t::reward_names() const {
  // @@protoc_insertion_point(field_list:dhc.guild_box_t.reward_names)
  return reward_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
guild_box_t::mutable_reward_names() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_box_t.reward_names)
  return &reward_names_;
}

// repeated int32 reward_achieves = 8;
inline int guild_box_t::reward_achieves_size() const {
  return reward_achieves_.size();
}
inline void guild_box_t::clear_reward_achieves() {
  set_changed();
  reward_achieves_.Clear();
}
inline ::google::protobuf::int32 guild_box_t::reward_achieves(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_box_t.reward_achieves)
  return reward_achieves_.Get(index);
}
inline void guild_box_t::set_reward_achieves(int index, ::google::protobuf::int32 value) {
  set_changed();
  reward_achieves_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_box_t.reward_achieves)
}
inline void guild_box_t::add_reward_achieves(::google::protobuf::int32 value) {
  set_changed();
  reward_achieves_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_box_t.reward_achieves)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_box_t::reward_achieves() const {
  // @@protoc_insertion_point(field_list:dhc.guild_box_t.reward_achieves)
  return reward_achieves_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_box_t::mutable_reward_achieves() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_box_t.reward_achieves)
  return &reward_achieves_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace dhc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_guild_5fbox_2eeproto
