// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guild_arrange.eproto

#include "guild_arrange.eproto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace dhc {
class guild_arrange_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<guild_arrange_t>
      _instance;
} _guild_arrange_t_default_instance_;
}  // namespace dhc
namespace protobuf_guild_5farrange_2eeproto {
static void InitDefaultsguild_arrange_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dhc::_guild_arrange_t_default_instance_;
    new (ptr) ::dhc::guild_arrange_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dhc::guild_arrange_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_guild_arrange_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsguild_arrange_t}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_guild_arrange_t.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, guild_server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, guild_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, guild_zhanji_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, guild_total_zhanji_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, guild_icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, guild_ai_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, guild_exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, guild_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_template_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_bat_eff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_vip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_achieve_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_map_star_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, mplayer_nalflags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_zguids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_zhanjis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_total_zhanjis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_znames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_ztemplate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_zlevel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_zbat_eff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_zvip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_zachieve_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, player_znalflags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_arrange_t, guild_fights_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dhc::guild_arrange_t)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dhc::_guild_arrange_t_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "guild_arrange.eproto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024guild_arrange.eproto\022\003dhc\"\247\005\n\017guild_ar"
      "range_t\022\014\n\004guid\030\001 \001(\004\022\024\n\014guild_server\030\002 "
      "\001(\005\022\022\n\nguild_name\030\003 \001(\t\022\024\n\014guild_zhanji\030"
      "\004 \001(\005\022\032\n\022guild_total_zhanji\030\005 \001(\005\022\022\n\ngui"
      "ld_icon\030\006 \001(\005\022\020\n\010guild_ai\030\007 \001(\005\022\021\n\tguild"
      "_exp\030\010 \001(\005\022\023\n\013guild_level\030\t \001(\005\022\024\n\014playe"
      "r_guids\030\n \003(\004\022\024\n\014player_names\030\013 \003(\t\022\027\n\017p"
      "layer_template\030\014 \003(\005\022\024\n\014player_level\030\r \003"
      "(\005\022\026\n\016player_bat_eff\030\016 \003(\005\022\022\n\nplayer_vip"
      "\030\017 \003(\005\022\026\n\016player_achieve\030\020 \003(\005\022\027\n\017player"
      "_map_star\030\021 \003(\005\022\030\n\020mplayer_nalflags\030\022 \003("
      "\005\022\025\n\rplayer_zguids\030\024 \003(\004\022\026\n\016player_zhanj"
      "is\030\025 \003(\005\022\034\n\024player_total_zhanjis\030\026 \003(\005\022\025"
      "\n\rplayer_znames\030\027 \003(\t\022\030\n\020player_ztemplat"
      "e\030\030 \003(\005\022\025\n\rplayer_zlevel\030\031 \003(\005\022\027\n\017player"
      "_zbat_eff\030\032 \003(\005\022\023\n\013player_zvip\030\033 \003(\005\022\027\n\017"
      "player_zachieve\030\034 \003(\005\022\030\n\020player_znalflag"
      "s\030\035 \003(\005\022\024\n\014guild_fights\030\036 \003(\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 717);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "guild_arrange.eproto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_guild_5farrange_2eeproto
namespace dhc {

// ===================================================================

void guild_arrange_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int guild_arrange_t::kGuidFieldNumber;
const int guild_arrange_t::kGuildServerFieldNumber;
const int guild_arrange_t::kGuildNameFieldNumber;
const int guild_arrange_t::kGuildZhanjiFieldNumber;
const int guild_arrange_t::kGuildTotalZhanjiFieldNumber;
const int guild_arrange_t::kGuildIconFieldNumber;
const int guild_arrange_t::kGuildAiFieldNumber;
const int guild_arrange_t::kGuildExpFieldNumber;
const int guild_arrange_t::kGuildLevelFieldNumber;
const int guild_arrange_t::kPlayerGuidsFieldNumber;
const int guild_arrange_t::kPlayerNamesFieldNumber;
const int guild_arrange_t::kPlayerTemplateFieldNumber;
const int guild_arrange_t::kPlayerLevelFieldNumber;
const int guild_arrange_t::kPlayerBatEffFieldNumber;
const int guild_arrange_t::kPlayerVipFieldNumber;
const int guild_arrange_t::kPlayerAchieveFieldNumber;
const int guild_arrange_t::kPlayerMapStarFieldNumber;
const int guild_arrange_t::kMplayerNalflagsFieldNumber;
const int guild_arrange_t::kPlayerZguidsFieldNumber;
const int guild_arrange_t::kPlayerZhanjisFieldNumber;
const int guild_arrange_t::kPlayerTotalZhanjisFieldNumber;
const int guild_arrange_t::kPlayerZnamesFieldNumber;
const int guild_arrange_t::kPlayerZtemplateFieldNumber;
const int guild_arrange_t::kPlayerZlevelFieldNumber;
const int guild_arrange_t::kPlayerZbatEffFieldNumber;
const int guild_arrange_t::kPlayerZvipFieldNumber;
const int guild_arrange_t::kPlayerZachieveFieldNumber;
const int guild_arrange_t::kPlayerZnalflagsFieldNumber;
const int guild_arrange_t::kGuildFightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

guild_arrange_t::guild_arrange_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_guild_5farrange_2eeproto::scc_info_guild_arrange_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dhc.guild_arrange_t)
}
guild_arrange_t::guild_arrange_t(const guild_arrange_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_guids_(from.player_guids_),
      player_names_(from.player_names_),
      player_template_(from.player_template_),
      player_level_(from.player_level_),
      player_bat_eff_(from.player_bat_eff_),
      player_vip_(from.player_vip_),
      player_achieve_(from.player_achieve_),
      player_map_star_(from.player_map_star_),
      mplayer_nalflags_(from.mplayer_nalflags_),
      player_zguids_(from.player_zguids_),
      player_zhanjis_(from.player_zhanjis_),
      player_total_zhanjis_(from.player_total_zhanjis_),
      player_znames_(from.player_znames_),
      player_ztemplate_(from.player_ztemplate_),
      player_zlevel_(from.player_zlevel_),
      player_zbat_eff_(from.player_zbat_eff_),
      player_zvip_(from.player_zvip_),
      player_zachieve_(from.player_zachieve_),
      player_znalflags_(from.player_znalflags_),
      guild_fights_(from.guild_fights_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guild_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guild_name().size() > 0) {
    guild_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guild_name_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_level_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(guild_level_));
  // @@protoc_insertion_point(copy_constructor:dhc.guild_arrange_t)
}

void guild_arrange_t::SharedCtor() {
  guild_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_level_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(guild_level_));
}

guild_arrange_t::~guild_arrange_t() {
  // @@protoc_insertion_point(destructor:dhc.guild_arrange_t)
  SharedDtor();
}

void guild_arrange_t::SharedDtor() {
  guild_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void guild_arrange_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* guild_arrange_t::descriptor() {
  ::protobuf_guild_5farrange_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_guild_5farrange_2eeproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const guild_arrange_t& guild_arrange_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_guild_5farrange_2eeproto::scc_info_guild_arrange_t.base);
  return *internal_default_instance();
}


void guild_arrange_t::Clear() {
// @@protoc_insertion_point(message_clear_start:dhc.guild_arrange_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  player_guids_.Clear();
  set_changed();
  player_names_.Clear();
  set_changed();
  player_template_.Clear();
  set_changed();
  player_level_.Clear();
  set_changed();
  player_bat_eff_.Clear();
  set_changed();
  player_vip_.Clear();
  set_changed();
  player_achieve_.Clear();
  set_changed();
  player_map_star_.Clear();
  set_changed();
  mplayer_nalflags_.Clear();
  set_changed();
  player_zguids_.Clear();
  set_changed();
  player_zhanjis_.Clear();
  set_changed();
  player_total_zhanjis_.Clear();
  set_changed();
  player_znames_.Clear();
  set_changed();
  player_ztemplate_.Clear();
  set_changed();
  player_zlevel_.Clear();
  set_changed();
  player_zbat_eff_.Clear();
  set_changed();
  player_zvip_.Clear();
  set_changed();
  player_zachieve_.Clear();
  set_changed();
  player_znalflags_.Clear();
  set_changed();
  guild_fights_.Clear();
  set_changed();
  guild_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guild_level_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(guild_level_));
  _internal_metadata_.Clear();
}

bool guild_arrange_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dhc.guild_arrange_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_server_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string guild_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guild_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->guild_name().data(), static_cast<int>(this->guild_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dhc.guild_arrange_t.guild_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_zhanji = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_zhanji_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_total_zhanji = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_total_zhanji_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_icon = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_icon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_ai = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_ai_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_exp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 guild_level = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 player_guids = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_player_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 82u, input, this->mutable_player_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string player_names = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_player_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->player_names(this->player_names_size() - 1).data(),
            static_cast<int>(this->player_names(this->player_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dhc.guild_arrange_t.player_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_template = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_template())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 98u, input, this->mutable_player_template())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_level = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_level())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 106u, input, this->mutable_player_level())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_bat_eff = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_bat_eff())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 114u, input, this->mutable_player_bat_eff())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_vip = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_vip())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 122u, input, this->mutable_player_vip())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_achieve = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_achieve())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 130u, input, this->mutable_player_achieve())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_map_star = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_map_star())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 138u, input, this->mutable_player_map_star())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 mplayer_nalflags = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_mplayer_nalflags())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 146u, input, this->mutable_mplayer_nalflags())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 player_zguids = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_player_zguids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 162u, input, this->mutable_player_zguids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_zhanjis = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_zhanjis())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 170u, input, this->mutable_player_zhanjis())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_total_zhanjis = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_total_zhanjis())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 178u, input, this->mutable_player_total_zhanjis())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string player_znames = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_player_znames()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->player_znames(this->player_znames_size() - 1).data(),
            static_cast<int>(this->player_znames(this->player_znames_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dhc.guild_arrange_t.player_znames"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_ztemplate = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_ztemplate())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 194u, input, this->mutable_player_ztemplate())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_zlevel = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_zlevel())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 202u, input, this->mutable_player_zlevel())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_zbat_eff = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_zbat_eff())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 210u, input, this->mutable_player_zbat_eff())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_zvip = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_zvip())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 218u, input, this->mutable_player_zvip())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_zachieve = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_zachieve())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 226u, input, this->mutable_player_zachieve())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_znalflags = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_znalflags())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 234u, input, this->mutable_player_znalflags())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 guild_fights = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_guild_fights())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 242u, input, this->mutable_guild_fights())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dhc.guild_arrange_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dhc.guild_arrange_t)
  return false;
#undef DO_
}

void guild_arrange_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dhc.guild_arrange_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // int32 guild_server = 2;
  if (this->guild_server() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->guild_server(), output);
  }

  // string guild_name = 3;
  if (this->guild_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guild_name().data(), static_cast<int>(this->guild_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_arrange_t.guild_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->guild_name(), output);
  }

  // int32 guild_zhanji = 4;
  if (this->guild_zhanji() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->guild_zhanji(), output);
  }

  // int32 guild_total_zhanji = 5;
  if (this->guild_total_zhanji() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->guild_total_zhanji(), output);
  }

  // int32 guild_icon = 6;
  if (this->guild_icon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->guild_icon(), output);
  }

  // int32 guild_ai = 7;
  if (this->guild_ai() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->guild_ai(), output);
  }

  // int32 guild_exp = 8;
  if (this->guild_exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->guild_exp(), output);
  }

  // int32 guild_level = 9;
  if (this->guild_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->guild_level(), output);
  }

  // repeated uint64 player_guids = 10;
  if (this->player_guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_guids_cached_byte_size_));
  }
  for (int i = 0, n = this->player_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->player_guids(i), output);
  }

  // repeated string player_names = 11;
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_names(i).data(), static_cast<int>(this->player_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_arrange_t.player_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->player_names(i), output);
  }

  // repeated int32 player_template = 12;
  if (this->player_template_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_template_cached_byte_size_));
  }
  for (int i = 0, n = this->player_template_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_template(i), output);
  }

  // repeated int32 player_level = 13;
  if (this->player_level_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_level_cached_byte_size_));
  }
  for (int i = 0, n = this->player_level_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_level(i), output);
  }

  // repeated int32 player_bat_eff = 14;
  if (this->player_bat_eff_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_bat_eff_cached_byte_size_));
  }
  for (int i = 0, n = this->player_bat_eff_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_bat_eff(i), output);
  }

  // repeated int32 player_vip = 15;
  if (this->player_vip_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_vip_cached_byte_size_));
  }
  for (int i = 0, n = this->player_vip_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_vip(i), output);
  }

  // repeated int32 player_achieve = 16;
  if (this->player_achieve_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(16, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_achieve_cached_byte_size_));
  }
  for (int i = 0, n = this->player_achieve_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_achieve(i), output);
  }

  // repeated int32 player_map_star = 17;
  if (this->player_map_star_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(17, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_map_star_cached_byte_size_));
  }
  for (int i = 0, n = this->player_map_star_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_map_star(i), output);
  }

  // repeated int32 mplayer_nalflags = 18;
  if (this->mplayer_nalflags_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(18, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _mplayer_nalflags_cached_byte_size_));
  }
  for (int i = 0, n = this->mplayer_nalflags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->mplayer_nalflags(i), output);
  }

  // repeated uint64 player_zguids = 20;
  if (this->player_zguids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(20, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_zguids_cached_byte_size_));
  }
  for (int i = 0, n = this->player_zguids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->player_zguids(i), output);
  }

  // repeated int32 player_zhanjis = 21;
  if (this->player_zhanjis_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(21, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_zhanjis_cached_byte_size_));
  }
  for (int i = 0, n = this->player_zhanjis_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_zhanjis(i), output);
  }

  // repeated int32 player_total_zhanjis = 22;
  if (this->player_total_zhanjis_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(22, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_total_zhanjis_cached_byte_size_));
  }
  for (int i = 0, n = this->player_total_zhanjis_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_total_zhanjis(i), output);
  }

  // repeated string player_znames = 23;
  for (int i = 0, n = this->player_znames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_znames(i).data(), static_cast<int>(this->player_znames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_arrange_t.player_znames");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->player_znames(i), output);
  }

  // repeated int32 player_ztemplate = 24;
  if (this->player_ztemplate_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(24, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_ztemplate_cached_byte_size_));
  }
  for (int i = 0, n = this->player_ztemplate_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_ztemplate(i), output);
  }

  // repeated int32 player_zlevel = 25;
  if (this->player_zlevel_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(25, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_zlevel_cached_byte_size_));
  }
  for (int i = 0, n = this->player_zlevel_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_zlevel(i), output);
  }

  // repeated int32 player_zbat_eff = 26;
  if (this->player_zbat_eff_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(26, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_zbat_eff_cached_byte_size_));
  }
  for (int i = 0, n = this->player_zbat_eff_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_zbat_eff(i), output);
  }

  // repeated int32 player_zvip = 27;
  if (this->player_zvip_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(27, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_zvip_cached_byte_size_));
  }
  for (int i = 0, n = this->player_zvip_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_zvip(i), output);
  }

  // repeated int32 player_zachieve = 28;
  if (this->player_zachieve_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(28, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_zachieve_cached_byte_size_));
  }
  for (int i = 0, n = this->player_zachieve_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_zachieve(i), output);
  }

  // repeated int32 player_znalflags = 29;
  if (this->player_znalflags_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(29, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_znalflags_cached_byte_size_));
  }
  for (int i = 0, n = this->player_znalflags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_znalflags(i), output);
  }

  // repeated uint64 guild_fights = 30;
  if (this->guild_fights_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(30, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _guild_fights_cached_byte_size_));
  }
  for (int i = 0, n = this->guild_fights_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->guild_fights(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dhc.guild_arrange_t)
}

::google::protobuf::uint8* guild_arrange_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dhc.guild_arrange_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // int32 guild_server = 2;
  if (this->guild_server() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->guild_server(), target);
  }

  // string guild_name = 3;
  if (this->guild_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guild_name().data(), static_cast<int>(this->guild_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_arrange_t.guild_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->guild_name(), target);
  }

  // int32 guild_zhanji = 4;
  if (this->guild_zhanji() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->guild_zhanji(), target);
  }

  // int32 guild_total_zhanji = 5;
  if (this->guild_total_zhanji() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->guild_total_zhanji(), target);
  }

  // int32 guild_icon = 6;
  if (this->guild_icon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->guild_icon(), target);
  }

  // int32 guild_ai = 7;
  if (this->guild_ai() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->guild_ai(), target);
  }

  // int32 guild_exp = 8;
  if (this->guild_exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->guild_exp(), target);
  }

  // int32 guild_level = 9;
  if (this->guild_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->guild_level(), target);
  }

  // repeated uint64 player_guids = 10;
  if (this->player_guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_guids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->player_guids_, target);
  }

  // repeated string player_names = 11;
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_names(i).data(), static_cast<int>(this->player_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_arrange_t.player_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->player_names(i), target);
  }

  // repeated int32 player_template = 12;
  if (this->player_template_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_template_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_template_, target);
  }

  // repeated int32 player_level = 13;
  if (this->player_level_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_level_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_level_, target);
  }

  // repeated int32 player_bat_eff = 14;
  if (this->player_bat_eff_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_bat_eff_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_bat_eff_, target);
  }

  // repeated int32 player_vip = 15;
  if (this->player_vip_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_vip_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_vip_, target);
  }

  // repeated int32 player_achieve = 16;
  if (this->player_achieve_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      16,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_achieve_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_achieve_, target);
  }

  // repeated int32 player_map_star = 17;
  if (this->player_map_star_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      17,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_map_star_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_map_star_, target);
  }

  // repeated int32 mplayer_nalflags = 18;
  if (this->mplayer_nalflags_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      18,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _mplayer_nalflags_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->mplayer_nalflags_, target);
  }

  // repeated uint64 player_zguids = 20;
  if (this->player_zguids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      20,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_zguids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->player_zguids_, target);
  }

  // repeated int32 player_zhanjis = 21;
  if (this->player_zhanjis_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      21,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_zhanjis_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_zhanjis_, target);
  }

  // repeated int32 player_total_zhanjis = 22;
  if (this->player_total_zhanjis_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      22,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_total_zhanjis_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_total_zhanjis_, target);
  }

  // repeated string player_znames = 23;
  for (int i = 0, n = this->player_znames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_znames(i).data(), static_cast<int>(this->player_znames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_arrange_t.player_znames");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(23, this->player_znames(i), target);
  }

  // repeated int32 player_ztemplate = 24;
  if (this->player_ztemplate_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      24,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_ztemplate_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_ztemplate_, target);
  }

  // repeated int32 player_zlevel = 25;
  if (this->player_zlevel_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      25,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_zlevel_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_zlevel_, target);
  }

  // repeated int32 player_zbat_eff = 26;
  if (this->player_zbat_eff_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      26,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_zbat_eff_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_zbat_eff_, target);
  }

  // repeated int32 player_zvip = 27;
  if (this->player_zvip_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      27,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_zvip_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_zvip_, target);
  }

  // repeated int32 player_zachieve = 28;
  if (this->player_zachieve_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      28,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_zachieve_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_zachieve_, target);
  }

  // repeated int32 player_znalflags = 29;
  if (this->player_znalflags_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      29,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_znalflags_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_znalflags_, target);
  }

  // repeated uint64 guild_fights = 30;
  if (this->guild_fights_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      30,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _guild_fights_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->guild_fights_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dhc.guild_arrange_t)
  return target;
}

size_t guild_arrange_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dhc.guild_arrange_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 player_guids = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->player_guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_guids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string player_names = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->player_names_size());
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->player_names(i));
  }

  // repeated int32 player_template = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_template_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_template_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_level = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_level_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_level_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_bat_eff = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_bat_eff_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_bat_eff_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_vip = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_vip_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_vip_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_achieve = 16;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_achieve_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_achieve_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_map_star = 17;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_map_star_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_map_star_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 mplayer_nalflags = 18;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->mplayer_nalflags_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mplayer_nalflags_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 player_zguids = 20;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->player_zguids_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_zguids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_zhanjis = 21;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_zhanjis_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_zhanjis_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_total_zhanjis = 22;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_total_zhanjis_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_total_zhanjis_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string player_znames = 23;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->player_znames_size());
  for (int i = 0, n = this->player_znames_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->player_znames(i));
  }

  // repeated int32 player_ztemplate = 24;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_ztemplate_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_ztemplate_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_zlevel = 25;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_zlevel_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_zlevel_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_zbat_eff = 26;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_zbat_eff_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_zbat_eff_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_zvip = 27;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_zvip_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_zvip_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_zachieve = 28;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_zachieve_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_zachieve_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_znalflags = 29;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_znalflags_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_znalflags_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 guild_fights = 30;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->guild_fights_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _guild_fights_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string guild_name = 3;
  if (this->guild_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guild_name());
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // int32 guild_server = 2;
  if (this->guild_server() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_server());
  }

  // int32 guild_zhanji = 4;
  if (this->guild_zhanji() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_zhanji());
  }

  // int32 guild_total_zhanji = 5;
  if (this->guild_total_zhanji() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_total_zhanji());
  }

  // int32 guild_icon = 6;
  if (this->guild_icon() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_icon());
  }

  // int32 guild_ai = 7;
  if (this->guild_ai() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_ai());
  }

  // int32 guild_exp = 8;
  if (this->guild_exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_exp());
  }

  // int32 guild_level = 9;
  if (this->guild_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->guild_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void guild_arrange_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dhc.guild_arrange_t)
  GOOGLE_DCHECK_NE(&from, this);
  const guild_arrange_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const guild_arrange_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dhc.guild_arrange_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dhc.guild_arrange_t)
    MergeFrom(*source);
  }
}

void guild_arrange_t::MergeFrom(const guild_arrange_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dhc.guild_arrange_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_guids_.MergeFrom(from.player_guids_);
  player_names_.MergeFrom(from.player_names_);
  player_template_.MergeFrom(from.player_template_);
  player_level_.MergeFrom(from.player_level_);
  player_bat_eff_.MergeFrom(from.player_bat_eff_);
  player_vip_.MergeFrom(from.player_vip_);
  player_achieve_.MergeFrom(from.player_achieve_);
  player_map_star_.MergeFrom(from.player_map_star_);
  mplayer_nalflags_.MergeFrom(from.mplayer_nalflags_);
  player_zguids_.MergeFrom(from.player_zguids_);
  player_zhanjis_.MergeFrom(from.player_zhanjis_);
  player_total_zhanjis_.MergeFrom(from.player_total_zhanjis_);
  player_znames_.MergeFrom(from.player_znames_);
  player_ztemplate_.MergeFrom(from.player_ztemplate_);
  player_zlevel_.MergeFrom(from.player_zlevel_);
  player_zbat_eff_.MergeFrom(from.player_zbat_eff_);
  player_zvip_.MergeFrom(from.player_zvip_);
  player_zachieve_.MergeFrom(from.player_zachieve_);
  player_znalflags_.MergeFrom(from.player_znalflags_);
  guild_fights_.MergeFrom(from.guild_fights_);
  if (from.guild_name().size() > 0) {

    guild_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guild_name_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.guild_server() != 0) {
    set_guild_server(from.guild_server());
  }
  if (from.guild_zhanji() != 0) {
    set_guild_zhanji(from.guild_zhanji());
  }
  if (from.guild_total_zhanji() != 0) {
    set_guild_total_zhanji(from.guild_total_zhanji());
  }
  if (from.guild_icon() != 0) {
    set_guild_icon(from.guild_icon());
  }
  if (from.guild_ai() != 0) {
    set_guild_ai(from.guild_ai());
  }
  if (from.guild_exp() != 0) {
    set_guild_exp(from.guild_exp());
  }
  if (from.guild_level() != 0) {
    set_guild_level(from.guild_level());
  }
}

void guild_arrange_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dhc.guild_arrange_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void guild_arrange_t::CopyFrom(const guild_arrange_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dhc.guild_arrange_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool guild_arrange_t::IsInitialized() const {
  return true;
}

void guild_arrange_t::Swap(guild_arrange_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void guild_arrange_t::InternalSwap(guild_arrange_t* other) {
  using std::swap;
  player_guids_.InternalSwap(&other->player_guids_);
  player_names_.InternalSwap(CastToBase(&other->player_names_));
  player_template_.InternalSwap(&other->player_template_);
  player_level_.InternalSwap(&other->player_level_);
  player_bat_eff_.InternalSwap(&other->player_bat_eff_);
  player_vip_.InternalSwap(&other->player_vip_);
  player_achieve_.InternalSwap(&other->player_achieve_);
  player_map_star_.InternalSwap(&other->player_map_star_);
  mplayer_nalflags_.InternalSwap(&other->mplayer_nalflags_);
  player_zguids_.InternalSwap(&other->player_zguids_);
  player_zhanjis_.InternalSwap(&other->player_zhanjis_);
  player_total_zhanjis_.InternalSwap(&other->player_total_zhanjis_);
  player_znames_.InternalSwap(CastToBase(&other->player_znames_));
  player_ztemplate_.InternalSwap(&other->player_ztemplate_);
  player_zlevel_.InternalSwap(&other->player_zlevel_);
  player_zbat_eff_.InternalSwap(&other->player_zbat_eff_);
  player_zvip_.InternalSwap(&other->player_zvip_);
  player_zachieve_.InternalSwap(&other->player_zachieve_);
  player_znalflags_.InternalSwap(&other->player_znalflags_);
  guild_fights_.InternalSwap(&other->guild_fights_);
  guild_name_.Swap(&other->guild_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(guild_server_, other->guild_server_);
  swap(guild_zhanji_, other->guild_zhanji_);
  swap(guild_total_zhanji_, other->guild_total_zhanji_);
  swap(guild_icon_, other->guild_icon_);
  swap(guild_ai_, other->guild_ai_);
  swap(guild_exp_, other->guild_exp_);
  swap(guild_level_, other->guild_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata guild_arrange_t::GetMetadata() const {
  protobuf_guild_5farrange_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_guild_5farrange_2eeproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dhc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dhc::guild_arrange_t* Arena::CreateMaybeMessage< ::dhc::guild_arrange_t >(Arena* arena) {
  return Arena::CreateInternal< ::dhc::guild_arrange_t >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
