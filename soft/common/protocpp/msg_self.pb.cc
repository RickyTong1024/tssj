// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_self.proto

#include "msg_self.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protocol {
namespace self {
class self_player_loadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<self_player_load>
      _instance;
} _self_player_load_default_instance_;
class self_player_load_rechargeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<self_player_load_recharge>
      _instance;
} _self_player_load_recharge_default_instance_;
class self_player_load_libaoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<self_player_load_libao>
      _instance;
} _self_player_load_libao_default_instance_;
class self_boss_change_nameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<self_boss_change_name>
      _instance;
} _self_boss_change_name_default_instance_;
}  // namespace self
}  // namespace protocol
namespace protobuf_msg_5fself_2eproto {
static void InitDefaultsself_player_load() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::self::_self_player_load_default_instance_;
    new (ptr) ::protocol::self::self_player_load();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::self::self_player_load::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_self_player_load =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsself_player_load}, {}};

static void InitDefaultsself_player_load_recharge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::self::_self_player_load_recharge_default_instance_;
    new (ptr) ::protocol::self::self_player_load_recharge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::self::self_player_load_recharge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_self_player_load_recharge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsself_player_load_recharge}, {}};

static void InitDefaultsself_player_load_libao() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::self::_self_player_load_libao_default_instance_;
    new (ptr) ::protocol::self::self_player_load_libao();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::self::self_player_load_libao::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_self_player_load_libao =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsself_player_load_libao}, {}};

static void InitDefaultsself_boss_change_name() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protocol::self::_self_boss_change_name_default_instance_;
    new (ptr) ::protocol::self::self_boss_change_name();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protocol::self::self_boss_change_name::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_self_boss_change_name =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsself_boss_change_name}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_self_player_load.base);
  ::google::protobuf::internal::InitSCC(&scc_info_self_player_load_recharge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_self_player_load_libao.base);
  ::google::protobuf::internal::InitSCC(&scc_info_self_boss_change_name.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_player_load, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_player_load, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_player_load, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_player_load, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_player_load_recharge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_player_load_recharge, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_player_load_recharge, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_player_load_recharge, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_player_load_recharge, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_player_load_recharge, huodong_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_player_load_recharge, entry_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_player_load_libao, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_player_load_libao, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_player_load_libao, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_boss_change_name, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_boss_change_name, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protocol::self::self_boss_change_name, player_name_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protocol::self::self_player_load)},
  { 8, -1, sizeof(::protocol::self::self_player_load_recharge)},
  { 19, -1, sizeof(::protocol::self::self_player_load_libao)},
  { 26, -1, sizeof(::protocol::self::self_boss_change_name)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::self::_self_player_load_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::self::_self_player_load_recharge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::self::_self_player_load_libao_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::protocol::self::_self_boss_change_name_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "msg_self.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016msg_self.proto\022\rprotocol.self\":\n\020self_"
      "player_load\022\014\n\004data\030\001 \001(\014\022\n\n\002id\030\002 \001(\005\022\014\n"
      "\004name\030\003 \001(\t\"\201\001\n\031self_player_load_recharg"
      "e\022\023\n\013player_guid\030\001 \001(\004\022\013\n\003pid\030\002 \001(\005\022\r\n\005o"
      "rder\030\003 \001(\t\022\r\n\005count\030\004 \001(\005\022\022\n\nhuodong_id\030"
      "\005 \001(\005\022\020\n\010entry_id\030\006 \001(\005\";\n\026self_player_l"
      "oad_libao\022\023\n\013player_guid\030\001 \001(\004\022\014\n\004code\030\002"
      " \001(\t\"A\n\025self_boss_change_name\022\023\n\013player_"
      "guid\030\001 \001(\004\022\023\n\013player_name\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 359);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_self.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_msg_5fself_2eproto
namespace protocol {
namespace self {

// ===================================================================

void self_player_load::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int self_player_load::kDataFieldNumber;
const int self_player_load::kIdFieldNumber;
const int self_player_load::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

self_player_load::self_player_load()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fself_2eproto::scc_info_self_player_load.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.self.self_player_load)
}
self_player_load::self_player_load(const self_player_load& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:protocol.self.self_player_load)
}

void self_player_load::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

self_player_load::~self_player_load() {
  // @@protoc_insertion_point(destructor:protocol.self.self_player_load)
  SharedDtor();
}

void self_player_load::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void self_player_load::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* self_player_load::descriptor() {
  ::protobuf_msg_5fself_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fself_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const self_player_load& self_player_load::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fself_2eproto::scc_info_self_player_load.base);
  return *internal_default_instance();
}


void self_player_load::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.self.self_player_load)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  id_ = 0;
  _internal_metadata_.Clear();
}

bool self_player_load::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.self.self_player_load)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.self.self_player_load.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.self.self_player_load)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.self.self_player_load)
  return false;
#undef DO_
}

void self_player_load::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.self.self_player_load)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.self.self_player_load.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.self.self_player_load)
}

::google::protobuf::uint8* self_player_load::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.self.self_player_load)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.self.self_player_load.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.self.self_player_load)
  return target;
}

size_t self_player_load::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.self.self_player_load)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void self_player_load::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.self.self_player_load)
  GOOGLE_DCHECK_NE(&from, this);
  const self_player_load* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const self_player_load>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.self.self_player_load)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.self.self_player_load)
    MergeFrom(*source);
  }
}

void self_player_load::MergeFrom(const self_player_load& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.self.self_player_load)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void self_player_load::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.self.self_player_load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void self_player_load::CopyFrom(const self_player_load& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.self.self_player_load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool self_player_load::IsInitialized() const {
  return true;
}

void self_player_load::Swap(self_player_load* other) {
  if (other == this) return;
  InternalSwap(other);
}
void self_player_load::InternalSwap(self_player_load* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata self_player_load::GetMetadata() const {
  protobuf_msg_5fself_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fself_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void self_player_load_recharge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int self_player_load_recharge::kPlayerGuidFieldNumber;
const int self_player_load_recharge::kPidFieldNumber;
const int self_player_load_recharge::kOrderFieldNumber;
const int self_player_load_recharge::kCountFieldNumber;
const int self_player_load_recharge::kHuodongIdFieldNumber;
const int self_player_load_recharge::kEntryIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

self_player_load_recharge::self_player_load_recharge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fself_2eproto::scc_info_self_player_load_recharge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.self.self_player_load_recharge)
}
self_player_load_recharge::self_player_load_recharge(const self_player_load_recharge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  order_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order().size() > 0) {
    order_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_);
  }
  ::memcpy(&player_guid_, &from.player_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&entry_id_) -
    reinterpret_cast<char*>(&player_guid_)) + sizeof(entry_id_));
  // @@protoc_insertion_point(copy_constructor:protocol.self.self_player_load_recharge)
}

void self_player_load_recharge::SharedCtor() {
  order_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entry_id_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(entry_id_));
}

self_player_load_recharge::~self_player_load_recharge() {
  // @@protoc_insertion_point(destructor:protocol.self.self_player_load_recharge)
  SharedDtor();
}

void self_player_load_recharge::SharedDtor() {
  order_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void self_player_load_recharge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* self_player_load_recharge::descriptor() {
  ::protobuf_msg_5fself_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fself_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const self_player_load_recharge& self_player_load_recharge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fself_2eproto::scc_info_self_player_load_recharge.base);
  return *internal_default_instance();
}


void self_player_load_recharge::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.self.self_player_load_recharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  order_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entry_id_) -
      reinterpret_cast<char*>(&player_guid_)) + sizeof(entry_id_));
  _internal_metadata_.Clear();
}

bool self_player_load_recharge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.self.self_player_load_recharge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string order = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order().data(), static_cast<int>(this->order().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.self.self_player_load_recharge.order"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 huodong_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &huodong_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 entry_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &entry_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.self.self_player_load_recharge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.self.self_player_load_recharge)
  return false;
#undef DO_
}

void self_player_load_recharge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.self.self_player_load_recharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // int32 pid = 2;
  if (this->pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pid(), output);
  }

  // string order = 3;
  if (this->order().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order().data(), static_cast<int>(this->order().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.self.self_player_load_recharge.order");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->order(), output);
  }

  // int32 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }

  // int32 huodong_id = 5;
  if (this->huodong_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->huodong_id(), output);
  }

  // int32 entry_id = 6;
  if (this->entry_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->entry_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.self.self_player_load_recharge)
}

::google::protobuf::uint8* self_player_load_recharge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.self.self_player_load_recharge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // int32 pid = 2;
  if (this->pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pid(), target);
  }

  // string order = 3;
  if (this->order().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order().data(), static_cast<int>(this->order().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.self.self_player_load_recharge.order");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->order(), target);
  }

  // int32 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->count(), target);
  }

  // int32 huodong_id = 5;
  if (this->huodong_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->huodong_id(), target);
  }

  // int32 entry_id = 6;
  if (this->entry_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->entry_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.self.self_player_load_recharge)
  return target;
}

size_t self_player_load_recharge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.self.self_player_load_recharge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string order = 3;
  if (this->order().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order());
  }

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  // int32 pid = 2;
  if (this->pid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pid());
  }

  // int32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  // int32 huodong_id = 5;
  if (this->huodong_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->huodong_id());
  }

  // int32 entry_id = 6;
  if (this->entry_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->entry_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void self_player_load_recharge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.self.self_player_load_recharge)
  GOOGLE_DCHECK_NE(&from, this);
  const self_player_load_recharge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const self_player_load_recharge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.self.self_player_load_recharge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.self.self_player_load_recharge)
    MergeFrom(*source);
  }
}

void self_player_load_recharge::MergeFrom(const self_player_load_recharge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.self.self_player_load_recharge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.order().size() > 0) {

    order_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_);
  }
  if (from.player_guid() != 0) {
    set_player_guid(from.player_guid());
  }
  if (from.pid() != 0) {
    set_pid(from.pid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.huodong_id() != 0) {
    set_huodong_id(from.huodong_id());
  }
  if (from.entry_id() != 0) {
    set_entry_id(from.entry_id());
  }
}

void self_player_load_recharge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.self.self_player_load_recharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void self_player_load_recharge::CopyFrom(const self_player_load_recharge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.self.self_player_load_recharge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool self_player_load_recharge::IsInitialized() const {
  return true;
}

void self_player_load_recharge::Swap(self_player_load_recharge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void self_player_load_recharge::InternalSwap(self_player_load_recharge* other) {
  using std::swap;
  order_.Swap(&other->order_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_guid_, other->player_guid_);
  swap(pid_, other->pid_);
  swap(count_, other->count_);
  swap(huodong_id_, other->huodong_id_);
  swap(entry_id_, other->entry_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata self_player_load_recharge::GetMetadata() const {
  protobuf_msg_5fself_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fself_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void self_player_load_libao::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int self_player_load_libao::kPlayerGuidFieldNumber;
const int self_player_load_libao::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

self_player_load_libao::self_player_load_libao()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fself_2eproto::scc_info_self_player_load_libao.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.self.self_player_load_libao)
}
self_player_load_libao::self_player_load_libao(const self_player_load_libao& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  player_guid_ = from.player_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.self.self_player_load_libao)
}

void self_player_load_libao::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_guid_ = GOOGLE_ULONGLONG(0);
}

self_player_load_libao::~self_player_load_libao() {
  // @@protoc_insertion_point(destructor:protocol.self.self_player_load_libao)
  SharedDtor();
}

void self_player_load_libao::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void self_player_load_libao::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* self_player_load_libao::descriptor() {
  ::protobuf_msg_5fself_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fself_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const self_player_load_libao& self_player_load_libao::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fself_2eproto::scc_info_self_player_load_libao.base);
  return *internal_default_instance();
}


void self_player_load_libao::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.self.self_player_load_libao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool self_player_load_libao::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.self.self_player_load_libao)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.self.self_player_load_libao.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.self.self_player_load_libao)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.self.self_player_load_libao)
  return false;
#undef DO_
}

void self_player_load_libao::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.self.self_player_load_libao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.self.self_player_load_libao.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.self.self_player_load_libao)
}

::google::protobuf::uint8* self_player_load_libao::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.self.self_player_load_libao)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.self.self_player_load_libao.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.self.self_player_load_libao)
  return target;
}

size_t self_player_load_libao::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.self.self_player_load_libao)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string code = 2;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void self_player_load_libao::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.self.self_player_load_libao)
  GOOGLE_DCHECK_NE(&from, this);
  const self_player_load_libao* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const self_player_load_libao>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.self.self_player_load_libao)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.self.self_player_load_libao)
    MergeFrom(*source);
  }
}

void self_player_load_libao::MergeFrom(const self_player_load_libao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.self.self_player_load_libao)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.player_guid() != 0) {
    set_player_guid(from.player_guid());
  }
}

void self_player_load_libao::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.self.self_player_load_libao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void self_player_load_libao::CopyFrom(const self_player_load_libao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.self.self_player_load_libao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool self_player_load_libao::IsInitialized() const {
  return true;
}

void self_player_load_libao::Swap(self_player_load_libao* other) {
  if (other == this) return;
  InternalSwap(other);
}
void self_player_load_libao::InternalSwap(self_player_load_libao* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_guid_, other->player_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata self_player_load_libao::GetMetadata() const {
  protobuf_msg_5fself_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fself_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void self_boss_change_name::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int self_boss_change_name::kPlayerGuidFieldNumber;
const int self_boss_change_name::kPlayerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

self_boss_change_name::self_boss_change_name()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_msg_5fself_2eproto::scc_info_self_boss_change_name.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.self.self_boss_change_name)
}
self_boss_change_name::self_boss_change_name(const self_boss_change_name& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.player_name().size() > 0) {
    player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
  }
  player_guid_ = from.player_guid_;
  // @@protoc_insertion_point(copy_constructor:protocol.self.self_boss_change_name)
}

void self_boss_change_name::SharedCtor() {
  player_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_guid_ = GOOGLE_ULONGLONG(0);
}

self_boss_change_name::~self_boss_change_name() {
  // @@protoc_insertion_point(destructor:protocol.self.self_boss_change_name)
  SharedDtor();
}

void self_boss_change_name::SharedDtor() {
  player_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void self_boss_change_name::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* self_boss_change_name::descriptor() {
  ::protobuf_msg_5fself_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fself_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const self_boss_change_name& self_boss_change_name::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_msg_5fself_2eproto::scc_info_self_boss_change_name.base);
  return *internal_default_instance();
}


void self_boss_change_name::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.self.self_boss_change_name)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool self_boss_change_name::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.self.self_boss_change_name)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 player_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string player_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_player_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->player_name().data(), static_cast<int>(this->player_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protocol.self.self_boss_change_name.player_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.self.self_boss_change_name)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.self.self_boss_change_name)
  return false;
#undef DO_
}

void self_boss_change_name::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.self.self_boss_change_name)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->player_guid(), output);
  }

  // string player_name = 2;
  if (this->player_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.self.self_boss_change_name.player_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->player_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.self.self_boss_change_name)
}

::google::protobuf::uint8* self_boss_change_name::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.self.self_boss_change_name)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->player_guid(), target);
  }

  // string player_name = 2;
  if (this->player_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_name().data(), static_cast<int>(this->player_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protocol.self.self_boss_change_name.player_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->player_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.self.self_boss_change_name)
  return target;
}

size_t self_boss_change_name::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.self.self_boss_change_name)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string player_name = 2;
  if (this->player_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->player_name());
  }

  // uint64 player_guid = 1;
  if (this->player_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void self_boss_change_name::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.self.self_boss_change_name)
  GOOGLE_DCHECK_NE(&from, this);
  const self_boss_change_name* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const self_boss_change_name>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.self.self_boss_change_name)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.self.self_boss_change_name)
    MergeFrom(*source);
  }
}

void self_boss_change_name::MergeFrom(const self_boss_change_name& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.self.self_boss_change_name)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_name().size() > 0) {

    player_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_name_);
  }
  if (from.player_guid() != 0) {
    set_player_guid(from.player_guid());
  }
}

void self_boss_change_name::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.self.self_boss_change_name)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void self_boss_change_name::CopyFrom(const self_boss_change_name& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.self.self_boss_change_name)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool self_boss_change_name::IsInitialized() const {
  return true;
}

void self_boss_change_name::Swap(self_boss_change_name* other) {
  if (other == this) return;
  InternalSwap(other);
}
void self_boss_change_name::InternalSwap(self_boss_change_name* other) {
  using std::swap;
  player_name_.Swap(&other->player_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_guid_, other->player_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata self_boss_change_name::GetMetadata() const {
  protobuf_msg_5fself_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_msg_5fself_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace self
}  // namespace protocol
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::self::self_player_load* Arena::CreateMaybeMessage< ::protocol::self::self_player_load >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::self::self_player_load >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::self::self_player_load_recharge* Arena::CreateMaybeMessage< ::protocol::self::self_player_load_recharge >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::self::self_player_load_recharge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::self::self_player_load_libao* Arena::CreateMaybeMessage< ::protocol::self::self_player_load_libao >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::self::self_player_load_libao >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::protocol::self::self_boss_change_name* Arena::CreateMaybeMessage< ::protocol::self::self_boss_change_name >(Arena* arena) {
  return Arena::CreateInternal< ::protocol::self::self_boss_change_name >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
