// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: boss.eproto

#ifndef PROTOBUF_INCLUDED_boss_2eeproto
#define PROTOBUF_INCLUDED_boss_2eeproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_boss_2eeproto 

namespace protobuf_boss_2eeproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_boss_2eeproto
namespace dhc {
class boss_t;
class boss_tDefaultTypeInternal;
extern boss_tDefaultTypeInternal _boss_t_default_instance_;
}  // namespace dhc
namespace google {
namespace protobuf {
template<> ::dhc::boss_t* Arena::CreateMaybeMessage<::dhc::boss_t>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dhc {

// ===================================================================

class boss_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dhc.boss_t) */ {
 public:
  boss_t();
  virtual ~boss_t();

  boss_t(const boss_t& from);

  inline boss_t& operator=(const boss_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  boss_t(boss_t&& from) noexcept
    : boss_t() {
    *this = ::std::move(from);
  }

  inline boss_t& operator=(boss_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const boss_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const boss_t* internal_default_instance() {
    return reinterpret_cast<const boss_t*>(
               &_boss_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(boss_t* other);
  friend void swap(boss_t& a, boss_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline boss_t* New() const final {
    return CreateMaybeMessage<boss_t>(NULL);
  }

  boss_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<boss_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const boss_t& from);
  void MergeFrom(const boss_t& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(boss_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 player_guids = 5;
  int player_guids_size() const;
  void clear_player_guids();
  static const int kPlayerGuidsFieldNumber = 5;
  ::google::protobuf::uint64 player_guids(int index) const;
  void set_player_guids(int index, ::google::protobuf::uint64 value);
  void add_player_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_guids();

  // repeated int32 player_templates = 6;
  int player_templates_size() const;
  void clear_player_templates();
  static const int kPlayerTemplatesFieldNumber = 6;
  ::google::protobuf::int32 player_templates(int index) const;
  void set_player_templates(int index, ::google::protobuf::int32 value);
  void add_player_templates(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_templates() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_templates();

  // repeated string player_names = 7;
  int player_names_size() const;
  void clear_player_names();
  static const int kPlayerNamesFieldNumber = 7;
  const ::std::string& player_names(int index) const;
  ::std::string* mutable_player_names(int index);
  void set_player_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_player_names(int index, ::std::string&& value);
  #endif
  void set_player_names(int index, const char* value);
  void set_player_names(int index, const char* value, size_t size);
  ::std::string* add_player_names();
  void add_player_names(const ::std::string& value);
  #if LANG_CXX11
  void add_player_names(::std::string&& value);
  #endif
  void add_player_names(const char* value);
  void add_player_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& player_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_player_names();

  // repeated int32 player_levels = 8;
  int player_levels_size() const;
  void clear_player_levels();
  static const int kPlayerLevelsFieldNumber = 8;
  ::google::protobuf::int32 player_levels(int index) const;
  void set_player_levels(int index, ::google::protobuf::int32 value);
  void add_player_levels(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_levels() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_levels();

  // repeated int64 player_damages = 9;
  int player_damages_size() const;
  void clear_player_damages();
  static const int kPlayerDamagesFieldNumber = 9;
  ::google::protobuf::int64 player_damages(int index) const;
  void set_player_damages(int index, ::google::protobuf::int64 value);
  void add_player_damages(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      player_damages() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_player_damages();

  // repeated int32 player_nums = 10;
  int player_nums_size() const;
  void clear_player_nums();
  static const int kPlayerNumsFieldNumber = 10;
  ::google::protobuf::int32 player_nums(int index) const;
  void set_player_nums(int index, ::google::protobuf::int32 value);
  void add_player_nums(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_nums() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_nums();

  // repeated int64 player_tops = 11;
  int player_tops_size() const;
  void clear_player_tops();
  static const int kPlayerTopsFieldNumber = 11;
  ::google::protobuf::int64 player_tops(int index) const;
  void set_player_tops(int index, ::google::protobuf::int64 value);
  void add_player_tops(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      player_tops() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_player_tops();

  // repeated int32 player_vips = 12;
  int player_vips_size() const;
  void clear_player_vips();
  static const int kPlayerVipsFieldNumber = 12;
  ::google::protobuf::int32 player_vips(int index) const;
  void set_player_vips(int index, ::google::protobuf::int32 value);
  void add_player_vips(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_vips() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_vips();

  // repeated int32 player_achieves = 13;
  int player_achieves_size() const;
  void clear_player_achieves();
  static const int kPlayerAchievesFieldNumber = 13;
  ::google::protobuf::int32 player_achieves(int index) const;
  void set_player_achieves(int index, ::google::protobuf::int32 value);
  void add_player_achieves(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_achieves() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_achieves();

  // repeated int32 player_chenghaos = 14;
  int player_chenghaos_size() const;
  void clear_player_chenghaos();
  static const int kPlayerChenghaosFieldNumber = 14;
  ::google::protobuf::int32 player_chenghaos(int index) const;
  void set_player_chenghaos(int index, ::google::protobuf::int32 value);
  void add_player_chenghaos(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_chenghaos() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_chenghaos();

  // repeated int32 player_nalflags = 15;
  int player_nalflags_size() const;
  void clear_player_nalflags();
  static const int kPlayerNalflagsFieldNumber = 15;
  ::google::protobuf::int32 player_nalflags(int index) const;
  void set_player_nalflags(int index, ::google::protobuf::int32 value);
  void add_player_nalflags(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_nalflags() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_nalflags();

  // repeated uint64 player_rank_guids = 17;
  int player_rank_guids_size() const;
  void clear_player_rank_guids();
  static const int kPlayerRankGuidsFieldNumber = 17;
  ::google::protobuf::uint64 player_rank_guids(int index) const;
  void set_player_rank_guids(int index, ::google::protobuf::uint64 value);
  void add_player_rank_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_rank_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_rank_guids();

  // repeated int32 player_ranks = 18;
  int player_ranks_size() const;
  void clear_player_ranks();
  static const int kPlayerRanksFieldNumber = 18;
  ::google::protobuf::int32 player_ranks(int index) const;
  void set_player_ranks(int index, ::google::protobuf::int32 value);
  void add_player_ranks(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_ranks() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_ranks();

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // double cur_hp = 3;
  void clear_cur_hp();
  static const int kCurHpFieldNumber = 3;
  double cur_hp() const;
  void set_cur_hp(double value);

  // double max_hp = 4;
  void clear_max_hp();
  static const int kMaxHpFieldNumber = 4;
  double max_hp() const;
  void set_max_hp(double value);

  // int32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // int32 boss_last_num = 19;
  void clear_boss_last_num();
  static const int kBossLastNumFieldNumber = 19;
  ::google::protobuf::int32 boss_last_num() const;
  void set_boss_last_num(::google::protobuf::int32 value);

  // uint64 last_time = 16;
  void clear_last_time();
  static const int kLastTimeFieldNumber = 16;
  ::google::protobuf::uint64 last_time() const;
  void set_last_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:dhc.boss_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_guids_;
  mutable int _player_guids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_templates_;
  mutable int _player_templates_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> player_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_levels_;
  mutable int _player_levels_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > player_damages_;
  mutable int _player_damages_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_nums_;
  mutable int _player_nums_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > player_tops_;
  mutable int _player_tops_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_vips_;
  mutable int _player_vips_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_achieves_;
  mutable int _player_achieves_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_chenghaos_;
  mutable int _player_chenghaos_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_nalflags_;
  mutable int _player_nalflags_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_rank_guids_;
  mutable int _player_rank_guids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_ranks_;
  mutable int _player_ranks_cached_byte_size_;
  ::google::protobuf::uint64 guid_;
  double cur_hp_;
  double max_hp_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 boss_last_num_;
  ::google::protobuf::uint64 last_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_boss_2eeproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// boss_t

// uint64 guid = 1;
inline void boss_t::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 boss_t::guid() const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.guid)
  return guid_;
}
inline void boss_t::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.boss_t.guid)
}

// int32 level = 2;
inline void boss_t::clear_level() {
  set_changed();
  level_ = 0;
}
inline ::google::protobuf::int32 boss_t::level() const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.level)
  return level_;
}
inline void boss_t::set_level(::google::protobuf::int32 value) {
  set_changed();
  
  level_ = value;
  // @@protoc_insertion_point(field_set:dhc.boss_t.level)
}

// double cur_hp = 3;
inline void boss_t::clear_cur_hp() {
  set_changed();
  cur_hp_ = 0;
}
inline double boss_t::cur_hp() const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.cur_hp)
  return cur_hp_;
}
inline void boss_t::set_cur_hp(double value) {
  set_changed();
  
  cur_hp_ = value;
  // @@protoc_insertion_point(field_set:dhc.boss_t.cur_hp)
}

// double max_hp = 4;
inline void boss_t::clear_max_hp() {
  set_changed();
  max_hp_ = 0;
}
inline double boss_t::max_hp() const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.max_hp)
  return max_hp_;
}
inline void boss_t::set_max_hp(double value) {
  set_changed();
  
  max_hp_ = value;
  // @@protoc_insertion_point(field_set:dhc.boss_t.max_hp)
}

// repeated uint64 player_guids = 5;
inline int boss_t::player_guids_size() const {
  return player_guids_.size();
}
inline void boss_t::clear_player_guids() {
  set_changed();
  player_guids_.Clear();
}
inline ::google::protobuf::uint64 boss_t::player_guids(int index) const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.player_guids)
  return player_guids_.Get(index);
}
inline void boss_t::set_player_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.boss_t.player_guids)
}
inline void boss_t::add_player_guids(::google::protobuf::uint64 value) {
  set_changed();
  player_guids_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.boss_t.player_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
boss_t::player_guids() const {
  // @@protoc_insertion_point(field_list:dhc.boss_t.player_guids)
  return player_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
boss_t::mutable_player_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.boss_t.player_guids)
  return &player_guids_;
}

// repeated int32 player_templates = 6;
inline int boss_t::player_templates_size() const {
  return player_templates_.size();
}
inline void boss_t::clear_player_templates() {
  set_changed();
  player_templates_.Clear();
}
inline ::google::protobuf::int32 boss_t::player_templates(int index) const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.player_templates)
  return player_templates_.Get(index);
}
inline void boss_t::set_player_templates(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_templates_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.boss_t.player_templates)
}
inline void boss_t::add_player_templates(::google::protobuf::int32 value) {
  set_changed();
  player_templates_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.boss_t.player_templates)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
boss_t::player_templates() const {
  // @@protoc_insertion_point(field_list:dhc.boss_t.player_templates)
  return player_templates_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
boss_t::mutable_player_templates() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.boss_t.player_templates)
  return &player_templates_;
}

// repeated string player_names = 7;
inline int boss_t::player_names_size() const {
  return player_names_.size();
}
inline void boss_t::clear_player_names() {
  set_changed();
  player_names_.Clear();
}
inline const ::std::string& boss_t::player_names(int index) const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.player_names)
  return player_names_.Get(index);
}
inline ::std::string* boss_t::mutable_player_names(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:dhc.boss_t.player_names)
  return player_names_.Mutable(index);
}
inline void boss_t::set_player_names(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:dhc.boss_t.player_names)
  player_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void boss_t::set_player_names(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:dhc.boss_t.player_names)
  player_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void boss_t::set_player_names(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  player_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dhc.boss_t.player_names)
}
inline void boss_t::set_player_names(int index, const char* value, size_t size) {
  set_changed();
  player_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dhc.boss_t.player_names)
}
inline ::std::string* boss_t::add_player_names() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:dhc.boss_t.player_names)
  return player_names_.Add();
}
inline void boss_t::add_player_names(const ::std::string& value) {
  set_changed();
  player_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dhc.boss_t.player_names)
}
#if LANG_CXX11
inline void boss_t::add_player_names(::std::string&& value) {
  set_changed();
  player_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:dhc.boss_t.player_names)
}
#endif
inline void boss_t::add_player_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  player_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dhc.boss_t.player_names)
}
inline void boss_t::add_player_names(const char* value, size_t size) {
  set_changed();
  player_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dhc.boss_t.player_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
boss_t::player_names() const {
  // @@protoc_insertion_point(field_list:dhc.boss_t.player_names)
  return player_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
boss_t::mutable_player_names() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.boss_t.player_names)
  return &player_names_;
}

// repeated int32 player_levels = 8;
inline int boss_t::player_levels_size() const {
  return player_levels_.size();
}
inline void boss_t::clear_player_levels() {
  set_changed();
  player_levels_.Clear();
}
inline ::google::protobuf::int32 boss_t::player_levels(int index) const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.player_levels)
  return player_levels_.Get(index);
}
inline void boss_t::set_player_levels(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_levels_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.boss_t.player_levels)
}
inline void boss_t::add_player_levels(::google::protobuf::int32 value) {
  set_changed();
  player_levels_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.boss_t.player_levels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
boss_t::player_levels() const {
  // @@protoc_insertion_point(field_list:dhc.boss_t.player_levels)
  return player_levels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
boss_t::mutable_player_levels() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.boss_t.player_levels)
  return &player_levels_;
}

// repeated int64 player_damages = 9;
inline int boss_t::player_damages_size() const {
  return player_damages_.size();
}
inline void boss_t::clear_player_damages() {
  set_changed();
  player_damages_.Clear();
}
inline ::google::protobuf::int64 boss_t::player_damages(int index) const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.player_damages)
  return player_damages_.Get(index);
}
inline void boss_t::set_player_damages(int index, ::google::protobuf::int64 value) {
  set_changed();
  player_damages_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.boss_t.player_damages)
}
inline void boss_t::add_player_damages(::google::protobuf::int64 value) {
  set_changed();
  player_damages_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.boss_t.player_damages)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
boss_t::player_damages() const {
  // @@protoc_insertion_point(field_list:dhc.boss_t.player_damages)
  return player_damages_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
boss_t::mutable_player_damages() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.boss_t.player_damages)
  return &player_damages_;
}

// repeated int32 player_nums = 10;
inline int boss_t::player_nums_size() const {
  return player_nums_.size();
}
inline void boss_t::clear_player_nums() {
  set_changed();
  player_nums_.Clear();
}
inline ::google::protobuf::int32 boss_t::player_nums(int index) const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.player_nums)
  return player_nums_.Get(index);
}
inline void boss_t::set_player_nums(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_nums_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.boss_t.player_nums)
}
inline void boss_t::add_player_nums(::google::protobuf::int32 value) {
  set_changed();
  player_nums_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.boss_t.player_nums)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
boss_t::player_nums() const {
  // @@protoc_insertion_point(field_list:dhc.boss_t.player_nums)
  return player_nums_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
boss_t::mutable_player_nums() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.boss_t.player_nums)
  return &player_nums_;
}

// repeated int64 player_tops = 11;
inline int boss_t::player_tops_size() const {
  return player_tops_.size();
}
inline void boss_t::clear_player_tops() {
  set_changed();
  player_tops_.Clear();
}
inline ::google::protobuf::int64 boss_t::player_tops(int index) const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.player_tops)
  return player_tops_.Get(index);
}
inline void boss_t::set_player_tops(int index, ::google::protobuf::int64 value) {
  set_changed();
  player_tops_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.boss_t.player_tops)
}
inline void boss_t::add_player_tops(::google::protobuf::int64 value) {
  set_changed();
  player_tops_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.boss_t.player_tops)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
boss_t::player_tops() const {
  // @@protoc_insertion_point(field_list:dhc.boss_t.player_tops)
  return player_tops_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
boss_t::mutable_player_tops() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.boss_t.player_tops)
  return &player_tops_;
}

// repeated int32 player_vips = 12;
inline int boss_t::player_vips_size() const {
  return player_vips_.size();
}
inline void boss_t::clear_player_vips() {
  set_changed();
  player_vips_.Clear();
}
inline ::google::protobuf::int32 boss_t::player_vips(int index) const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.player_vips)
  return player_vips_.Get(index);
}
inline void boss_t::set_player_vips(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_vips_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.boss_t.player_vips)
}
inline void boss_t::add_player_vips(::google::protobuf::int32 value) {
  set_changed();
  player_vips_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.boss_t.player_vips)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
boss_t::player_vips() const {
  // @@protoc_insertion_point(field_list:dhc.boss_t.player_vips)
  return player_vips_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
boss_t::mutable_player_vips() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.boss_t.player_vips)
  return &player_vips_;
}

// repeated int32 player_achieves = 13;
inline int boss_t::player_achieves_size() const {
  return player_achieves_.size();
}
inline void boss_t::clear_player_achieves() {
  set_changed();
  player_achieves_.Clear();
}
inline ::google::protobuf::int32 boss_t::player_achieves(int index) const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.player_achieves)
  return player_achieves_.Get(index);
}
inline void boss_t::set_player_achieves(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_achieves_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.boss_t.player_achieves)
}
inline void boss_t::add_player_achieves(::google::protobuf::int32 value) {
  set_changed();
  player_achieves_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.boss_t.player_achieves)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
boss_t::player_achieves() const {
  // @@protoc_insertion_point(field_list:dhc.boss_t.player_achieves)
  return player_achieves_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
boss_t::mutable_player_achieves() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.boss_t.player_achieves)
  return &player_achieves_;
}

// repeated int32 player_chenghaos = 14;
inline int boss_t::player_chenghaos_size() const {
  return player_chenghaos_.size();
}
inline void boss_t::clear_player_chenghaos() {
  set_changed();
  player_chenghaos_.Clear();
}
inline ::google::protobuf::int32 boss_t::player_chenghaos(int index) const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.player_chenghaos)
  return player_chenghaos_.Get(index);
}
inline void boss_t::set_player_chenghaos(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_chenghaos_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.boss_t.player_chenghaos)
}
inline void boss_t::add_player_chenghaos(::google::protobuf::int32 value) {
  set_changed();
  player_chenghaos_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.boss_t.player_chenghaos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
boss_t::player_chenghaos() const {
  // @@protoc_insertion_point(field_list:dhc.boss_t.player_chenghaos)
  return player_chenghaos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
boss_t::mutable_player_chenghaos() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.boss_t.player_chenghaos)
  return &player_chenghaos_;
}

// repeated int32 player_nalflags = 15;
inline int boss_t::player_nalflags_size() const {
  return player_nalflags_.size();
}
inline void boss_t::clear_player_nalflags() {
  set_changed();
  player_nalflags_.Clear();
}
inline ::google::protobuf::int32 boss_t::player_nalflags(int index) const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.player_nalflags)
  return player_nalflags_.Get(index);
}
inline void boss_t::set_player_nalflags(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_nalflags_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.boss_t.player_nalflags)
}
inline void boss_t::add_player_nalflags(::google::protobuf::int32 value) {
  set_changed();
  player_nalflags_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.boss_t.player_nalflags)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
boss_t::player_nalflags() const {
  // @@protoc_insertion_point(field_list:dhc.boss_t.player_nalflags)
  return player_nalflags_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
boss_t::mutable_player_nalflags() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.boss_t.player_nalflags)
  return &player_nalflags_;
}

// uint64 last_time = 16;
inline void boss_t::clear_last_time() {
  set_changed();
  last_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 boss_t::last_time() const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.last_time)
  return last_time_;
}
inline void boss_t::set_last_time(::google::protobuf::uint64 value) {
  set_changed();
  
  last_time_ = value;
  // @@protoc_insertion_point(field_set:dhc.boss_t.last_time)
}

// repeated uint64 player_rank_guids = 17;
inline int boss_t::player_rank_guids_size() const {
  return player_rank_guids_.size();
}
inline void boss_t::clear_player_rank_guids() {
  set_changed();
  player_rank_guids_.Clear();
}
inline ::google::protobuf::uint64 boss_t::player_rank_guids(int index) const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.player_rank_guids)
  return player_rank_guids_.Get(index);
}
inline void boss_t::set_player_rank_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  player_rank_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.boss_t.player_rank_guids)
}
inline void boss_t::add_player_rank_guids(::google::protobuf::uint64 value) {
  set_changed();
  player_rank_guids_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.boss_t.player_rank_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
boss_t::player_rank_guids() const {
  // @@protoc_insertion_point(field_list:dhc.boss_t.player_rank_guids)
  return player_rank_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
boss_t::mutable_player_rank_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.boss_t.player_rank_guids)
  return &player_rank_guids_;
}

// repeated int32 player_ranks = 18;
inline int boss_t::player_ranks_size() const {
  return player_ranks_.size();
}
inline void boss_t::clear_player_ranks() {
  set_changed();
  player_ranks_.Clear();
}
inline ::google::protobuf::int32 boss_t::player_ranks(int index) const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.player_ranks)
  return player_ranks_.Get(index);
}
inline void boss_t::set_player_ranks(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_ranks_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.boss_t.player_ranks)
}
inline void boss_t::add_player_ranks(::google::protobuf::int32 value) {
  set_changed();
  player_ranks_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.boss_t.player_ranks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
boss_t::player_ranks() const {
  // @@protoc_insertion_point(field_list:dhc.boss_t.player_ranks)
  return player_ranks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
boss_t::mutable_player_ranks() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.boss_t.player_ranks)
  return &player_ranks_;
}

// int32 boss_last_num = 19;
inline void boss_t::clear_boss_last_num() {
  set_changed();
  boss_last_num_ = 0;
}
inline ::google::protobuf::int32 boss_t::boss_last_num() const {
  // @@protoc_insertion_point(field_get:dhc.boss_t.boss_last_num)
  return boss_last_num_;
}
inline void boss_t::set_boss_last_num(::google::protobuf::int32 value) {
  set_changed();
  
  boss_last_num_ = value;
  // @@protoc_insertion_point(field_set:dhc.boss_t.boss_last_num)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace dhc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_boss_2eeproto
