// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guild_red.eproto

#include "guild_red.eproto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace dhc {
class guild_red_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<guild_red_t>
      _instance;
} _guild_red_t_default_instance_;
}  // namespace dhc
namespace protobuf_guild_5fred_2eeproto {
static void InitDefaultsguild_red_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dhc::_guild_red_t_default_instance_;
    new (ptr) ::dhc::guild_red_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dhc::guild_red_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_guild_red_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsguild_red_t}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_guild_red_t.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, guild_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, create_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, create_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, create_vip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, create_achieve_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, template_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, remain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, nalflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, player_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, player_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, player_vip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, player_achieve_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, player_jewel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_red_t, player_nalflag_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dhc::guild_red_t)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dhc::_guild_red_t_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "guild_red.eproto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020guild_red.eproto\022\003dhc\"\356\002\n\013guild_red_t\022"
      "\014\n\004guid\030\001 \001(\004\022\022\n\nguild_guid\030\002 \001(\004\022\023\n\013cre"
      "ate_name\030\003 \001(\t\022\021\n\tcreate_id\030\004 \001(\005\022\022\n\ncre"
      "ate_vip\030\005 \001(\005\022\026\n\016create_achieve\030\006 \001(\005\022\023\n"
      "\013template_id\030\007 \001(\005\022\014\n\004time\030\010 \001(\004\022\014\n\004text"
      "\030\t \001(\t\022\016\n\006remain\030\n \001(\005\022\017\n\007nalflag\030\013 \001(\005\022"
      "\023\n\013player_guid\030\024 \003(\004\022\022\n\nplayer_ids\030\025 \003(\005"
      "\022\024\n\014player_names\030\026 \003(\t\022\022\n\nplayer_vip\030\027 \003"
      "(\005\022\026\n\016player_achieve\030\030 \003(\005\022\024\n\014player_jew"
      "el\030\031 \003(\005\022\026\n\016player_nalflag\030\032 \003(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 400);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "guild_red.eproto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_guild_5fred_2eeproto
namespace dhc {

// ===================================================================

void guild_red_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int guild_red_t::kGuidFieldNumber;
const int guild_red_t::kGuildGuidFieldNumber;
const int guild_red_t::kCreateNameFieldNumber;
const int guild_red_t::kCreateIdFieldNumber;
const int guild_red_t::kCreateVipFieldNumber;
const int guild_red_t::kCreateAchieveFieldNumber;
const int guild_red_t::kTemplateIdFieldNumber;
const int guild_red_t::kTimeFieldNumber;
const int guild_red_t::kTextFieldNumber;
const int guild_red_t::kRemainFieldNumber;
const int guild_red_t::kNalflagFieldNumber;
const int guild_red_t::kPlayerGuidFieldNumber;
const int guild_red_t::kPlayerIdsFieldNumber;
const int guild_red_t::kPlayerNamesFieldNumber;
const int guild_red_t::kPlayerVipFieldNumber;
const int guild_red_t::kPlayerAchieveFieldNumber;
const int guild_red_t::kPlayerJewelFieldNumber;
const int guild_red_t::kPlayerNalflagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

guild_red_t::guild_red_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_guild_5fred_2eeproto::scc_info_guild_red_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dhc.guild_red_t)
}
guild_red_t::guild_red_t(const guild_red_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_guid_(from.player_guid_),
      player_ids_(from.player_ids_),
      player_names_(from.player_names_),
      player_vip_(from.player_vip_),
      player_achieve_(from.player_achieve_),
      player_jewel_(from.player_jewel_),
      player_nalflag_(from.player_nalflag_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  create_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.create_name().size() > 0) {
    create_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_name_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&nalflag_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(nalflag_));
  // @@protoc_insertion_point(copy_constructor:dhc.guild_red_t)
}

void guild_red_t::SharedCtor() {
  create_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nalflag_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(nalflag_));
}

guild_red_t::~guild_red_t() {
  // @@protoc_insertion_point(destructor:dhc.guild_red_t)
  SharedDtor();
}

void guild_red_t::SharedDtor() {
  create_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void guild_red_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* guild_red_t::descriptor() {
  ::protobuf_guild_5fred_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_guild_5fred_2eeproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const guild_red_t& guild_red_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_guild_5fred_2eeproto::scc_info_guild_red_t.base);
  return *internal_default_instance();
}


void guild_red_t::Clear() {
// @@protoc_insertion_point(message_clear_start:dhc.guild_red_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  player_guid_.Clear();
  set_changed();
  player_ids_.Clear();
  set_changed();
  player_names_.Clear();
  set_changed();
  player_vip_.Clear();
  set_changed();
  player_achieve_.Clear();
  set_changed();
  player_jewel_.Clear();
  set_changed();
  player_nalflag_.Clear();
  set_changed();
  create_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nalflag_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(nalflag_));
  _internal_metadata_.Clear();
}

bool guild_red_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dhc.guild_red_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guild_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guild_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string create_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_create_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->create_name().data(), static_cast<int>(this->create_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dhc.guild_red_t.create_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 create_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &create_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 create_vip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &create_vip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 create_achieve = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &create_achieve_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 template_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &template_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dhc.guild_red_t.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 remain = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &remain_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nalflag = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nalflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 player_guid = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_player_guid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 162u, input, this->mutable_player_guid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_ids = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 170u, input, this->mutable_player_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string player_names = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_player_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->player_names(this->player_names_size() - 1).data(),
            static_cast<int>(this->player_names(this->player_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dhc.guild_red_t.player_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_vip = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_vip())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 186u, input, this->mutable_player_vip())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_achieve = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_achieve())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 194u, input, this->mutable_player_achieve())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_jewel = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_jewel())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 202u, input, this->mutable_player_jewel())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 player_nalflag = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_nalflag())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 210u, input, this->mutable_player_nalflag())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dhc.guild_red_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dhc.guild_red_t)
  return false;
#undef DO_
}

void guild_red_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dhc.guild_red_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // uint64 guild_guid = 2;
  if (this->guild_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guild_guid(), output);
  }

  // string create_name = 3;
  if (this->create_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_name().data(), static_cast<int>(this->create_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_red_t.create_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->create_name(), output);
  }

  // int32 create_id = 4;
  if (this->create_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->create_id(), output);
  }

  // int32 create_vip = 5;
  if (this->create_vip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->create_vip(), output);
  }

  // int32 create_achieve = 6;
  if (this->create_achieve() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->create_achieve(), output);
  }

  // int32 template_id = 7;
  if (this->template_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->template_id(), output);
  }

  // uint64 time = 8;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->time(), output);
  }

  // string text = 9;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_red_t.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->text(), output);
  }

  // int32 remain = 10;
  if (this->remain() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->remain(), output);
  }

  // int32 nalflag = 11;
  if (this->nalflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->nalflag(), output);
  }

  // repeated uint64 player_guid = 20;
  if (this->player_guid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(20, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_guid_cached_byte_size_));
  }
  for (int i = 0, n = this->player_guid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->player_guid(i), output);
  }

  // repeated int32 player_ids = 21;
  if (this->player_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(21, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->player_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_ids(i), output);
  }

  // repeated string player_names = 22;
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_names(i).data(), static_cast<int>(this->player_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_red_t.player_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->player_names(i), output);
  }

  // repeated int32 player_vip = 23;
  if (this->player_vip_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(23, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_vip_cached_byte_size_));
  }
  for (int i = 0, n = this->player_vip_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_vip(i), output);
  }

  // repeated int32 player_achieve = 24;
  if (this->player_achieve_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(24, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_achieve_cached_byte_size_));
  }
  for (int i = 0, n = this->player_achieve_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_achieve(i), output);
  }

  // repeated int32 player_jewel = 25;
  if (this->player_jewel_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(25, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_jewel_cached_byte_size_));
  }
  for (int i = 0, n = this->player_jewel_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_jewel(i), output);
  }

  // repeated int32 player_nalflag = 26;
  if (this->player_nalflag_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(26, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_nalflag_cached_byte_size_));
  }
  for (int i = 0, n = this->player_nalflag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->player_nalflag(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dhc.guild_red_t)
}

::google::protobuf::uint8* guild_red_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dhc.guild_red_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // uint64 guild_guid = 2;
  if (this->guild_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guild_guid(), target);
  }

  // string create_name = 3;
  if (this->create_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_name().data(), static_cast<int>(this->create_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_red_t.create_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->create_name(), target);
  }

  // int32 create_id = 4;
  if (this->create_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->create_id(), target);
  }

  // int32 create_vip = 5;
  if (this->create_vip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->create_vip(), target);
  }

  // int32 create_achieve = 6;
  if (this->create_achieve() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->create_achieve(), target);
  }

  // int32 template_id = 7;
  if (this->template_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->template_id(), target);
  }

  // uint64 time = 8;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->time(), target);
  }

  // string text = 9;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_red_t.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->text(), target);
  }

  // int32 remain = 10;
  if (this->remain() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->remain(), target);
  }

  // int32 nalflag = 11;
  if (this->nalflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->nalflag(), target);
  }

  // repeated uint64 player_guid = 20;
  if (this->player_guid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      20,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_guid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->player_guid_, target);
  }

  // repeated int32 player_ids = 21;
  if (this->player_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      21,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_ids_, target);
  }

  // repeated string player_names = 22;
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->player_names(i).data(), static_cast<int>(this->player_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_red_t.player_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(22, this->player_names(i), target);
  }

  // repeated int32 player_vip = 23;
  if (this->player_vip_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      23,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_vip_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_vip_, target);
  }

  // repeated int32 player_achieve = 24;
  if (this->player_achieve_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      24,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_achieve_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_achieve_, target);
  }

  // repeated int32 player_jewel = 25;
  if (this->player_jewel_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      25,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_jewel_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_jewel_, target);
  }

  // repeated int32 player_nalflag = 26;
  if (this->player_nalflag_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      26,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _player_nalflag_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->player_nalflag_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dhc.guild_red_t)
  return target;
}

size_t guild_red_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dhc.guild_red_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 player_guid = 20;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->player_guid_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_guid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_ids = 21;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_ids_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string player_names = 22;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->player_names_size());
  for (int i = 0, n = this->player_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->player_names(i));
  }

  // repeated int32 player_vip = 23;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_vip_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_vip_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_achieve = 24;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_achieve_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_achieve_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_jewel = 25;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_jewel_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_jewel_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 player_nalflag = 26;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->player_nalflag_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_nalflag_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string create_name = 3;
  if (this->create_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->create_name());
  }

  // string text = 9;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint64 guild_guid = 2;
  if (this->guild_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guild_guid());
  }

  // int32 create_id = 4;
  if (this->create_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->create_id());
  }

  // int32 create_vip = 5;
  if (this->create_vip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->create_vip());
  }

  // int32 create_achieve = 6;
  if (this->create_achieve() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->create_achieve());
  }

  // int32 template_id = 7;
  if (this->template_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->template_id());
  }

  // uint64 time = 8;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  // int32 remain = 10;
  if (this->remain() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->remain());
  }

  // int32 nalflag = 11;
  if (this->nalflag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nalflag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void guild_red_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dhc.guild_red_t)
  GOOGLE_DCHECK_NE(&from, this);
  const guild_red_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const guild_red_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dhc.guild_red_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dhc.guild_red_t)
    MergeFrom(*source);
  }
}

void guild_red_t::MergeFrom(const guild_red_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dhc.guild_red_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_guid_.MergeFrom(from.player_guid_);
  player_ids_.MergeFrom(from.player_ids_);
  player_names_.MergeFrom(from.player_names_);
  player_vip_.MergeFrom(from.player_vip_);
  player_achieve_.MergeFrom(from.player_achieve_);
  player_jewel_.MergeFrom(from.player_jewel_);
  player_nalflag_.MergeFrom(from.player_nalflag_);
  if (from.create_name().size() > 0) {

    create_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_name_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.guild_guid() != 0) {
    set_guild_guid(from.guild_guid());
  }
  if (from.create_id() != 0) {
    set_create_id(from.create_id());
  }
  if (from.create_vip() != 0) {
    set_create_vip(from.create_vip());
  }
  if (from.create_achieve() != 0) {
    set_create_achieve(from.create_achieve());
  }
  if (from.template_id() != 0) {
    set_template_id(from.template_id());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.remain() != 0) {
    set_remain(from.remain());
  }
  if (from.nalflag() != 0) {
    set_nalflag(from.nalflag());
  }
}

void guild_red_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dhc.guild_red_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void guild_red_t::CopyFrom(const guild_red_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dhc.guild_red_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool guild_red_t::IsInitialized() const {
  return true;
}

void guild_red_t::Swap(guild_red_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void guild_red_t::InternalSwap(guild_red_t* other) {
  using std::swap;
  player_guid_.InternalSwap(&other->player_guid_);
  player_ids_.InternalSwap(&other->player_ids_);
  player_names_.InternalSwap(CastToBase(&other->player_names_));
  player_vip_.InternalSwap(&other->player_vip_);
  player_achieve_.InternalSwap(&other->player_achieve_);
  player_jewel_.InternalSwap(&other->player_jewel_);
  player_nalflag_.InternalSwap(&other->player_nalflag_);
  create_name_.Swap(&other->create_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(guild_guid_, other->guild_guid_);
  swap(create_id_, other->create_id_);
  swap(create_vip_, other->create_vip_);
  swap(create_achieve_, other->create_achieve_);
  swap(template_id_, other->template_id_);
  swap(time_, other->time_);
  swap(remain_, other->remain_);
  swap(nalflag_, other->nalflag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata guild_red_t::GetMetadata() const {
  protobuf_guild_5fred_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_guild_5fred_2eeproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dhc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dhc::guild_red_t* Arena::CreateMaybeMessage< ::dhc::guild_red_t >(Arena* arena) {
  return Arena::CreateInternal< ::dhc::guild_red_t >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
