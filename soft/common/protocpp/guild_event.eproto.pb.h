// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guild_event.eproto

#ifndef PROTOBUF_INCLUDED_guild_5fevent_2eeproto
#define PROTOBUF_INCLUDED_guild_5fevent_2eeproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_guild_5fevent_2eeproto 

namespace protobuf_guild_5fevent_2eeproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_guild_5fevent_2eeproto
namespace dhc {
class guild_event_t;
class guild_event_tDefaultTypeInternal;
extern guild_event_tDefaultTypeInternal _guild_event_t_default_instance_;
}  // namespace dhc
namespace google {
namespace protobuf {
template<> ::dhc::guild_event_t* Arena::CreateMaybeMessage<::dhc::guild_event_t>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dhc {

// ===================================================================

class guild_event_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dhc.guild_event_t) */ {
 public:
  guild_event_t();
  virtual ~guild_event_t();

  guild_event_t(const guild_event_t& from);

  inline guild_event_t& operator=(const guild_event_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  guild_event_t(guild_event_t&& from) noexcept
    : guild_event_t() {
    *this = ::std::move(from);
  }

  inline guild_event_t& operator=(guild_event_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_event_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const guild_event_t* internal_default_instance() {
    return reinterpret_cast<const guild_event_t*>(
               &_guild_event_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(guild_event_t* other);
  friend void swap(guild_event_t& a, guild_event_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline guild_event_t* New() const final {
    return CreateMaybeMessage<guild_event_t>(NULL);
  }

  guild_event_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<guild_event_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const guild_event_t& from);
  void MergeFrom(const guild_event_t& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(guild_event_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string create_name = 3;
  void clear_create_name();
  static const int kCreateNameFieldNumber = 3;
  const ::std::string& create_name() const;
  void set_create_name(const ::std::string& value);
  #if LANG_CXX11
  void set_create_name(::std::string&& value);
  #endif
  void set_create_name(const char* value);
  void set_create_name(const char* value, size_t size);
  ::std::string* mutable_create_name();
  ::std::string* release_create_name();
  void set_allocated_create_name(::std::string* create_name);

  // string player_name = 4;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 4;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint64 guild_guid = 2;
  void clear_guild_guid();
  static const int kGuildGuidFieldNumber = 2;
  ::google::protobuf::uint64 guild_guid() const;
  void set_guild_guid(::google::protobuf::uint64 value);

  // int32 type = 5;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 value = 6;
  void clear_value();
  static const int kValueFieldNumber = 6;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // uint64 time = 8;
  void clear_time();
  static const int kTimeFieldNumber = 8;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // int32 value1 = 7;
  void clear_value1();
  static const int kValue1FieldNumber = 7;
  ::google::protobuf::int32 value1() const;
  void set_value1(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dhc.guild_event_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr create_name_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 guild_guid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::int32 value1_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_guild_5fevent_2eeproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// guild_event_t

// uint64 guid = 1;
inline void guild_event_t::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 guild_event_t::guid() const {
  // @@protoc_insertion_point(field_get:dhc.guild_event_t.guid)
  return guid_;
}
inline void guild_event_t::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_event_t.guid)
}

// uint64 guild_guid = 2;
inline void guild_event_t::clear_guild_guid() {
  set_changed();
  guild_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 guild_event_t::guild_guid() const {
  // @@protoc_insertion_point(field_get:dhc.guild_event_t.guild_guid)
  return guild_guid_;
}
inline void guild_event_t::set_guild_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guild_guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_event_t.guild_guid)
}

// string create_name = 3;
inline void guild_event_t::clear_create_name() {
  set_changed();
  create_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& guild_event_t::create_name() const {
  // @@protoc_insertion_point(field_get:dhc.guild_event_t.create_name)
  return create_name_.GetNoArena();
}
inline void guild_event_t::set_create_name(const ::std::string& value) {
  set_changed();
  
  create_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dhc.guild_event_t.create_name)
}
#if LANG_CXX11
inline void guild_event_t::set_create_name(::std::string&& value) {
  set_changed();
  
  create_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dhc.guild_event_t.create_name)
}
#endif
inline void guild_event_t::set_create_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  create_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dhc.guild_event_t.create_name)
}
inline void guild_event_t::set_create_name(const char* value, size_t size) {
  set_changed();
  
  create_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dhc.guild_event_t.create_name)
}
inline ::std::string* guild_event_t::mutable_create_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:dhc.guild_event_t.create_name)
  return create_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* guild_event_t::release_create_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:dhc.guild_event_t.create_name)
  
  return create_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void guild_event_t::set_allocated_create_name(::std::string* create_name) {
  set_changed();
  if (create_name != NULL) {
    
  } else {
    
  }
  create_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), create_name);
  // @@protoc_insertion_point(field_set_allocated:dhc.guild_event_t.create_name)
}

// string player_name = 4;
inline void guild_event_t::clear_player_name() {
  set_changed();
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& guild_event_t::player_name() const {
  // @@protoc_insertion_point(field_get:dhc.guild_event_t.player_name)
  return player_name_.GetNoArena();
}
inline void guild_event_t::set_player_name(const ::std::string& value) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dhc.guild_event_t.player_name)
}
#if LANG_CXX11
inline void guild_event_t::set_player_name(::std::string&& value) {
  set_changed();
  
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dhc.guild_event_t.player_name)
}
#endif
inline void guild_event_t::set_player_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dhc.guild_event_t.player_name)
}
inline void guild_event_t::set_player_name(const char* value, size_t size) {
  set_changed();
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dhc.guild_event_t.player_name)
}
inline ::std::string* guild_event_t::mutable_player_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:dhc.guild_event_t.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* guild_event_t::release_player_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:dhc.guild_event_t.player_name)
  
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void guild_event_t::set_allocated_player_name(::std::string* player_name) {
  set_changed();
  if (player_name != NULL) {
    
  } else {
    
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:dhc.guild_event_t.player_name)
}

// int32 type = 5;
inline void guild_event_t::clear_type() {
  set_changed();
  type_ = 0;
}
inline ::google::protobuf::int32 guild_event_t::type() const {
  // @@protoc_insertion_point(field_get:dhc.guild_event_t.type)
  return type_;
}
inline void guild_event_t::set_type(::google::protobuf::int32 value) {
  set_changed();
  
  type_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_event_t.type)
}

// int32 value = 6;
inline void guild_event_t::clear_value() {
  set_changed();
  value_ = 0;
}
inline ::google::protobuf::int32 guild_event_t::value() const {
  // @@protoc_insertion_point(field_get:dhc.guild_event_t.value)
  return value_;
}
inline void guild_event_t::set_value(::google::protobuf::int32 value) {
  set_changed();
  
  value_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_event_t.value)
}

// int32 value1 = 7;
inline void guild_event_t::clear_value1() {
  set_changed();
  value1_ = 0;
}
inline ::google::protobuf::int32 guild_event_t::value1() const {
  // @@protoc_insertion_point(field_get:dhc.guild_event_t.value1)
  return value1_;
}
inline void guild_event_t::set_value1(::google::protobuf::int32 value) {
  set_changed();
  
  value1_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_event_t.value1)
}

// uint64 time = 8;
inline void guild_event_t::clear_time() {
  set_changed();
  time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 guild_event_t::time() const {
  // @@protoc_insertion_point(field_get:dhc.guild_event_t.time)
  return time_;
}
inline void guild_event_t::set_time(::google::protobuf::uint64 value) {
  set_changed();
  
  time_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_event_t.time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace dhc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_guild_5fevent_2eeproto
