// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guild_box.eproto

#include "guild_box.eproto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace dhc {
class guild_box_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<guild_box_t>
      _instance;
} _guild_box_t_default_instance_;
}  // namespace dhc
namespace protobuf_guild_5fbox_2eeproto {
static void InitDefaultsguild_box_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dhc::_guild_box_t_default_instance_;
    new (ptr) ::dhc::guild_box_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dhc::guild_box_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_guild_box_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsguild_box_t}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_guild_box_t.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_box_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_box_t, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_box_t, guild_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_box_t, mceng_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_box_t, mindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_box_t, reward_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_box_t, reward_guids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_box_t, reward_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::guild_box_t, reward_achieves_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dhc::guild_box_t)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dhc::_guild_box_t_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "guild_box.eproto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020guild_box.eproto\022\003dhc\"\247\001\n\013guild_box_t\022"
      "\014\n\004guid\030\001 \001(\004\022\022\n\nguild_guid\030\002 \001(\004\022\r\n\005mce"
      "ng\030\003 \001(\005\022\016\n\006mindex\030\004 \001(\005\022\022\n\nreward_ids\030\005"
      " \003(\005\022\024\n\014reward_guids\030\006 \003(\004\022\024\n\014reward_nam"
      "es\030\007 \003(\t\022\027\n\017reward_achieves\030\010 \003(\005b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 201);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "guild_box.eproto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_guild_5fbox_2eeproto
namespace dhc {

// ===================================================================

void guild_box_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int guild_box_t::kGuidFieldNumber;
const int guild_box_t::kGuildGuidFieldNumber;
const int guild_box_t::kMcengFieldNumber;
const int guild_box_t::kMindexFieldNumber;
const int guild_box_t::kRewardIdsFieldNumber;
const int guild_box_t::kRewardGuidsFieldNumber;
const int guild_box_t::kRewardNamesFieldNumber;
const int guild_box_t::kRewardAchievesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

guild_box_t::guild_box_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_guild_5fbox_2eeproto::scc_info_guild_box_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dhc.guild_box_t)
}
guild_box_t::guild_box_t(const guild_box_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      reward_ids_(from.reward_ids_),
      reward_guids_(from.reward_guids_),
      reward_names_(from.reward_names_),
      reward_achieves_(from.reward_achieves_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&mindex_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(mindex_));
  // @@protoc_insertion_point(copy_constructor:dhc.guild_box_t)
}

void guild_box_t::SharedCtor() {
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mindex_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(mindex_));
}

guild_box_t::~guild_box_t() {
  // @@protoc_insertion_point(destructor:dhc.guild_box_t)
  SharedDtor();
}

void guild_box_t::SharedDtor() {
}

void guild_box_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* guild_box_t::descriptor() {
  ::protobuf_guild_5fbox_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_guild_5fbox_2eeproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const guild_box_t& guild_box_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_guild_5fbox_2eeproto::scc_info_guild_box_t.base);
  return *internal_default_instance();
}


void guild_box_t::Clear() {
// @@protoc_insertion_point(message_clear_start:dhc.guild_box_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  reward_ids_.Clear();
  set_changed();
  reward_guids_.Clear();
  set_changed();
  reward_names_.Clear();
  set_changed();
  reward_achieves_.Clear();
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mindex_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(mindex_));
  _internal_metadata_.Clear();
}

bool guild_box_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dhc.guild_box_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guild_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guild_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mceng = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mceng_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mindex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 reward_ids = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_reward_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_reward_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 reward_guids = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_reward_guids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 50u, input, this->mutable_reward_guids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string reward_names = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_reward_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reward_names(this->reward_names_size() - 1).data(),
            static_cast<int>(this->reward_names(this->reward_names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dhc.guild_box_t.reward_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 reward_achieves = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_reward_achieves())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_reward_achieves())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dhc.guild_box_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dhc.guild_box_t)
  return false;
#undef DO_
}

void guild_box_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dhc.guild_box_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // uint64 guild_guid = 2;
  if (this->guild_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guild_guid(), output);
  }

  // int32 mceng = 3;
  if (this->mceng() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mceng(), output);
  }

  // int32 mindex = 4;
  if (this->mindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mindex(), output);
  }

  // repeated int32 reward_ids = 5;
  if (this->reward_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _reward_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->reward_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->reward_ids(i), output);
  }

  // repeated uint64 reward_guids = 6;
  if (this->reward_guids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _reward_guids_cached_byte_size_));
  }
  for (int i = 0, n = this->reward_guids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->reward_guids(i), output);
  }

  // repeated string reward_names = 7;
  for (int i = 0, n = this->reward_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reward_names(i).data(), static_cast<int>(this->reward_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_box_t.reward_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->reward_names(i), output);
  }

  // repeated int32 reward_achieves = 8;
  if (this->reward_achieves_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _reward_achieves_cached_byte_size_));
  }
  for (int i = 0, n = this->reward_achieves_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->reward_achieves(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dhc.guild_box_t)
}

::google::protobuf::uint8* guild_box_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dhc.guild_box_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // uint64 guild_guid = 2;
  if (this->guild_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guild_guid(), target);
  }

  // int32 mceng = 3;
  if (this->mceng() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mceng(), target);
  }

  // int32 mindex = 4;
  if (this->mindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mindex(), target);
  }

  // repeated int32 reward_ids = 5;
  if (this->reward_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _reward_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->reward_ids_, target);
  }

  // repeated uint64 reward_guids = 6;
  if (this->reward_guids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _reward_guids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->reward_guids_, target);
  }

  // repeated string reward_names = 7;
  for (int i = 0, n = this->reward_names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reward_names(i).data(), static_cast<int>(this->reward_names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dhc.guild_box_t.reward_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->reward_names(i), target);
  }

  // repeated int32 reward_achieves = 8;
  if (this->reward_achieves_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _reward_achieves_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->reward_achieves_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dhc.guild_box_t)
  return target;
}

size_t guild_box_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dhc.guild_box_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 reward_ids = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->reward_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _reward_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 reward_guids = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->reward_guids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _reward_guids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string reward_names = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->reward_names_size());
  for (int i = 0, n = this->reward_names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->reward_names(i));
  }

  // repeated int32 reward_achieves = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->reward_achieves_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _reward_achieves_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint64 guild_guid = 2;
  if (this->guild_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guild_guid());
  }

  // int32 mceng = 3;
  if (this->mceng() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mceng());
  }

  // int32 mindex = 4;
  if (this->mindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void guild_box_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dhc.guild_box_t)
  GOOGLE_DCHECK_NE(&from, this);
  const guild_box_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const guild_box_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dhc.guild_box_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dhc.guild_box_t)
    MergeFrom(*source);
  }
}

void guild_box_t::MergeFrom(const guild_box_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dhc.guild_box_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reward_ids_.MergeFrom(from.reward_ids_);
  reward_guids_.MergeFrom(from.reward_guids_);
  reward_names_.MergeFrom(from.reward_names_);
  reward_achieves_.MergeFrom(from.reward_achieves_);
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.guild_guid() != 0) {
    set_guild_guid(from.guild_guid());
  }
  if (from.mceng() != 0) {
    set_mceng(from.mceng());
  }
  if (from.mindex() != 0) {
    set_mindex(from.mindex());
  }
}

void guild_box_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dhc.guild_box_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void guild_box_t::CopyFrom(const guild_box_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dhc.guild_box_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool guild_box_t::IsInitialized() const {
  return true;
}

void guild_box_t::Swap(guild_box_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void guild_box_t::InternalSwap(guild_box_t* other) {
  using std::swap;
  reward_ids_.InternalSwap(&other->reward_ids_);
  reward_guids_.InternalSwap(&other->reward_guids_);
  reward_names_.InternalSwap(CastToBase(&other->reward_names_));
  reward_achieves_.InternalSwap(&other->reward_achieves_);
  swap(guid_, other->guid_);
  swap(guild_guid_, other->guild_guid_);
  swap(mceng_, other->mceng_);
  swap(mindex_, other->mindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata guild_box_t::GetMetadata() const {
  protobuf_guild_5fbox_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_guild_5fbox_2eeproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dhc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dhc::guild_box_t* Arena::CreateMaybeMessage< ::dhc::guild_box_t >(Arena* arena) {
  return Arena::CreateInternal< ::dhc::guild_box_t >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
