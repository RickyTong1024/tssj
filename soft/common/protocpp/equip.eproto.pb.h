// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: equip.eproto

#ifndef PROTOBUF_INCLUDED_equip_2eeproto
#define PROTOBUF_INCLUDED_equip_2eeproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_equip_2eeproto 

namespace protobuf_equip_2eeproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_equip_2eeproto
namespace dhc {
class equip_t;
class equip_tDefaultTypeInternal;
extern equip_tDefaultTypeInternal _equip_t_default_instance_;
}  // namespace dhc
namespace google {
namespace protobuf {
template<> ::dhc::equip_t* Arena::CreateMaybeMessage<::dhc::equip_t>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dhc {

// ===================================================================

class equip_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dhc.equip_t) */ {
 public:
  equip_t();
  virtual ~equip_t();

  equip_t(const equip_t& from);

  inline equip_t& operator=(const equip_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  equip_t(equip_t&& from) noexcept
    : equip_t() {
    *this = ::std::move(from);
  }

  inline equip_t& operator=(equip_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const equip_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const equip_t* internal_default_instance() {
    return reinterpret_cast<const equip_t*>(
               &_equip_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(equip_t* other);
  friend void swap(equip_t& a, equip_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline equip_t* New() const final {
    return CreateMaybeMessage<equip_t>(NULL);
  }

  equip_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<equip_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const equip_t& from);
  void MergeFrom(const equip_t& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(equip_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 rand_ids = 7;
  int rand_ids_size() const;
  void clear_rand_ids();
  static const int kRandIdsFieldNumber = 7;
  ::google::protobuf::int32 rand_ids(int index) const;
  void set_rand_ids(int index, ::google::protobuf::int32 value);
  void add_rand_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rand_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rand_ids();

  // repeated int32 rand_values = 8;
  int rand_values_size() const;
  void clear_rand_values();
  static const int kRandValuesFieldNumber = 8;
  ::google::protobuf::int32 rand_values(int index) const;
  void set_rand_values(int index, ::google::protobuf::int32 value);
  void add_rand_values(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rand_values() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rand_values();

  // repeated int32 stone = 9;
  int stone_size() const;
  void clear_stone();
  static const int kStoneFieldNumber = 9;
  ::google::protobuf::int32 stone(int index) const;
  void set_stone(int index, ::google::protobuf::int32 value);
  void add_stone(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      stone() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_stone();

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint64 player_guid = 2;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 2;
  ::google::protobuf::uint64 player_guid() const;
  void set_player_guid(::google::protobuf::uint64 value);

  // uint64 role_guid = 4;
  void clear_role_guid();
  static const int kRoleGuidFieldNumber = 4;
  ::google::protobuf::uint64 role_guid() const;
  void set_role_guid(::google::protobuf::uint64 value);

  // int32 template_id = 3;
  void clear_template_id();
  static const int kTemplateIdFieldNumber = 3;
  ::google::protobuf::int32 template_id() const;
  void set_template_id(::google::protobuf::int32 value);

  // int32 enhance = 5;
  void clear_enhance();
  static const int kEnhanceFieldNumber = 5;
  ::google::protobuf::int32 enhance() const;
  void set_enhance(::google::protobuf::int32 value);

  // int32 locked = 6;
  void clear_locked();
  static const int kLockedFieldNumber = 6;
  ::google::protobuf::int32 locked() const;
  void set_locked(::google::protobuf::int32 value);

  // int32 jilian = 10;
  void clear_jilian();
  static const int kJilianFieldNumber = 10;
  ::google::protobuf::int32 jilian() const;
  void set_jilian(::google::protobuf::int32 value);

  // int32 star = 11;
  void clear_star();
  static const int kStarFieldNumber = 11;
  ::google::protobuf::int32 star() const;
  void set_star(::google::protobuf::int32 value);

  // int32 gaizao_counts = 12;
  void clear_gaizao_counts();
  static const int kGaizaoCountsFieldNumber = 12;
  ::google::protobuf::int32 gaizao_counts() const;
  void set_gaizao_counts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dhc.equip_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rand_ids_;
  mutable int _rand_ids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rand_values_;
  mutable int _rand_values_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stone_;
  mutable int _stone_cached_byte_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 player_guid_;
  ::google::protobuf::uint64 role_guid_;
  ::google::protobuf::int32 template_id_;
  ::google::protobuf::int32 enhance_;
  ::google::protobuf::int32 locked_;
  ::google::protobuf::int32 jilian_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 gaizao_counts_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_equip_2eeproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// equip_t

// uint64 guid = 1;
inline void equip_t::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 equip_t::guid() const {
  // @@protoc_insertion_point(field_get:dhc.equip_t.guid)
  return guid_;
}
inline void equip_t::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.equip_t.guid)
}

// uint64 player_guid = 2;
inline void equip_t::clear_player_guid() {
  set_changed();
  player_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 equip_t::player_guid() const {
  // @@protoc_insertion_point(field_get:dhc.equip_t.player_guid)
  return player_guid_;
}
inline void equip_t::set_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  player_guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.equip_t.player_guid)
}

// int32 template_id = 3;
inline void equip_t::clear_template_id() {
  set_changed();
  template_id_ = 0;
}
inline ::google::protobuf::int32 equip_t::template_id() const {
  // @@protoc_insertion_point(field_get:dhc.equip_t.template_id)
  return template_id_;
}
inline void equip_t::set_template_id(::google::protobuf::int32 value) {
  set_changed();
  
  template_id_ = value;
  // @@protoc_insertion_point(field_set:dhc.equip_t.template_id)
}

// uint64 role_guid = 4;
inline void equip_t::clear_role_guid() {
  set_changed();
  role_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 equip_t::role_guid() const {
  // @@protoc_insertion_point(field_get:dhc.equip_t.role_guid)
  return role_guid_;
}
inline void equip_t::set_role_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  role_guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.equip_t.role_guid)
}

// int32 enhance = 5;
inline void equip_t::clear_enhance() {
  set_changed();
  enhance_ = 0;
}
inline ::google::protobuf::int32 equip_t::enhance() const {
  // @@protoc_insertion_point(field_get:dhc.equip_t.enhance)
  return enhance_;
}
inline void equip_t::set_enhance(::google::protobuf::int32 value) {
  set_changed();
  
  enhance_ = value;
  // @@protoc_insertion_point(field_set:dhc.equip_t.enhance)
}

// int32 locked = 6;
inline void equip_t::clear_locked() {
  set_changed();
  locked_ = 0;
}
inline ::google::protobuf::int32 equip_t::locked() const {
  // @@protoc_insertion_point(field_get:dhc.equip_t.locked)
  return locked_;
}
inline void equip_t::set_locked(::google::protobuf::int32 value) {
  set_changed();
  
  locked_ = value;
  // @@protoc_insertion_point(field_set:dhc.equip_t.locked)
}

// repeated int32 rand_ids = 7;
inline int equip_t::rand_ids_size() const {
  return rand_ids_.size();
}
inline void equip_t::clear_rand_ids() {
  set_changed();
  rand_ids_.Clear();
}
inline ::google::protobuf::int32 equip_t::rand_ids(int index) const {
  // @@protoc_insertion_point(field_get:dhc.equip_t.rand_ids)
  return rand_ids_.Get(index);
}
inline void equip_t::set_rand_ids(int index, ::google::protobuf::int32 value) {
  set_changed();
  rand_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.equip_t.rand_ids)
}
inline void equip_t::add_rand_ids(::google::protobuf::int32 value) {
  set_changed();
  rand_ids_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.equip_t.rand_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
equip_t::rand_ids() const {
  // @@protoc_insertion_point(field_list:dhc.equip_t.rand_ids)
  return rand_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
equip_t::mutable_rand_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.equip_t.rand_ids)
  return &rand_ids_;
}

// repeated int32 rand_values = 8;
inline int equip_t::rand_values_size() const {
  return rand_values_.size();
}
inline void equip_t::clear_rand_values() {
  set_changed();
  rand_values_.Clear();
}
inline ::google::protobuf::int32 equip_t::rand_values(int index) const {
  // @@protoc_insertion_point(field_get:dhc.equip_t.rand_values)
  return rand_values_.Get(index);
}
inline void equip_t::set_rand_values(int index, ::google::protobuf::int32 value) {
  set_changed();
  rand_values_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.equip_t.rand_values)
}
inline void equip_t::add_rand_values(::google::protobuf::int32 value) {
  set_changed();
  rand_values_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.equip_t.rand_values)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
equip_t::rand_values() const {
  // @@protoc_insertion_point(field_list:dhc.equip_t.rand_values)
  return rand_values_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
equip_t::mutable_rand_values() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.equip_t.rand_values)
  return &rand_values_;
}

// repeated int32 stone = 9;
inline int equip_t::stone_size() const {
  return stone_.size();
}
inline void equip_t::clear_stone() {
  set_changed();
  stone_.Clear();
}
inline ::google::protobuf::int32 equip_t::stone(int index) const {
  // @@protoc_insertion_point(field_get:dhc.equip_t.stone)
  return stone_.Get(index);
}
inline void equip_t::set_stone(int index, ::google::protobuf::int32 value) {
  set_changed();
  stone_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.equip_t.stone)
}
inline void equip_t::add_stone(::google::protobuf::int32 value) {
  set_changed();
  stone_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.equip_t.stone)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
equip_t::stone() const {
  // @@protoc_insertion_point(field_list:dhc.equip_t.stone)
  return stone_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
equip_t::mutable_stone() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.equip_t.stone)
  return &stone_;
}

// int32 jilian = 10;
inline void equip_t::clear_jilian() {
  set_changed();
  jilian_ = 0;
}
inline ::google::protobuf::int32 equip_t::jilian() const {
  // @@protoc_insertion_point(field_get:dhc.equip_t.jilian)
  return jilian_;
}
inline void equip_t::set_jilian(::google::protobuf::int32 value) {
  set_changed();
  
  jilian_ = value;
  // @@protoc_insertion_point(field_set:dhc.equip_t.jilian)
}

// int32 star = 11;
inline void equip_t::clear_star() {
  set_changed();
  star_ = 0;
}
inline ::google::protobuf::int32 equip_t::star() const {
  // @@protoc_insertion_point(field_get:dhc.equip_t.star)
  return star_;
}
inline void equip_t::set_star(::google::protobuf::int32 value) {
  set_changed();
  
  star_ = value;
  // @@protoc_insertion_point(field_set:dhc.equip_t.star)
}

// int32 gaizao_counts = 12;
inline void equip_t::clear_gaizao_counts() {
  set_changed();
  gaizao_counts_ = 0;
}
inline ::google::protobuf::int32 equip_t::gaizao_counts() const {
  // @@protoc_insertion_point(field_get:dhc.equip_t.gaizao_counts)
  return gaizao_counts_;
}
inline void equip_t::set_gaizao_counts(::google::protobuf::int32 value) {
  set_changed();
  
  gaizao_counts_ = value;
  // @@protoc_insertion_point(field_set:dhc.equip_t.gaizao_counts)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace dhc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_equip_2eeproto
