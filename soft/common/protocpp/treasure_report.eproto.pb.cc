// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: treasure_report.eproto

#include "treasure_report.eproto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace dhc {
class treasure_report_tDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<treasure_report_t>
      _instance;
} _treasure_report_t_default_instance_;
}  // namespace dhc
namespace protobuf_treasure_5freport_2eeproto {
static void InitDefaultstreasure_report_t() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dhc::_treasure_report_t_default_instance_;
    new (ptr) ::dhc::treasure_report_t();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dhc::treasure_report_t::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_treasure_report_t =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstreasure_report_t}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_treasure_report_t.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_report_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_report_t, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_report_t, player_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_report_t, other_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_report_t, other_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_report_t, other_template_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_report_t, other_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_report_t, other_bf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_report_t, win_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_report_t, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_report_t, suipian_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dhc::treasure_report_t, new_report_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::dhc::treasure_report_t)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dhc::_treasure_report_t_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "treasure_report.eproto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026treasure_report.eproto\022\003dhc\"\340\001\n\021treasu"
      "re_report_t\022\014\n\004guid\030\001 \001(\004\022\023\n\013player_guid"
      "\030\002 \001(\004\022\022\n\nother_guid\030\003 \001(\004\022\022\n\nother_name"
      "\030\004 \001(\014\022\026\n\016other_template\030\005 \001(\005\022\023\n\013other_"
      "level\030\006 \001(\005\022\020\n\010other_bf\030\007 \001(\005\022\013\n\003win\030\010 \001"
      "(\005\022\014\n\004time\030\t \001(\004\022\022\n\nsuipian_id\030\n \001(\005\022\022\n\n"
      "new_report\030\013 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 264);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "treasure_report.eproto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_treasure_5freport_2eeproto
namespace dhc {

// ===================================================================

void treasure_report_t::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int treasure_report_t::kGuidFieldNumber;
const int treasure_report_t::kPlayerGuidFieldNumber;
const int treasure_report_t::kOtherGuidFieldNumber;
const int treasure_report_t::kOtherNameFieldNumber;
const int treasure_report_t::kOtherTemplateFieldNumber;
const int treasure_report_t::kOtherLevelFieldNumber;
const int treasure_report_t::kOtherBfFieldNumber;
const int treasure_report_t::kWinFieldNumber;
const int treasure_report_t::kTimeFieldNumber;
const int treasure_report_t::kSuipianIdFieldNumber;
const int treasure_report_t::kNewReportFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

treasure_report_t::treasure_report_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_treasure_5freport_2eeproto::scc_info_treasure_report_t.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dhc.treasure_report_t)
}
treasure_report_t::treasure_report_t(const treasure_report_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  other_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.other_name().size() > 0) {
    other_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_name_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&new_report_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(new_report_));
  // @@protoc_insertion_point(copy_constructor:dhc.treasure_report_t)
}

void treasure_report_t::SharedCtor() {
  other_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_report_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(new_report_));
}

treasure_report_t::~treasure_report_t() {
  // @@protoc_insertion_point(destructor:dhc.treasure_report_t)
  SharedDtor();
}

void treasure_report_t::SharedDtor() {
  other_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void treasure_report_t::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* treasure_report_t::descriptor() {
  ::protobuf_treasure_5freport_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_treasure_5freport_2eeproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const treasure_report_t& treasure_report_t::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_treasure_5freport_2eeproto::scc_info_treasure_report_t.base);
  return *internal_default_instance();
}


void treasure_report_t::Clear() {
// @@protoc_insertion_point(message_clear_start:dhc.treasure_report_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_changed();
  other_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_report_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(new_report_));
  _internal_metadata_.Clear();
}

bool treasure_report_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dhc.treasure_report_t)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 player_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &player_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 other_guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &other_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes other_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_other_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 other_template = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &other_template_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 other_level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &other_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 other_bf = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &other_bf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 win = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &win_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 suipian_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suipian_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 new_report = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &new_report_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dhc.treasure_report_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dhc.treasure_report_t)
  return false;
#undef DO_
}

void treasure_report_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dhc.treasure_report_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->player_guid(), output);
  }

  // uint64 other_guid = 3;
  if (this->other_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->other_guid(), output);
  }

  // bytes other_name = 4;
  if (this->other_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->other_name(), output);
  }

  // int32 other_template = 5;
  if (this->other_template() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->other_template(), output);
  }

  // int32 other_level = 6;
  if (this->other_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->other_level(), output);
  }

  // int32 other_bf = 7;
  if (this->other_bf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->other_bf(), output);
  }

  // int32 win = 8;
  if (this->win() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->win(), output);
  }

  // uint64 time = 9;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->time(), output);
  }

  // int32 suipian_id = 10;
  if (this->suipian_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->suipian_id(), output);
  }

  // int32 new_report = 11;
  if (this->new_report() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->new_report(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:dhc.treasure_report_t)
}

::google::protobuf::uint8* treasure_report_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dhc.treasure_report_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->player_guid(), target);
  }

  // uint64 other_guid = 3;
  if (this->other_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->other_guid(), target);
  }

  // bytes other_name = 4;
  if (this->other_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->other_name(), target);
  }

  // int32 other_template = 5;
  if (this->other_template() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->other_template(), target);
  }

  // int32 other_level = 6;
  if (this->other_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->other_level(), target);
  }

  // int32 other_bf = 7;
  if (this->other_bf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->other_bf(), target);
  }

  // int32 win = 8;
  if (this->win() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->win(), target);
  }

  // uint64 time = 9;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->time(), target);
  }

  // int32 suipian_id = 10;
  if (this->suipian_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->suipian_id(), target);
  }

  // int32 new_report = 11;
  if (this->new_report() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->new_report(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dhc.treasure_report_t)
  return target;
}

size_t treasure_report_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dhc.treasure_report_t)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes other_name = 4;
  if (this->other_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->other_name());
  }

  // uint64 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint64 player_guid = 2;
  if (this->player_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->player_guid());
  }

  // uint64 other_guid = 3;
  if (this->other_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->other_guid());
  }

  // int32 other_template = 5;
  if (this->other_template() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->other_template());
  }

  // int32 other_level = 6;
  if (this->other_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->other_level());
  }

  // int32 other_bf = 7;
  if (this->other_bf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->other_bf());
  }

  // int32 win = 8;
  if (this->win() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->win());
  }

  // uint64 time = 9;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  // int32 suipian_id = 10;
  if (this->suipian_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suipian_id());
  }

  // int32 new_report = 11;
  if (this->new_report() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->new_report());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void treasure_report_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dhc.treasure_report_t)
  GOOGLE_DCHECK_NE(&from, this);
  const treasure_report_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const treasure_report_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dhc.treasure_report_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dhc.treasure_report_t)
    MergeFrom(*source);
  }
}

void treasure_report_t::MergeFrom(const treasure_report_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dhc.treasure_report_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.other_name().size() > 0) {

    other_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_name_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.player_guid() != 0) {
    set_player_guid(from.player_guid());
  }
  if (from.other_guid() != 0) {
    set_other_guid(from.other_guid());
  }
  if (from.other_template() != 0) {
    set_other_template(from.other_template());
  }
  if (from.other_level() != 0) {
    set_other_level(from.other_level());
  }
  if (from.other_bf() != 0) {
    set_other_bf(from.other_bf());
  }
  if (from.win() != 0) {
    set_win(from.win());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.suipian_id() != 0) {
    set_suipian_id(from.suipian_id());
  }
  if (from.new_report() != 0) {
    set_new_report(from.new_report());
  }
}

void treasure_report_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dhc.treasure_report_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void treasure_report_t::CopyFrom(const treasure_report_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dhc.treasure_report_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool treasure_report_t::IsInitialized() const {
  return true;
}

void treasure_report_t::Swap(treasure_report_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void treasure_report_t::InternalSwap(treasure_report_t* other) {
  using std::swap;
  other_name_.Swap(&other->other_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(guid_, other->guid_);
  swap(player_guid_, other->player_guid_);
  swap(other_guid_, other->other_guid_);
  swap(other_template_, other->other_template_);
  swap(other_level_, other->other_level_);
  swap(other_bf_, other->other_bf_);
  swap(win_, other->win_);
  swap(time_, other->time_);
  swap(suipian_id_, other->suipian_id_);
  swap(new_report_, other->new_report_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata treasure_report_t::GetMetadata() const {
  protobuf_treasure_5freport_2eeproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_treasure_5freport_2eeproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dhc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dhc::treasure_report_t* Arena::CreateMaybeMessage< ::dhc::treasure_report_t >(Arena* arena) {
  return Arena::CreateInternal< ::dhc::treasure_report_t >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
