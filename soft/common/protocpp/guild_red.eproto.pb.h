// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guild_red.eproto

#ifndef PROTOBUF_INCLUDED_guild_5fred_2eeproto
#define PROTOBUF_INCLUDED_guild_5fred_2eeproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_guild_5fred_2eeproto 

namespace protobuf_guild_5fred_2eeproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_guild_5fred_2eeproto
namespace dhc {
class guild_red_t;
class guild_red_tDefaultTypeInternal;
extern guild_red_tDefaultTypeInternal _guild_red_t_default_instance_;
}  // namespace dhc
namespace google {
namespace protobuf {
template<> ::dhc::guild_red_t* Arena::CreateMaybeMessage<::dhc::guild_red_t>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dhc {

// ===================================================================

class guild_red_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dhc.guild_red_t) */ {
 public:
  guild_red_t();
  virtual ~guild_red_t();

  guild_red_t(const guild_red_t& from);

  inline guild_red_t& operator=(const guild_red_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  guild_red_t(guild_red_t&& from) noexcept
    : guild_red_t() {
    *this = ::std::move(from);
  }

  inline guild_red_t& operator=(guild_red_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_red_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const guild_red_t* internal_default_instance() {
    return reinterpret_cast<const guild_red_t*>(
               &_guild_red_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(guild_red_t* other);
  friend void swap(guild_red_t& a, guild_red_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline guild_red_t* New() const final {
    return CreateMaybeMessage<guild_red_t>(NULL);
  }

  guild_red_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<guild_red_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const guild_red_t& from);
  void MergeFrom(const guild_red_t& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(guild_red_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 player_guid = 20;
  int player_guid_size() const;
  void clear_player_guid();
  static const int kPlayerGuidFieldNumber = 20;
  ::google::protobuf::uint64 player_guid(int index) const;
  void set_player_guid(int index, ::google::protobuf::uint64 value);
  void add_player_guid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_guid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_guid();

  // repeated int32 player_ids = 21;
  int player_ids_size() const;
  void clear_player_ids();
  static const int kPlayerIdsFieldNumber = 21;
  ::google::protobuf::int32 player_ids(int index) const;
  void set_player_ids(int index, ::google::protobuf::int32 value);
  void add_player_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_ids();

  // repeated string player_names = 22;
  int player_names_size() const;
  void clear_player_names();
  static const int kPlayerNamesFieldNumber = 22;
  const ::std::string& player_names(int index) const;
  ::std::string* mutable_player_names(int index);
  void set_player_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_player_names(int index, ::std::string&& value);
  #endif
  void set_player_names(int index, const char* value);
  void set_player_names(int index, const char* value, size_t size);
  ::std::string* add_player_names();
  void add_player_names(const ::std::string& value);
  #if LANG_CXX11
  void add_player_names(::std::string&& value);
  #endif
  void add_player_names(const char* value);
  void add_player_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& player_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_player_names();

  // repeated int32 player_vip = 23;
  int player_vip_size() const;
  void clear_player_vip();
  static const int kPlayerVipFieldNumber = 23;
  ::google::protobuf::int32 player_vip(int index) const;
  void set_player_vip(int index, ::google::protobuf::int32 value);
  void add_player_vip(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_vip() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_vip();

  // repeated int32 player_achieve = 24;
  int player_achieve_size() const;
  void clear_player_achieve();
  static const int kPlayerAchieveFieldNumber = 24;
  ::google::protobuf::int32 player_achieve(int index) const;
  void set_player_achieve(int index, ::google::protobuf::int32 value);
  void add_player_achieve(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_achieve() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_achieve();

  // repeated int32 player_jewel = 25;
  int player_jewel_size() const;
  void clear_player_jewel();
  static const int kPlayerJewelFieldNumber = 25;
  ::google::protobuf::int32 player_jewel(int index) const;
  void set_player_jewel(int index, ::google::protobuf::int32 value);
  void add_player_jewel(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_jewel() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_jewel();

  // repeated int32 player_nalflag = 26;
  int player_nalflag_size() const;
  void clear_player_nalflag();
  static const int kPlayerNalflagFieldNumber = 26;
  ::google::protobuf::int32 player_nalflag(int index) const;
  void set_player_nalflag(int index, ::google::protobuf::int32 value);
  void add_player_nalflag(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      player_nalflag() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_player_nalflag();

  // string create_name = 3;
  void clear_create_name();
  static const int kCreateNameFieldNumber = 3;
  const ::std::string& create_name() const;
  void set_create_name(const ::std::string& value);
  #if LANG_CXX11
  void set_create_name(::std::string&& value);
  #endif
  void set_create_name(const char* value);
  void set_create_name(const char* value, size_t size);
  ::std::string* mutable_create_name();
  ::std::string* release_create_name();
  void set_allocated_create_name(::std::string* create_name);

  // string text = 9;
  void clear_text();
  static const int kTextFieldNumber = 9;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint64 guild_guid = 2;
  void clear_guild_guid();
  static const int kGuildGuidFieldNumber = 2;
  ::google::protobuf::uint64 guild_guid() const;
  void set_guild_guid(::google::protobuf::uint64 value);

  // int32 create_id = 4;
  void clear_create_id();
  static const int kCreateIdFieldNumber = 4;
  ::google::protobuf::int32 create_id() const;
  void set_create_id(::google::protobuf::int32 value);

  // int32 create_vip = 5;
  void clear_create_vip();
  static const int kCreateVipFieldNumber = 5;
  ::google::protobuf::int32 create_vip() const;
  void set_create_vip(::google::protobuf::int32 value);

  // int32 create_achieve = 6;
  void clear_create_achieve();
  static const int kCreateAchieveFieldNumber = 6;
  ::google::protobuf::int32 create_achieve() const;
  void set_create_achieve(::google::protobuf::int32 value);

  // int32 template_id = 7;
  void clear_template_id();
  static const int kTemplateIdFieldNumber = 7;
  ::google::protobuf::int32 template_id() const;
  void set_template_id(::google::protobuf::int32 value);

  // uint64 time = 8;
  void clear_time();
  static const int kTimeFieldNumber = 8;
  ::google::protobuf::uint64 time() const;
  void set_time(::google::protobuf::uint64 value);

  // int32 remain = 10;
  void clear_remain();
  static const int kRemainFieldNumber = 10;
  ::google::protobuf::int32 remain() const;
  void set_remain(::google::protobuf::int32 value);

  // int32 nalflag = 11;
  void clear_nalflag();
  static const int kNalflagFieldNumber = 11;
  ::google::protobuf::int32 nalflag() const;
  void set_nalflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dhc.guild_red_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_guid_;
  mutable int _player_guid_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_ids_;
  mutable int _player_ids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> player_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_vip_;
  mutable int _player_vip_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_achieve_;
  mutable int _player_achieve_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_jewel_;
  mutable int _player_jewel_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > player_nalflag_;
  mutable int _player_nalflag_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr create_name_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 guild_guid_;
  ::google::protobuf::int32 create_id_;
  ::google::protobuf::int32 create_vip_;
  ::google::protobuf::int32 create_achieve_;
  ::google::protobuf::int32 template_id_;
  ::google::protobuf::uint64 time_;
  ::google::protobuf::int32 remain_;
  ::google::protobuf::int32 nalflag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_guild_5fred_2eeproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// guild_red_t

// uint64 guid = 1;
inline void guild_red_t::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 guild_red_t::guid() const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.guid)
  return guid_;
}
inline void guild_red_t::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.guid)
}

// uint64 guild_guid = 2;
inline void guild_red_t::clear_guild_guid() {
  set_changed();
  guild_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 guild_red_t::guild_guid() const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.guild_guid)
  return guild_guid_;
}
inline void guild_red_t::set_guild_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guild_guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.guild_guid)
}

// string create_name = 3;
inline void guild_red_t::clear_create_name() {
  set_changed();
  create_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& guild_red_t::create_name() const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.create_name)
  return create_name_.GetNoArena();
}
inline void guild_red_t::set_create_name(const ::std::string& value) {
  set_changed();
  
  create_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.create_name)
}
#if LANG_CXX11
inline void guild_red_t::set_create_name(::std::string&& value) {
  set_changed();
  
  create_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dhc.guild_red_t.create_name)
}
#endif
inline void guild_red_t::set_create_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  create_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dhc.guild_red_t.create_name)
}
inline void guild_red_t::set_create_name(const char* value, size_t size) {
  set_changed();
  
  create_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dhc.guild_red_t.create_name)
}
inline ::std::string* guild_red_t::mutable_create_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:dhc.guild_red_t.create_name)
  return create_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* guild_red_t::release_create_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:dhc.guild_red_t.create_name)
  
  return create_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void guild_red_t::set_allocated_create_name(::std::string* create_name) {
  set_changed();
  if (create_name != NULL) {
    
  } else {
    
  }
  create_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), create_name);
  // @@protoc_insertion_point(field_set_allocated:dhc.guild_red_t.create_name)
}

// int32 create_id = 4;
inline void guild_red_t::clear_create_id() {
  set_changed();
  create_id_ = 0;
}
inline ::google::protobuf::int32 guild_red_t::create_id() const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.create_id)
  return create_id_;
}
inline void guild_red_t::set_create_id(::google::protobuf::int32 value) {
  set_changed();
  
  create_id_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.create_id)
}

// int32 create_vip = 5;
inline void guild_red_t::clear_create_vip() {
  set_changed();
  create_vip_ = 0;
}
inline ::google::protobuf::int32 guild_red_t::create_vip() const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.create_vip)
  return create_vip_;
}
inline void guild_red_t::set_create_vip(::google::protobuf::int32 value) {
  set_changed();
  
  create_vip_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.create_vip)
}

// int32 create_achieve = 6;
inline void guild_red_t::clear_create_achieve() {
  set_changed();
  create_achieve_ = 0;
}
inline ::google::protobuf::int32 guild_red_t::create_achieve() const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.create_achieve)
  return create_achieve_;
}
inline void guild_red_t::set_create_achieve(::google::protobuf::int32 value) {
  set_changed();
  
  create_achieve_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.create_achieve)
}

// int32 template_id = 7;
inline void guild_red_t::clear_template_id() {
  set_changed();
  template_id_ = 0;
}
inline ::google::protobuf::int32 guild_red_t::template_id() const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.template_id)
  return template_id_;
}
inline void guild_red_t::set_template_id(::google::protobuf::int32 value) {
  set_changed();
  
  template_id_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.template_id)
}

// uint64 time = 8;
inline void guild_red_t::clear_time() {
  set_changed();
  time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 guild_red_t::time() const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.time)
  return time_;
}
inline void guild_red_t::set_time(::google::protobuf::uint64 value) {
  set_changed();
  
  time_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.time)
}

// string text = 9;
inline void guild_red_t::clear_text() {
  set_changed();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& guild_red_t::text() const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.text)
  return text_.GetNoArena();
}
inline void guild_red_t::set_text(const ::std::string& value) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.text)
}
#if LANG_CXX11
inline void guild_red_t::set_text(::std::string&& value) {
  set_changed();
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dhc.guild_red_t.text)
}
#endif
inline void guild_red_t::set_text(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dhc.guild_red_t.text)
}
inline void guild_red_t::set_text(const char* value, size_t size) {
  set_changed();
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dhc.guild_red_t.text)
}
inline ::std::string* guild_red_t::mutable_text() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:dhc.guild_red_t.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* guild_red_t::release_text() {
  set_changed();
  // @@protoc_insertion_point(field_release:dhc.guild_red_t.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void guild_red_t::set_allocated_text(::std::string* text) {
  set_changed();
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:dhc.guild_red_t.text)
}

// int32 remain = 10;
inline void guild_red_t::clear_remain() {
  set_changed();
  remain_ = 0;
}
inline ::google::protobuf::int32 guild_red_t::remain() const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.remain)
  return remain_;
}
inline void guild_red_t::set_remain(::google::protobuf::int32 value) {
  set_changed();
  
  remain_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.remain)
}

// int32 nalflag = 11;
inline void guild_red_t::clear_nalflag() {
  set_changed();
  nalflag_ = 0;
}
inline ::google::protobuf::int32 guild_red_t::nalflag() const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.nalflag)
  return nalflag_;
}
inline void guild_red_t::set_nalflag(::google::protobuf::int32 value) {
  set_changed();
  
  nalflag_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.nalflag)
}

// repeated uint64 player_guid = 20;
inline int guild_red_t::player_guid_size() const {
  return player_guid_.size();
}
inline void guild_red_t::clear_player_guid() {
  set_changed();
  player_guid_.Clear();
}
inline ::google::protobuf::uint64 guild_red_t::player_guid(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.player_guid)
  return player_guid_.Get(index);
}
inline void guild_red_t::set_player_guid(int index, ::google::protobuf::uint64 value) {
  set_changed();
  player_guid_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.player_guid)
}
inline void guild_red_t::add_player_guid(::google::protobuf::uint64 value) {
  set_changed();
  player_guid_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_red_t.player_guid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
guild_red_t::player_guid() const {
  // @@protoc_insertion_point(field_list:dhc.guild_red_t.player_guid)
  return player_guid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
guild_red_t::mutable_player_guid() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_red_t.player_guid)
  return &player_guid_;
}

// repeated int32 player_ids = 21;
inline int guild_red_t::player_ids_size() const {
  return player_ids_.size();
}
inline void guild_red_t::clear_player_ids() {
  set_changed();
  player_ids_.Clear();
}
inline ::google::protobuf::int32 guild_red_t::player_ids(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.player_ids)
  return player_ids_.Get(index);
}
inline void guild_red_t::set_player_ids(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.player_ids)
}
inline void guild_red_t::add_player_ids(::google::protobuf::int32 value) {
  set_changed();
  player_ids_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_red_t.player_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_red_t::player_ids() const {
  // @@protoc_insertion_point(field_list:dhc.guild_red_t.player_ids)
  return player_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_red_t::mutable_player_ids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_red_t.player_ids)
  return &player_ids_;
}

// repeated string player_names = 22;
inline int guild_red_t::player_names_size() const {
  return player_names_.size();
}
inline void guild_red_t::clear_player_names() {
  set_changed();
  player_names_.Clear();
}
inline const ::std::string& guild_red_t::player_names(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.player_names)
  return player_names_.Get(index);
}
inline ::std::string* guild_red_t::mutable_player_names(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:dhc.guild_red_t.player_names)
  return player_names_.Mutable(index);
}
inline void guild_red_t::set_player_names(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.player_names)
  player_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void guild_red_t::set_player_names(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.player_names)
  player_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void guild_red_t::set_player_names(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  player_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dhc.guild_red_t.player_names)
}
inline void guild_red_t::set_player_names(int index, const char* value, size_t size) {
  set_changed();
  player_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dhc.guild_red_t.player_names)
}
inline ::std::string* guild_red_t::add_player_names() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:dhc.guild_red_t.player_names)
  return player_names_.Add();
}
inline void guild_red_t::add_player_names(const ::std::string& value) {
  set_changed();
  player_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dhc.guild_red_t.player_names)
}
#if LANG_CXX11
inline void guild_red_t::add_player_names(::std::string&& value) {
  set_changed();
  player_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:dhc.guild_red_t.player_names)
}
#endif
inline void guild_red_t::add_player_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  player_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dhc.guild_red_t.player_names)
}
inline void guild_red_t::add_player_names(const char* value, size_t size) {
  set_changed();
  player_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dhc.guild_red_t.player_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
guild_red_t::player_names() const {
  // @@protoc_insertion_point(field_list:dhc.guild_red_t.player_names)
  return player_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
guild_red_t::mutable_player_names() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_red_t.player_names)
  return &player_names_;
}

// repeated int32 player_vip = 23;
inline int guild_red_t::player_vip_size() const {
  return player_vip_.size();
}
inline void guild_red_t::clear_player_vip() {
  set_changed();
  player_vip_.Clear();
}
inline ::google::protobuf::int32 guild_red_t::player_vip(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.player_vip)
  return player_vip_.Get(index);
}
inline void guild_red_t::set_player_vip(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_vip_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.player_vip)
}
inline void guild_red_t::add_player_vip(::google::protobuf::int32 value) {
  set_changed();
  player_vip_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_red_t.player_vip)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_red_t::player_vip() const {
  // @@protoc_insertion_point(field_list:dhc.guild_red_t.player_vip)
  return player_vip_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_red_t::mutable_player_vip() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_red_t.player_vip)
  return &player_vip_;
}

// repeated int32 player_achieve = 24;
inline int guild_red_t::player_achieve_size() const {
  return player_achieve_.size();
}
inline void guild_red_t::clear_player_achieve() {
  set_changed();
  player_achieve_.Clear();
}
inline ::google::protobuf::int32 guild_red_t::player_achieve(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.player_achieve)
  return player_achieve_.Get(index);
}
inline void guild_red_t::set_player_achieve(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_achieve_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.player_achieve)
}
inline void guild_red_t::add_player_achieve(::google::protobuf::int32 value) {
  set_changed();
  player_achieve_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_red_t.player_achieve)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_red_t::player_achieve() const {
  // @@protoc_insertion_point(field_list:dhc.guild_red_t.player_achieve)
  return player_achieve_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_red_t::mutable_player_achieve() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_red_t.player_achieve)
  return &player_achieve_;
}

// repeated int32 player_jewel = 25;
inline int guild_red_t::player_jewel_size() const {
  return player_jewel_.size();
}
inline void guild_red_t::clear_player_jewel() {
  set_changed();
  player_jewel_.Clear();
}
inline ::google::protobuf::int32 guild_red_t::player_jewel(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.player_jewel)
  return player_jewel_.Get(index);
}
inline void guild_red_t::set_player_jewel(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_jewel_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.player_jewel)
}
inline void guild_red_t::add_player_jewel(::google::protobuf::int32 value) {
  set_changed();
  player_jewel_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_red_t.player_jewel)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_red_t::player_jewel() const {
  // @@protoc_insertion_point(field_list:dhc.guild_red_t.player_jewel)
  return player_jewel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_red_t::mutable_player_jewel() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_red_t.player_jewel)
  return &player_jewel_;
}

// repeated int32 player_nalflag = 26;
inline int guild_red_t::player_nalflag_size() const {
  return player_nalflag_.size();
}
inline void guild_red_t::clear_player_nalflag() {
  set_changed();
  player_nalflag_.Clear();
}
inline ::google::protobuf::int32 guild_red_t::player_nalflag(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_red_t.player_nalflag)
  return player_nalflag_.Get(index);
}
inline void guild_red_t::set_player_nalflag(int index, ::google::protobuf::int32 value) {
  set_changed();
  player_nalflag_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_red_t.player_nalflag)
}
inline void guild_red_t::add_player_nalflag(::google::protobuf::int32 value) {
  set_changed();
  player_nalflag_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_red_t.player_nalflag)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_red_t::player_nalflag() const {
  // @@protoc_insertion_point(field_list:dhc.guild_red_t.player_nalflag)
  return player_nalflag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_red_t::mutable_player_nalflag() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_red_t.player_nalflag)
  return &player_nalflag_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace dhc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_guild_5fred_2eeproto
