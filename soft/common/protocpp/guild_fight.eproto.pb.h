// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guild_fight.eproto

#ifndef PROTOBUF_INCLUDED_guild_5ffight_2eeproto
#define PROTOBUF_INCLUDED_guild_5ffight_2eeproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_guild_5ffight_2eeproto 

namespace protobuf_guild_5ffight_2eeproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_guild_5ffight_2eeproto
namespace dhc {
class guild_fight_t;
class guild_fight_tDefaultTypeInternal;
extern guild_fight_tDefaultTypeInternal _guild_fight_t_default_instance_;
}  // namespace dhc
namespace google {
namespace protobuf {
template<> ::dhc::guild_fight_t* Arena::CreateMaybeMessage<::dhc::guild_fight_t>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace dhc {

// ===================================================================

class guild_fight_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dhc.guild_fight_t) */ {
 public:
  guild_fight_t();
  virtual ~guild_fight_t();

  guild_fight_t(const guild_fight_t& from);

  inline guild_fight_t& operator=(const guild_fight_t& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  guild_fight_t(guild_fight_t&& from) noexcept
    : guild_fight_t() {
    *this = ::std::move(from);
  }

  inline guild_fight_t& operator=(guild_fight_t&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_fight_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const guild_fight_t* internal_default_instance() {
    return reinterpret_cast<const guild_fight_t*>(
               &_guild_fight_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(guild_fight_t* other);
  friend void swap(guild_fight_t& a, guild_fight_t& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline guild_fight_t* New() const final {
    return CreateMaybeMessage<guild_fight_t>(NULL);
  }

  guild_fight_t* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<guild_fight_t>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const guild_fight_t& from);
  void MergeFrom(const guild_fight_t& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(guild_fight_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 target_guids = 10;
  int target_guids_size() const;
  void clear_target_guids();
  static const int kTargetGuidsFieldNumber = 10;
  ::google::protobuf::uint64 target_guids(int index) const;
  void set_target_guids(int index, ::google::protobuf::uint64 value);
  void add_target_guids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      target_guids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_target_guids();

  // repeated string target_names = 11;
  int target_names_size() const;
  void clear_target_names();
  static const int kTargetNamesFieldNumber = 11;
  const ::std::string& target_names(int index) const;
  ::std::string* mutable_target_names(int index);
  void set_target_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_target_names(int index, ::std::string&& value);
  #endif
  void set_target_names(int index, const char* value);
  void set_target_names(int index, const char* value, size_t size);
  ::std::string* add_target_names();
  void add_target_names(const ::std::string& value);
  #if LANG_CXX11
  void add_target_names(::std::string&& value);
  #endif
  void add_target_names(const char* value);
  void add_target_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& target_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_target_names();

  // repeated int32 target_templates = 12;
  int target_templates_size() const;
  void clear_target_templates();
  static const int kTargetTemplatesFieldNumber = 12;
  ::google::protobuf::int32 target_templates(int index) const;
  void set_target_templates(int index, ::google::protobuf::int32 value);
  void add_target_templates(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      target_templates() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_target_templates();

  // repeated int32 target_levels = 13;
  int target_levels_size() const;
  void clear_target_levels();
  static const int kTargetLevelsFieldNumber = 13;
  ::google::protobuf::int32 target_levels(int index) const;
  void set_target_levels(int index, ::google::protobuf::int32 value);
  void add_target_levels(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      target_levels() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_target_levels();

  // repeated int32 target_bat_effs = 14;
  int target_bat_effs_size() const;
  void clear_target_bat_effs();
  static const int kTargetBatEffsFieldNumber = 14;
  ::google::protobuf::int32 target_bat_effs(int index) const;
  void set_target_bat_effs(int index, ::google::protobuf::int32 value);
  void add_target_bat_effs(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      target_bat_effs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_target_bat_effs();

  // repeated int32 target_vips = 15;
  int target_vips_size() const;
  void clear_target_vips();
  static const int kTargetVipsFieldNumber = 15;
  ::google::protobuf::int32 target_vips(int index) const;
  void set_target_vips(int index, ::google::protobuf::int32 value);
  void add_target_vips(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      target_vips() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_target_vips();

  // repeated int32 target_achieves = 16;
  int target_achieves_size() const;
  void clear_target_achieves();
  static const int kTargetAchievesFieldNumber = 16;
  ::google::protobuf::int32 target_achieves(int index) const;
  void set_target_achieves(int index, ::google::protobuf::int32 value);
  void add_target_achieves(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      target_achieves() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_target_achieves();

  // repeated int32 target_defense_nums = 17;
  int target_defense_nums_size() const;
  void clear_target_defense_nums();
  static const int kTargetDefenseNumsFieldNumber = 17;
  ::google::protobuf::int32 target_defense_nums(int index) const;
  void set_target_defense_nums(int index, ::google::protobuf::int32 value);
  void add_target_defense_nums(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      target_defense_nums() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_target_defense_nums();

  // repeated int32 guard_points = 18;
  int guard_points_size() const;
  void clear_guard_points();
  static const int kGuardPointsFieldNumber = 18;
  ::google::protobuf::int32 guard_points(int index) const;
  void set_guard_points(int index, ::google::protobuf::int32 value);
  void add_guard_points(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guard_points() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guard_points();

  // repeated int32 guard_gongpuo = 19;
  int guard_gongpuo_size() const;
  void clear_guard_gongpuo();
  static const int kGuardGongpuoFieldNumber = 19;
  ::google::protobuf::int32 guard_gongpuo(int index) const;
  void set_guard_gongpuo(int index, ::google::protobuf::int32 value);
  void add_guard_gongpuo(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      guard_gongpuo() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_guard_gongpuo();

  // repeated int32 win_nums = 20;
  int win_nums_size() const;
  void clear_win_nums();
  static const int kWinNumsFieldNumber = 20;
  ::google::protobuf::int32 win_nums(int index) const;
  void set_win_nums(int index, ::google::protobuf::int32 value);
  void add_win_nums(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      win_nums() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_win_nums();

  // repeated int32 lose_nums = 21;
  int lose_nums_size() const;
  void clear_lose_nums();
  static const int kLoseNumsFieldNumber = 21;
  ::google::protobuf::int32 lose_nums(int index) const;
  void set_lose_nums(int index, ::google::protobuf::int32 value);
  void add_lose_nums(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lose_nums() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lose_nums();

  // string guild_name = 3;
  void clear_guild_name();
  static const int kGuildNameFieldNumber = 3;
  const ::std::string& guild_name() const;
  void set_guild_name(const ::std::string& value);
  #if LANG_CXX11
  void set_guild_name(::std::string&& value);
  #endif
  void set_guild_name(const char* value);
  void set_guild_name(const char* value, size_t size);
  ::std::string* mutable_guild_name();
  ::std::string* release_guild_name();
  void set_allocated_guild_name(::std::string* guild_name);

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint64 guild_guid = 4;
  void clear_guild_guid();
  static const int kGuildGuidFieldNumber = 4;
  ::google::protobuf::uint64 guild_guid() const;
  void set_guild_guid(::google::protobuf::uint64 value);

  // int32 guild_server = 2;
  void clear_guild_server();
  static const int kGuildServerFieldNumber = 2;
  ::google::protobuf::int32 guild_server() const;
  void set_guild_server(::google::protobuf::int32 value);

  // int32 guild_icon = 6;
  void clear_guild_icon();
  static const int kGuildIconFieldNumber = 6;
  ::google::protobuf::int32 guild_icon() const;
  void set_guild_icon(::google::protobuf::int32 value);

  // uint64 target_guild_guid = 5;
  void clear_target_guild_guid();
  static const int kTargetGuildGuidFieldNumber = 5;
  ::google::protobuf::uint64 target_guild_guid() const;
  void set_target_guild_guid(::google::protobuf::uint64 value);

  // int32 guild_level = 7;
  void clear_guild_level();
  static const int kGuildLevelFieldNumber = 7;
  ::google::protobuf::int32 guild_level() const;
  void set_guild_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dhc.guild_fight_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > target_guids_;
  mutable int _target_guids_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> target_names_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > target_templates_;
  mutable int _target_templates_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > target_levels_;
  mutable int _target_levels_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > target_bat_effs_;
  mutable int _target_bat_effs_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > target_vips_;
  mutable int _target_vips_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > target_achieves_;
  mutable int _target_achieves_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > target_defense_nums_;
  mutable int _target_defense_nums_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guard_points_;
  mutable int _guard_points_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > guard_gongpuo_;
  mutable int _guard_gongpuo_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > win_nums_;
  mutable int _win_nums_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lose_nums_;
  mutable int _lose_nums_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr guild_name_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 guild_guid_;
  ::google::protobuf::int32 guild_server_;
  ::google::protobuf::int32 guild_icon_;
  ::google::protobuf::uint64 target_guild_guid_;
  ::google::protobuf::int32 guild_level_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_guild_5ffight_2eeproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// guild_fight_t

// uint64 guid = 1;
inline void guild_fight_t::clear_guid() {
  set_changed();
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 guild_fight_t::guid() const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.guid)
  return guid_;
}
inline void guild_fight_t::set_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.guid)
}

// int32 guild_server = 2;
inline void guild_fight_t::clear_guild_server() {
  set_changed();
  guild_server_ = 0;
}
inline ::google::protobuf::int32 guild_fight_t::guild_server() const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.guild_server)
  return guild_server_;
}
inline void guild_fight_t::set_guild_server(::google::protobuf::int32 value) {
  set_changed();
  
  guild_server_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.guild_server)
}

// string guild_name = 3;
inline void guild_fight_t::clear_guild_name() {
  set_changed();
  guild_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& guild_fight_t::guild_name() const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.guild_name)
  return guild_name_.GetNoArena();
}
inline void guild_fight_t::set_guild_name(const ::std::string& value) {
  set_changed();
  
  guild_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.guild_name)
}
#if LANG_CXX11
inline void guild_fight_t::set_guild_name(::std::string&& value) {
  set_changed();
  
  guild_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dhc.guild_fight_t.guild_name)
}
#endif
inline void guild_fight_t::set_guild_name(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  
  guild_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dhc.guild_fight_t.guild_name)
}
inline void guild_fight_t::set_guild_name(const char* value, size_t size) {
  set_changed();
  
  guild_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dhc.guild_fight_t.guild_name)
}
inline ::std::string* guild_fight_t::mutable_guild_name() {
  set_changed();
  
  // @@protoc_insertion_point(field_mutable:dhc.guild_fight_t.guild_name)
  return guild_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* guild_fight_t::release_guild_name() {
  set_changed();
  // @@protoc_insertion_point(field_release:dhc.guild_fight_t.guild_name)
  
  return guild_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void guild_fight_t::set_allocated_guild_name(::std::string* guild_name) {
  set_changed();
  if (guild_name != NULL) {
    
  } else {
    
  }
  guild_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guild_name);
  // @@protoc_insertion_point(field_set_allocated:dhc.guild_fight_t.guild_name)
}

// uint64 guild_guid = 4;
inline void guild_fight_t::clear_guild_guid() {
  set_changed();
  guild_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 guild_fight_t::guild_guid() const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.guild_guid)
  return guild_guid_;
}
inline void guild_fight_t::set_guild_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  guild_guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.guild_guid)
}

// uint64 target_guild_guid = 5;
inline void guild_fight_t::clear_target_guild_guid() {
  set_changed();
  target_guild_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 guild_fight_t::target_guild_guid() const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.target_guild_guid)
  return target_guild_guid_;
}
inline void guild_fight_t::set_target_guild_guid(::google::protobuf::uint64 value) {
  set_changed();
  
  target_guild_guid_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.target_guild_guid)
}

// int32 guild_icon = 6;
inline void guild_fight_t::clear_guild_icon() {
  set_changed();
  guild_icon_ = 0;
}
inline ::google::protobuf::int32 guild_fight_t::guild_icon() const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.guild_icon)
  return guild_icon_;
}
inline void guild_fight_t::set_guild_icon(::google::protobuf::int32 value) {
  set_changed();
  
  guild_icon_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.guild_icon)
}

// int32 guild_level = 7;
inline void guild_fight_t::clear_guild_level() {
  set_changed();
  guild_level_ = 0;
}
inline ::google::protobuf::int32 guild_fight_t::guild_level() const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.guild_level)
  return guild_level_;
}
inline void guild_fight_t::set_guild_level(::google::protobuf::int32 value) {
  set_changed();
  
  guild_level_ = value;
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.guild_level)
}

// repeated uint64 target_guids = 10;
inline int guild_fight_t::target_guids_size() const {
  return target_guids_.size();
}
inline void guild_fight_t::clear_target_guids() {
  set_changed();
  target_guids_.Clear();
}
inline ::google::protobuf::uint64 guild_fight_t::target_guids(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.target_guids)
  return target_guids_.Get(index);
}
inline void guild_fight_t::set_target_guids(int index, ::google::protobuf::uint64 value) {
  set_changed();
  target_guids_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.target_guids)
}
inline void guild_fight_t::add_target_guids(::google::protobuf::uint64 value) {
  set_changed();
  target_guids_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_fight_t.target_guids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
guild_fight_t::target_guids() const {
  // @@protoc_insertion_point(field_list:dhc.guild_fight_t.target_guids)
  return target_guids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
guild_fight_t::mutable_target_guids() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_fight_t.target_guids)
  return &target_guids_;
}

// repeated string target_names = 11;
inline int guild_fight_t::target_names_size() const {
  return target_names_.size();
}
inline void guild_fight_t::clear_target_names() {
  set_changed();
  target_names_.Clear();
}
inline const ::std::string& guild_fight_t::target_names(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.target_names)
  return target_names_.Get(index);
}
inline ::std::string* guild_fight_t::mutable_target_names(int index) {
  set_changed();
  // @@protoc_insertion_point(field_mutable:dhc.guild_fight_t.target_names)
  return target_names_.Mutable(index);
}
inline void guild_fight_t::set_target_names(int index, const ::std::string& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.target_names)
  target_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void guild_fight_t::set_target_names(int index, ::std::string&& value) {
  set_changed();
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.target_names)
  target_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void guild_fight_t::set_target_names(int index, const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  target_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dhc.guild_fight_t.target_names)
}
inline void guild_fight_t::set_target_names(int index, const char* value, size_t size) {
  set_changed();
  target_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dhc.guild_fight_t.target_names)
}
inline ::std::string* guild_fight_t::add_target_names() {
  set_changed();
  // @@protoc_insertion_point(field_add_mutable:dhc.guild_fight_t.target_names)
  return target_names_.Add();
}
inline void guild_fight_t::add_target_names(const ::std::string& value) {
  set_changed();
  target_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dhc.guild_fight_t.target_names)
}
#if LANG_CXX11
inline void guild_fight_t::add_target_names(::std::string&& value) {
  set_changed();
  target_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:dhc.guild_fight_t.target_names)
}
#endif
inline void guild_fight_t::add_target_names(const char* value) {
  set_changed();
  GOOGLE_DCHECK(value != NULL);
  target_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dhc.guild_fight_t.target_names)
}
inline void guild_fight_t::add_target_names(const char* value, size_t size) {
  set_changed();
  target_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dhc.guild_fight_t.target_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
guild_fight_t::target_names() const {
  // @@protoc_insertion_point(field_list:dhc.guild_fight_t.target_names)
  return target_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
guild_fight_t::mutable_target_names() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_fight_t.target_names)
  return &target_names_;
}

// repeated int32 target_templates = 12;
inline int guild_fight_t::target_templates_size() const {
  return target_templates_.size();
}
inline void guild_fight_t::clear_target_templates() {
  set_changed();
  target_templates_.Clear();
}
inline ::google::protobuf::int32 guild_fight_t::target_templates(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.target_templates)
  return target_templates_.Get(index);
}
inline void guild_fight_t::set_target_templates(int index, ::google::protobuf::int32 value) {
  set_changed();
  target_templates_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.target_templates)
}
inline void guild_fight_t::add_target_templates(::google::protobuf::int32 value) {
  set_changed();
  target_templates_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_fight_t.target_templates)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_fight_t::target_templates() const {
  // @@protoc_insertion_point(field_list:dhc.guild_fight_t.target_templates)
  return target_templates_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_fight_t::mutable_target_templates() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_fight_t.target_templates)
  return &target_templates_;
}

// repeated int32 target_levels = 13;
inline int guild_fight_t::target_levels_size() const {
  return target_levels_.size();
}
inline void guild_fight_t::clear_target_levels() {
  set_changed();
  target_levels_.Clear();
}
inline ::google::protobuf::int32 guild_fight_t::target_levels(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.target_levels)
  return target_levels_.Get(index);
}
inline void guild_fight_t::set_target_levels(int index, ::google::protobuf::int32 value) {
  set_changed();
  target_levels_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.target_levels)
}
inline void guild_fight_t::add_target_levels(::google::protobuf::int32 value) {
  set_changed();
  target_levels_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_fight_t.target_levels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_fight_t::target_levels() const {
  // @@protoc_insertion_point(field_list:dhc.guild_fight_t.target_levels)
  return target_levels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_fight_t::mutable_target_levels() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_fight_t.target_levels)
  return &target_levels_;
}

// repeated int32 target_bat_effs = 14;
inline int guild_fight_t::target_bat_effs_size() const {
  return target_bat_effs_.size();
}
inline void guild_fight_t::clear_target_bat_effs() {
  set_changed();
  target_bat_effs_.Clear();
}
inline ::google::protobuf::int32 guild_fight_t::target_bat_effs(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.target_bat_effs)
  return target_bat_effs_.Get(index);
}
inline void guild_fight_t::set_target_bat_effs(int index, ::google::protobuf::int32 value) {
  set_changed();
  target_bat_effs_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.target_bat_effs)
}
inline void guild_fight_t::add_target_bat_effs(::google::protobuf::int32 value) {
  set_changed();
  target_bat_effs_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_fight_t.target_bat_effs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_fight_t::target_bat_effs() const {
  // @@protoc_insertion_point(field_list:dhc.guild_fight_t.target_bat_effs)
  return target_bat_effs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_fight_t::mutable_target_bat_effs() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_fight_t.target_bat_effs)
  return &target_bat_effs_;
}

// repeated int32 target_vips = 15;
inline int guild_fight_t::target_vips_size() const {
  return target_vips_.size();
}
inline void guild_fight_t::clear_target_vips() {
  set_changed();
  target_vips_.Clear();
}
inline ::google::protobuf::int32 guild_fight_t::target_vips(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.target_vips)
  return target_vips_.Get(index);
}
inline void guild_fight_t::set_target_vips(int index, ::google::protobuf::int32 value) {
  set_changed();
  target_vips_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.target_vips)
}
inline void guild_fight_t::add_target_vips(::google::protobuf::int32 value) {
  set_changed();
  target_vips_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_fight_t.target_vips)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_fight_t::target_vips() const {
  // @@protoc_insertion_point(field_list:dhc.guild_fight_t.target_vips)
  return target_vips_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_fight_t::mutable_target_vips() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_fight_t.target_vips)
  return &target_vips_;
}

// repeated int32 target_achieves = 16;
inline int guild_fight_t::target_achieves_size() const {
  return target_achieves_.size();
}
inline void guild_fight_t::clear_target_achieves() {
  set_changed();
  target_achieves_.Clear();
}
inline ::google::protobuf::int32 guild_fight_t::target_achieves(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.target_achieves)
  return target_achieves_.Get(index);
}
inline void guild_fight_t::set_target_achieves(int index, ::google::protobuf::int32 value) {
  set_changed();
  target_achieves_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.target_achieves)
}
inline void guild_fight_t::add_target_achieves(::google::protobuf::int32 value) {
  set_changed();
  target_achieves_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_fight_t.target_achieves)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_fight_t::target_achieves() const {
  // @@protoc_insertion_point(field_list:dhc.guild_fight_t.target_achieves)
  return target_achieves_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_fight_t::mutable_target_achieves() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_fight_t.target_achieves)
  return &target_achieves_;
}

// repeated int32 target_defense_nums = 17;
inline int guild_fight_t::target_defense_nums_size() const {
  return target_defense_nums_.size();
}
inline void guild_fight_t::clear_target_defense_nums() {
  set_changed();
  target_defense_nums_.Clear();
}
inline ::google::protobuf::int32 guild_fight_t::target_defense_nums(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.target_defense_nums)
  return target_defense_nums_.Get(index);
}
inline void guild_fight_t::set_target_defense_nums(int index, ::google::protobuf::int32 value) {
  set_changed();
  target_defense_nums_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.target_defense_nums)
}
inline void guild_fight_t::add_target_defense_nums(::google::protobuf::int32 value) {
  set_changed();
  target_defense_nums_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_fight_t.target_defense_nums)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_fight_t::target_defense_nums() const {
  // @@protoc_insertion_point(field_list:dhc.guild_fight_t.target_defense_nums)
  return target_defense_nums_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_fight_t::mutable_target_defense_nums() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_fight_t.target_defense_nums)
  return &target_defense_nums_;
}

// repeated int32 guard_points = 18;
inline int guild_fight_t::guard_points_size() const {
  return guard_points_.size();
}
inline void guild_fight_t::clear_guard_points() {
  set_changed();
  guard_points_.Clear();
}
inline ::google::protobuf::int32 guild_fight_t::guard_points(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.guard_points)
  return guard_points_.Get(index);
}
inline void guild_fight_t::set_guard_points(int index, ::google::protobuf::int32 value) {
  set_changed();
  guard_points_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.guard_points)
}
inline void guild_fight_t::add_guard_points(::google::protobuf::int32 value) {
  set_changed();
  guard_points_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_fight_t.guard_points)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_fight_t::guard_points() const {
  // @@protoc_insertion_point(field_list:dhc.guild_fight_t.guard_points)
  return guard_points_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_fight_t::mutable_guard_points() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_fight_t.guard_points)
  return &guard_points_;
}

// repeated int32 guard_gongpuo = 19;
inline int guild_fight_t::guard_gongpuo_size() const {
  return guard_gongpuo_.size();
}
inline void guild_fight_t::clear_guard_gongpuo() {
  set_changed();
  guard_gongpuo_.Clear();
}
inline ::google::protobuf::int32 guild_fight_t::guard_gongpuo(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.guard_gongpuo)
  return guard_gongpuo_.Get(index);
}
inline void guild_fight_t::set_guard_gongpuo(int index, ::google::protobuf::int32 value) {
  set_changed();
  guard_gongpuo_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.guard_gongpuo)
}
inline void guild_fight_t::add_guard_gongpuo(::google::protobuf::int32 value) {
  set_changed();
  guard_gongpuo_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_fight_t.guard_gongpuo)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_fight_t::guard_gongpuo() const {
  // @@protoc_insertion_point(field_list:dhc.guild_fight_t.guard_gongpuo)
  return guard_gongpuo_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_fight_t::mutable_guard_gongpuo() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_fight_t.guard_gongpuo)
  return &guard_gongpuo_;
}

// repeated int32 win_nums = 20;
inline int guild_fight_t::win_nums_size() const {
  return win_nums_.size();
}
inline void guild_fight_t::clear_win_nums() {
  set_changed();
  win_nums_.Clear();
}
inline ::google::protobuf::int32 guild_fight_t::win_nums(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.win_nums)
  return win_nums_.Get(index);
}
inline void guild_fight_t::set_win_nums(int index, ::google::protobuf::int32 value) {
  set_changed();
  win_nums_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.win_nums)
}
inline void guild_fight_t::add_win_nums(::google::protobuf::int32 value) {
  set_changed();
  win_nums_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_fight_t.win_nums)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_fight_t::win_nums() const {
  // @@protoc_insertion_point(field_list:dhc.guild_fight_t.win_nums)
  return win_nums_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_fight_t::mutable_win_nums() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_fight_t.win_nums)
  return &win_nums_;
}

// repeated int32 lose_nums = 21;
inline int guild_fight_t::lose_nums_size() const {
  return lose_nums_.size();
}
inline void guild_fight_t::clear_lose_nums() {
  set_changed();
  lose_nums_.Clear();
}
inline ::google::protobuf::int32 guild_fight_t::lose_nums(int index) const {
  // @@protoc_insertion_point(field_get:dhc.guild_fight_t.lose_nums)
  return lose_nums_.Get(index);
}
inline void guild_fight_t::set_lose_nums(int index, ::google::protobuf::int32 value) {
  set_changed();
  lose_nums_.Set(index, value);
  // @@protoc_insertion_point(field_set:dhc.guild_fight_t.lose_nums)
}
inline void guild_fight_t::add_lose_nums(::google::protobuf::int32 value) {
  set_changed();
  lose_nums_.Add(value);
  // @@protoc_insertion_point(field_add:dhc.guild_fight_t.lose_nums)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
guild_fight_t::lose_nums() const {
  // @@protoc_insertion_point(field_list:dhc.guild_fight_t.lose_nums)
  return lose_nums_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
guild_fight_t::mutable_lose_nums() {
  set_changed();
  // @@protoc_insertion_point(field_mutable_list:dhc.guild_fight_t.lose_nums)
  return &lose_nums_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace dhc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_guild_5ffight_2eeproto
